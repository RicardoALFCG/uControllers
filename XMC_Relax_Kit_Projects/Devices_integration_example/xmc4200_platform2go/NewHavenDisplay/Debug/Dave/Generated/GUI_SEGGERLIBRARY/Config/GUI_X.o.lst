   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "GUI_X.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .comm OS_TimeMS,4,4
  20              	 .section .text.GUI_X_GetTime,"ax",%progbits
  21              	 .align 2
  22              	 .global GUI_X_GetTime
  23              	 .thumb
  24              	 .thumb_func
  26              	GUI_X_GetTime:
  27              	.LFB133:
  28              	 .file 1 "../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c"
   1:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** /*********************************************************************
   2:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** *                SEGGER Microcontroller GmbH & Co. KG                *
   3:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** *        Solutions for real time microcontroller applications        *
   4:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** **********************************************************************
   5:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** *                                                                    *
   6:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** *        (c) 1996 - 2015  SEGGER Microcontroller GmbH & Co. KG       *
   7:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** *                                                                    *
   8:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** *        Internet: www.segger.com    Support:  support@segger.com    *
   9:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** *                                                                    *
  10:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** **********************************************************************
  11:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** 
  12:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** ** emWin V5.30 - Graphical user interface for embedded applications **
  13:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** All  Intellectual Property rights  in the Software  belongs to SEGGER.
  14:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** emWin is protected by international copyright laws.
  15:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** 
  16:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** This  file  has been  licensed to  Infineon Technologies AG,  a german
  17:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** company at the address Am Campeon 1-12 in 85579 Neubiberg, Germany and
  18:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** is  sublicensed  and  distributed  by   Infineon  Technologies  AG  in
  19:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** accordance with the DAVE (TM) 3 Software License Agreement to be used 
  20:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** for and with Infineon's Cortex-M0, M0+ and M4 based 32-bit microcon-
  21:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** troller products only.
  22:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** 
  23:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** Full source code is available at: www.segger.com
  24:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** 
  25:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** We appreciate your understanding and fairness.
  26:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** ----------------------------------------------------------------------*/
  27:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** /**
  28:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c ****  * @cond
  29:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c ****  **************************************************************************************************
  30:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c ****  *
  31:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  32:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c ****  * All rights reserved.
  33:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c ****  *
  34:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  35:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c ****  * following conditions are met:
  36:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c ****  *
  37:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c ****  *   Redistributions of source code must retain the above copyright notice, this list of conditions
  38:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c ****  *   disclaimer.
  39:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c ****  *
  40:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c ****  *   Redistributions in binary form must reproduce the above copyright notice, this list of conditi
  41:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c ****  *   following disclaimer in the documentation and/or other materials provided with the distributio
  42:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c ****  *
  43:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c ****  *   Neither the name of the copyright holders nor the names of its contributors may be used to end
  44:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c ****  *   products derived from this software without specific prior written permission.
  45:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c ****  *
  46:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  47:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  48:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  49:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  50:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  51:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  52:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  53:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c ****  *
  54:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  55:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c ****  * with Infineon Technologies AG (dave@infineon.com).
  56:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c ****  **************************************************************************************************
  57:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c ****  *
  58:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c ****  * Change History
  59:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c ****  * --------------
  60:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c ****  *
  61:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c ****  * 2015-02-16:
  62:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c ****  *     - Initial version<br>
  63:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c ****  *
  64:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c ****  * 2015-05-18:
  65:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c ****  *     - GUI_X_Delay is modified
  66:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c ****  * @endcond
  67:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c ****  *
  68:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c ****  */
  69:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** /**************************************************************************************************
  70:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c ****  * HEADER FILES
  71:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c ****  **************************************************************************************************
  72:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** #include "xmc_common.h"
  73:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** #include "GUI.h"
  74:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** #include "GUI_SEGGERLIBRARY/gui_seggerlibrary_conf.h"
  75:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** #if (GUI_SEGGERLIBRARY_RTOS_PRESENT == 0)
  76:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** #include "SYSTIMER/systimer.h"
  77:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** #endif
  78:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** 
  79:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** #if (CMSIS_RTOS_RTX_PRESENT == 1)
  80:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** /* CMSIS_RTOS_RTX include files */
  81:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** #include "CMSIS_RTOS_RTX/cmsis_rtos_rtx.h"
  82:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** #include "CMSIS_RTOS_RTX/SRC/rt_Time.h"
  83:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** 
  84:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** #define SEMAPHORE_BLK_TIME   1000
  85:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** /** Lock Semaphore */
  86:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** osSemaphoreDef(LockSemaphore);
  87:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** osSemaphoreId LockSemaphoreId;
  88:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** int LockSemaphoreIndex;
  89:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** #endif
  90:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** 
  91:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** #if (FREERTOS_PRESENT == 1)
  92:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** /* FreeRTOS include files */
  93:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** #include "FREERTOS/FreeRTOS.h"
  94:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** #include "FREERTOS/task.h"
  95:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** #include "FREERTOS/timers.h"
  96:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** #include "FREERTOS/semphr.h"
  97:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** #endif
  98:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** /**************************************************************************************************
  99:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c ****  * MACROS
 100:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c ****  **************************************************************************************************
 101:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c ****  /*************************************************************************************************
 102:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c ****  * LOCAL DATA
 103:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c ****  **************************************************************************************************
 104:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** #if ((GUI_SEGGERLIBRARY_RTOS_PRESENT == 0) || (CMSIS_RTOS_RTX_PRESENT == 1))
 105:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** volatile uint32_t OS_TimeMS;
 106:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** #endif
 107:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** 
 108:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** #if (FREERTOS_PRESENT == 1)
 109:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** static xSemaphoreHandle xQueueMutex;
 110:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** static xSemaphoreHandle xSemaTxDone;
 111:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** #endif
 112:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** 
 113:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** /**************************************************************************************************
 114:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c ****  * LOCAL ROUTINES
 115:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c ****  **************************************************************************************************
 116:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** 
 117:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** /*********************************************************************
 118:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** *
 119:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** *      Timing:
 120:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** *                 GUI_X_GetTime()
 121:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** *                 GUI_X_Delay(int)
 122:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** 
 123:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c ****   Some timing dependent routines require a GetTime
 124:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c ****   and delay function. Default time unit (tick), normally is
 125:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c ****   1 ms.
 126:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** */
 127:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** #if (GUI_SEGGERLIBRARY_RTOS_PRESENT == 0)
 128:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** /* Non-RTOS */
 129:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** int GUI_X_GetTime(void) {
  29              	 .loc 1 129 0
  30              	 .cfi_startproc
  31              	 
  32              	 
  33 0000 80B5     	 push {r7,lr}
  34              	.LCFI0:
  35              	 .cfi_def_cfa_offset 8
  36              	 .cfi_offset 7,-8
  37              	 .cfi_offset 14,-4
  38 0002 00AF     	 add r7,sp,#0
  39              	.LCFI1:
  40              	 .cfi_def_cfa_register 7
 130:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c ****   OS_TimeMS = SYSTIMER_GetTime();
  41              	 .loc 1 130 0
  42 0004 FFF7FEFF 	 bl SYSTIMER_GetTime
  43 0008 0246     	 mov r2,r0
  44 000a 034B     	 ldr r3,.L3
  45 000c 1A60     	 str r2,[r3]
 131:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c ****   return OS_TimeMS;
  46              	 .loc 1 131 0
  47 000e 024B     	 ldr r3,.L3
  48 0010 1B68     	 ldr r3,[r3]
 132:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** }
  49              	 .loc 1 132 0
  50 0012 1846     	 mov r0,r3
  51 0014 80BD     	 pop {r7,pc}
  52              	.L4:
  53 0016 00BF     	 .align 2
  54              	.L3:
  55 0018 00000000 	 .word OS_TimeMS
  56              	 .cfi_endproc
  57              	.LFE133:
  59              	 .section .text.GUI_X_Delay,"ax",%progbits
  60              	 .align 2
  61              	 .global GUI_X_Delay
  62              	 .thumb
  63              	 .thumb_func
  65              	GUI_X_Delay:
  66              	.LFB134:
 133:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** 
 134:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** void GUI_X_Delay(int ms) {
  67              	 .loc 1 134 0
  68              	 .cfi_startproc
  69              	 
  70              	 
  71 0000 80B5     	 push {r7,lr}
  72              	.LCFI2:
  73              	 .cfi_def_cfa_offset 8
  74              	 .cfi_offset 7,-8
  75              	 .cfi_offset 14,-4
  76 0002 84B0     	 sub sp,sp,#16
  77              	.LCFI3:
  78              	 .cfi_def_cfa_offset 24
  79 0004 00AF     	 add r7,sp,#0
  80              	.LCFI4:
  81              	 .cfi_def_cfa_register 7
  82 0006 7860     	 str r0,[r7,#4]
 135:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c ****   uint32_t tStart = OS_TimeMS;
  83              	 .loc 1 135 0
  84 0008 0B4B     	 ldr r3,.L7
  85 000a 1B68     	 ldr r3,[r3]
  86 000c FB60     	 str r3,[r7,#12]
 136:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c ****   ms = ms * 1000;
  87              	 .loc 1 136 0
  88 000e 7B68     	 ldr r3,[r7,#4]
  89 0010 4FF47A72 	 mov r2,#1000
  90 0014 02FB03F3 	 mul r3,r2,r3
  91 0018 7B60     	 str r3,[r7,#4]
  92              	.L6:
 137:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c ****   do
 138:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c ****   {
 139:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c ****     OS_TimeMS = SYSTIMER_GetTime();
  93              	 .loc 1 139 0 discriminator 1
  94 001a FFF7FEFF 	 bl SYSTIMER_GetTime
  95 001e 0246     	 mov r2,r0
  96 0020 054B     	 ldr r3,.L7
  97 0022 1A60     	 str r2,[r3]
 140:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c ****   }
 141:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c ****   while ((OS_TimeMS-tStart) < ms );
  98              	 .loc 1 141 0 discriminator 1
  99 0024 044B     	 ldr r3,.L7
 100 0026 1A68     	 ldr r2,[r3]
 101 0028 FB68     	 ldr r3,[r7,#12]
 102 002a D21A     	 subs r2,r2,r3
 103 002c 7B68     	 ldr r3,[r7,#4]
 104 002e 9A42     	 cmp r2,r3
 105 0030 F3D3     	 bcc .L6
 142:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** }
 106              	 .loc 1 142 0
 107 0032 1037     	 adds r7,r7,#16
 108              	.LCFI5:
 109              	 .cfi_def_cfa_offset 8
 110 0034 BD46     	 mov sp,r7
 111              	.LCFI6:
 112              	 .cfi_def_cfa_register 13
 113              	 
 114 0036 80BD     	 pop {r7,pc}
 115              	.L8:
 116              	 .align 2
 117              	.L7:
 118 0038 00000000 	 .word OS_TimeMS
 119              	 .cfi_endproc
 120              	.LFE134:
 122              	 .section .text.GUI_X_Init,"ax",%progbits
 123              	 .align 2
 124              	 .global GUI_X_Init
 125              	 .thumb
 126              	 .thumb_func
 128              	GUI_X_Init:
 129              	.LFB135:
 143:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** #endif
 144:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** 
 145:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** #if (CMSIS_RTOS_RTX_PRESENT == 1)
 146:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** /* CMSIS RTOS support */
 147:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** int GUI_X_GetTime(void)
 148:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** {
 149:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** 	return OS_TimeMS++;
 150:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** }
 151:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** 
 152:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** void GUI_X_Delay(int ms)
 153:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** {
 154:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** 	osDelay( ms );
 155:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** 	OS_TimeMS += ms;
 156:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** }
 157:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** #endif
 158:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** 
 159:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** #if (FREERTOS_PRESENT == 1)
 160:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** /* FreeRTOS support */
 161:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** int GUI_X_GetTime(void)
 162:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** {
 163:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c ****   return ((int) xTaskGetTickCount());
 164:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** }
 165:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** 
 166:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** void GUI_X_Delay(int ms)
 167:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** {
 168:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** 	vTaskDelay( ms );
 169:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** }
 170:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** #endif
 171:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** /*********************************************************************
 172:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** *
 173:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** *       GUI_X_Init()
 174:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** *
 175:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** * Note:
 176:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** *     GUI_X_Init() is called from GUI_Init is a possibility to init
 177:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** *     some hardware which needs to be up and running before the GUI.
 178:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** *     If not required, leave this routine blank.
 179:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** */
 180:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** 
 181:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** void GUI_X_Init(void) {}
 130              	 .loc 1 181 0
 131              	 .cfi_startproc
 132              	 
 133              	 
 134              	 
 135 0000 80B4     	 push {r7}
 136              	.LCFI7:
 137              	 .cfi_def_cfa_offset 4
 138              	 .cfi_offset 7,-4
 139 0002 00AF     	 add r7,sp,#0
 140              	.LCFI8:
 141              	 .cfi_def_cfa_register 7
 142              	 .loc 1 181 0
 143 0004 BD46     	 mov sp,r7
 144              	.LCFI9:
 145              	 .cfi_def_cfa_register 13
 146              	 
 147 0006 5DF8047B 	 ldr r7,[sp],#4
 148              	.LCFI10:
 149              	 .cfi_restore 7
 150              	 .cfi_def_cfa_offset 0
 151 000a 7047     	 bx lr
 152              	 .cfi_endproc
 153              	.LFE135:
 155              	 .section .text.GUI_X_ExecIdle,"ax",%progbits
 156              	 .align 2
 157              	 .global GUI_X_ExecIdle
 158              	 .thumb
 159              	 .thumb_func
 161              	GUI_X_ExecIdle:
 162              	.LFB136:
 182:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** 
 183:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** 
 184:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** /*********************************************************************
 185:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** *
 186:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** *       GUI_X_ExecIdle
 187:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** *
 188:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** * Note:
 189:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** *  Called if WM is in idle state
 190:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** */
 191:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** 
 192:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** void GUI_X_ExecIdle(void) {}
 163              	 .loc 1 192 0
 164              	 .cfi_startproc
 165              	 
 166              	 
 167              	 
 168 0000 80B4     	 push {r7}
 169              	.LCFI11:
 170              	 .cfi_def_cfa_offset 4
 171              	 .cfi_offset 7,-4
 172 0002 00AF     	 add r7,sp,#0
 173              	.LCFI12:
 174              	 .cfi_def_cfa_register 7
 175              	 .loc 1 192 0
 176 0004 BD46     	 mov sp,r7
 177              	.LCFI13:
 178              	 .cfi_def_cfa_register 13
 179              	 
 180 0006 5DF8047B 	 ldr r7,[sp],#4
 181              	.LCFI14:
 182              	 .cfi_restore 7
 183              	 .cfi_def_cfa_offset 0
 184 000a 7047     	 bx lr
 185              	 .cfi_endproc
 186              	.LFE136:
 188              	 .section .text.GUI_X_Log,"ax",%progbits
 189              	 .align 2
 190              	 .global GUI_X_Log
 191              	 .thumb
 192              	 .thumb_func
 194              	GUI_X_Log:
 195              	.LFB137:
 193:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** 
 194:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** 
 195:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** /*********************************************************************
 196:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** *
 197:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** * Multitasking:
 198:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** *
 199:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** * GUI_X_InitOS()
 200:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** * GUI_X_GetTaskId()
 201:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** * GUI_X_Lock()
 202:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** * GUI_X_Unlock()
 203:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** *
 204:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** * Note:
 205:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** * The following routines are required only if emWin is used in a
 206:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** * true multi task environment, which means you have more than one
 207:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** * thread using the emWin API.
 208:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** * In this case the
 209:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** * #define GUI_OS 1
 210:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** * needs to be in GUIConf.h
 211:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** */
 212:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** #if (CMSIS_RTOS_RTX_PRESENT == 1)
 213:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** /* CMSIS RTOS Init OS */
 214:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** void GUI_X_InitOS(void)
 215:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** {
 216:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c ****   /* Create Lock Semaphore */
 217:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c ****   LockSemaphoreId = osSemaphoreCreate (osSemaphore(LockSemaphore), 1);
 218:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** }
 219:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** 
 220:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** void GUI_X_Unlock(void)
 221:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** {
 222:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c ****   /* Release the Lock Semaphore */
 223:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c ****   osSemaphoreRelease(LockSemaphoreId);
 224:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** }
 225:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** 
 226:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** void GUI_X_Lock(void)
 227:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** {
 228:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c ****   /* Take the Lock semaphore  */
 229:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c ****   LockSemaphoreIndex = osSemaphoreWait(LockSemaphoreId, SEMAPHORE_BLK_TIME);
 230:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** }
 231:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** 
 232:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** /* Get Task handle */
 233:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** U32 GUI_X_GetTaskId(void)
 234:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** {
 235:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** 	return 1;
 236:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** }
 237:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** #endif
 238:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** 
 239:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** #if (FREERTOS_PRESENT == 1)
 240:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** /* FreeRTOS Init OS */
 241:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** void GUI_X_InitOS(void)
 242:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** {
 243:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c ****   /* Create Mutex lock */
 244:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c ****   xQueueMutex = xSemaphoreCreateMutex();
 245:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c ****   configASSERT (xQueueMutex != NULL);
 246:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** 
 247:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c ****   /* Queue Semaphore */
 248:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c ****   vSemaphoreCreateBinary( xSemaTxDone );
 249:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c ****   configASSERT ( xSemaTxDone != NULL );
 250:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** }
 251:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** 
 252:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** void GUI_X_Unlock(void)
 253:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** {
 254:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c ****   xSemaphoreGive( xQueueMutex );
 255:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** }
 256:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** 
 257:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** void GUI_X_Lock(void)
 258:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** {
 259:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c ****   if(xQueueMutex == NULL)
 260:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c ****   {
 261:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c ****     GUI_X_InitOS();
 262:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c ****   }
 263:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** 
 264:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c ****   xSemaphoreTake( xQueueMutex, portMAX_DELAY );
 265:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** }
 266:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** 
 267:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** /* Get Task handle */
 268:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** U32 GUI_X_GetTaskId(void)
 269:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** {
 270:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c ****   return ((U32) xTaskGetCurrentTaskHandle());
 271:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** }
 272:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** 
 273:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** void GUI_X_WaitEvent (void)
 274:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** {
 275:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c ****   while( xSemaphoreTake(xSemaTxDone, portMAX_DELAY ) != pdTRUE );
 276:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** }
 277:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** 
 278:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** 
 279:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** void GUI_X_SignalEvent (void)
 280:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** {
 281:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c ****   xSemaphoreGive( xSemaTxDone );
 282:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** }
 283:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** #endif
 284:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** 
 285:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** /*********************************************************************
 286:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** *
 287:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** *      Logging: OS dependent
 288:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** 
 289:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** Note:
 290:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c ****   Logging is used in higher debug levels only. The typical target
 291:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c ****   build does not use logging and does therefor not require any of
 292:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c ****   the logging routines below. For a release build without logging
 293:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c ****   the routines below may be eliminated to save some space.
 294:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c ****   (If the linker is not function aware and eliminates unreferenced
 295:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c ****   functions automatically)
 296:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** 
 297:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** */
 298:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** 
 299:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** void GUI_X_Log     (const char *s) { GUI_USE_PARA(s); }
 196              	 .loc 1 299 0
 197              	 .cfi_startproc
 198              	 
 199              	 
 200              	 
 201 0000 80B4     	 push {r7}
 202              	.LCFI15:
 203              	 .cfi_def_cfa_offset 4
 204              	 .cfi_offset 7,-4
 205 0002 83B0     	 sub sp,sp,#12
 206              	.LCFI16:
 207              	 .cfi_def_cfa_offset 16
 208 0004 00AF     	 add r7,sp,#0
 209              	.LCFI17:
 210              	 .cfi_def_cfa_register 7
 211 0006 7860     	 str r0,[r7,#4]
 212              	 .loc 1 299 0
 213 0008 0C37     	 adds r7,r7,#12
 214              	.LCFI18:
 215              	 .cfi_def_cfa_offset 4
 216 000a BD46     	 mov sp,r7
 217              	.LCFI19:
 218              	 .cfi_def_cfa_register 13
 219              	 
 220 000c 5DF8047B 	 ldr r7,[sp],#4
 221              	.LCFI20:
 222              	 .cfi_restore 7
 223              	 .cfi_def_cfa_offset 0
 224 0010 7047     	 bx lr
 225              	 .cfi_endproc
 226              	.LFE137:
 228 0012 00BF     	 .section .text.GUI_X_Warn,"ax",%progbits
 229              	 .align 2
 230              	 .global GUI_X_Warn
 231              	 .thumb
 232              	 .thumb_func
 234              	GUI_X_Warn:
 235              	.LFB138:
 300:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** void GUI_X_Warn    (const char *s) { GUI_USE_PARA(s); }
 236              	 .loc 1 300 0
 237              	 .cfi_startproc
 238              	 
 239              	 
 240              	 
 241 0000 80B4     	 push {r7}
 242              	.LCFI21:
 243              	 .cfi_def_cfa_offset 4
 244              	 .cfi_offset 7,-4
 245 0002 83B0     	 sub sp,sp,#12
 246              	.LCFI22:
 247              	 .cfi_def_cfa_offset 16
 248 0004 00AF     	 add r7,sp,#0
 249              	.LCFI23:
 250              	 .cfi_def_cfa_register 7
 251 0006 7860     	 str r0,[r7,#4]
 252              	 .loc 1 300 0
 253 0008 0C37     	 adds r7,r7,#12
 254              	.LCFI24:
 255              	 .cfi_def_cfa_offset 4
 256 000a BD46     	 mov sp,r7
 257              	.LCFI25:
 258              	 .cfi_def_cfa_register 13
 259              	 
 260 000c 5DF8047B 	 ldr r7,[sp],#4
 261              	.LCFI26:
 262              	 .cfi_restore 7
 263              	 .cfi_def_cfa_offset 0
 264 0010 7047     	 bx lr
 265              	 .cfi_endproc
 266              	.LFE138:
 268 0012 00BF     	 .section .text.GUI_X_ErrorOut,"ax",%progbits
 269              	 .align 2
 270              	 .global GUI_X_ErrorOut
 271              	 .thumb
 272              	 .thumb_func
 274              	GUI_X_ErrorOut:
 275              	.LFB139:
 301:../Dave/Generated/GUI_SEGGERLIBRARY/Config/GUI_X.c **** void GUI_X_ErrorOut(const char *s) { GUI_USE_PARA(s); }
 276              	 .loc 1 301 0
 277              	 .cfi_startproc
 278              	 
 279              	 
 280              	 
 281 0000 80B4     	 push {r7}
 282              	.LCFI27:
 283              	 .cfi_def_cfa_offset 4
 284              	 .cfi_offset 7,-4
 285 0002 83B0     	 sub sp,sp,#12
 286              	.LCFI28:
 287              	 .cfi_def_cfa_offset 16
 288 0004 00AF     	 add r7,sp,#0
 289              	.LCFI29:
 290              	 .cfi_def_cfa_register 7
 291 0006 7860     	 str r0,[r7,#4]
 292              	 .loc 1 301 0
 293 0008 0C37     	 adds r7,r7,#12
 294              	.LCFI30:
 295              	 .cfi_def_cfa_offset 4
 296 000a BD46     	 mov sp,r7
 297              	.LCFI31:
 298              	 .cfi_def_cfa_register 13
 299              	 
 300 000c 5DF8047B 	 ldr r7,[sp],#4
 301              	.LCFI32:
 302              	 .cfi_restore 7
 303              	 .cfi_def_cfa_offset 0
 304 0010 7047     	 bx lr
 305              	 .cfi_endproc
 306              	.LFE139:
 308 0012 00BF     	 .text
 309              	.Letext0:
 310              	 .file 2 "c:\\dave_4-4-2_64bit_2018-02-23\\dave_4-4-2_64bit_2018-02-23\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 311              	 .file 3 "c:\\dave_4-4-2_64bit_2018-02-23\\dave_4-4-2_64bit_2018-02-23\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 312              	 .file 4 "C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/NewHavenDisplay/Libraries/CMSIS/Include/cmsis_gcc.h"
 313              	 .file 5 "C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/NewHavenDisplay/Libraries/CMSIS/Include/core_cm4.h"
DEFINED SYMBOLS
                            *ABS*:00000000 GUI_X.c
                            *COM*:00000004 OS_TimeMS
    {standard input}:21     .text.GUI_X_GetTime:00000000 $t
    {standard input}:26     .text.GUI_X_GetTime:00000000 GUI_X_GetTime
    {standard input}:55     .text.GUI_X_GetTime:00000018 $d
    {standard input}:60     .text.GUI_X_Delay:00000000 $t
    {standard input}:65     .text.GUI_X_Delay:00000000 GUI_X_Delay
    {standard input}:118    .text.GUI_X_Delay:00000038 $d
    {standard input}:123    .text.GUI_X_Init:00000000 $t
    {standard input}:128    .text.GUI_X_Init:00000000 GUI_X_Init
    {standard input}:156    .text.GUI_X_ExecIdle:00000000 $t
    {standard input}:161    .text.GUI_X_ExecIdle:00000000 GUI_X_ExecIdle
    {standard input}:189    .text.GUI_X_Log:00000000 $t
    {standard input}:194    .text.GUI_X_Log:00000000 GUI_X_Log
    {standard input}:229    .text.GUI_X_Warn:00000000 $t
    {standard input}:234    .text.GUI_X_Warn:00000000 GUI_X_Warn
    {standard input}:269    .text.GUI_X_ErrorOut:00000000 $t
    {standard input}:274    .text.GUI_X_ErrorOut:00000000 GUI_X_ErrorOut
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
SYSTIMER_GetTime
