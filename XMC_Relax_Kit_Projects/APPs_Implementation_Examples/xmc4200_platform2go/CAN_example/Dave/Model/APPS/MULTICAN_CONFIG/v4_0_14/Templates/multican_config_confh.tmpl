package Model.APPS.MULTICAN_CONFIG.v4_0_14.Templates;

import Model.APPS.MULTICAN_CONFIG.v4_0_14.MULTICAN_CONFIG


out.print("""
/**
 * @file multican_config_conf.h
 * @date 2015-10-26
 *
 * NOTE:
 * This file is generated by DAVE-4. Any manual modification done to this file will be lost when the code is regenerated.
 *
 * @cond
 ***********************************************************************************************************************
 *
 * Copyright (c) 2015-2020, Infineon Technologies AG
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,are permitted provided that the
 * following conditions are met:
 *
 *   Redistributions of source code must retain the above copyright notice, this list of conditions and the  following
 *   disclaimer.
 *
 *   Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the
 *   following disclaimer in the documentation and/or other materials provided with the distribution.
 *
 *   Neither the name of the copyright holders nor the names of its contributors may be used to endorse or promote
 *   products derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
 * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT  OF THE
 * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * To improve the quality of the software, users are encouraged to share modifications, enhancements or bug fixes
 * with Infineon Technologies AG (dave@infineon.com).
 ***********************************************************************************************************************
 *
 * Change History
 * --------------
 *
 * 2015-10-26:
 *     - Initial version<br>
 *
 *
 */
#ifndef MULTICAN_CONFIG_CONF_H_
#define MULTICAN_CONFIG_CONF_H_
/***********************************************************************************************************************
 * HEADER FILES
 ********************************************************************************************************************* */
  #include "GLOBAL_CAN/global_can.h"
/**********************************************************************************************************************
 * MACROS
 ********************************************************************************************************************* */

""");
/* Macros for APP version */
out.print("""
#define MULTICAN_CONFIG_MAJOR_VERSION (${(MULTICAN_CONFIG.version).findAll( /\d+/ )*.toInteger()[0]}U)
#define MULTICAN_CONFIG_MINOR_VERSION (${(MULTICAN_CONFIG.version).findAll( /\d+/ )*.toInteger()[1]}U)
#define MULTICAN_CONFIG_PATCH_VERSION (${(MULTICAN_CONFIG.version).findAll( /\d+/ )*.toInteger()[2]}U)
""");
Integer node_count = 0;
for (MULTICAN_CONFIG CanInstance : appInstancesList) 
{
	out.print("""
#define NUM_MSGOBJECTS      (${CanInstance.ginteger_number_message_objects.value}U)
""");

if(CanInstance.rArraygindexgroup_nodesettings[0].gcheck_enablenode.value == true ||
	CanInstance.rArraygindexgroup_nodesettings[1].gcheck_enablenode.value == true ||
	CanInstance.rArraygindexgroup_nodesettings[2].gcheck_enablenode.value == true ||
	CanInstance.rArraygindexgroup_nodesettings[3].gcheck_enablenode.value == true ||
	CanInstance.rArraygindexgroup_nodesettings[4].gcheck_enablenode.value == true ||
	CanInstance.rArraygindexgroup_nodesettings[5].gcheck_enablenode.value == true){
 out.print("""\n#define IS_NODE_ENABLED""");
}

if(CanInstance.rArraygindexgroup_nodesettings[0].gcheck_enablenode.value == true){
out.print("""\n#define NODE_0_ENABLED""");
}
if(CanInstance.rArraygindexgroup_nodesettings[1].gcheck_enablenode.value == true){
out.print("""\n#define NODE_1_ENABLED""");
}
if(CanInstance.rArraygindexgroup_nodesettings[2].gcheck_enablenode.value == true){
out.print("""\n#define NODE_2_ENABLED""");
}
if(CanInstance.rArraygindexgroup_nodesettings[3].gcheck_enablenode.value == true){
out.print("""\n#define NODE_3_ENABLED""");
}
if(CanInstance.rArraygindexgroup_nodesettings[4].gcheck_enablenode.value == true){
out.print("""\n#define NODE_4_ENABLED""");
}
if(CanInstance.rArraygindexgroup_nodesettings[5].gcheck_enablenode.value == true){
out.print("""\n#define NODE_5_ENABLED""");
}
}
out.print("""
#endif /* End of MULTICAN_CONFIG_CONF_H_*/""");