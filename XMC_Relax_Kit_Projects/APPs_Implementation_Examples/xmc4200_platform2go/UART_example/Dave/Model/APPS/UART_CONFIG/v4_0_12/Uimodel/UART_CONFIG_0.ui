<p1:Tab  xmlns="http://www.eclipse.org/xwt/presentation" xmlns:x="http://www.eclipse.org/xwt" xmlns:p1="clr-namespace:com.ifx.davex.ui.controls.app" x:Class="e" layout="{x:Null}">
	<p1:TabFolder bounds="5, 5, 538, 1125">
		<p1:GTab text="General" widgetName="tab_general" visible="true" enabled="true" manifestObj="true">
			<p1:GTab.control>
				<p1:Tab layout="{x:Null}" location="-11, -165">
					<p1:GGroup text="Operation Mode" manifestObj="true" widgetName="ggroup_operation_mode" bounds="14, 13, 501, 189">
						<p1:GCombo mandatory="(com.ifx.davex.ui.controls.util.AppUiConstants).FALSE" manifestObj="true" widgetName="gcombo_operation_mode" bounds="261, 21, 174, 21" options="Full Duplex&#13;&#10;Half Duplex&#13;&#10;Loop Back&#13;&#10;IrDA" value="Full Duplex" description="Desired operation mode for the data transmission &amp; reception.&lt;br&gt;&#13;&#10;&lt;ul&gt;&#13;&#10;&lt;li&gt;Full Duplex: Two separate pins are used for transmission and reception.&lt;/li&gt;&#13;&#10;&lt;li&gt;Half Duplex: One common pin is used for transmission and reception.&lt;br&gt;&#13;&#10;In this mode two signals will be exposed by the APP namely,  &lt;i&gt;half duplex out&lt;/i&gt; and &lt;i&gt;half duplex in&lt;/i&gt;. These signals can be connected to DIGITAL_IO APP. For implementing half duplex communication using one single pin, connect the  &lt;i&gt;half duplex out&lt;/i&gt; signal to an instance of DIGITAL_IO APP and connect the same DIGITAL_IO APP instance to the &lt;i&gt;half duplex in&lt;/i&gt; signal. Now USIC channel will be able to transmit and receive using one common IO pin.&lt;br&gt;&#13;&#10;To implement the half duplex communication using two pins, the two signals of USIC_CONF_UART have to be connected to two different DIGITAL_IO  APP instances and the pins have to be connected together externally to make the link half duplex. Two pin configuration can be used when pins capable of both UART output(DOUT0) and UART input(DX0) are not available.&lt;/li&gt;&#13;&#10;&lt;li&gt;Loop Back: No pins are used. When data is transmitted, the same data will be received.&lt;/li&gt;&#13;&#10;&lt;li&gt;IrDA: Same as Half Duplex mode. It is used for infrared communications (more configuration options are available in this mode, e.g. pulse length)&lt;/li&gt;&#13;&#10;&lt;/ul&gt;"/>
						<p1:GLabel bounds="14, 55, 113, 15" manifestObj="true" text="DX1 input stage:" widgetName="glabel_dx1_input_stage"/>
						<p1:GCombo bounds="261, 52, 174, 21" mandatory="(com.ifx.davex.ui.controls.util.AppUiConstants).FALSE" manifestObj="true" options="None&#13;&#10;External Frequency Input&#13;&#10;Collision Detection" value="None" widgetName="gcombo_dx1_input_stage" description="Input signal chosen for the input stage DX1.&lt;br&gt;&#13;&#10;&lt;ul&gt;&#13;&#10;&lt;li&gt;None: DX1 input not used&lt;/li&gt;&#13;&#10;&lt;li&gt;External Frequency Input: used for the baud rate generation. This allows transfers with a frequency that can not be generated internally.&lt;/li&gt;&#13;&#10;&lt;li&gt;Collision Detection: In half-duplex mode, the value of TXD pin is input for comparing with the data transmitted.&lt;/li&gt;&#13;&#10;&lt;/ul&gt;" toolTipText="DX1 input stage can be used for external frequency input&#13;&#10;or to sample the output data for enabling collision detection"/>
						<p1:GCheck text="Use input stage DX2 for transmit data validation" manifestObj="true" widgetName="gcheck_enable_transmit_enable" bounds="14, 88, 277, 16" description="On selecting this option, the transmit data validation is enabled. This means, that an input signal (Shift Control Input DX2) can be used for enabling/disabling the data word transfer with the use of a transfer gating logic or for starting the data transfer upon the reception of an event with the use of a transfer trigger logic." toolTipText="Use DX2 input stage as data terminal ready(DTR) signal"/>
						<p1:GLabel bounds="14, 122, 156, 15" manifestObj="true" text="Type of data validation:" widgetName="glabel_type_transmit_data_validation"/>
						<p1:GCombo bounds="261, 119, 174, 21" mandatory="(com.ifx.davex.ui.controls.util.AppUiConstants).FALSE" manifestObj="true" options="Transfer on low (DX2S = 0)&#13;&#10;Transfer on high (DX2S = 1)&#13;&#10;Transfer on event (DX2T)" value="Transfer on low (DX2S = 0)" widgetName="gcombo_type_transmit_data_validation" description="Type of transmit data validation used.&lt;br&gt;&#13;&#10;&lt;ul&gt;&#13;&#10;&lt;li&gt;Transfer on low (DX2S = 0): Transfer gating logic is used. A transmission of the data word in TBUF can be started if the value of the signal DX2S is equal to zero.&lt;/li&gt;&#13;&#10;&lt;li&gt;Transfer on high (DX2S = 1):  Transfer gating logic is used. Transmission can be started if the value of the signal DX2S is equal to one.&lt;/li&gt;&#13;&#10;&lt;li&gt;Transfer on event (DX2T): Transfer gating logic is used. Data words transfers are triggered by events.&lt;/li&gt;&#13;&#10;&lt;/ul&gt;" toolTipText="Data validation signal polarity"/>
						<p1:GLabel bounds="14, 24, 127, 15" manifestObj="true" text="Communication type:" widgetName="glabel_operation_mode"/>
						<p1:GLabel bounds="14, 155, 239, 15" manifestObj="true" text="Triggering edge for data validation on event:" widgetName="glabel_transmit_data_validation_trigger_edge" toolTipText="Bit field DX2CR.CM"/>
						<p1:GCombo bounds="261, 152, 174, 21" description="This field defines the edge of the DX2T signal to be used for triggering the transmit data validation.&lt;br&gt;&#13;&#10;&lt;ul&gt;&#13;&#10;&lt;li&gt;Rising Edge: The rising edge of the DX2T signal is used.&lt;/li&gt;&#13;&#10;&lt;li&gt;Falling Edge: The rising edge of the DX2T signal is used.&lt;/li&gt;&#13;&#10;&lt;/ul&gt;" mandatory="(com.ifx.davex.ui.controls.util.AppUiConstants).FALSE" manifestObj="true" options="Rising Edge&#13;&#10;Falling Edge&#13;&#10;Both Edges" value="Rising Edge" widgetName="gcombo_transmit_data_validation_trigger_edge" toolTipText="Bit field DX2CR.CM&#13;&#10;DX2 input signal edge selection"/>
					</p1:GGroup>
					<p1:GGroup text="Baud Rate Generator" manifestObj="true" widgetName="ggroup_baud_rate" bounds="14, 497, 501, 484">
						<p1:GLabel bounds="13, 68, 118, 15" manifestObj="true" text="Desired speed [baud]:" widgetName="glabel_desired_baud_rate"/>
						<p1:GLabel bounds="13, 220, 67, 15" manifestObj="true" text="Step value:" widgetName="glabel_step_value" toolTipText="Bit field FDR.STEP"/>
						<p1:GLabel bounds="13, 106, 84, 15" manifestObj="true" text="Divider factor:" widgetName="glabel_divider_factor_internal_clk" toolTipText="Bit field (BRG.PDIV + 1)"/>
						<p1:GLabel bounds="13, 106, 82, 15" manifestObj="true" text="Divider factor:" widgetName="glabel_divider_factor_external_clk" toolTipText="Bit field (BRG.PDIV + 1)"/>
						<p1:GLabel bounds="13, 182, 74, 15" manifestObj="true" text="Pre-divider:" widgetName="glabel_predivider" toolTipText="Bit field BRG.PCTQ"/>
						<p1:GInteger x:Style="LEFT" minValue="1" maxValue="7500000" mandatory="(com.ifx.davex.ui.controls.util.AppUiConstants).FALSE" format="(com.ifx.davex.ui.controls.util.AppUiConstants).DEC" manifestObj="true" widgetName="ginteger_desired_baud_rate" bounds="139, 64, 148, 23" value="19200" description="Allows to configure the desired baud rate for the UART communication. The value should be specified in baud. The maximum value of the baud rate should be calculated based on peripheral clock and the oversampling settings. Max baud = (fPERIPH * 1023)/(1024 * oversampling)."/>
						<p1:GInteger bounds="139, 216, 148, 23" mandatory="(com.ifx.davex.ui.controls.util.AppUiConstants).FALSE" manifestObj="true" maxValue="1023" minValue="0" value="0" widgetName="ginteger_step_value" x:Style="LEFT" enabled="false" description="In normal divider mode, this field contains the reload value for RESULT after RESULT has reached 0x3FF. In fractional divider mode, it indicates the value added to RESULT with each input clock cycle." toolTipText="Bit field FDR.STEP"/>
						<p1:GInteger bounds="139, 102, 148, 23" mandatory="(com.ifx.davex.ui.controls.util.AppUiConstants).FALSE" manifestObj="true" maxValue="1024" minValue="1" value="0" widgetName="ginteger_divider_factor_internal_clk" x:Style="LEFT" description="This field indicates the ratio between the input frequency fPPP and the divider frequency fPDIV when internal clock source is used." enabled="false" toolTipText="Bit field (BRG.PDIV + 1)"/>
						<p1:GLabel bounds="13, 144, 89, 15" manifestObj="true" text="Oversampling:" widgetName="glabel_oversampling" toolTipText="Bit field (BRG.DCTQ + 1)"/>
						<p1:GInteger bounds="139, 140, 148, 23" format="(com.ifx.davex.ui.controls.util.AppUiConstants).DEC" mandatory="(com.ifx.davex.ui.controls.util.AppUiConstants).FALSE" manifestObj="true" maxValue="32" minValue="4" value="16" widgetName="ginteger_oversampling" x:Style="LEFT" description="Number of samples to be taken for deciding the value of each UART symbol." toolTipText="Bit field (BRG.DCTQ + 1)&#13;&#10;Define the number of samples to be considered for validating each symbol(0 or 1)."/>
						<p1:GInteger bounds="139, 178, 148, 23" mandatory="(com.ifx.davex.ui.controls.util.AppUiConstants).FALSE" manifestObj="true" maxValue="3" minValue="0" value="0" widgetName="ginteger_predivider" x:Style="LEFT" enabled="false" description="This field indicates length of a time quantum tq for the time quanta counter in the protocol pre-processor (tQ = (PCTQ + 1) / fCTQIN)." toolTipText="Bit field BRG.PCTQ"/>
						<p1:GCombo mandatory="(com.ifx.davex.ui.controls.util.AppUiConstants).FALSE" manifestObj="true" options="Internal Source (FD)&#13;&#10;External Source (DX1T)" value="Internal Source (FD)" widgetName="gcombo_clock_selection" description="This field defines the frequency fPIN, input to the dividers of the BRG.&lt;br&gt;&#13;&#10;&lt;ul&gt;&#13;&#10;&lt;li&gt;Internal Source (FD): The fractional divider frequency fFD is selected.&lt;/li&gt;&#13;&#10;&lt;li&gt;External Source (DX1T): The trigger signal DX1T defines fPIN.&lt;/li&gt;&#13;&#10;&lt;/ul&gt;" bounds="139, 31, 148, 21" toolTipText="Bit field BRG.CLKSEL&#13;&#10;Select source of clock for baudrate generation"/>
						<p1:GLabel bounds="13, 34, 41, 15" manifestObj="true" text="Clock:" widgetName="glabel_clock_selection" toolTipText="Bit field BRG.CLKSEL"/>
						<p1:GLabel bounds="13, 68, 117, 15" manifestObj="true" text="Edge selection:" widgetName="glabel_external_clock_edge" toolTipText="Bit field DX1CR.CM"/>
						<p1:GCombo bounds="139, 65, 148, 21" description="This field selects which edge of the external source signal (DX1S) must be used to generate the clock signal (DX1T)&#13;&#10;&lt;ul&gt;&#13;&#10;&lt;li&gt;Rising Edge: The rising edge of the external signal generates the clock signal.&lt;/li&gt;&#13;&#10;&lt;li&gt;Falling Edge: The falling edge of the external signal generates the clock signal.&lt;/li&gt;&#13;&#10;&lt;li&gt;Both Edges: Both edges of the external signal generate the clock signal.&lt;/li&gt;&#13;&#10;&lt;/ul&gt;" mandatory="(com.ifx.davex.ui.controls.util.AppUiConstants).FALSE" manifestObj="true" options="Rising Edge&#13;&#10;Falling Edge&#13;&#10;Both Edges" value="Falling Edge" widgetName="gcombo_external_clock_edge" toolTipText="Bit field DX1CR.CM&#13;&#10;External clock source signal edge selection "/>
						<p1:GInteger bounds="139, 102, 148, 23" description="This field indicates the ratio between the input frequency fPPP and the divider frequency fPDIV when external clock source is used." mandatory="(com.ifx.davex.ui.controls.util.AppUiConstants).FALSE" manifestObj="true" maxValue="1024" minValue="1" value="1" widgetName="ginteger_divider_factor_external_clk" x:Style="LEFT" toolTipText="Bit field (BRG.PDIV + 1)"/>
						<p1:GImage bounds="7, 251, 470, 157" manifestObj="true" path="doc/USIC_CONFIG_UART_BRG_internal_clk.jpg" widgetName="gimage_baud_rate"/>
						<p1:GCheck bounds="13, 452, 286, 16" description="On selecting this option, the capture mode timer will be enabled." manifestObj="true" text="Enable the capture mode timer" widgetName="gcheck_enable_capture_mode_timer" toolTipText="Bit field BRG.TMEN&#13;&#10;Used for baudrate detection."/>
						<p1:GLabel bounds="13, 424, 111, 15" manifestObj="true" text="Real baud rate [Hz]:" widgetName="glabel_real_baud_rate"/>
						<p1:GFloat bounds="139, 420, 148, 23" description="Indicates the actual baud that can be achieved with the device. This value is calculated based on the entered value of desired baud rate." enabled="false" format="*,2" mandatory="(com.ifx.davex.ui.controls.util.AppUiConstants).FALSE" manifestObj="true" maxValue="POSITIVE_INFINITY" minValue="NEGATIVE_INFINITY" value="19200" widgetName="gfloat_real_baud_rate" x:Style="BORDER | LEFT"/>
					</p1:GGroup>
					<p1:GGroup bounds="14, 214, 501, 89" manifestObj="true" text="Protocol Control Settings" widgetName="ggroup_pcr_settings">
						<p1:GLabel bounds="14, 21, 76, 15" manifestObj="true" text="Pulse length:" widgetName="glabel_pulse_length" toolTipText="Bit field PCR.PL"/>
						<p1:GLabel bounds="14, 55, 76, 15" manifestObj="true" text="Sample point:" widgetName="glabel_sample_point" toolTipText="Bit field PCR.SP"/>
						<p1:GInteger bounds="96, 51, 39, 23" format="(com.ifx.davex.ui.controls.util.AppUiConstants).DEC" mandatory="(com.ifx.davex.ui.controls.util.AppUiConstants).FALSE" manifestObj="true" maxValue="15" minValue="0" value="8" widgetName="ginteger_sample_point" description="Define the sample point among the multiple samples of the symbol. Each symbol(0 or 1) is sampled multiple times based on the value of oversampling(DCTQ). This configuration selects the region in the samples to be considered for sample value determination." toolTipText="Bit field PCR.SP&#13;&#10;The region in the samples of symbol(0 or 1) for determining its value.&#13;&#10;For eg, with oversampling(DCTQ+1) of 16, sampling pint 8, indicates &#13;&#10;the value selection from the middle among 16 samples"/>
						<p1:GInteger bounds="96, 17, 39, 23" format="(com.ifx.davex.ui.controls.util.AppUiConstants).DEC" mandatory="(com.ifx.davex.ui.controls.util.AppUiConstants).FALSE" manifestObj="true" maxValue="7" minValue="0" value="0" widgetName="ginteger_pulse_length" description="Symbol 0  can be represented on data bus with different pulse width.&#13;&#10;This field enables to establish the length of a 0 data bit, counted in time quanta, starting with the time quantum 0 of each bit time. Each bit value that is a 0 can lead to a 0 pulse that is shorter than a bit time. A bit time is the number of time quanta counted by oversampling(DCTQ). &lt;br&gt;&#13;&#10;Value 0 indicates full bit time. The value can range from 0 to 7 or DCTQ, which ever is smaller. &#13;&#10;" toolTipText="Bit field PCR.PL&#13;&#10;Length of symbol pulse. &#13;&#10;0 indicates sample length equivalent of oversampling(DCTQ)&#13;&#10;"/>
					</p1:GGroup>
					<p1:GGroup bounds="14, 316, 501, 168" manifestObj="true" text="Frame Format" widgetName="ggroup_frame_format">
						<p1:GCombo bounds="100, 130, 91, 21" mandatory="(com.ifx.davex.ui.controls.util.AppUiConstants).FALSE" manifestObj="true" options="No parity&#13;&#10;Even parity&#13;&#10;Odd parity" value="No parity" widgetName="gcombo_parity" description="Parity mode selection for the UART communication. Ensure that the communication counterpart also uses the same parity mode.&lt;br&gt;&#13;&#10;&lt;ul&gt;&#13;&#10;&lt;li&gt;No Parity: No extra bit to indicate the data parity.&lt;/li&gt;&#13;&#10;&lt;li&gt;Even Parity: One extra bit will be added after the last data bit. This bit will be logic 1 if there are even number of logic 1 bits in the data.&lt;/li&gt;&#13;&#10;&lt;li&gt;Odd Parity: One extra bit will be added after the last data bit. This bit will be logic 1 if there are odd number of logic 1 bits in the data.&lt;/li&gt;&#13;&#10;&lt;/ul&gt;" toolTipText="Bit field CCR.PM"/>
						<p1:GLabel bounds="14, 132, 80, 16" manifestObj="true" text="Type of parity:" widgetName="glabel_parity" toolTipText="Bit field CCR.PM"/>
						<p1:GLabel bounds="14, 96, 67, 16" manifestObj="true" text="Stop bit(s):" widgetName="glabel_stop_bits" toolTipText="Bit field PCR.STPB"/>
						<p1:GCombo bounds="100, 94, 91, 21" mandatory="(com.ifx.davex.ui.controls.util.AppUiConstants).FALSE" manifestObj="true" options="1 stop bit&#13;&#10;2 stop bits" value="1 stop bit" widgetName="gcombo_stop_bits" description="Each UART frame is completed by 1 or 2 stop bits with the signal level 1.&lt;br&gt;&#13;&#10;&lt;ul&gt;&#13;&#10;&lt;li&gt;1 stop bit: A frame is followed by one stop bit.&lt;/li&gt;&#13;&#10;&lt;li&gt;2 stop bits: A frame is followed by two stop bits.&lt;/li&gt;&#13;&#10;&lt;/ul&gt;&#13;&#10;&lt;br&gt;" toolTipText="Bit field PCR.STPB"/>
						<p1:GLabel bounds="14, 24, 76, 16" manifestObj="true" text="Word length:" widgetName="glabel_word_length" toolTipText="Bit field (SCTR.WLE + 1)"/>
						<p1:GInteger bounds="100, 21, 91, 21" format="(com.ifx.davex.ui.controls.util.AppUiConstants).DEC" mandatory="(com.ifx.davex.ui.controls.util.AppUiConstants).FALSE" manifestObj="true" maxValue="16" minValue="1" value="8" widgetName="ginteger_word_length" description="The data field can consist of several data words. This sets the length of these words." toolTipText="Bit field (SCTR.WLE + 1)&#13;&#10;Static configuration of word length, can be configured with the number data bits"/>
						<p1:GLabel bounds="14, 60, 81, 16" manifestObj="true" text="Frame length:" widgetName="glabel_frame_length" toolTipText="Bit field (SCTR.FLE + 1)"/>
						<p1:GInteger bounds="100, 57, 91, 21" format="(com.ifx.davex.ui.controls.util.AppUiConstants).DEC" mandatory="(com.ifx.davex.ui.controls.util.AppUiConstants).FALSE" manifestObj="true" maxValue="63" minValue="1" value="8" widgetName="ginteger_frame_length" description="Length of the data field (frame)." toolTipText="Bit field (SCTR.FLE + 1)&#13;&#10;Static configuration of frame length, can be configured with the number data bits"/>
					</p1:GGroup>
					<p1:GMessage bounds="14, 994, 501, 53" manifestObj="true" text="Using an external source for baud rate generation, the &quot;External Frequency Input&quot; signal must be selected for the DX1 input stage." widgetName="gmessage_clock_selection"/>
				</p1:Tab>
			</p1:GTab.control>
		</p1:GTab>
		<p1:GTab text="Events" visible="true" enabled="true" manifestObj="true" widgetName="gtab_events">
			<p1:GTab.control>
				<p1:Tab widgetName="composite_3">
					<p1:GGroup bounds="14, 14, 501, 245" manifestObj="true" text="Protocol-Specific Events" widgetName="ggroup_protocol_events">
						<p1:GCheck bounds="14, 22, 228, 16" manifestObj="true" text="Collision detection" widgetName="gcheck_collision_detection_event" description="On selecting this option, the collision detection event is enabled and indicates that the transmitted value (DOUT0) does not match with the input value of the DX1 input stage at the sample point of a bit. " toolTipText="Enables detection of collision detection in half duplex modes."/>
						<p1:GCheck bounds="14, 118, 228, 16" manifestObj="true" text="Receiver noise detection" widgetName="gcheck_receiver_noise_detection_event" description="On selecting this option, the receiver noise detection event is enabled and indicates that the input value at the sample point of a bit and at the two time quanta before are not identical. " toolTipText="Indicates bus noise when the samples at the sample point are not same."/>
						<p1:GCheck bounds="14, 54, 228, 16" manifestObj="true" text="Transmitter/receiver frame finished" widgetName="gcheck_frame_finished_event" description="On selecting this option, the transmitter frame finished event is enabled and indicates that the transmitter has completely finished a frame." toolTipText="Indicates if a complete frame of data is transmitted or received"/>
						<p1:GCheck bounds="14, 150, 228, 16" manifestObj="true" text="Format error" widgetName="gcheck_format_error_event" description="On selecting this option, the format error event is enabled and indicates that the bit value of the stop bit(s) sampled is 0 instead of the correct level of 1." toolTipText="Indicates format error if the received frame or transmitted frame is not complying with the&#13;&#10;configuration."/>
						<p1:GCheck bounds="14, 86, 228, 16" manifestObj="true" text="Synchronization break detection" widgetName="gcheck_synchronization_break_detection_event" description="On selecting this option, the synchronization break detection event is enabled and indicates that a synchronization break symbol has been received (LIN networks)." toolTipText="Used in LIN mode for detecting start of frame. "/>
						<p1:GCheck bounds="14, 182, 208, 16" description="On selecting this option, the baud rate generator event is enabled and indicates that the capture mode timer reached its maximum value." manifestObj="true" text="Baudrate generator event" widgetName="gcheck_baud_rate_event" toolTipText="Indicates if the capture timer used for baudrate detection overflowed."/>
						<p1:GCheck text="Data lost" manifestObj="true" widgetName="gcheck_datalost" bounds="14, 213, 109, 16" description="Receive data lost event. Event is generated when the receive buffer is full and a new data is received."/>
					</p1:GGroup>
				</p1:Tab>
			</p1:GTab.control>
		</p1:GTab>
		<p1:GTab text="FIFO" visible="true" enabled="true" manifestObj="true" widgetName="gtab_fifo">
			<p1:GTab.control>
				<p1:Tab widgetName="composite_4" location="4, -102">
					<p1:GGroup bounds="14, 16, 501, 88" manifestObj="true" text="Transmit FIFO Buffer Configuration" widgetName="ggroup_tx_fifo_buffer_conf">
						<p1:GLabel bounds="14, 54, 115, 15" manifestObj="true" text="Tx FIFO data pointer:" widgetName="glabel_tx_fifo_data_pointer"/>
						<p1:GLabel bounds="14, 24, 141, 15" manifestObj="true" text="No. of FIFO buffer entries:" widgetName="glabel_number_tx_fifo_entries" toolTipText="Bit field TBCTR.SIZE"/>
						<p1:GCombo bounds="158, 21, 51, 21" description="Configure the desired transmit FIFO buffer size.  A FIFO with a size of 64 words is shared between two channels of a USIC module.&#13;&#10;The CONFIG_UART APP uses one such channels for communication. This share of the FIFO buffer is further shared between the transmit and receive functionalities. The size configured in this box will be reserved for the transmit FIFO.&lt;br&gt;&#13;&#10;Note: The DAVE IDE might display an error message if the desired FIFO size could not be allocated.This could be because of another channel or receive functionality using a higher FIFO size.&lt;br&gt;&#13;&#10;&lt;ul&gt;&#13;&#10;&lt;li&gt;0:  The transmit FIFO is disabled.&lt;/li&gt;&#13;&#10;&lt;li&gt;2: 2 words of the FIFO will be reserved for the CONFIG_UART APP transmit function.&lt;/li&gt;&#13;&#10;&lt;li&gt;4: 4 words of the FIFO will be reserved for the CONFIG_UART APP transmit function.&lt;/li&gt;&#13;&#10;&lt;li&gt;8: 8 words of the FIFO will be reserved for the CONFIG_UART APP transmit function.&lt;/li&gt;&#13;&#10;&lt;li&gt;16: 16 words of the FIFO will be reserved for the CONFIG_UART APP transmit function.&lt;/li&gt;&#13;&#10;&lt;li&gt;32: 32 words of the FIFO will be reserved for the CONFIG_UART APP transmit function.&lt;/li&gt;&#13;&#10;&lt;li&gt;64: The entire FIFO of the USIC module will be reserved for the CONFIG_UART APP transmit function.&lt;/li&gt;&#13;&#10;&lt;/ul&gt;" mandatory="(com.ifx.davex.ui.controls.util.AppUiConstants).FALSE" manifestObj="true" options="0&#13;&#10;2&#13;&#10;4&#13;&#10;8&#13;&#10;16&#13;&#10;32&#13;&#10;64" value="0" widgetName="gcombo_number_tx_fifo_entries" toolTipText="Bit field TBCTR.SIZE&#13;&#10;Should not exceed 64 including the receive FIFO and the other channel of USIC &#13;&#10;from the same module"/>
						<p1:GInteger bounds="158, 50, 51, 23" description="This field indicates the start value of the transmit buffer pointers when assigning the FIFO entries to the transmit FIFO buffer. " enabled="false" format="(com.ifx.davex.ui.controls.util.AppUiConstants).DEC" mandatory="(com.ifx.davex.ui.controls.util.AppUiConstants).FALSE" manifestObj="true" maxValue="64" minValue="0" value="0" widgetName="ginteger_tx_fifo_data_pointer" toolTipText="Bit field TBCTR.DPTR"/>
					</p1:GGroup>
					<p1:GGroup bounds="14, 115, 501, 88" manifestObj="true" text="Receive FIFO Buffer Configuration" widgetName="ggroup_rx_fifo_buffer_conf">
						<p1:GLabel bounds="14, 54, 115, 15" manifestObj="true" text="Rx FIFO data pointer:" widgetName="glabel_rx_fifo_data_pointer" toolTipText="Bit field RBCTR.DPTR"/>
						<p1:GLabel bounds="14, 24, 140, 15" manifestObj="true" text="No. of FIFO buffer entries:" widgetName="glabel_number_rx_fifo_entries" toolTipText="Bit field RBCTR.SIZE"/>
						<p1:GCombo bounds="158, 21, 51, 21" description="Configure the desired receive FIFO buffer size.  A FIFO with a size of 64 words is shared between two channels of a USIC module.&#13;&#10;The CONFIG_UART APP uses one such channels for communication. This share of the FIFO buffer is further shared between the transmit and receive functionalities. The size configured in this box will be reserved for the receive FIFO.&lt;br&gt;&#13;&#10;Note: The DAVE IDE might display an error message if the desired FIFO size could not be allocated.This could be because of another channel or receive functionality using a higher FIFO size.&lt;br&gt;&#13;&#10;&lt;ul&gt;&#13;&#10;&lt;li&gt;0:  The receive FIFO is disabled.&lt;/li&gt;&#13;&#10;&lt;li&gt;2:  2 words of the FIFO will be reserved for the CONFIG_UART APP receive function.&lt;/li&gt;&#13;&#10;&lt;li&gt;4: 4 words of the FIFO will be reserved for the CONFIG_UART APP receive function.&lt;/li&gt;&#13;&#10;&lt;li&gt;8: 8 words of the FIFO will be reserved for the CONFIG_UART APP receive function.&lt;/li&gt;&#13;&#10;&lt;li&gt;16: 16 words of the FIFO will be reserved for the CONFIG_UART APP receive function.&lt;/li&gt;&#13;&#10;&lt;li&gt;32: 32 words of the FIFO will be reserved for the CONFIG_UART APP receive function.&lt;/li&gt;&#13;&#10;&lt;li&gt;64: The entire FIFO of the USIC module will be reserved for the CONFIG_UART APP receive function.&lt;/li&gt;&#13;&#10;&lt;/ul&gt;" mandatory="(com.ifx.davex.ui.controls.util.AppUiConstants).FALSE" manifestObj="true" options="0&#13;&#10;2&#13;&#10;4&#13;&#10;8&#13;&#10;16&#13;&#10;32&#13;&#10;64" value="0" widgetName="gcombo_number_rx_fifo_entries" toolTipText="Bit field RBCTR.SIZE&#13;&#10;Should not exceed 64 including the transmit FIFO and the other channel of USIC &#13;&#10;from the same module"/>
						<p1:GInteger bounds="158, 50, 51, 23" description="This field indicates the start value of the receive buffer pointers when assigning the FIFO entries to the receive FIFO buffer. " enabled="false" format="(com.ifx.davex.ui.controls.util.AppUiConstants).DEC" mandatory="(com.ifx.davex.ui.controls.util.AppUiConstants).FALSE" manifestObj="true" maxValue="64" minValue="0" value="0" widgetName="ginteger_rx_fifo_data_pointer" toolTipText="Bit field RBCTR.DPTR"/>
					</p1:GGroup>
					<p1:GGroup bounds="14, 217, 501, 99" manifestObj="true" text="Transmit FIFO Events Configuration" widgetName="ggroup_tx_fifo_interrupts_conf">
						<p1:GLabel bounds="14, 31, 246, 15" manifestObj="true" text="Limit for the transmit buffer event generation:" widgetName="glabel_limit_for_transmit_events" toolTipText="Bit field TBCTR.LIMIT"/>
						<p1:GInteger bounds="279, 27, 51, 23" description="Define the target filling level of the transmit FIFO buffer that is used for the standard transmit buffer event detection." format="(com.ifx.davex.ui.controls.util.AppUiConstants).DEC" mandatory="(com.ifx.davex.ui.controls.util.AppUiConstants).FALSE" manifestObj="true" maxValue="63" minValue="0" value="0" widgetName="ginteger_limit_for_transmit_events" toolTipText="Bit field TBCTR.LIMIT&#13;&#10;Transmit FIFO filling level, below which the transmit FIFO event should be generated"/>
						<p1:GLabel bounds="14, 55, 449, 35" manifestObj="true" text="Note: the transmit buffer event is triggered when the filling level is falling&#13;&#10;below the limit (TBCTR.LOF = 0)." widgetName="glabel_transmit_limit_for_event"/>
					</p1:GGroup>
					<p1:GGroup bounds="14, 329, 501, 99" manifestObj="true" text="Receive FIFO Events Configuration" widgetName="ggroup_rx_fifo_events_conf">
						<p1:GLabel bounds="14, 31, 263, 15" manifestObj="true" text="Filling level for the receive buffer event detection:" widgetName="glabel_limit_for_receive_events" toolTipText="Bit field RBCTR.LIMIT"/>
						<p1:GInteger bounds="279, 27, 51, 23" description="Define the target filling level of the receive FIFO buffer that is used for the standard receive buffer event detection. In RCI mode (RNM = 1), this field is ignored." format="(com.ifx.davex.ui.controls.util.AppUiConstants).DEC" mandatory="(com.ifx.davex.ui.controls.util.AppUiConstants).FALSE" manifestObj="true" maxValue="63" minValue="0" value="0" widgetName="ginteger_limit_for_receive_events" toolTipText="Bit field RBCTR.LIMIT&#13;&#10;Receive FIFO filling level, above which the receive FIFO event should be generated"/>
						<p1:GLabel bounds="14, 56, 449, 35" manifestObj="true" text="Note: the receive buffer event triggered when the filling level exceeds the &#13;&#10;limit (RBCTR.LOF = 1)." widgetName="glabel_receive_limit_for_event"/>
					</p1:GGroup>
				</p1:Tab>
			</p1:GTab.control>
		</p1:GTab>
	</p1:TabFolder>
</p1:Tab>