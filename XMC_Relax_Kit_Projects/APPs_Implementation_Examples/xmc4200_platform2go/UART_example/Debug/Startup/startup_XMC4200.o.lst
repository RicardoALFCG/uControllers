   1              	# 1 "../Startup/startup_XMC4200.S"
   1              	/**************************************************************************************************
   0              	
   0              	
   0              	
   2              	 * @file     startup_XMC4200.S
   3              	 * @brief    CMSIS Core Device Startup File for Infineon XMC4200 Device Series
   4              	 * @version  V1.1
   5              	 * @date     15 Mai 2020
   6              	 *
   7              	 * @cond
   8              	 **************************************************************************************************
   9              	 * Copyright (c) 2012-2020, Infineon Technologies AG
  10              	 * All rights reserved.                        
  11              	 *                                             
  12              	 * Boost Software License - Version 1.0 - August 17th, 2003
  13              	 * 
  14              	 * Permission is hereby granted, free of charge, to any person or organization
  15              	 * obtaining a copy of the software and accompanying documentation covered by
  16              	 * this license (the "Software") to use, reproduce, display, distribute,
  17              	 * execute, and transmit the Software, and to prepare derivative works of the
  18              	 * Software, and to permit third-parties to whom the Software is furnished to
  19              	 * do so, all subject to the following:
  20              	 * 
  21              	 * The copyright notices in the Software and this entire statement, including
  22              	 * the above license grant, this restriction and the following disclaimer,
  23              	 * must be included in all copies of the Software, in whole or in part, and
  24              	 * all derivative works of the Software, unless such copies or derivative
  25              	 * works are solely in the form of machine-executable object code generated by
  26              	 * a source language processor.
  27              	 * 
  28              	 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  29              	 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  30              	 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
  31              	 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
  32              	 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
  33              	 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
  34              	 * DEALINGS IN THE SOFTWARE.
  35              	 *                                                                              
  36              	 * To improve the quality of the software, users are encouraged to share 
  37              	 * modifications, enhancements or bug fixes with Infineon Technologies AG 
  38              	 * at XMCSupport@infineon.com.
  39              	 **************************************************************************************************
  40              	 *
  41              	 **************************** Change history ********************************
  42              	 * V0.1,Sep, 13, 2012 ES : initial version
  43              	 * V0.2,Oct, 12, 2012 PKB: C++ support
  44              	 * V0.3,Jan, 26, 2013 PKB: Workaround for prefetch bug
  45              	 * V0.4,Jul, 29, 2013 PKB: AAPCS violation in V0.3 fixed
  46              	 * V0.5,Feb, 05, 2014 PKB: Removed redundant alignment code from copy+clear funcs   
  47              	 * V0.6,May, 05, 2014 JFT: Added ram_code section
  48              	 * V0.7,Nov, 25, 2014 JFT: CPU workaround disabled. Single default handler.
  49              	 *                         Removed DAVE3 dependency
  50              	 * V0.8,Jan, 05, 2016 JFT: Fix .reset section attributes
  51              	 * V0.9,March,04,2016 JFT: Fix weak definition of Veneers. 
  52              	 *                         Only relevant for AA, which needs ENABLE_PMU_CM_001_WORKAROUND 
  53              	 * V1.0,June ,01,2016 JFT: Rename ENABLE_CPU_CM_001_WORKAROUND to ENABLE_PMU_CM_001_WORKAROUND
  54              	 *                         Action required: If using AA step, use ENABLE_PMU_CM_001_WORKAROUND inst
  55              	 * V1.1,Mai, 15, 2020 JFT:Added option (ENABLE_OWN_HANDLER) to generate a individual interrupt hand
  56              	 * @endcond 
  57              	 */
  58              	
  59              	/* ===========START : MACRO DEFINITION MACRO DEFINITION ================== */
  60              	 
  61              	.macro Entry Handler
  62              	#if defined(ENABLE_PMU_CM_001_WORKAROUND)
  63              	    .long \Handler\()_Veneer
  64              	#else
  65              	    .long \Handler
  66              	#endif
  67              	.endm
  68              	
  69              	.macro Insert_ExceptionHandler Handler_Func 
  70              	    .weak \Handler_Func
  71              	#if defined(ENABLE_OWN_HANDLER)
  72              	    .thumb_func
  74              	\Handler_Func:
  75              	    b .
  77              	#else
  78              	    .thumb_set \Handler_Func, Default_Handler
  79              	#endif 
  80              	
  81              	#if defined(ENABLE_PMU_CM_001_WORKAROUND)  
  82              	    .weak \Handler_Func\()_Veneer
  84              	\Handler_Func\()_Veneer:
  85              	    push {r0, lr}
  86              	    ldr  r0, =\Handler_Func
  87              	    blx  r0
  88              	    pop  {r0, pc}
  90              	#endif 
  91              	.endm
  92              	
  93              	/* =============END : MACRO DEFINITION MACRO DEFINITION ================== */
  94 0000 00000000 	
  95 0004 00000000 	/* ================== START OF VECTOR TABLE DEFINITION ====================== */
  96              	/* Vector Table - This gets programed into VTOR register by onchip BootROM */
  97 0008 00000000 	    .syntax unified
  98 000c 00000000 	
  99 0010 00000000 	    .section .reset, "a", %progbits
 100 0014 00000000 	    
 101 0018 00000000 		.align 2
 102 001c 00000000 	    .globl  __Vectors
 104 0024 00000000 	__Vectors:
 105 0028 00000000 	    .long   __initial_sp                /* Top of Stack                 */
 106 002c 00000000 	    .long   Reset_Handler               /* Reset Handler                */
 107 0030 00000000 	
 108 0034 00000000 	    Entry   NMI_Handler                 /* NMI Handler                  */
 109 0038 00000000 	    Entry   HardFault_Handler           /* Hard Fault Handler           */
 110 003c 00000000 	    Entry   MemManage_Handler           /* MPU Fault Handler            */
 111              	    Entry   BusFault_Handler            /* Bus Fault Handler            */
 112              	    Entry   UsageFault_Handler          /* Usage Fault Handler          */
 113 0040 00000000 	    .long   0                           /* Reserved                     */
 114 0044 00000000 	    .long   0                           /* Reserved                     */
 115 0048 00000000 	    .long   0                           /* Reserved                     */
 116 004c 00000000 	    .long   0                           /* Reserved                     */
 117 0050 00000000 	    Entry   SVC_Handler                 /* SVCall Handler               */
 118 0054 00000000 	    Entry   DebugMon_Handler            /* Debug Monitor Handler        */
 119 0058 00000000 	    .long   0                           /* Reserved                     */
 120 005c 00000000 	    Entry   PendSV_Handler              /* PendSV Handler               */
 121 0060 00000000 	    Entry   SysTick_Handler             /* SysTick Handler              */
 122 0064 00000000 	
 123 0068 00000000 	    /* Interrupt Handlers for Service Requests (SR) from XMC4200 Peripherals */
 124 006c 00000000 	    Entry   SCU_0_IRQHandler            /* Handler name for SR SCU_0     */
 125 0070 00000000 	    Entry   ERU0_0_IRQHandler           /* Handler name for SR ERU0_0    */
 126 0074 00000000 	    Entry   ERU0_1_IRQHandler           /* Handler name for SR ERU0_1    */
 127 0078 00000000 	    Entry   ERU0_2_IRQHandler           /* Handler name for SR ERU0_2    */
 128 007c 00000000 	    Entry   ERU0_3_IRQHandler           /* Handler name for SR ERU0_3    */ 
 129 0080 00000000 	    Entry   ERU1_0_IRQHandler           /* Handler name for SR ERU1_0    */
 130 0084 00000000 	    Entry   ERU1_1_IRQHandler           /* Handler name for SR ERU1_1    */
 131 0088 00000000 	    Entry   ERU1_2_IRQHandler           /* Handler name for SR ERU1_2    */
 132 008c 00000000 	    Entry   ERU1_3_IRQHandler           /* Handler name for SR ERU1_3    */
 133 0090 00000000 	    .long   0                           /* Not Available                 */
 134 0094 00000000 	    .long   0                           /* Not Available                 */
 135 0098 00000000 	    .long   0                           /* Not Available                 */
 136 009c 00000000 	    Entry   PMU0_0_IRQHandler           /* Handler name for SR PMU0_0    */
 137 00a0 00000000 	    .long   0                           /* Not Available                 */
 138 00a4 00000000 	    Entry   VADC0_C0_0_IRQHandler       /* Handler name for SR VADC0_C0_0  */
 139 00a8 00000000 	    Entry   VADC0_C0_1_IRQHandler       /* Handler name for SR VADC0_C0_1  */
 140 00ac 00000000 	    Entry   VADC0_C0_2_IRQHandler       /* Handler name for SR VADC0_C0_1  */
 141 00b0 00000000 	    Entry   VADC0_C0_3_IRQHandler       /* Handler name for SR VADC0_C0_3  */
 142 00b4 00000000 	    Entry   VADC0_G0_0_IRQHandler       /* Handler name for SR VADC0_G0_0  */
 143 00b8 00000000 	    Entry   VADC0_G0_1_IRQHandler       /* Handler name for SR VADC0_G0_1  */
 144 00bc 00000000 	    Entry   VADC0_G0_2_IRQHandler       /* Handler name for SR VADC0_G0_2  */
 145 00c0 00000000 	    Entry   VADC0_G0_3_IRQHandler       /* Handler name for SR VADC0_G0_3  */
 146 00c4 00000000 	    Entry   VADC0_G1_0_IRQHandler       /* Handler name for SR VADC0_G1_0  */
 147 00c8 00000000 	    Entry   VADC0_G1_1_IRQHandler       /* Handler name for SR VADC0_G1_1  */
 148 00cc 00000000 	    Entry   VADC0_G1_2_IRQHandler       /* Handler name for SR VADC0_G1_2  */
 149 00d0 00000000 	    Entry   VADC0_G1_3_IRQHandler       /* Handler name for SR VADC0_G1_3  */
 150 00d4 00000000 	    .long   0                           /* Not Available                 */
 151 00d8 00000000 	    .long   0                           /* Not Available                 */
 152 00dc 00000000 	    .long   0                           /* Not Available                 */
 153 00e0 00000000 	    .long   0                           /* Not Available                 */
 154 00e4 00000000 	    .long   0                           /* Not Available                 */
 155 00e8 00000000 	    .long   0                           /* Not Available                 */
 156 00ec 00000000 	    .long   0                           /* Not Available                 */
 157 00f0 00000000 	    .long   0                           /* Not Available                 */
 158 00f4 00000000 	    .long   0                           /* Not Available                 */
 159 00f8 00000000 	    .long   0                           /* Not Available                 */
 160 00fc 00000000 	    .long   0                           /* Not Available                 */
 161 0100 00000000 	    .long   0                           /* Not Available                 */
 162 0104 00000000 	    .long   0                           /* Not Available                 */
 163 0108 00000000 	    .long   0                           /* Not Available                 */
 164 010c 00000000 	    .long   0                           /* Not Available                 */
 165 0110 00000000 	    .long   0                           /* Not Available                 */
 166 0114 00000000 	    Entry   DAC0_0_IRQHandler           /* Handler name for SR DAC0_0    */
 167 0118 00000000 	    Entry   DAC0_1_IRQHandler           /* Handler name for SR DAC0_1    */
 168 011c 00000000 	    Entry   CCU40_0_IRQHandler          /* Handler name for SR CCU40_0   */
 169 0120 00000000 	    Entry   CCU40_1_IRQHandler          /* Handler name for SR CCU40_1   */
 170 0124 00000000 	    Entry   CCU40_2_IRQHandler          /* Handler name for SR CCU40_2   */
 171 0128 00000000 	    Entry   CCU40_3_IRQHandler          /* Handler name for SR CCU40_3   */
 172 012c 00000000 	    Entry   CCU41_0_IRQHandler          /* Handler name for SR CCU41_0   */
 173 0130 00000000 	    Entry   CCU41_1_IRQHandler          /* Handler name for SR CCU41_1   */
 174 0134 00000000 	    Entry   CCU41_2_IRQHandler          /* Handler name for SR CCU41_2   */
 175 0138 00000000 	    Entry   CCU41_3_IRQHandler          /* Handler name for SR CCU41_3   */
 176 013c 00000000 	    .long   0                           /* Not Available                 */
 177 0140 00000000 	    .long   0                           /* Not Available                 */
 178 0144 00000000 	    .long   0                           /* Not Available                 */
 179 0148 00000000 	    .long   0                           /* Not Available                 */
 180 014c 00000000 	    .long   0                           /* Not Available                 */
 181 0150 00000000 	    .long   0                           /* Not Available                 */
 182 0154 00000000 	    .long   0                           /* Not Available                 */
 183 0158 00000000 	    .long   0                           /* Not Available                 */
 184 015c 00000000 	    Entry   CCU80_0_IRQHandler          /* Handler name for SR CCU80_0   */
 185 0160 00000000 	    Entry   CCU80_1_IRQHandler          /* Handler name for SR CCU80_1   */
 186 0164 00000000 	    Entry   CCU80_2_IRQHandler          /* Handler name for SR CCU80_2   */
 187 0168 00000000 	    Entry   CCU80_3_IRQHandler          /* Handler name for SR CCU80_3   */
 188 016c 00000000 	    .long   0                           /* Not Available                 */
 189 0170 00000000 	    .long   0                           /* Not Available                 */
 190 0174 00000000 	    .long   0                           /* Not Available                 */
 191 0178 00000000 	    .long   0                           /* Not Available                 */
 192 017c 00000000 	    Entry   POSIF0_0_IRQHandler         /* Handler name for SR POSIF0_0  */
 193 0180 00000000 	    Entry   POSIF0_1_IRQHandler         /* Handler name for SR POSIF0_1  */
 194 0184 00000000 	    .long   0                           /* Not Available                 */
 195 0188 00000000 	    .long   0                           /* Not Available                 */
 196 018c 00000000 	    Entry   HRPWM_0_IRQHandler          /* Handler name for SR HRPWM_0   */
 197 0190 00000000 	    Entry   HRPWM_1_IRQHandler          /* Handler name for SR HRPWM_1   */
 198 0194 00000000 	    Entry   HRPWM_2_IRQHandler          /* Handler name for SR HRPWM_2   */
 199 0198 00000000 	    Entry   HRPWM_3_IRQHandler          /* Handler name for SR HRPWM_3   */
 200 019c 00000000 	    Entry   CAN0_0_IRQHandler           /* Handler name for SR CAN0_0    */
 201 01a0 00000000 	    Entry   CAN0_1_IRQHandler           /* Handler name for SR CAN0_1    */
 202 01a4 00000000 	    Entry   CAN0_2_IRQHandler           /* Handler name for SR CAN0_2    */
 203 01a8 00000000 	    Entry   CAN0_3_IRQHandler           /* Handler name for SR CAN0_3    */
 204 01ac 00000000 	    Entry   CAN0_4_IRQHandler           /* Handler name for SR CAN0_4    */
 205 01b0 00000000 	    Entry   CAN0_5_IRQHandler           /* Handler name for SR CAN0_5    */
 206 01b4 00000000 	    Entry   CAN0_6_IRQHandler           /* Handler name for SR CAN0_6    */
 207 01b8 00000000 	    Entry   CAN0_7_IRQHandler           /* Handler name for SR CAN0_7    */
 208 01bc 00000000 	    Entry   USIC0_0_IRQHandler          /* Handler name for SR USIC0_0   */
 209 01c0 00000000 	    Entry   USIC0_1_IRQHandler          /* Handler name for SR USIC0_1   */
 210 01c4 00000000 	    Entry   USIC0_2_IRQHandler          /* Handler name for SR USIC0_2   */
 211 01c8 00000000 	    Entry   USIC0_3_IRQHandler          /* Handler name for SR USIC0_3   */
 212 01cc 00000000 	    Entry   USIC0_4_IRQHandler          /* Handler name for SR USIC0_4   */
 213 01d0 00000000 	    Entry   USIC0_5_IRQHandler          /* Handler name for SR USIC0_5   */
 214 01d4 00000000 	    Entry   USIC1_0_IRQHandler          /* Handler name for SR USIC1_0   */
 215 01d8 00000000 	    Entry   USIC1_1_IRQHandler          /* Handler name for SR USIC1_1   */
 216 01dc 00000000 	    Entry   USIC1_2_IRQHandler          /* Handler name for SR USIC1_2   */
 217 01e0 00000000 	    Entry   USIC1_3_IRQHandler          /* Handler name for SR USIC1_3   */
 218 01e4 00000000 	    Entry   USIC1_4_IRQHandler          /* Handler name for SR USIC1_4   */
 219 01e8 00000000 	    Entry   USIC1_5_IRQHandler          /* Handler name for SR USIC1_5   */
 220 01ec 00000000 	    .long   0                           /* Not Available                 */
 221 01f0 00000000 	    .long   0                           /* Not Available                 */
 222 01f4 00000000 	    .long   0                           /* Not Available                 */
 223 01f8 00000000 	    .long   0                           /* Not Available                 */
 224 01fc 00000000 	    .long   0                           /* Not Available                 */
 225              	    .long   0                           /* Not Available                 */
 226              	    Entry   LEDTS0_0_IRQHandler         /* Handler name for SR LEDTS0_0  */
 227              	    .long   0                           /* Not Available                 */
 228              	    Entry   FCE0_0_IRQHandler           /* Handler name for SR FCE0_0    */
 229              	    Entry   GPDMA0_0_IRQHandler         /* Handler name for SR GPDMA0_0  */
 230              	    .long   0                           /* Not Available                 */
 231              	    Entry   USB0_0_IRQHandler           /* Handler name for SR USB0_0    */
 232              	    .long   0                           /* Not Available                 */
 233              	    .long   0                           /* Not Available                 */
 234              	    .long   0                           /* Not Available                 */
 235              	    .long   0                           /* Not Available                 */
 236              	
 238              	/* ================== END OF VECTOR TABLE DEFINITION ======================= */
 239 0200 DFF86CD0 	
 240              	/* ================== START OF VECTOR ROUTINES ============================= */
 241              	
 242 0204 1B48     		.align	1
 243 0206 8047     	    .thumb
 244              	
 245              	/* Reset Handler */
 246              	    .thumb_func
 247              	    .globl  Reset_Handler
 249              	Reset_Handler:
 250              	    ldr sp,=__initial_sp
 251              	
 252              	#ifndef __SKIP_SYSTEM_INIT
 253              	    ldr  r0, =SystemInit
 254              	    blx  r0
 255              	#endif
 256              	    
 257              	/* Initialize data
 258              	 *
 259              	 *  Between symbol address __copy_table_start__ and __copy_table_end__,
 260              	 *  there are array of triplets, each of which specify:
 261              	 *    offset 0: LMA of start of a section to copy from
 262              	 *    offset 4: VMA of start of a section to copy to
 263              	 *    offset 8: size of the section to copy. Must be multiply of 4
 264              	 *
 265              	 *  All addresses must be aligned to 4 bytes boundary.
 266              	 */
 267 0208 1B4C     		ldr	r4, =__copy_table_start__
 268 020a 1C4D     		ldr	r5, =__copy_table_end__
 269              	
 270              	.L_loop0:
 271 020c AC42     		cmp	r4, r5
 272 020e 09DA     		bge	.L_loop0_done
 273 0210 2168     		ldr	r1, [r4]
 274 0212 6268     		ldr	r2, [r4, #4]
 275 0214 A368     		ldr	r3, [r4, #8]
 276              	
 277              	.L_loop0_0:
 278 0216 043B     		subs	r3, #4
 279 0218 A2BF     		ittt	ge
 280 021a C858     		ldrge	r0, [r1, r3]
 281 021c D050     		strge	r0, [r2, r3]
 282 021e FAE7     		bge	.L_loop0_0
 283              	
 284 0220 0C34     		adds	r4, #12
 285 0222 F3E7     		b	.L_loop0
 286              	
 287              	.L_loop0_done:
 288              	
 289              	/* Zero initialized data 
 290              	 *  Between symbol address __zero_table_start__ and __zero_table_end__,
 291              	 *  there are array of tuples specifying:
 292              	 *    offset 0: Start of a BSS section
 293              	 *    offset 4: Size of this BSS section. Must be multiply of 4
 294              	 *
 295              	 *  Define __SKIP_BSS_CLEAR to disable zeroing uninitialzed data in startup.
 296              	 */    
 297              	#ifndef __SKIP_BSS_CLEAR
 298 0224 164B     		ldr	r3, =__zero_table_start__
 299 0226 174C     		ldr	r4, =__zero_table_end__
 300              	
 301              	.L_loop2:
 302 0228 A342     		cmp	r3, r4
 303 022a 08DA     		bge	.L_loop2_done
 304 022c 1968     		ldr	r1, [r3]
 305 022e 5A68     		ldr	r2, [r3, #4]
 306 0230 0020     		movs	r0, 0
 307              	
 308              	.L_loop2_0:
 309 0232 043A     		subs	r2, #4
 310 0234 A4BF     		itt	ge
 311 0236 8850     		strge	r0, [r1, r2]
 312 0238 FBE7     		bge	.L_loop2_0
 313              	
 314 023a 0833     		adds	r3, #8
 315 023c F4E7     		b	.L_loop2
 316              	.L_loop2_done:    
 317              	#endif /* __SKIP_BSS_CLEAR */
 318              	   
 319              	#ifndef __SKIP_LIBC_INIT_ARRAY
 320 023e 1248     	    ldr  r0, =__libc_init_array
 321 0240 8047     	    blx  r0
 322              	#endif
 323              	
 324 0242 1248     	    ldr  r0, =main
 325 0244 8047     	    blx  r0
 326              	
 327 0246 0000     	.align 2
 328              	__copy_table_start__:
 329 0248 00000000 	    .long __data_load, __data_start, __data_size
 329      00000000 
 329      00000000 
 330 0254 00000000 	    .long __ram_code_load, __ram_code_start, __ram_code_size
 330      00000000 
 330      00000000 
 331              	__copy_table_end__:
 332              	
 333              	__zero_table_start__:
 334 0260 00000000 	    .long __bss_start, __bss_size
 334      00000000 
 335 0268 00000000 	    .long USB_RAM_start, USB_RAM_size
 335      00000000 
 336              	__zero_table_end__:
 337              	    
 338 0270 00000000 		.pool
 338      00000000 
 338      48020000 
 338      60020000 
 338      60020000 
 340              	
 341              	/* ======================================================================== */
 342              	/* ========== START OF EXCEPTION HANDLER DEFINITION ======================== */
 343              	
 344              	/* Default exception Handlers - Users may override this default functionality by
 345              	   defining handlers of the same name in their C code */
 346              	
 347              		.align	1
 348              	    .thumb_func
 349              	    .weak Default_Handler
 351              	Default_Handler:
 352 0290 FEE7     	    b .
 354              	
 355              	    Insert_ExceptionHandler NMI_Handler
 356              	    Insert_ExceptionHandler HardFault_Handler
 357              	    Insert_ExceptionHandler MemManage_Handler
 358              	    Insert_ExceptionHandler BusFault_Handler
 359              	    Insert_ExceptionHandler UsageFault_Handler
 360              	    Insert_ExceptionHandler SVC_Handler
 361              	    Insert_ExceptionHandler DebugMon_Handler
 362              	    Insert_ExceptionHandler PendSV_Handler
 363              	    Insert_ExceptionHandler SysTick_Handler
 364              	    
 365              	    Insert_ExceptionHandler SCU_0_IRQHandler
 366              	    Insert_ExceptionHandler ERU0_0_IRQHandler
 367              	    Insert_ExceptionHandler ERU0_1_IRQHandler
 368              	    Insert_ExceptionHandler ERU0_2_IRQHandler
 369              	    Insert_ExceptionHandler ERU0_3_IRQHandler
 370              	    Insert_ExceptionHandler ERU1_0_IRQHandler
 371              	    Insert_ExceptionHandler ERU1_1_IRQHandler
 372              	    Insert_ExceptionHandler ERU1_2_IRQHandler
 373              	    Insert_ExceptionHandler ERU1_3_IRQHandler
 374              	    Insert_ExceptionHandler PMU0_0_IRQHandler
 375              	    Insert_ExceptionHandler VADC0_C0_0_IRQHandler
 376              	    Insert_ExceptionHandler VADC0_C0_1_IRQHandler
 377              	    Insert_ExceptionHandler VADC0_C0_2_IRQHandler
 378              	    Insert_ExceptionHandler VADC0_C0_3_IRQHandler
 379              	    Insert_ExceptionHandler VADC0_G0_0_IRQHandler
 380              	    Insert_ExceptionHandler VADC0_G0_1_IRQHandler
 381              	    Insert_ExceptionHandler VADC0_G0_2_IRQHandler
 382              	    Insert_ExceptionHandler VADC0_G0_3_IRQHandler
 383              	    Insert_ExceptionHandler VADC0_G1_0_IRQHandler
 384              	    Insert_ExceptionHandler VADC0_G1_1_IRQHandler
 385              	    Insert_ExceptionHandler VADC0_G1_2_IRQHandler
 386              	    Insert_ExceptionHandler VADC0_G1_3_IRQHandler
 387              	    Insert_ExceptionHandler DAC0_0_IRQHandler
 388              	    Insert_ExceptionHandler DAC0_1_IRQHandler
 389              	    Insert_ExceptionHandler CCU40_0_IRQHandler
 390              	    Insert_ExceptionHandler CCU40_1_IRQHandler
 391              	    Insert_ExceptionHandler CCU40_2_IRQHandler
 392              	    Insert_ExceptionHandler CCU40_3_IRQHandler
 393              	    Insert_ExceptionHandler CCU41_0_IRQHandler
 394              	    Insert_ExceptionHandler CCU41_1_IRQHandler
 395              	    Insert_ExceptionHandler CCU41_2_IRQHandler
 396              	    Insert_ExceptionHandler CCU41_3_IRQHandler
 397              	    Insert_ExceptionHandler CCU80_0_IRQHandler
 398              	    Insert_ExceptionHandler CCU80_1_IRQHandler
 399              	    Insert_ExceptionHandler CCU80_2_IRQHandler
 400              	    Insert_ExceptionHandler CCU80_3_IRQHandler
 401              	    Insert_ExceptionHandler POSIF0_0_IRQHandler
 402              	    Insert_ExceptionHandler POSIF0_1_IRQHandler
 403              	    Insert_ExceptionHandler HRPWM_0_IRQHandler
 404              	    Insert_ExceptionHandler HRPWM_1_IRQHandler
 405              	    Insert_ExceptionHandler HRPWM_2_IRQHandler
 406              	    Insert_ExceptionHandler HRPWM_3_IRQHandler
 407              	    Insert_ExceptionHandler CAN0_0_IRQHandler
 408              	    Insert_ExceptionHandler CAN0_1_IRQHandler
 409              	    Insert_ExceptionHandler CAN0_2_IRQHandler
 410              	    Insert_ExceptionHandler CAN0_3_IRQHandler
 411              	    Insert_ExceptionHandler CAN0_4_IRQHandler
 412              	    Insert_ExceptionHandler CAN0_5_IRQHandler
 413              	    Insert_ExceptionHandler CAN0_6_IRQHandler
 414              	    Insert_ExceptionHandler CAN0_7_IRQHandler
 415              	    Insert_ExceptionHandler USIC0_0_IRQHandler
 416              	    Insert_ExceptionHandler USIC0_1_IRQHandler
 417              	    Insert_ExceptionHandler USIC0_2_IRQHandler
 418              	    Insert_ExceptionHandler USIC0_3_IRQHandler
 419              	    Insert_ExceptionHandler USIC0_4_IRQHandler
 420              	    Insert_ExceptionHandler USIC0_5_IRQHandler
 421              	    Insert_ExceptionHandler USIC1_0_IRQHandler
 422              	    Insert_ExceptionHandler USIC1_1_IRQHandler
 423              	    Insert_ExceptionHandler USIC1_2_IRQHandler
 424              	    Insert_ExceptionHandler USIC1_3_IRQHandler
 425              	    Insert_ExceptionHandler USIC1_4_IRQHandler
 426              	    Insert_ExceptionHandler USIC1_5_IRQHandler
 427              	    Insert_ExceptionHandler LEDTS0_0_IRQHandler
 428              	    Insert_ExceptionHandler FCE0_0_IRQHandler
 429              	    Insert_ExceptionHandler GPDMA0_0_IRQHandler
 430              	    Insert_ExceptionHandler USB0_0_IRQHandler
 431              	     
 432              	/* ============= END OF INTERRUPT HANDLER DEFINITION ====================== */
 433              	
 434 0292 0000     	    .end
DEFINED SYMBOLS
../Startup/startup_XMC4200.S:90     .reset:00000000 $d
../Startup/startup_XMC4200.S:93     .reset:00000000 __Vectors
../Startup/startup_XMC4200.S:238    .reset:00000200 Reset_Handler
../Startup/startup_XMC4200.S:351    .reset:00000290 NMI_Handler
../Startup/startup_XMC4200.S:351    .reset:00000290 HardFault_Handler
../Startup/startup_XMC4200.S:351    .reset:00000290 MemManage_Handler
../Startup/startup_XMC4200.S:351    .reset:00000290 BusFault_Handler
../Startup/startup_XMC4200.S:351    .reset:00000290 UsageFault_Handler
../Startup/startup_XMC4200.S:351    .reset:00000290 SVC_Handler
../Startup/startup_XMC4200.S:351    .reset:00000290 DebugMon_Handler
../Startup/startup_XMC4200.S:351    .reset:00000290 PendSV_Handler
../Startup/startup_XMC4200.S:351    .reset:00000290 SysTick_Handler
../Startup/startup_XMC4200.S:351    .reset:00000290 SCU_0_IRQHandler
../Startup/startup_XMC4200.S:351    .reset:00000290 ERU0_0_IRQHandler
../Startup/startup_XMC4200.S:351    .reset:00000290 ERU0_1_IRQHandler
../Startup/startup_XMC4200.S:351    .reset:00000290 ERU0_2_IRQHandler
../Startup/startup_XMC4200.S:351    .reset:00000290 ERU0_3_IRQHandler
../Startup/startup_XMC4200.S:351    .reset:00000290 ERU1_0_IRQHandler
../Startup/startup_XMC4200.S:351    .reset:00000290 ERU1_1_IRQHandler
../Startup/startup_XMC4200.S:351    .reset:00000290 ERU1_2_IRQHandler
../Startup/startup_XMC4200.S:351    .reset:00000290 ERU1_3_IRQHandler
../Startup/startup_XMC4200.S:351    .reset:00000290 PMU0_0_IRQHandler
../Startup/startup_XMC4200.S:351    .reset:00000290 VADC0_C0_0_IRQHandler
../Startup/startup_XMC4200.S:351    .reset:00000290 VADC0_C0_1_IRQHandler
../Startup/startup_XMC4200.S:351    .reset:00000290 VADC0_C0_2_IRQHandler
../Startup/startup_XMC4200.S:351    .reset:00000290 VADC0_C0_3_IRQHandler
../Startup/startup_XMC4200.S:351    .reset:00000290 VADC0_G0_0_IRQHandler
../Startup/startup_XMC4200.S:351    .reset:00000290 VADC0_G0_1_IRQHandler
../Startup/startup_XMC4200.S:351    .reset:00000290 VADC0_G0_2_IRQHandler
../Startup/startup_XMC4200.S:351    .reset:00000290 VADC0_G0_3_IRQHandler
../Startup/startup_XMC4200.S:351    .reset:00000290 VADC0_G1_0_IRQHandler
../Startup/startup_XMC4200.S:351    .reset:00000290 VADC0_G1_1_IRQHandler
../Startup/startup_XMC4200.S:351    .reset:00000290 VADC0_G1_2_IRQHandler
../Startup/startup_XMC4200.S:351    .reset:00000290 VADC0_G1_3_IRQHandler
../Startup/startup_XMC4200.S:351    .reset:00000290 DAC0_0_IRQHandler
../Startup/startup_XMC4200.S:351    .reset:00000290 DAC0_1_IRQHandler
../Startup/startup_XMC4200.S:351    .reset:00000290 CCU40_0_IRQHandler
../Startup/startup_XMC4200.S:351    .reset:00000290 CCU40_1_IRQHandler
../Startup/startup_XMC4200.S:351    .reset:00000290 CCU40_2_IRQHandler
../Startup/startup_XMC4200.S:351    .reset:00000290 CCU40_3_IRQHandler
../Startup/startup_XMC4200.S:351    .reset:00000290 CCU41_0_IRQHandler
../Startup/startup_XMC4200.S:351    .reset:00000290 CCU41_1_IRQHandler
../Startup/startup_XMC4200.S:351    .reset:00000290 CCU41_2_IRQHandler
../Startup/startup_XMC4200.S:351    .reset:00000290 CCU41_3_IRQHandler
../Startup/startup_XMC4200.S:351    .reset:00000290 CCU80_0_IRQHandler
../Startup/startup_XMC4200.S:351    .reset:00000290 CCU80_1_IRQHandler
../Startup/startup_XMC4200.S:351    .reset:00000290 CCU80_2_IRQHandler
../Startup/startup_XMC4200.S:351    .reset:00000290 CCU80_3_IRQHandler
../Startup/startup_XMC4200.S:351    .reset:00000290 POSIF0_0_IRQHandler
../Startup/startup_XMC4200.S:351    .reset:00000290 POSIF0_1_IRQHandler
../Startup/startup_XMC4200.S:351    .reset:00000290 HRPWM_0_IRQHandler
../Startup/startup_XMC4200.S:351    .reset:00000290 HRPWM_1_IRQHandler
../Startup/startup_XMC4200.S:351    .reset:00000290 HRPWM_2_IRQHandler
../Startup/startup_XMC4200.S:351    .reset:00000290 HRPWM_3_IRQHandler
../Startup/startup_XMC4200.S:351    .reset:00000290 CAN0_0_IRQHandler
../Startup/startup_XMC4200.S:351    .reset:00000290 CAN0_1_IRQHandler
../Startup/startup_XMC4200.S:351    .reset:00000290 CAN0_2_IRQHandler
../Startup/startup_XMC4200.S:351    .reset:00000290 CAN0_3_IRQHandler
../Startup/startup_XMC4200.S:351    .reset:00000290 CAN0_4_IRQHandler
../Startup/startup_XMC4200.S:351    .reset:00000290 CAN0_5_IRQHandler
../Startup/startup_XMC4200.S:351    .reset:00000290 CAN0_6_IRQHandler
../Startup/startup_XMC4200.S:351    .reset:00000290 CAN0_7_IRQHandler
../Startup/startup_XMC4200.S:351    .reset:00000290 USIC0_0_IRQHandler
../Startup/startup_XMC4200.S:351    .reset:00000290 USIC0_1_IRQHandler
../Startup/startup_XMC4200.S:351    .reset:00000290 USIC0_2_IRQHandler
../Startup/startup_XMC4200.S:351    .reset:00000290 USIC0_3_IRQHandler
../Startup/startup_XMC4200.S:351    .reset:00000290 USIC0_4_IRQHandler
../Startup/startup_XMC4200.S:351    .reset:00000290 USIC0_5_IRQHandler
../Startup/startup_XMC4200.S:351    .reset:00000290 USIC1_0_IRQHandler
../Startup/startup_XMC4200.S:351    .reset:00000290 USIC1_1_IRQHandler
../Startup/startup_XMC4200.S:351    .reset:00000290 USIC1_2_IRQHandler
../Startup/startup_XMC4200.S:351    .reset:00000290 USIC1_3_IRQHandler
../Startup/startup_XMC4200.S:351    .reset:00000290 USIC1_4_IRQHandler
../Startup/startup_XMC4200.S:351    .reset:00000290 USIC1_5_IRQHandler
../Startup/startup_XMC4200.S:351    .reset:00000290 LEDTS0_0_IRQHandler
../Startup/startup_XMC4200.S:351    .reset:00000290 FCE0_0_IRQHandler
../Startup/startup_XMC4200.S:351    .reset:00000290 GPDMA0_0_IRQHandler
../Startup/startup_XMC4200.S:351    .reset:00000290 USB0_0_IRQHandler
../Startup/startup_XMC4200.S:239    .reset:00000200 $t
../Startup/startup_XMC4200.S:328    .reset:00000248 __copy_table_start__
../Startup/startup_XMC4200.S:331    .reset:00000260 __copy_table_end__
../Startup/startup_XMC4200.S:333    .reset:00000260 __zero_table_start__
../Startup/startup_XMC4200.S:336    .reset:00000270 __zero_table_end__
../Startup/startup_XMC4200.S:327    .reset:00000246 $d
../Startup/startup_XMC4200.S:351    .reset:00000290 Default_Handler
../Startup/startup_XMC4200.S:352    .reset:00000290 $t
                   .debug_aranges:0000000c $d
../Startup/startup_XMC4200.S:434    .reset:00000292 $d

UNDEFINED SYMBOLS
__initial_sp
SystemInit
__libc_init_array
main
__data_load
__data_start
__data_size
__ram_code_load
__ram_code_start
__ram_code_size
__bss_start
__bss_size
USB_RAM_start
USB_RAM_size
