   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "xmc4_scu.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.XMC_SCU_CLOCK_GetUsbClockSource,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	XMC_SCU_CLOCK_GetUsbClockSource:
  25              	.LFB138:
  26              	 .file 1 "C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc/xmc4_scu.h"
   1:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**
   2:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @file xmc4_scu.h
   3:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @date 2019-02-18
   4:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
   5:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @cond
   6:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *****************************************************************************
   7:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMClib v2.2.0 - XMC Peripheral Driver Library
   8:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
   9:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  10:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * All rights reserved.
  11:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
  12:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Boost Software License - Version 1.0 - August 17th, 2003
  13:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
  14:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Permission is hereby granted, free of charge, to any person or organization
  15:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * obtaining a copy of the software and accompanying documentation covered by
  16:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * this license (the "Software") to use, reproduce, display, distribute,
  17:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * execute, and transmit the Software, and to prepare derivative works of the
  18:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Software, and to permit third-parties to whom the Software is furnished to
  19:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * do so, all subject to the following:
  20:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
  21:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * The copyright notices in the Software and this entire statement, including
  22:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * the above license grant, this restriction and the following disclaimer,
  23:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * must be included in all copies of the Software, in whole or in part, and
  24:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * all derivative works of the Software, unless such copies or derivative
  25:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * works are solely in the form of machine-executable object code generated by
  26:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * a source language processor.
  27:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
  28:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  29:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  30:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
  31:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
  32:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
  33:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
  34:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * DEALINGS IN THE SOFTWARE.
  35:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
  36:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * To improve the quality of the software, users are encouraged to share
  37:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * modifications, enhancements or bug fixes with Infineon Technologies AG
  38:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * at XMCSupport@infineon.com.
  39:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *****************************************************************************
  40:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
  41:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Change History
  42:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * --------------
  43:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
  44:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * 2015-06-20:
  45:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Initial version
  46:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Documentation improved
  47:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
  48:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * 2015-11-30:
  49:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Documentation improved
  50:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
  51:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * 2016-03-09:
  52:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Added XMC_SCU_POWER_EnableMonitor/XMC_SCU_POWER_DisableMonitor
  53:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *             XMC_SCU_POWER_GetEVRStatus, XMC_SCU_POWER_GetEVR13Voltage, XMC_SCU_POWER_GetEVR33Vol
  54:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Added XMC_SCU_HIB_GetHibernateControlStatus,
  55:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *             XMC_SCU_HIB_GetEventStatus, XMC_SCU_HIB_ClearEventStatus, XMC_SCU_HIB_TriggerEvent,
  56:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *             XMC_SCU_HIB_EnableEvent, XMC_SCU_HIB_DisableEvent
  57:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Added XMC_SCU_HIB_SetWakeupTriggerInput, XMC_SCU_HIB_SetPinMode, XMC_SCU_HIB_SetOutputPinL
  58:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *             XMC_SCU_HIB_SetInput0, XMC_SCU_HIB_EnterHibernateState
  59:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
  60:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * 2016-04-15:
  61:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Fixed naming of XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG peripheral clock.
  62:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *       Added enable and disable for peripheral clocks
  63:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
  64:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * 2016-05-19:
  65:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Added XMC_SCU_CLOCK_IsLowPowerOscillatorStable() and XMC_SCU_CLOCK_IsHighPerformanceOscill
  66:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Added XMC_SCU_POWER_WaitForInterrupt() and XMC_SCU_POWER_WaitForEvent()
  67:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Added XMC_SCU_CLOCK_EnableLowPowerOscillatorGeneralPurposeInput(),
  68:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *             XMC_SCU_CLOCK_DisableLowPowerOscillatorGeneralPurposeInput(),
  69:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *             XMC_SCU_CLOCK_GetLowPowerOscillatorGeneralPurposeInputStatus()
  70:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Added XMC_SCU_CLOCK_EnableHighPerformanceOscillatorGeneralPurposeInput(),
  71:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *             XMC_SCU_CLOCK_DisableHighPerformanceOscillatorGeneralPurposeInput(),
  72:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *             XMC_SCU_CLOCK_GetHighPerformanceOscillatorGeneralPurposeInputStatus()
  73:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Removed XMC_SCU_INTERRUPT_EVENT_OSCULSTAT_UPDATED, XMC_SCU_INTERRUPT_EVENT_HDSTAT_UPDATED
  74:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
  75:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * 2016-06-14:
  76:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Added XMC_SCU_HIB_IsWakeupEventDetected() and XMC_SCU_HIB_ClearWakeupEventDetectionStatus(
  77:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
  78:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * 2016-06-15:
  79:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Added XMC_SCU_HIB_EnterHibernateStateEx() which allows to select between external or inter
  80:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Extended wakeup hibernate events using LPAC wakeup on events. Only available in XMC44, XMC
  81:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Added LPAC APIs. Only available in XMC44, XMC42 and XMC41 series.
  82:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
  83:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * 2019-02-18:
  84:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Fix conditional definition of XMC_SCU_PARITY_t elements
  85:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Added XMC_SCU_PARITY_OverrideParityBitLogic(uint32_t memory)
  86:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *             XMC_SCU_PARITY_SelectMemoryTest(const XMC_SCU_PARITY_t memory)
  87:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *             XMC_SCU_PARITY_SetParityWriteValue(uint8_t val)
  88:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *             XMC_SCU_PARITY_GetParityReadValue(void)
  89:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
  90:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * 2020-11-11:
  91:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Change making declaration of functions XMC_SCU_HighTemperature(), XMC_SCU_LowTemperature()
  92:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * 
  93:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @endcond
  94:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
  95:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  */
  96:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
  97:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #ifndef XMC4_SCU_H
  98:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC4_SCU_H
  99:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
 100:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**************************************************************************************************
 101:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * HEADER FILES
 102:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  **************************************************************************************************
 103:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
 104:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #include "xmc_common.h"
 105:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
 106:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #if UC_FAMILY == XMC4
 107:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
 108:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 109:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @addtogroup XMClib XMC Peripheral Library
 110:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @{
 111:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 112:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
 113:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 114:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @addtogroup SCU
 115:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @{
 116:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 117:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
 118:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**************************************************************************************************
 119:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * MACROS
 120:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  **************************************************************************************************
 121:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #define PLL_PDIV_XTAL_8MHZ (1U)  /* PDIV value for main PLL settings, fPLL = 120MHz with fOSC = 8MH
 122:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #define PLL_NDIV_XTAL_8MHZ (89U)  /* NDIV value for main PLL settings, fPLL = 120MHz with fOSC = 8M
 123:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #define PLL_K2DIV_XTAL_8MHZ (2U)  /* K2DIV value for main PLL settings, fPLL = 120MHz with fOSC = 8
 124:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
 125:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #define PLL_PDIV_XTAL_12MHZ (1U)  /* PDIV value for main PLL settings, fPLL = 120MHz with fOSC = 12
 126:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #define PLL_NDIV_XTAL_12MHZ (79U)  /* NDIV value for main PLL settings, fPLL = 120MHz with fOSC = 1
 127:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #define PLL_K2DIV_XTAL_12MHZ (3U)  /* K2DIV value for main PLL settings, fPLL = 120MHz with fOSC = 
 128:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
 129:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #define PLL_PDIV_XTAL_16MHZ (1U)  /* PDIV value for main PLL settings, fPLL = 120MHz with fOSC = 16
 130:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #define PLL_NDIV_XTAL_16MHZ (59U)  /* NDIV value for main PLL settings, fPLL = 120MHz with fOSC = 1
 131:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #define PLL_K2DIV_XTAL_16MHZ (3U)  /* K2DIV value for main PLL settings, fPLL = 120MHz with fOSC = 
 132:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
 133:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_WDT_WARN           SCU_INTERRUPT_SRSTAT_PRWARN_Msk /**< Watchdog pr
 134:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_RTC_PERIODIC       SCU_INTERRUPT_SRSTAT_PI_Msk     /**< RTC periodi
 135:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_RTC_ALARM          SCU_INTERRUPT_SRSTAT_AI_Msk     /**< RTC alarm e
 136:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_DLR_OVERRUN        SCU_INTERRUPT_SRSTAT_DLROVR_Msk /**< DLR overrun
 137:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_INTERRUPT_SRSTAT_LPACCR_Msk)
 138:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_LPACCR_UPDATED     SCU_INTERRUPT_SRSTAT_LPACCR_Msk /**< LPAC Contro
 139:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 140:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_INTERRUPT_SRSTAT_LPACTH0_Msk)
 141:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_LPACTH0_UPDATED    SCU_INTERRUPT_SRSTAT_LPACTH0_Msk /**< LPAC Thres
 142:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 143:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_INTERRUPT_SRSTAT_LPACTH1_Msk)
 144:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_LPACTH1_UPDATED    SCU_INTERRUPT_SRSTAT_LPACTH1_Msk  /**< LPAC Thre
 145:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 146:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_INTERRUPT_SRSTAT_LPACST_Msk)
 147:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_LPACST_UPDATED     SCU_INTERRUPT_SRSTAT_LPACST_Msk  /**< LPAC Statu
 148:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 149:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_INTERRUPT_SRSTAT_LPACCLR_Msk)
 150:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_LPACCLR_UPDATED    SCU_INTERRUPT_SRSTAT_LPACCLR_Msk /**< LPAC event
 151:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 152:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_INTERRUPT_SRSTAT_LPACSET_Msk)
 153:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_LPACSET_UPDATED    SCU_INTERRUPT_SRSTAT_LPACSET_Msk /**< LPAC event
 154:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 155:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_INTERRUPT_SRSTAT_HINTST_Msk)
 156:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_HINTST_UPDATED     SCU_INTERRUPT_SRSTAT_HINTST_Msk /**< HIB HINTST 
 157:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 158:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_INTERRUPT_SRSTAT_HINTCLR_Msk)
 159:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_HINTCLR_UPDATED    SCU_INTERRUPT_SRSTAT_HINTCLR_Msk /**< HIB HINTCL
 160:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 161:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_INTERRUPT_SRSTAT_HINTSET_Msk)
 162:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_HINTSET_UPDATED    SCU_INTERRUPT_SRSTAT_HINTSET_Msk /**< HIB HINTSE
 163:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 164:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_HDCLR_UPDATED      SCU_INTERRUPT_SRSTAT_HDCLR_Msk /**< HIB HDCLR re
 165:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_HDSET_UPDATED      SCU_INTERRUPT_SRSTAT_HDSET_Msk /**< HIB HDSET re
 166:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_HDCR_UPDATED       SCU_INTERRUPT_SRSTAT_HDCR_Msk /**< HIB HDCR regi
 167:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_OSCSICTRL_UPDATED  SCU_INTERRUPT_SRSTAT_OSCSICTRL_Msk /**< HIB OSCS
 168:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_OSCULCTRL_UPDATED  SCU_INTERRUPT_SRSTAT_OSCULCTRL_Msk /**< HIB OSCU
 169:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_RTCCTR_UPDATED     SCU_INTERRUPT_SRSTAT_RTC_CTR_Msk /**< HIB RTCCTR
 170:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_RTCATIM0_UPDATED   SCU_INTERRUPT_SRSTAT_RTC_ATIM0_Msk /**< HIB RTCA
 171:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_RTCATIM1_UPDATED   SCU_INTERRUPT_SRSTAT_RTC_ATIM1_Msk /**< HIB RTCA
 172:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_RTCTIM0_UPDATED    SCU_INTERRUPT_SRSTAT_RTC_TIM0_Msk /**< HIB TIM0 
 173:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_RTCTIM1_UPDATED    SCU_INTERRUPT_SRSTAT_RTC_TIM1_Msk /**< HIB TIM1 
 174:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_RMX_UPDATED        SCU_INTERRUPT_SRSTAT_RMX_Msk /**< HIB RMX regist
 175:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
 176:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**************************************************************************************************
 177:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * ENUMS
 178:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  **************************************************************************************************
 179:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 180:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines Capture/Compare unit timer slice trigger, that enables synchronous start function avail
 181:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *  CCUCON register. Use type \a XMC_SCU_CCU_TRIGGER_t for accessing these enum parameters.
 182:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 183:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CCU_TRIGGER
 184:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** {
 185:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CCU40)
 186:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CCU_TRIGGER_CCU40 = SCU_GENERAL_CCUCON_GSC40_Msk, /**< Trigger mask used for Global Start
 187:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                  CCU40 peripheral. */
 188:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 189:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CCU41)
 190:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CCU_TRIGGER_CCU41 = SCU_GENERAL_CCUCON_GSC41_Msk, /**< Trigger mask used for Global Start
 191:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                  CCU41 peripheral. */
 192:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 193:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CCU42)
 194:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CCU_TRIGGER_CCU42 = SCU_GENERAL_CCUCON_GSC42_Msk, /**< Trigger mask used for Global Start
 195:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                  CCU42 peripheral. */
 196:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 197:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CCU43)
 198:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CCU_TRIGGER_CCU43 = SCU_GENERAL_CCUCON_GSC43_Msk, /**< Trigger mask used for Global Start
 199:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                  CCU43 peripheral. */
 200:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 201:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CCU80)
 202:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CCU_TRIGGER_CCU80 = SCU_GENERAL_CCUCON_GSC80_Msk, /**< Trigger mask used for Global Start
 203:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                  CCU80 peripheral. */
 204:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 205:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CCU81)
 206:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CCU_TRIGGER_CCU81 = SCU_GENERAL_CCUCON_GSC81_Msk /**< Trigger mask used for Global Start 
 207:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                  CCU81 peripheral. */
 208:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 209:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CCU_TRIGGER_t;
 210:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
 211:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 212:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines enumerations representing the status of trap cause. The cause of the trap gets automati
 213:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *  the \a TRAPSTAT register and can be checked by user software to determine the state of the syst
 214:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *  purpose.
 215:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_TRAP_t for accessing these enum parameters.
 216:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 217:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_TRAP
 218:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** {
 219:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_TRAP_OSC_WDG      = SCU_TRAP_TRAPSTAT_SOSCWDGT_Msk, /**< OSC_HP Oscillator Watchdog trap.
 220:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_TRAP_VCO_LOCK     = SCU_TRAP_TRAPSTAT_SVCOLCKT_Msk, /**< PLL loss of lock trap. */
 221:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_TRAP_USB_VCO_LOCK = SCU_TRAP_TRAPSTAT_UVCOLCKT_Msk, /**< USB PLL loss of lock trap. */
 222:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_TRAP_PARITY_ERROR = SCU_TRAP_TRAPSTAT_PET_Msk,      /**< Memory Parity error trap. */
 223:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_TRAP_BROWNOUT     = SCU_TRAP_TRAPSTAT_BRWNT_Msk,    /**< Brownout trap. */
 224:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_TRAP_ULP_WDG      = SCU_TRAP_TRAPSTAT_ULPWDGT_Msk,  /**< Unstable 32KHz clock trap. */
 225:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_TRAP_PER_BRIDGE0  = SCU_TRAP_TRAPSTAT_BWERR0T_Msk,  /**< Bad memory access of peripherals
 226:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_TRAP_PER_BRIDGE1  = SCU_TRAP_TRAPSTAT_BWERR1T_Msk,  /**< Bad memory access of peripherals
 227:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_TRAP_TRAPSTAT_TEMPHIT_Msk)
 228:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_TRAP_DIETEMP_HIGH = SCU_TRAP_TRAPSTAT_TEMPHIT_Msk,  /**< Die temperature higher than expe
 229:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 230:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_TRAP_TRAPSTAT_TEMPLOT_Msk)
 231:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_TRAP_DIETEMP_LOW  = SCU_TRAP_TRAPSTAT_TEMPLOT_Msk,  /**< Die temperature lower than expec
 232:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 233:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(ECAT0)
 234:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_TRAP_ECAT_RESET = SCU_TRAP_TRAPSTAT_ECAT0RST_Msk, /**< EtherCat Reset */
 235:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 236:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_TRAP_t;
 237:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
 238:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 239:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines enumerations for different parity event generating modules that in turn generate a trap
 240:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Parity can be enabled with \a PETE register in order to get the trap flag reflected in \a TRAPR
 241:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *  configure parity error trap generation mechanism bits of \a PETE register.
 242:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *  All the enum items are tabulated as per bits present in \a PETE register.
 243:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_PARITY_t for accessing these enum parameters.
 244:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 245:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_PARITY
 246:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** {
 247:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_PSRAM_MEM  = SCU_PARITY_PEEN_PEENPS_Msk,   /**< Program SRAM parity error trap. */
 248:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_DSRAM1_MEM = SCU_PARITY_PEEN_PEENDS1_Msk,  /**< Data SRAM-1 parity error trap. */
 249:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_PARITY_PEEN_PEENDS2_Msk)
 250:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_DSRAM2_MEM = SCU_PARITY_PEEN_PEENDS2_Msk,  /**< Data SRAM-2 parity error trap. */
 251:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 252:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_USIC0_MEM  = SCU_PARITY_PEEN_PEENU0_Msk,   /**< USIC0 memory parity error trap. */
 253:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_PARITY_PEEN_PEENU1_Msk)
 254:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_USIC1_MEM  = SCU_PARITY_PEEN_PEENU1_Msk,   /**< USIC1 memory parity error trap. */
 255:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 256:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_PARITY_PEEN_PEENU2_Msk)
 257:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_USIC2_MEM  = SCU_PARITY_PEEN_PEENU2_Msk,   /**< USIC2 memory parity error trap. */
 258:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 259:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_MCAN_MEM   = SCU_PARITY_PEEN_PEENMC_Msk,   /**< CAN memory parity error trap. */
 260:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_PMU_MEM    = SCU_PARITY_PEEN_PEENPPRF_Msk, /**< PMU Prefetch memory parity error t
 261:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_USB_MEM    = SCU_PARITY_PEEN_PEENUSB_Msk,  /**< USB memory parity error trap. */
 262:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_PARITY_PEEN_PEENETH0TX_Msk)
 263:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_ETH_TXMEM  = SCU_PARITY_PEEN_PEENETH0TX_Msk, /**< Ethernet transmit memory parity 
 264:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 265:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_PARITY_PEEN_PEENETH0RX_Msk)
 266:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_ETH_RXMEM  = SCU_PARITY_PEEN_PEENETH0RX_Msk, /**< Ethernet receive memory parity e
 267:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 268:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_PARITY_PEEN_PEENSD0_Msk)
 269:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_SDMMC_MEM0 = SCU_PARITY_PEEN_PEENSD0_Msk, /**< SDMMC Memory-0 parity error trap. *
 270:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 271:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_PARITY_PEEN_PEENSD1_Msk)
 272:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_SDMMC_MEM1 = SCU_PARITY_PEEN_PEENSD1_Msk, /**< SDMMC Memory-1 parity error trap. *
 273:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 274:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_PARITY_PEEN_PEENECAT0_Msk)
 275:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_ECAT_MEM = SCU_PARITY_PEEN_PEENECAT0_Msk, /**< ECAT0 SRAM parity error trap. */
 276:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 277:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_PARITY_t;
 278:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
 279:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 280:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines the different causes for last reset. The cause of the last reset gets automatically sto
 281:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *  the \a SCU_RSTSTAT register and can be checked by user software to determine the state of the s
 282:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *  purpose. All the enum items are tabulated as per bits present in \a SCU_RSTSTAT register.
 283:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_RESET_REASON_t for accessing these enum parameters.
 284:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 285:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_RESET_REASON
 286:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** {
 287:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_RESET_REASON_PORST        = (1UL << SCU_RESET_RSTSTAT_RSTSTAT_Pos), /**< Reset due to Pow
 288:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_RESET_REASON_SWD          = (2UL << SCU_RESET_RSTSTAT_RSTSTAT_Pos), /**< Reset due to Sup
 289:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_RESET_REASON_PV           = (4UL << SCU_RESET_RSTSTAT_RSTSTAT_Pos), /**< Reset due to Pow
 290:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_RESET_REASON_SW           = (8UL << SCU_RESET_RSTSTAT_RSTSTAT_Pos), /**< Reset due to Sof
 291:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_RESET_REASON_LOCKUP       = (16UL << SCU_RESET_RSTSTAT_RSTSTAT_Pos), /**< Reset due to re
 292:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_RESET_REASON_WATCHDOG     = (32UL << SCU_RESET_RSTSTAT_RSTSTAT_Pos), /**< Reset due to Wa
 293:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_RESET_REASON_PARITY_ERROR = (128UL << SCU_RESET_RSTSTAT_RSTSTAT_Pos), /**< Reset due to r
 294:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_RESET_REASON_t;
 295:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
 296:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 297:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines enumerations for events which can lead to interrupt. These enumeration values represent
 298:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * status of one of the bits in \a SRSTAT register.
 299:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_INTERRUPT_EVENT_t for accessing these enum parameters.
 300:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 301:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** typedef uint32_t XMC_SCU_INTERRUPT_EVENT_t;
 302:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
 303:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
 304:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 305:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines enumeration for the events that can generate non maskable interrupt(NMI).
 306:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *  The NMI generation can be enabled with \a NMIREQEN register. The event will be reflected in \a 
 307:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *  mirrored in the TRAPSTAT register. These enums can be used to configure NMI request generation 
 308:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *  NMIREQEN register.  Once configured, these events can generate non maskable interrupt.
 309:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *  All the enum items are tabulated as per bits present in \a NMIREQEN register.
 310:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_NMIREQ_t for accessing these enum parameters.
 311:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 312:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_NMIREQ
 313:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** {
 314:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_NMIREQ_WDT_WARN = SCU_INTERRUPT_NMIREQEN_PRWARN_Msk, /**< Watchdog timer Pre-Warning even
 315:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_NMIREQ_RTC_PI   = SCU_INTERRUPT_NMIREQEN_PI_Msk,     /**< RTC Periodic event */
 316:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_NMIREQ_RTC_AI   = SCU_INTERRUPT_NMIREQEN_AI_Msk,     /**< RTC Alarm event */
 317:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_NMIREQ_ERU0_0   = SCU_INTERRUPT_NMIREQEN_ERU00_Msk,  /**< Channel 0 event of ERU0 */
 318:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_NMIREQ_ERU0_1   = SCU_INTERRUPT_NMIREQEN_ERU01_Msk,  /**< Channel 1 event of ERU0 */
 319:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_NMIREQ_ERU0_2   = SCU_INTERRUPT_NMIREQEN_ERU02_Msk,  /**< Channel 2 event of ERU0 */
 320:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_NMIREQ_ERU0_3   = SCU_INTERRUPT_NMIREQEN_ERU03_Msk   /**< Channel 3 event of ERU0 */
 321:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_NMIREQ_t;
 322:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
 323:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
 324:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 325:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines enumeration representing different peripheral reset bits in the \a PRSTAT registers.
 326:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *  All the enum items are tabulated as per bits present in \a PRSTAT0,  \a PRSTAT1,  \a PRSTAT2,
 327:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *  \a PRSTAT3 registers. Use type \a XMC_SCU_PERIPHERAL_RESET_t for accessing these enum parameter
 328:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Note: Release of reset should be prevented when the peripheral clock is gated in cases where ke
 329:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *  clock and bus interface clocks are shared, in order to avoid system hang-up.
 330:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 331:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_PERIPHERAL_RESET
 332:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** {
 333:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_VADC   = SCU_RESET_PRSTAT0_VADCRS_Msk,   /**< VADC reset. */
 334:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(DSD)
 335:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_DSD    = SCU_RESET_PRSTAT0_DSDRS_Msk,    /**< DSD reset. */
 336:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 337:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_CCU40  = SCU_RESET_PRSTAT0_CCU40RS_Msk,  /**< CCU40 reset. */
 338:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CCU41)
 339:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_CCU41  = SCU_RESET_PRSTAT0_CCU41RS_Msk,  /**< CCU41 reset. */
 340:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 341:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CCU42)
 342:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_CCU42  = SCU_RESET_PRSTAT0_CCU42RS_Msk,  /**< CCU42 reset. */
 343:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 344:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CCU80)
 345:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_CCU80  = SCU_RESET_PRSTAT0_CCU80RS_Msk,  /**< CCU80 reset. */
 346:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 347:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CCU81)
 348:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_CCU81  = SCU_RESET_PRSTAT0_CCU81RS_Msk,  /**< CCU81 reset. */
 349:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 350:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(POSIF0)
 351:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_POSIF0 = SCU_RESET_PRSTAT0_POSIF0RS_Msk, /**< POSIF0 reset. */
 352:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 353:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(POSIF1)
 354:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_POSIF1 = SCU_RESET_PRSTAT0_POSIF1RS_Msk, /**< POSIF1 reset.*/
 355:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 356:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_USIC0  = SCU_RESET_PRSTAT0_USIC0RS_Msk,  /**< USIC0 reset. */
 357:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_ERU1   = SCU_RESET_PRSTAT0_ERU1RS_Msk,   /**< ERU1 reset. */
 358:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(HRPWM0)
 359:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_HRPWM0 = SCU_RESET_PRSTAT0_HRPWM0RS_Msk,  /**< HRPWM0 reset. */
 360:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 361:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CCU43)
 362:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_CCU43  = (SCU_RESET_PRSTAT1_CCU43RS_Msk | 0x10000000UL),   /**< CCU43 re
 363:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 364:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(LEDTS0)
 365:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_LEDTS0 = (SCU_RESET_PRSTAT1_LEDTSCU0RS_Msk | 0x10000000UL), /**< LEDTS0 
 366:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 367:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CAN)
 368:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_MCAN   = (SCU_RESET_PRSTAT1_MCAN0RS_Msk | 0x10000000UL), /**< MCAN reset
 369:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 370:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(DAC)
 371:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_DAC    = (SCU_RESET_PRSTAT1_DACRS_Msk | 0x10000000UL),    /**< DAC reset
 372:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 373:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SDMMC)
 374:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_SDMMC  = (SCU_RESET_PRSTAT1_MMCIRS_Msk | 0x10000000UL),     /**< SDMMC r
 375:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 376:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(USIC1)
 377:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_USIC1  = (SCU_RESET_PRSTAT1_USIC1RS_Msk | 0x10000000UL),    /**< USIC1 r
 378:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 379:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(USIC2)
 380:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_USIC2  = (SCU_RESET_PRSTAT1_USIC2RS_Msk | 0x10000000UL),    /**< USIC2 r
 381:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 382:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_PORTS  = (SCU_RESET_PRSTAT1_PPORTSRS_Msk | 0x10000000UL),   /**< PORTS r
 383:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_WDT    = (SCU_RESET_PRSTAT2_WDTRS_Msk | 0x20000000UL),      /**< WDT res
 384:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(ETH0)
 385:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_ETH0   = (SCU_RESET_PRSTAT2_ETH0RS_Msk | 0x20000000UL),     /**< ETH0 re
 386:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 387:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_GPDMA0 = (SCU_RESET_PRSTAT2_DMA0RS_Msk | 0x20000000UL),     /**< DMA0 re
 388:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(GPDMA1)
 389:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_GPDMA1 = (SCU_RESET_PRSTAT2_DMA1RS_Msk | 0x20000000UL),     /**< DMA1 re
 390:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 391:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(FCE)
 392:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_FCE    = (SCU_RESET_PRSTAT2_FCERS_Msk | 0x20000000UL),      /**< FCE res
 393:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 394:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(USB0)
 395:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_USB0   = (SCU_RESET_PRSTAT2_USBRS_Msk | 0x20000000UL),      /**< USB0 re
 396:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 397:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(ECAT0)
 398:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_ECAT0  = (SCU_RESET_PRSTAT2_ECAT0RS_Msk | 0x20000000UL),      /**< ECAT0
 399:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 400:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(EBU)
 401:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_EBU    = (SCU_RESET_PRSTAT3_EBURS_Msk | 0x30000000UL)       /**< EBU res
 402:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 403:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_PERIPHERAL_RESET_t;
 404:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
 405:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 406:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines enumerations for disabling the clocks sources of peripherals. Disabling of the peripher
 407:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *  clock is configured via the \a CLKCLR registers.
 408:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_PERIPHERAL_CLOCK_t for accessing these enum parameters.
 409:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 410:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CLOCK
 411:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** {
 412:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_USB = SCU_CLK_CLKCLR_USBCDI_Msk, /**< USB module clock. */
 413:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SDMMC)
 414:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_MMC = SCU_CLK_CLKCLR_MMCCDI_Msk, /**< MMC module clock. */
 415:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 416:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(ETH0)
 417:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_ETH = SCU_CLK_CLKCLR_ETH0CDI_Msk, /**< Ethernet module clock. */
 418:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 419:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(EBU)
 420:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_EBU = SCU_CLK_CLKCLR_EBUCDI_Msk, /**< EBU module clock. */
 421:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 422:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_CCU = SCU_CLK_CLKCLR_CCUCDI_Msk, /**< CCU module clock. */
 423:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_WDT = SCU_CLK_CLKCLR_WDTCDI_Msk  /**< WDT module clock. */
 424:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_t;
 425:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
 426:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #if(UC_SERIES != XMC45)
 427:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 428:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Defines enumeration for peripherals that support clock gating.
 429:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * The enumerations can be used for gating or ungating the peripheral clocks.
 430:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * All the enum items are tabulated as per bits present in \a CGATSTAT0 register.
 431:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Use type \a XMC_SCU_PERIPHERAL_CLOCK_t for accessing these enum parameters.
 432:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 433:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_PERIPHERAL_CLOCK
 434:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** {
 435:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_VADC   = SCU_CLK_CGATSTAT0_VADC_Msk,  /**< VADC peripheral gating. */
 436:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(DSD)
 437:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_DSD    = SCU_CLK_CGATSTAT0_DSD_Msk,   /**< DSD peripheral gating. */
 438:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 439:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_CCU40  = SCU_CLK_CGATSTAT0_CCU40_Msk,  /**< CCU40 peripheral gating. */
 440:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CCU41)
 441:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_CCU41  = SCU_CLK_CGATSTAT0_CCU41_Msk,  /**< CCU41 peripheral gating. */
 442:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 443:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CCU42)
 444:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_CCU42  = SCU_CLK_CGATSTAT0_CCU42_Msk,  /**< CCU42 peripheral gating. */
 445:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 446:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CCU80)
 447:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_CCU80  = SCU_CLK_CGATSTAT0_CCU80_Msk,  /**< CCU80 peripheral gating. */
 448:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 449:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CCU81)
 450:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_CCU81  = SCU_CLK_CGATSTAT0_CCU81_Msk,  /**< CCU81 peripheral gating. */
 451:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 452:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(POSIF0)
 453:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_POSIF0 = SCU_CLK_CGATSTAT0_POSIF0_Msk,  /**< POSIF0 peripheral gating. *
 454:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 455:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(POSIF1)
 456:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_POSIF1 = SCU_CLK_CGATSTAT0_POSIF1_Msk,   /**< POSIF1 peripheral gating. 
 457:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 458:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_USIC0  = SCU_CLK_CGATSTAT0_USIC0_Msk,   /**< USIC0 peripheral gating. */
 459:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_ERU1   = SCU_CLK_CGATSTAT0_ERU1_Msk,    /**< ERU1 peripheral gating. */
 460:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(HRPWM0)
 461:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_HRPWM0 = SCU_CLK_CGATSTAT0_HRPWM0_Msk,  /**< HRPWM0 peripheral gating. *
 462:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 463:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CCU43)
 464:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_CCU43  = (SCU_CLK_CGATSTAT1_CCU43_Msk | 0x10000000UL),   /**< CCU43 peri
 465:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 466:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(LEDTS0)
 467:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_LEDTS0 = (SCU_CLK_CGATSTAT1_LEDTSCU0_Msk | 0x10000000UL), /**< LEDTS0 pe
 468:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 469:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CAN)
 470:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_MCAN   = (SCU_CLK_CGATSTAT1_MCAN0_Msk | 0x10000000UL),   /**< MCAN perip
 471:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 472:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(DAC)
 473:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_DAC    = (SCU_CLK_CGATSTAT1_DAC_Msk | 0x10000000UL),     /**< DAC periph
 474:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 475:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SDMMC)
 476:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_SDMMC  = (SCU_CLK_CGATSTAT1_MMCI_Msk | 0x10000000UL),    /**< SDMMC peri
 477:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 478:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(USIC1)
 479:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_USIC1  = (SCU_CLK_CGATSTAT1_USIC1_Msk | 0x10000000UL),   /**< USIC1 peri
 480:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 481:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(USIC2)
 482:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_USIC2  = (SCU_CLK_CGATSTAT1_USIC2_Msk | 0x10000000UL),    /**< USIC2 per
 483:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 484:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_PORTS  = (SCU_CLK_CGATSTAT1_PPORTS_Msk | 0x10000000UL),   /**< PORTS per
 485:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_WDT    = (SCU_CLK_CGATSTAT2_WDT_Msk | 0x20000000UL),      /**< WDT perip
 486:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(ETH0)
 487:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_ETH0   = (SCU_CLK_CGATSTAT2_ETH0_Msk | 0x20000000UL),     /**< ETH0 peri
 488:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 489:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_GPDMA0 = (SCU_CLK_CGATSTAT2_DMA0_Msk | 0x20000000UL),     /**< DMA0 peri
 490:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(GPDMA1)
 491:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_GPDMA1 = (SCU_CLK_CGATSTAT2_DMA1_Msk | 0x20000000UL),     /**< DMA1 peri
 492:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 493:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(FCE)
 494:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_FCE    = (SCU_CLK_CGATSTAT2_FCE_Msk | 0x20000000UL),      /**< FCE perip
 495:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 496:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(USB0)
 497:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_USB0   = (SCU_CLK_CGATSTAT2_USB_Msk | 0x20000000UL),      /**< USB0 peri
 498:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 499:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(ECAT0)
 500:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_ECAT0   = (SCU_CLK_CGATSTAT2_ECAT0_Msk | 0x20000000UL),      /**< ECAT0 
 501:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 502:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(EBU)
 503:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_EBU    = (SCU_CLK_CGATSTAT3_EBU_Msk | 0x30000000UL)       /**< EBU perip
 504:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 505:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_PERIPHERAL_CLOCK_t;
 506:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 507:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
 508:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 509:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines options for system clock (fSYS) source. These enums are used to configure \a SYSSEL bit
 510:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Clock Control Register.
 511:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_CLOCK_SYSCLKSRC_t for accessing these enum parameters.
 512:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 513:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CLOCK_SYSCLKSRC
 514:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** {
 515:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SYSCLKSRC_OFI = (0UL << SCU_CLK_SYSCLKCR_SYSSEL_Pos), /**< Internal Fast Clock (fOF
 516:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                            source for system clock 
 517:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SYSCLKSRC_PLL = (1UL << SCU_CLK_SYSCLKCR_SYSSEL_Pos)  /**< PLL output (fPLL) as a
 518:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                            source for system clock 
 519:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_SYSCLKSRC_t;
 520:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
 521:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 522:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines options for selecting the P-Divider input frequency. These enums are used to configure 
 523:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *  register.
 524:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_CLOCK_OSCCLKSRC_t for accessing these enum parameters.
 525:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 526:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CLOCK_SYSPLLCLKSRC
 527:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** {
 528:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SYSPLLCLKSRC_OSCHP = 0UL,  /**< External crystal oscillator
 529:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****                                                 (fOHP) as the source for P-Divider. */
 530:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SYSPLLCLKSRC_OFI = SCU_PLL_PLLCON2_PINSEL_Msk | SCU_PLL_PLLCON2_K1INSEL_Msk /**< Ba
 531:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                              as the source for P-Di
 532:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_SYSPLLCLKSRC_t;
 533:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
 534:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 535:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Defines options for selecting the USB clock source(fUSB/fSDMMC).
 536:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * These enums are used to configure \a USBSEL bits of \a USBCLKCR
 537:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * register. User can choose either fPLL or fUSBPLL clock as a source for USB clock.
 538:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Use type \a XMC_SCU_CLOCK_USBCLKSRC_t for accessing these enum parameters.
 539:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 540:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CLOCK_USBCLKSRC
 541:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** {
 542:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_USBCLKSRC_USBPLL = (0UL << SCU_CLK_USBCLKCR_USBSEL_Pos), /**< USB PLL(fUSB PLL) as 
 543:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                            source for USB clock (fU
 544:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_USBCLKSRC_SYSPLL = (1UL << SCU_CLK_USBCLKCR_USBSEL_Pos)  /**< Main PLL output (fPLL
 545:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                            source for USB clock (fU
 546:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_USBCLKSRC_t;
 547:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
 548:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(ECAT0)
 549:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 550:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Defines options for selecting the ECAT clock source.
 551:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 552:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CLOCK_ECATCLKSRC
 553:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** {
 554:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_ECATCLKSRC_USBPLL = (0UL << SCU_CLK_ECATCLKCR_ECATSEL_Pos), /**< USB PLL (fUSBPLL) 
 555:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_ECATCLKSRC_SYSPLL = (1UL << SCU_CLK_ECATCLKCR_ECATSEL_Pos)  /**< Main PLL output (f
 556:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_ECATCLKSRC_t;
 557:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 558:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
 559:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 560:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines options for selecting the source of WDT clock(fWDT). These enums are used to configure 
 561:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *  register. User can choose either fOFI or fPLL or fSTDBY clock as a source for WDT clock.
 562:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_CLOCK_USBCLKSRC_t for accessing these enum parameters.
 563:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 564:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CLOCK_WDTCLKSRC
 565:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** {
 566:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_WDTCLKSRC_OFI = (0UL << SCU_CLK_WDTCLKCR_WDTSEL_Pos),  /**< Internal Fast Clock
 567:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                            (fOFI) as the source for
 568:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_WDTCLKSRC_STDBY = (1UL << SCU_CLK_WDTCLKCR_WDTSEL_Pos), /**< Standby clock
 569:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                            (fSTDBY) as the source f
 570:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_WDTCLKSRC_PLL = (2UL << SCU_CLK_WDTCLKCR_WDTSEL_Pos)   /**< PLL output (fPLL) as th
 571:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                            source for WDT clock (fW
 572:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_WDTCLKSRC_t;
 573:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
 574:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 575:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines options for selecting the source of external clock out (fEXT). These enums are used to 
 576:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *  register. User can choose either fSYS or fPLL or fUSBPLL clock as a source for external clock o
 577:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_CLOCK_EXTOUTCLKSRC_t for accessing these enum parameters.
 578:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 579:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CLOCK_EXTOUTCLKSRC
 580:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** {
 581:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_EXTOUTCLKSRC_SYS = (0UL << SCU_CLK_EXTCLKCR_ECKSEL_Pos),  /**< System clock (fSYS) 
 582:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                             the source for external
 583:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_EXTOUTCLKSRC_USB = (2UL << SCU_CLK_EXTCLKCR_ECKSEL_Pos), /**< USB PLL output(fUSB P
 584:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                            source for external cloc
 585:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_EXTOUTCLKSRC_PLL = (3UL << SCU_CLK_EXTCLKCR_ECKSEL_Pos), /**< Main PLL output(fPLL)
 586:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                            source for external cloc
 587:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #if ((UC_SERIES == XMC42) || (UC_SERIES == XMC41))
 588:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_EXTOUTCLKSRC_STDBY = (4UL << SCU_CLK_EXTCLKCR_ECKSEL_Pos), /**< Standby clock(fSTDB
 589:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                            source for external cloc
 590:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 591:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_EXTOUTCLKSRC_t;
 592:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
 593:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 594:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines options for selecting the source of RTC Clock (fRTC). These enums are used to configure
 595:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *  User can choose either fOSI or fULP clock as a source for RTC Clock (fRTC).
 596:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_HIB_RTCCLKSRC_t for accessing these enum parameters.
 597:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 598:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_RTCCLKSRC
 599:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** {
 600:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_RTCCLKSRC_OSI = (0UL << SCU_HIBERNATE_HDCR_RCS_Pos), /**< Internal Slow Clock
 601:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                          (fOSI) as the source for R
 602:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_RTCCLKSRC_ULP = (1UL << SCU_HIBERNATE_HDCR_RCS_Pos) /**< Ultra Low Power Clock (fULP)
 603:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                         as the source for RTC Clock
 604:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_RTCCLKSRC_t;
 605:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
 606:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 607:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines options for selecting the source of Standby Clock (fSTDBY). These enums are used to con
 608:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *  register. User can choose either fOSI or fULP clock as a source for Standby Clock (fSTDBY).
 609:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_HIB_STDBYCLKSRC_t for accessing these enum parameters.
 610:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 611:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_STDBYCLKSRC
 612:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** {
 613:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_STDBYCLKSRC_OSI = (0UL << SCU_HIBERNATE_HDCR_STDBYSEL_Pos), /**< Internal Slow Clock
 614:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                           (fOSI) as the source for 
 615:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                           (fSTDBY). */
 616:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_STDBYCLKSRC_OSCULP = (1UL << SCU_HIBERNATE_HDCR_STDBYSEL_Pos) /**< Ultra Low Power Cl
 617:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                           (fULP) as the source for 
 618:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                           (fSTDBY). */
 619:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_STDBYCLKSRC_t;
 620:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
 621:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 622:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines options for backup clock trimming. These enums are used to configure \a AOTREN  \a FOTR
 623:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *  PLLCON0 register. Use type \a XMC_SCU_CLOCK_BACKUP_TRIM_t for accessing these enum parameters.
 624:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 625:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CLOCK_FOFI_CALIBRATION_MODE
 626:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** {
 627:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_FOFI_CALIBRATION_MODE_FACTORY   = 0UL,  /**< Factory Oscillator Calibration:
 628:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****                                                         Force adjustment of the internal oscillator
 629:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_FOFI_CALIBRATION_MODE_AUTOMATIC = 1UL   /**<  Automatic Oscillator Calibration adju
 630:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_FOFI_CALIBRATION_MODE_t;
 631:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
 632:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
 633:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 634:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines options for selecting device boot mode. These enums are used to configure \a SWCON bits
 635:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *  User can choose among various boot modes by configuring SWCON bits.
 636:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_BOOTMODE_t for accessing these enum parameters.
 637:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 638:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_BOOTMODE
 639:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** {
 640:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_BOOTMODE_NORMAL     = (0UL << SCU_GENERAL_STCON_SWCON_Pos), /**< Boot from start of flash
 641:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_BOOTMODE_ASC_BSL    = (1UL << SCU_GENERAL_STCON_SWCON_Pos), /**< UART bootstrap. */
 642:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_BOOTMODE_BMI        = (2UL << SCU_GENERAL_STCON_SWCON_Pos), /**< Boot Mode Index - Custom
 643:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                            sequence. */
 644:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_BOOTMODE_CAN_BSL    = (3UL << SCU_GENERAL_STCON_SWCON_Pos), /**< CAN bootstrap. */
 645:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_BOOTMODE_PSRAM_BOOT = (4UL << SCU_GENERAL_STCON_SWCON_Pos), /**< Boot from PSRAM. */
 646:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_BOOTMODE_ABM0       = (8UL << SCU_GENERAL_STCON_SWCON_Pos), /**< Boot from flash - fixed 
 647:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                            address 0. */
 648:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_BOOTMODE_ABM1       = (12UL << SCU_GENERAL_STCON_SWCON_Pos), /**< Boot from flash - fixed
 649:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                             address 1. */
 650:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_BOOTMODE_FABM       = (14UL << SCU_GENERAL_STCON_SWCON_Pos), /**< fallback Alternate Boot
 651:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                             Try ABM-0 then try ABM-
 652:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_BOOTMODE_t;
 653:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
 654:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
 655:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 656:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines various PLL modes of operation. These enums are used to configure \a VCOBYP bit of \a P
 657:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *  User can choose either normal or prescalar mode by configuring VCOBYP bit.
 658:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_PLL_MODE_t for accessing these enum parameters.
 659:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 660:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CLOCK_SYSPLL_MODE
 661:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** {
 662:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SYSPLL_MODE_DISABLED, /**< fPLL derived from fOSC and PLL operating in prescalar mo
 663:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SYSPLL_MODE_NORMAL,  /**< fPLL derived from fVCO and PLL operating in normal mode. 
 664:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SYSPLL_MODE_PRESCALAR /**< fPLL derived from fOSC and PLL operating in prescalar mo
 665:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_SYSPLL_MODE_t;
 666:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
 667:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 668:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines the source of the system clock and peripherals clock gating in SLEEP state.
 669:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use this enum as parameter of XMC_SCU_CLOCK_SetSleepConfig before going to SLEEP state.
 670:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
 671:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *  The SLEEP state of the system corresponds to the SLEEP state of the CPU. The state is
 672:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *  entered via WFI or WFE instruction of the CPU. In this state the clock to the CPU is
 673:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *  stopped. Peripherals are only clocked when configured to stay enabled.
 674:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
 675:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Peripherals can continue to operate unaffected and eventually generate an event to
 676:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *  wake-up the CPU. Any interrupt to the NVIC will bring the CPU back to operation. The
 677:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *  clock tree upon exit from SLEEP state is restored to what it was before entry into SLEEP
 678:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *  state.
 679:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
 680:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 681:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CLOCK_SLEEP_MODE_CONFIG
 682:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** {
 683:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_SYSCLK_FOFI = 0,  /**< fOFI used as system clock source in SLEEP 
 684:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_SYSCLK_FPLL = SCU_CLK_SLEEPCR_SYSSEL_Msk,  /**< fPLL used as syst
 685:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(USB0)
 686:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_DISABLE_USB = 0,  /**< USB clock disabled in SLEEP state */
 687:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_ENABLE_USB = SCU_CLK_SLEEPCR_USBCR_Msk,  /**< USB clock enabled i
 688:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 689:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SDMMC)
 690:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_DISABLE_SDMMC = 0,/**< SDMMC clock disabled in SLEEP state */
 691:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_ENABLE_SDMMC = SCU_CLK_SLEEPCR_MMCCR_Msk,/**< SDMMC clock enabled
 692:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 693:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(ETH0)
 694:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_DISABLE_ETH = 0,  /**< ETH clock disabled in SLEEP state */
 695:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_ENABLE_ETH = SCU_CLK_SLEEPCR_ETH0CR_Msk,  /**< ETH clock enabled 
 696:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 697:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(EBU)
 698:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_DISABLE_EBU = 0,  /**< EBU clock disabled in SLEEP state */
 699:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_ENABLE_EBU = SCU_CLK_SLEEPCR_EBUCR_Msk,  /**< EBU clock enabled i
 700:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 701:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_DISABLED_CCU = 0,  /**< CCU clock disabled in SLEEP state */
 702:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_ENABLE_CCU = SCU_CLK_SLEEPCR_CCUCR_Msk,  /**< CCU clock enabled i
 703:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_DISABLED_WDT = 0,  /**< WDT clock disabled in SLEEP state */
 704:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_ENABLE_WDT = SCU_CLK_SLEEPCR_WDTCR_Msk,  /**< WDT clock enabled i
 705:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_t;
 706:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
 707:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 708:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines the source of the system clock and peripherals clock gating in DEEPSLEEP state.
 709:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *  In addition the state of FLASH, PLL and PLLVCO during DEEPSLEEP state.
 710:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use this enum as parameter of XMC_SCU_CLOCK_SetDeepSleepConfig before going to DEEPSLEEP state.
 711:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
 712:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *  The DEEPSLEEP state of the system corresponds to the DEEPSLEEP state of the CPU. The state is
 713:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *  entered via WFI or WFE instruction of the CPU. In this state the clock to the CPU is
 714:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *  stopped.
 715:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
 716:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *  In Deep Sleep state the OSC_HP and the PLL may be switched off. The wake-up logic in the NVIC i
 717:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *  by a free-running clock. Peripherals are only clocked when configured to stay enabled.
 718:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Configuration of peripherals and any SRAM content is preserved.
 719:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *  The Flash module can be put into low-power mode to achieve a further power reduction.
 720:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *  On wake-up Flash module will be restarted again before instructions or data access is possible.
 721:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Any interrupt will bring the system back to operation via the NVIC.The clock setup before
 722:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *  entering Deep Sleep state is restored upon wake-up.
 723:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 724:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG
 725:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** {
 726:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_SYSCLK_FOFI = 0,  /**< fOFI used as system clock source in DE
 727:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_SYSCLK_FPLL = SCU_CLK_DSLEEPCR_SYSSEL_Msk,  /**< fPLL used as
 728:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_FLASH_POWERDOWN = SCU_CLK_DSLEEPCR_FPDN_Msk,/**< Flash power 
 729:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_PLL_POWERDOWN = SCU_CLK_DSLEEPCR_PLLPDN_Msk,  /**<  Switch of
 730:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_VCO_POWERDOWN = SCU_CLK_DSLEEPCR_VCOPDN_Msk,  /**<  Switch of
 731:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(USB0)
 732:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_DISABLE_USB = 0,  /**< USB clock disabled in DEEPSLEEP state 
 733:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_ENABLE_USB = SCU_CLK_DSLEEPCR_USBCR_Msk,  /**< USB clock enab
 734:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 735:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SDMMC)
 736:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_DISABLE_SDMMC = 0,/**< SDMMC clock disabled in DEEPSLEEP stat
 737:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_ENABLE_SDMMC = SCU_CLK_DSLEEPCR_MMCCR_Msk,/**< SDMMC clock en
 738:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 739:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(ETH0)
 740:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_DISABLE_ETH = 0,  /**< ETH clock disabled in DEEPSLEEP state 
 741:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_ENABLE_ETH = SCU_CLK_DSLEEPCR_ETH0CR_Msk,  /**< ETH clock ena
 742:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 743:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(EBU)
 744:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_DISABLE_EBU = 0,  /**< EBU clock disabled in DEEPSLEEP state 
 745:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_ENABLE_EBU = SCU_CLK_DSLEEPCR_EBUCR_Msk,  /**< EBU clock enab
 746:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 747:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_DISABLE_CCU = 0,  /**< CCU clock disabled in DEEPSLEEP state 
 748:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_ENABLE_CCU = SCU_CLK_DSLEEPCR_CCUCR_Msk,  /**< CCU clock enab
 749:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_DISABLE_WDT = 0,  /**< WDT clock disabled in DEEPSLEEP state 
 750:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_ENABLE_WDT = SCU_CLK_DSLEEPCR_WDTCR_Msk,  /**< WDT clock enab
 751:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_t;
 752:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
 753:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 754:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Defines status of EVR13 regulator
 755:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 756:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_POWER_EVR_STATUS
 757:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** {
 758:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_POWER_EVR_STATUS_OK = 0, /**< EVR13 regulator No overvoltage condition */
 759:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_POWER_EVR_STATUS_EVR13_OVERVOLTAGE = SCU_POWER_EVRSTAT_OV13_Msk /**< EVR13 regulator is i
 760:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_POWER_EVR_STATUS_t;
 761:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
 762:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 763:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Define status of external hibernate control
 764:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 765:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_CTRL_STATUS
 766:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** {
 767:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_CTRL_STATUS_NO_ACTIVE = 0, /**< Hibernate not driven active to pads */
 768:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_CTRL_STATUS_ACTIVE = SCU_HIBERNATE_HDSTAT_HIBNOUT_Msk, /**< Hibernate driven active t
 769:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_CTRL_STATUS_t;
 770:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
 771:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 772:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Hibernate domain event status
 773:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 774:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_EVENT
 775:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** {
 776:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_EVENT_WAKEUP_ON_POS_EDGE = SCU_HIBERNATE_HDCR_WKPEP_Msk, /**< Wake-up on positive edg
 777:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_EVENT_WAKEUP_ON_NEG_EDGE = SCU_HIBERNATE_HDCR_WKPEN_Msk, /**< Wake-up on negative edg
 778:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_EVENT_WAKEUP_ON_RTC = SCU_HIBERNATE_HDCR_RTCE_Msk, /**< Wake-up on RTC event */
 779:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_EVENT_ULPWDG = SCU_HIBERNATE_HDCR_ULPWDGEN_Msk, /**< ULP watchdog alarm status */
 780:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #if (defined(DOXYGEN) || (UC_SERIES == XMC44) || (UC_SERIES == XMC42) || (UC_SERIES == XMC41))
 781:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_EVENT_LPAC_VBAT_POSEDGE = SCU_HIBERNATE_HDSTAT_VBATPEV_Msk, /**< Wake-up on LPAC posi
 782:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_EVENT_LPAC_VBAT_NEGEDGE = SCU_HIBERNATE_HDSTAT_VBATNEV_Msk, /**< Wake-up on LPAC nega
 783:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_EVENT_LPAC_HIB_IO_0_POSEDGE = SCU_HIBERNATE_HDSTAT_AHIBIO0PEV_Msk, /**< Wake-up on LP
 784:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_EVENT_LPAC_HIB_IO_0_NEGEDGE = SCU_HIBERNATE_HDSTAT_AHIBIO0NEV_Msk, /**< Wake-up on LP
 785:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #if (defined(DOXYGEN) || ((UC_SERIES == XMC44) && (UC_PACKAGE == LQFP100)))
 786:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_EVENT_LPAC_HIB_IO_1_POSEDGE = SCU_HIBERNATE_HDSTAT_AHIBIO1PEV_Msk, /**< Wake-up on LP
 787:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_EVENT_LPAC_HIB_IO_1_NEGEDGE = SCU_HIBERNATE_HDSTAT_AHIBIO1NEV_Msk, /**< Wake-up on LP
 788:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 789:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 790:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_EVENT_t;
 791:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
 792:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 793:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   * Hibernate domain dedicated pins
 794:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   */
 795:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_IO
 796:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** {
 797:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_IO_0 = 0, /**< HIB_IO_0 pin.
 798:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****                              At the first power-up and with every reset of the hibernate domain thi
 799:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #if (defined(DOXYGEN) || (UC_PACKAGE == BGA196) || (UC_PACKAGE == BGA144) || (UC_PACKAGE == LQFP144
 800:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_IO_1 = 1 /**< HIB_IO_1 pin.
 801:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****                             At the first power-up and with every reset of the hibernate domain this
 802:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****                             @note : Only available in certain packages*/
 803:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 804:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_IO_t;
 805:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
 806:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 807:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * HIB_IOx pin I/O control
 808:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 809:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_PIN_MODE
 810:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** {
 811:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_PIN_MODE_INPUT_PULL_NONE = 0 << SCU_HIBERNATE_HDCR_HIBIO0SEL_Pos, /**< Direct input, 
 812:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_PIN_MODE_INPUT_PULL_DOWN = 1 << SCU_HIBERNATE_HDCR_HIBIO0SEL_Pos, /**< Direct input, 
 813:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_PIN_MODE_INPUT_PULL_UP = 2 << SCU_HIBERNATE_HDCR_HIBIO0SEL_Pos, /**< Direct input, in
 814:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_PIN_MODE_OUTPUT_PUSH_PULL_HIBCTRL = 8 << SCU_HIBERNATE_HDCR_HIBIO0SEL_Pos, /**< Push-
 815:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_PIN_MODE_OUTPUT_PUSH_PULL_WDTSRV = 9 << SCU_HIBERNATE_HDCR_HIBIO0SEL_Pos, /**< Push-p
 816:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_PIN_MODE_OUTPUT_PUSH_PULL_GPIO = 10 << SCU_HIBERNATE_HDCR_HIBIO0SEL_Pos, /**< Push-pu
 817:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_PIN_MODE_OUTPUT_OPEN_DRAIN_HIBCTRL = 12 << SCU_HIBERNATE_HDCR_HIBIO0SEL_Pos, /**< Ope
 818:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_PIN_MODE_OUTPUT_OPEN_DRAIN_WDTSRV = 13 << SCU_HIBERNATE_HDCR_HIBIO0SEL_Pos, /**< Open
 819:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_PIN_MODE_OUTPUT_OPEN_DRAIN_GPIO = 14 << SCU_HIBERNATE_HDCR_HIBIO0SEL_Pos, /**< Open d
 820:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_PIN_MODE_t;
 821:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
 822:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 823:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Selects the output polarity of the HIB_IOx
 824:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 825:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_IO_OUTPUT_LEVEL
 826:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** {
 827:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_IO_OUTPUT_LEVEL_LOW = 0 << SCU_HIBERNATE_HDCR_HIBIO0POL_Pos, /**< Direct value */
 828:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_IO_OUTPUT_LEVEL_HIGH = 1 << SCU_HIBERNATE_HDCR_HIBIO0POL_Pos /**< Inverted value */
 829:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_IO_OUTPUT_LEVEL_t;
 830:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
 831:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 832:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Selects hibernate mode
 833:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 834:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_HIBERNATE_MODE
 835:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** {
 836:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_HIBERNATE_MODE_EXTERNAL = 0, /**< Request external hibernate mode */
 837:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #if (defined(DOXYGEN) || (UC_SERIES == XMC44) || (UC_SERIES == XMC42) || (UC_SERIES == XMC41))
 838:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_HIBERNATE_MODE_INTERNAL = 1, /**< Request internal hibernate mode. @note Only availab
 839:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 840:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_HIBERNATE_MODE_t;
 841:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
 842:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 843:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Selects input signal HIB_SR0 of ERU0
 844:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 845:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_SR0_INPUT
 846:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** {
 847:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_SR0_INPUT_HIB_IO_0 = SCU_HIBERNATE_HDCR_GPI0SEL_Msk, /**< Set HIB_SR0 to HIB_IO_0 dig
 848:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #if (defined(DOXYGEN) || (UC_PACKAGE == BGA196) || (UC_PACKAGE == BGA144) || (UC_PACKAGE == LQFP144
 849:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_SR0_INPUT_HIB_IO_1 = 0, /**< Set HIB_SR0 to HIB_IO_1 digital input. @note Only availa
 850:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 851:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #if (defined(DOXYGEN) || (UC_SERIES == XMC44) || (UC_SERIES == XMC42) || (UC_SERIES == XMC41))
 852:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_SR0_INPUT_ACMP0 = SCU_HIBERNATE_HDCR_ADIG0SEL_Msk,  /**< Set HIB_SR0 to LPAC CMP0. @n
 853:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 854:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_SR0_INPUT_t;
 855:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
 856:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #if (defined(DOXYGEN) || (UC_SERIES == XMC44) || (UC_SERIES == XMC42) || (UC_SERIES == XMC41))
 857:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
 858:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #if ((UC_SERIES == XMC44) && (UC_PACKAGE == LQFP100))
 859:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 860:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Selects input signal HIB_SR1 of ERU0. @note Only available in XMC44 in certain packages.
 861:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 862:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_SR1_INPUT
 863:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** {
 864:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_SR1_INPUT_HIB_IO_0 = SCU_HIBERNATE_HDCR_GPI1SEL_Msk, /**< Set HIB_SR1 to HIB_IO_0 dig
 865:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_SR1_INPUT_HIB_IO_1 = 0, /**< Set HIB_SR1 to HIB_IO_1 digital input.  */
 866:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_SR1_INPUT_ACMP1 = SCU_HIBERNATE_HDCR_ADIG1SEL_Msk,  /**< Set HIB_SR0 to LPAC CMP1. */
 867:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_SR1_INPUT_XTAL_GPI = SCU_HIBERNATE_HDCR_XTALGPI1SEL_Msk,  /**< Set HIB_SR0 to RTC_XTA
 868:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_SR1_INPUT_t;
 869:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 870:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
 871:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 872:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * HIB LPAC input selection
 873:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 874:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_LPAC_INPUT
 875:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** {
 876:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_INPUT_DISABLED = 0 << SCU_HIBERNATE_LPACCONF_CMPEN_Pos, /**< Comparator permanen
 877:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_INPUT_VBAT = 0x1 << SCU_HIBERNATE_LPACCONF_CMPEN_Pos, /**< Comparator activated 
 878:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_INPUT_HIB_IO_0 = 0x2 << SCU_HIBERNATE_LPACCONF_CMPEN_Pos, /**< Comparator activa
 879:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #if (defined(DOXYGEN) || ((UC_SERIES == XMC44) && (UC_PACKAGE == LQFP100)))
 880:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_INPUT_HIB_IO_1 = 0x4 << SCU_HIBERNATE_LPACCONF_CMPEN_Pos, /**< Comparator activa
 881:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 882:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_LPAC_INPUT_t;
 883:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
 884:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 885:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * HIB LPAC start trigger selection for selected inputs
 886:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 887:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_LPAC_TRIGGER
 888:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** {
 889:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_TRIGGER_SUBSECOND_INTERVAL_COUNTER = 0 << SCU_HIBERNATE_LPACCONF_TRIGSEL_Pos, /*
 890:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_TRIGGER_RTC_ALARM_EVENT = 0x1 << SCU_HIBERNATE_LPACCONF_TRIGSEL_Pos, /**< RTC al
 891:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_TRIGGER_RTC_PERIODIC_EVENT = 0x2 << SCU_HIBERNATE_LPACCONF_TRIGSEL_Pos, /**< RTC
 892:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_TRIGGER_ON_WAKEUP_POSITIVE_EDGE_EVENT = 0x3 << SCU_HIBERNATE_LPACCONF_TRIGSEL_Po
 893:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_TRIGGER_ON_WAKEUP_NEGATIVE_EDGE_EVENT = 0x5 << SCU_HIBERNATE_LPACCONF_TRIGSEL_Po
 894:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_TRIGGER_CONTINOUS = 0x6 << SCU_HIBERNATE_LPACCONF_TRIGSEL_Pos, /**< Continuous m
 895:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_TRIGGER_SINGLE_SHOT = 0x7 << SCU_HIBERNATE_LPACCONF_TRIGSEL_Pos, /**< Single sho
 896:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_LPAC_TRIGGER_t;
 897:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
 898:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 899:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * HIB LPAC status
 900:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 901:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_LPAC_STATUS
 902:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** {
 903:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_STATUS_VBAT_COMPARE_DONE = SCU_HIBERNATE_LPACST_VBATSCMP_Msk, /**< VBAT compare 
 904:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_STATUS_HIB_IO_0_COMPARE_DONE = SCU_HIBERNATE_LPACST_AHIBIO0SCMP_Msk, /**< HBI_IO
 905:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #if (defined(DOXYGEN) || ((UC_SERIES == XMC44) && (UC_PACKAGE == LQFP100)))
 906:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_STATUS_HIB_IO_1_COMPARE_DONE = SCU_HIBERNATE_LPACST_AHIBIO1SCMP_Msk, /**< HBI_IO
 907:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 908:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_STATUS_VBAT_ABOVE_THRESHOLD = SCU_HIBERNATE_LPACST_VBATVAL_Msk, /**< VBAT compar
 909:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_STATUS_HIB_IO_0_ABOVE_THRESHOLD = SCU_HIBERNATE_LPACST_AHIBIO0VAL_Msk, /**< HBI_
 910:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #if (defined(DOXYGEN) || ((UC_SERIES == XMC44) && (UC_PACKAGE == LQFP100)))
 911:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_STATUS_HIB_IO_1_ABOVE_THRESHOLD = SCU_HIBERNATE_LPACST_AHIBIO1VAL_Msk, /**< HBI_
 912:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 913:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_LPAC_STATUS_t;
 914:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
 915:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #endif /* (defined(DOXYGEN) || (UC_SERIES == XMC44) || (UC_SERIES == XMC42) || (UC_SERIES == XMC41)
 916:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
 917:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**************************************************************************************************
 918:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * DATA STRUCTURES
 919:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  **************************************************************************************************
 920:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
 921:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 922:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines a data structure for initializing the PLL functional block.
 923:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Structure holds divider values for N-DIV, P-DIV, K1-DIV, K2-DIV in order to generate desired
 924:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *  frequency using VCO. It holds the PLL mode of operation either normal or prescaler (VCO bypasse
 925:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_CLOCK_PLL_CONFIG_t for accessing these structure parameters.
 926:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 927:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** typedef struct XMC_SCU_CLOCK_SYSPLL_CONFIG
 928:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** {
 929:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   uint8_t n_div;                       /**<  PLL N-Divider value. */
 930:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   uint8_t p_div;                       /**<  PLL P-Divider value. */
 931:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   uint8_t k_div;                       /**<  K1-Divider(Prescalar mode) or K2-Divider (Normal mode)
 932:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SYSPLL_MODE_t mode;    /**<  PLL mode of operation. */
 933:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SYSPLLCLKSRC_t clksrc; /**<  PLL divider input frequency. */
 934:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_SYSPLL_CONFIG_t;
 935:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
 936:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 937:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines a data structure used for initializing the clock functional block.
 938:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Clock functional block configures clock source needed for various peripheral and its divider va
 939:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_CLOCK_CONFIG_t for accessing these structure parameters.
 940:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 941:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** typedef struct XMC_SCU_CLOCK_CONFIG
 942:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** {
 943:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SYSPLL_CONFIG_t         syspll_config;      /**< PLL configuration */
 944:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   bool                                  enable_oschp;       /**< Enable external high precision osc
 945:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                  Should be enabled when fOHP has to
 946:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   bool                                  enable_osculp;      /**< Enable external ultra low power os
 947:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                  Should be enabled when fULP has to
 948:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_FOFI_CALIBRATION_MODE_t calibration_mode;   /**< Backup clock trimming mode. */
 949:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_STDBYCLKSRC_t             fstdby_clksrc;      /**< Standby clock source. */
 950:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SYSCLKSRC_t             fsys_clksrc;        /**< Choice of system clock. */
 951:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   uint8_t                               fsys_clkdiv;        /**< Ratio of fPLL to fSYS. */
 952:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   uint8_t                               fcpu_clkdiv;        /**< Ratio of fSys to fCPU. */
 953:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   uint8_t                               fccu_clkdiv;        /**< Ratio of fSys to fCCU. */
 954:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   uint8_t                               fperipheral_clkdiv; /**< Ratio of fSYS to fPERI. */
 955:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** } const XMC_SCU_CLOCK_CONFIG_t;
 956:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
 957:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 958:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Low power modes
 959:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 960:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_POWER_MODE_t
 961:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** {
 962:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_POWER_MODE_SLEEP = 0, /**< sleep mode stops the processor clock */
 963:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_POWER_MODE_DEEPSLEEP = SCB_SCR_SLEEPDEEP_Msk /**< deep sleep mode stops the system clock 
 964:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_POWER_MODE_t;
 965:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
 966:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**************************************************************************************************
 967:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * API PROTOTYPES
 968:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  **************************************************************************************************
 969:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
 970:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #ifdef __cplusplus
 971:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** extern "C" {
 972:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 973:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
 974:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 975:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
 976:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param group   ADC Group to which the channel being monitored belongs to.\n
 977:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *                 \b Range: 0 or 1.
 978:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param channel  The channel whose voltage range has to be monitored.\n
 979:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *                 \b Range: 6 or 7. Value identifies the channel in the selected ADC group.
 980:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
 981:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
 982:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
 983:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
 984:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Enables out of range comparator for the selected ADC group and channel. \n\n
 985:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * The ADC channel input is compared by Out of Range Comparator (ORC) for overvoltage monitoring
 986:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * or for detection of out of range analog inputs. ORC must be turned on explicitly
 987:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * to leverage the auditing feature. ORC is enabled by setting the enable bit in the GORCEN registe
 988:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
 989:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_DisableOutOfRangeComparator()\n\n\n
 990:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 991:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_EnableOutOfRangeComparator(const uint32_t group, const uint32_t channel);
 992:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
 993:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 994:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
 995:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param group   ADC Group to which the channel being monitored belongs to.\n
 996:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *                 \b Range: 0 or 1.
 997:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param channel  The channel whose voltage range has to be monitored.\n
 998:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *                 \b Range: 6 or 7. Value identifies the channel in the selected ADC group.
 999:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1000:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1001:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1002:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1003:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Disables the out of range comparator for the selected ADC group and the channel. \n\n
1004:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Out of range comparator is disabled by clearing the enable bit in the GORCEN register.
1005:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1006:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_EnableOutOfRangeComparator()\n\n\n
1007:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1008:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_DisableOutOfRangeComparator(const uint32_t group, const uint32_t channel);
1009:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
1010:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1011:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1012:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1013:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1014:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Enables die temperature measurement by powering the DTS module.\n\n
1015:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Die temperature sensor is enabled by setting the PWD bit of DTSCON register.
1016:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1017:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_DisableTemperatureSensor(), XMC_SCU_IsTemperatureSensorEnabled(), XMC_SCU_CalibrateTempe
1018:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_StartTemperatureMeasurement(), XMC_SCU_GetTemperatureMeasurement() \n\n\n
1019:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1020:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_EnableTemperatureSensor(void);
1021:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
1022:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1023:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1024:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1025:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1026:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Disables die temperature measurement by powering the DTS module off.\n\n
1027:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Die temperature sensor is disabled by clearing the PWD bit of DTSCON register.
1028:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1029:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_EnableTemperatureSensor(), XMC_SCU_IsTemperatureSensorEnabled(), XMC_SCU_CalibrateTemper
1030:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_StartTemperatureMeasurement(), XMC_SCU_GetTemperatureMeasurement() \n\n\n
1031:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1032:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_DisableTemperatureSensor(void);
1033:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
1034:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1035:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return Status of die temperature sensor. \n
1036:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: true - if temperature sensor is enabled.\n
1037:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *                    false - if temperature sensor is disabled.
1038:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1039:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1040:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the die temperature sensor power status.\n\n
1041:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * The status is obtained by reading the PWD bit of DTSCON register.
1042:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1043:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_EnableTemperatureSensor(), XMC_SCU_CalibrateTemperatureSensor(),
1044:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_StartTemperatureMeasurement(), XMC_SCU_GetTemperatureMeasurement() \n\n\n
1045:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1046:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** bool XMC_SCU_IsTemperatureSensorEnabled(void);
1047:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
1048:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1049:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1050:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param offset  Offset value for calibrating the DTS result.\n
1051:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *                \b Range: 0 to 127.
1052:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param gain    Gain value for calibrating the DTS conversion result.\n
1053:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *                \b Range: 0 to 63.
1054:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1055:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1056:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1057:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1058:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Calibrates the measurement of temperature by configuring the values of offset and gain of \a DTS
1059:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Allows to improve the accuracy of the temperature measurement with the adjustment of \a OFFSET a
1060:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * in the \a DTSCON register.
1061:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Offset adjustment is defined as a shift of the conversion result. The range of the offset adjust
1062:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * resolution that corresponds to +/- 12.5�C. The offset value gets added to the measure result.
1063:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Offset is considered as a signed value.
1064:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Gain adjustment helps in minimizing gain error. When the \a gain value is 0, result is generated
1065:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * When the \a gain value is 63, result is generated with least gain, i.e, \a RESULT - 63 at the hi
1066:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * It is recommended to use following steps:\n
1067:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_StopTempMeasurement to stop temperature measurement if it was started previous
1068:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_CalibrateTempMonitor with desired offset and gain calibration values to the DT
1069:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_SetRawTempLimits with desired lower and upper temperature threshold limit valu
1070:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_StartTempMeasurement to start temperature measurement.\n
1071:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Check whether Die Temperature Sensor (DTS) is busy in conversion by calling \a XMC_SCU_IsTempe
1072:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * conversion complete.\n
1073:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Read the die temperature value using \a XMC_SCU_GetTemperatureMeasurement API.
1074:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1075:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_EnableTemperatureSensor(),
1076:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_StartTemperatureMeasurement(), XMC_SCU_GetTemperatureMeasurement() \n\n\n
1077:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1078:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CalibrateTemperatureSensor(uint32_t offset, uint32_t gain);
1079:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
1080:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1081:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return XMC_SCU_STATUS_t  Result of starting the temperature measurement.\n
1082:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *                           \b Range: \n
1083:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *                              XMC_SCU_STATUS_OK if the measurement is started successfully.\n
1084:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *                              XMC_SCU_STATUS_ERROR if temperature sensor is not enabled.\n
1085:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *                              XMC_SCU_STATUS_BUSY if temperature sensor is busy measuring the tem
1086:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1087:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1088:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1089:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Starts die temperature measurement using internal temperature sensor.\n\n
1090:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * The API checks if the temperature sensor is enabled and is not busy in measurement.\n
1091:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * It is recommended to use following steps:\n
1092:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_StopTempMeasurement to stop temperature measurement if it was started previous
1093:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_SetRawTempLimits with desired lower and upper temperature threshold limit valu
1094:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_StartTempMeasurement to start temperature measurement.\n
1095:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Check whether Die Temperature Sensor (DTS) is busy in conversion by calling \a XMC_SCU_IsTempe
1096:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * conversion complete.\n
1097:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Read the die temperature value using \a XMC_SCU_GetTemperatureMeasurement API.
1098:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1099:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_EnableTemperatureSensor(), XMC_SCU_CalibrateTemperatureSensor(),
1100:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_GetTemperatureMeasurement() \n\n\n
1101:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1102:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** XMC_SCU_STATUS_t XMC_SCU_StartTemperatureMeasurement(void);
1103:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
1104:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
1105:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1106:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1107:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Measured temperature value.\n
1108:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *              \b Range: Valid temperature range is 0 to 1023. \n
1109:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *              If sensor is not enabled, 0x7FFFFFFFH is returned.
1110:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1111:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1112:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Reads the measured value of die temperature.\n\n
1113:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Temperature measurement result is read from \a RESULT bit field of \a DTSSTAT register.
1114:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * The temperature measured in �C is given by (RESULT - 605) / 2.05 [�C]
1115:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1116:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_IsTemperatureSensorBusy() \n\n\n
1117:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1118:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_GetTemperatureMeasurement(void);
1119:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
1120:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1121:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return bool  Indicates if the die temperature sensor is busy.\n
1122:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *                    \b Range: \a true if sensor is busy in temperature measurement.
1123:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *                    \a false if sensor is free and can accept a new request for measurement.
1124:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1125:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1126:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Checks whether Die Temperature Sensor (DTS) is busy in temperature measurement.\n\n
1127:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * The status is read from the \a BUSY bit field of the \a DTSSTAT register.
1128:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1129:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_GetTemperatureMeasurement() \n\n\n
1130:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1131:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** bool XMC_SCU_IsTemperatureSensorBusy(void);
1132:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
1133:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1134:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return bool Status of die temperature sensor whether it is ready to start measurement. \n
1135:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: \n \a true if temperature sensor is ready to start measurement. \n
1136:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \a false if temperature sensor is not ready to start measurement.
1137:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1138:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1139:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Checks if the die temperature sensor is ready to start a measurement\n\n
1140:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * The status is obtained by reading \a RDY bit of \a DTSSTAT register. It is recommended
1141:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * to check the ready status of die temperature sensor before starting it.
1142:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1143:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_StartTemperatureMeasurement(), XMC_SCU_IsTemperatureSensorBusy() \n\n\n
1144:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1145:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** bool XMC_SCU_IsTemperatureSensorReady(void);
1146:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
1147:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #if ((UC_SERIES == XMC41) || (UC_SERIES == XMC42) || (UC_SERIES == XMC44))
1148:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1149:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return bool  Indicates if the measured die temperature value has exceeded the configured upper 
1150:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *              \b Range: \a true if the temperature value has exceeded the configured upper limit.
1151:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *              if the temperature value is less than the configured upper limit.
1152:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1153:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1154:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Checks if the measured temperature has exceeded the configured upper limit of temperature.\n\n
1155:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * The API checks \a OVERFL bit (Upper Limit Overflow Status bit) of \a DTEMPALARM register.
1156:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * The \a OVERFL bit will be set if the measured temperature has exceeded the limit configured in
1157:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * the bitfield \a UPPER in the \a DTEMPLIM register.
1158:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1159:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_SetRawTempLimits(),XMC_SCU_LowTemperature() \n\n\n
1160:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \note Only available in XMC44, XMC42 and XMC41 series
1161:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1162:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** bool XMC_SCU_HighTemperature(void);
1163:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
1164:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1165:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1166:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param lower_temp  Lower threshold of die temperature. If measured temperature falls below this 
1167:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *                    alarm bit will be set in \a UNDERFL bit field of \a DTEMPALARM register.
1168:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param upper_temp  Upper threshold of die temperature. If measured temperature exceeds this valu
1169:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *                    alarm bit will be set in \a OVERFL bit field of \a DTEMPALARM register.
1170:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1171:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1172:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1173:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1174:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Configures the lower and upper threshold of die temperature.\n\n
1175:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * API configures \a DTEMPLIM register for upper and lower die temperature threshold limits.
1176:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * When the measured temperature is outside the range defined by the limits, alarm bits \a UNDERFL 
1177:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * will be set in the register \a DTEMPALARM.\n
1178:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * It is recommended to use following steps:\n
1179:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_StopTempMeasurement to stop temperature measurement if it was started previous
1180:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_SetRawTempLimits with desired lower and upper temperature threshold limit valu
1181:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_StartTempMeasurement to start temperature measurement.\n
1182:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Use \a XMC_SCU_HighTemperature() and XMC_SCU_LowTemperature() to monitor the temperature.\n
1183:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1184:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_HighTemperature(), XMC_SCU_LowTemperature() \n\n\n
1185:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \note Only available in XMC44, XMC42 and XMC41 series
1186:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1187:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_SetRawTempLimits(const uint32_t lower_temp, const uint32_t upper_temp);
1188:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
1189:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1190:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return bool  Indicates if the measured die temperature value has dropped below the configured l
1191:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *              \b Range: \a true if the temperature value has dropped below the configured lower l
1192:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *              if the temperature value is higher than the configured lower limit.
1193:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1194:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1195:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Checks if the measured temperature has dropped below the configured lower limit of temperature.\
1196:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * The API checks \a UNDERFL bit (Lower LimitUnderflow Status bit) of \a DTEMPALARM register.
1197:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * The \a UNDERFL bit will be set if the measured temperature has dropped below the limit configure
1198:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * the bitfield \a LOWER in the \a DTEMPLIM register.
1199:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1200:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_SetRawTempLimits(),XMC_SCU_HighTemperature() \n\n\n
1201:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \note Only available in XMC44, XMC42 and XMC41 series
1202:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1203:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** bool XMC_SCU_LowTemperature(void);
1204:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
1205:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
1206:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1207:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t Configured boot mode for the device.\n
1208:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_BOOTMODE_t for enumeration of different boot modes.
1209:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1210:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1211:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the boot mode configured for the device.\n\n
1212:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * The boot mode is read from the \a STCON register bit field \a SWCON.
1213:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1214:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1215:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_SetBootMode() \n\n\n
1216:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1217:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_GetBootMode(void);
1218:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
1219:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1220:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1221:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param mode Boot mode to be configured for the device.\n
1222:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_BOOTMODE_t for selecting the boot mode.
1223:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1224:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1225:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1226:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1227:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Configures the desired boot mode for the device.\n\n
1228:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * The XMC4 series devices support multiple boot modes. A running application can set a desired boo
1229:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * launch it by means of software reset. Switching of boot modes should be handled carefully. User 
1230:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * the initial boot sequence is executed. A stable execution environment should be maintained when 
1231:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * eventually handed over to the application program.\n
1232:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * It is recommended to use following steps to launch requested bootmode:\n
1233:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_SetBootMode() with desired boot mode value.\n
1234:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Trigger a software reset using system reset request by enabling a bit \a SYSRESETREQ of AIRCR 
1235:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *   (PPB->AIRCR |= PPB_AIRCR_SYSRESETREQ_Msk).\n
1236:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1237:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_GetBootMode() \n\n\n
1238:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1239:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_SetBootMode(const XMC_SCU_BOOTMODE_t mode);
1240:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
1241:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1242:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1243:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param index  The SCU general purpose register to be read.\n
1244:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: 0 and 1 corresponding to GPR0 and GPR1.
1245:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1246:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Data read from the selected general purpose register.
1247:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1248:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1249:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides stored data from general purpose SCU register.\n\n
1250:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * SCU consists of 2 general purpose registers. These registers can be used for storing
1251:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * data. The API reads from either GPR0 or GPR1 based on the \a index value.
1252:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1253:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_WriteGPR()\n\n\n
1254:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1255:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_ReadGPR(const uint32_t index);
1256:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
1257:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1258:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1259:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param index  The SCU general purpose register to be written.\n
1260:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: 0 and 1 corresponding to GPR0 and GPR1.
1261:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param data  Data to be written to the selected general purpose register.
1262:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1263:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1264:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1265:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1266:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Stores data in the selected general purpose SCU register.\n\n
1267:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * SCU consists of 2 general purpose registers. These registers can be used for storing
1268:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * data. The API writes data to either GPR0 or GPR1 based on the \a index value.
1269:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1270:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_ReadGPR()\n\n\n
1271:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1272:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_WriteGPR(const uint32_t index, const uint32_t data);
1273:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
1274:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1275:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1276:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param address  Location in the retention memory to be written.\n
1277:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: 4 bit address space is provided for selecting 16 words of 32 bits.
1278:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  equivalent to 64 bytes of data. \a address value should be from
1279:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  0 to 15.
1280:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param data    32 bit data to be written into retention memory. The API writes
1281:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *                one word(4 bytes) of data to the address specified.\n
1282:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *                \b Range: 32 bit data.
1283:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1284:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1285:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1286:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1287:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Writes input data to the selected address of Retention memory in hibernate domain.\n\n
1288:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * The retention memory is located in hibernate domain.
1289:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * It is used for the purpose of store/restore of context information.
1290:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Access to the retention memory space is served over shared serial interface.
1291:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Retention memory content is retained even in hibernate mode.
1292:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1293:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_ReadFromRetentionMemory() \n\n\n
1294:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1295:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_WriteToRetentionMemory(uint32_t address, uint32_t data);
1296:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
1297:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1298:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1299:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param address  Location in the retention memory to be read.\n
1300:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: 4 bit address space is provided for selecting 16 words of 32 bits.
1301:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  equivalent to 64 bytes of data. \a address value should be from
1302:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  0 to 15.
1303:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1304:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  32 bit data read from retention memory. The API reads
1305:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *                one word(4 bytes) of data from the address specified.\n
1306:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *                \b Range: 32 bit data.
1307:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1308:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1309:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Reads data from selected address of retention memory in hibernate domain.\n\n
1310:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * The retention memory is located in hibernate domain.
1311:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * It is used for the purpose of store/restore of context information.
1312:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Access to the retention memory space is served over shared serial interface.
1313:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Retention memory content is retained even in hibernate mode.
1314:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1315:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_WriteToRetentionMemory() \n\n\n
1316:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1317:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_ReadFromRetentionMemory(uint32_t address);
1318:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
1319:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1320:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1321:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param request  Non-maskable interrupt (NMI) request source to be enabled.\n
1322:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *              \b Range: Use type @ref XMC_SCU_NMIREQ_t for selecting the source of NMI. Multiple
1323:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *              sources can be combined using \a OR operation.
1324:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1325:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1326:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1327:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1328:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Selectively enables interrupt sources to generate non maskable interrupt(NMI).\n\n
1329:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * NMI assertion can be individually enabled by setting corresponding bit of an interrupt in the
1330:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \a NMIREQEN register.
1331:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1332:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_INTERRUPT_DisableNmiRequest() \n\n\n
1333:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1334:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_INTERRUPT_EnableNmiRequest(const uint32_t request);
1335:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
1336:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1337:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1338:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param request  Non-maskable interrupt (NMI) request source to be disabled.\n
1339:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *              \b Range: Use type @ref XMC_SCU_NMIREQ_t for selecting the source of NMI. Multiple
1340:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *              sources can be combined using \a OR operation.
1341:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1342:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1343:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1344:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1345:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Selectively disables interrupt sources from generating non maskable interrupt(NMI).\n\n
1346:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * NMI assertion can be individually disabled by clearing corresponding bits in the \a NMIREQEN reg
1347:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1348:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_INTERRUPT_EnableNmiRequest() \n\n\n
1349:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1350:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_INTERRUPT_DisableNmiRequest(const uint32_t request);
1351:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
1352:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1353:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1354:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param trap  The event for which, trap generation has to be enabled.\n
1355:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_TRAP_t to identify the event.
1356:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1357:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1358:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1359:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1360:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Enables assertion of trap for the selected trap event.\n\n
1361:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Trap assertion can be individually enabled by clearing respective bit of the
1362:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * event in \a TRAPDIS register in order to get an exception.
1363:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1364:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_TRAP_Disable(), XMC_SCU_TRAP_ClearStatus(), XMC_SCU_TRAP_GetStatus() \n\n\n
1365:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1366:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_TRAP_Enable(const uint32_t trap);
1367:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
1368:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1369:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1370:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param trap  The event for which, trap generation has to be disabled.\n
1371:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_TRAP_t to identify the event.
1372:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1373:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1374:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1375:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1376:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Disables assertion of trap for the selected trap event.\n\n
1377:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Trap assertion can be individually disabled by setting the respective event bit
1378:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * in the \a TRAPDIS register in order to suppress trap generation.
1379:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1380:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_TRAP_Enable(), XMC_SCU_TRAP_ClearStatus(), XMC_SCU_TRAP_GetStatus() \n\n\n
1381:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1382:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_TRAP_Disable(const uint32_t trap);
1383:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
1384:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1385:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1386:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param trap  The event for which, trap status bit has to be cleared.\n
1387:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_TRAP_t to identify the event.
1388:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1389:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1390:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1391:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1392:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Clears the trap status of input event.\n\n
1393:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Once a trap event is detected, it will have to be acknowledged and later serviced.
1394:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * The trap status bit should be cleared to detect the occurence of trap next time.
1395:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * This is useful while polling for TRAPSTAT without enabling the NMI for trap.
1396:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Trap status can be cleared by setting the event bit in the \a TRAPCLR register.
1397:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1398:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_INTERRUPT_EnableNmiRequest(), XMC_SCU_TRAP_GetStatus() \n\n\n
1399:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1400:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_TRAP_ClearStatus(const uint32_t trap);
1401:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
1402:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1403:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Status of trap generating events.\n
1404:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_TRAP_t to identify the event. The returned
1405:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * value indicates the status of multiple events at their respective bit positions.
1406:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * User should mask the bits of the events of interest using the type specified.
1407:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1408:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1409:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the status of trap generating events. \n\n
1410:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * The status is read from \a TRAPRAW register. Status of the specific events can be checked
1411:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * using their respective bits in the \a TRAPRAW register. The bit masks can be obtained from
1412:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * the enumeration type @ref XMC_SCU_TRAP_t. Multiple events can be combined using \a OR operation.
1413:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * A trap event is considered to be asserted if the respective bit of the event is set to 1.
1414:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1415:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_INTERRUPT_EnableNmiRequest(), XMC_SCU_TRAP_ClearStatus() \n\n\n
1416:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1417:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_TRAP_GetStatus(void);
1418:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
1419:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1420:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1421:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param trap  The event for which, trap has to be triggered.\n
1422:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_TRAP_t to identify the event.
1423:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1424:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1425:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1426:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1427:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Triggers trap generation for the event specified. \n\n
1428:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * The trap source has to be enabled before invocation of this API.
1429:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Trap event can be triggered by setting its respective bit in the \a TRAPSET register.
1430:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Trap event can be configured to generate a non maskable interrupt by using the API XMC_SCU_INTER
1431:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * It is recommended to use following steps to manually assert a trap event:\n
1432:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_TRAP_EnableEvent with desired trap request source ID.\n
1433:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_TRAP_SetEvent with same trap request source ID to manually assert a trap event
1434:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1435:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_INTERRUPT_EnableNmiRequest(), XMC_SCU_TRAP_GetStatus() \n\n\n
1436:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1437:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_TRAP_Trigger(const uint32_t trap);
1438:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
1439:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1440:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1441:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param peripheral  The peripheral to be reset.\n
1442:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Type @ref XMC_SCU_PERIPHERAL_RESET_t enumerates all the peripherals that can be
1443:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1444:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1445:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1446:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1447:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Puts the specified peripheral in to reset state. \n\n
1448:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * The API achieves reset of peripherals by setting the respective bit in the \a PRSET0,  \a PRSET1
1449:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * register. Status of reset assertion automatically stored in the \a PRSTATn register and can be c
1450:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * user software to determine the state of the system and for debug purpose.\n
1451:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * It is recommended to use following steps to assert a peripheral reset:\n
1452:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_RESET_AssertPeripheralReset() with desired peripheral identifier.\n
1453:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_RESET_IsPeripheralResetAsserted with same peripheral identifier to verify whet
1454:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * is in reset state.\n
1455:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1456:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_RESET_IsPeripheralResetAsserted() \n\n\n
1457:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1458:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_RESET_AssertPeripheralReset(const XMC_SCU_PERIPHERAL_RESET_t peripheral);
1459:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
1460:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1461:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1462:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param peripheral  The peripheral to be moved out of reset state.\n
1463:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Type @ref XMC_SCU_PERIPHERAL_RESET_t enumerates all the peripherals that can be
1464:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1465:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1466:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1467:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1468:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Enables the specified peripheral by moving it out of reset state.  \n\n
1469:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Any peripheral should be moved out of reset state for executing its functionality.
1470:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * The API enables the peripheral by setting its respective bit in the \a PRCLR0,  \a PRCLR1 or  \a
1471:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * register. Status of reset deassertion is automatically stored in the \a PRSTATn register and can
1472:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * the user software to determine the state of the system and for debug purpose.\n
1473:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * It is recommended to use following steps to deassert a peripheral reset:\n
1474:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_RESET_DeassertPeripheralReset() with desired peripheral identifier.\n
1475:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_RESET_IsPeripheralResetAsserted() with desired peripheral identifier to verify
1476:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * has been enabled.\n
1477:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1478:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_RESET_AssertPeripheralReset() \n\n\n
1479:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1480:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_RESET_DeassertPeripheralReset(const XMC_SCU_PERIPHERAL_RESET_t peripheral);
1481:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
1482:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1483:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1484:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param peripheral  The peripheral, whose reset status has to be checked.\n
1485:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Type @ref XMC_SCU_PERIPHERAL_RESET_t enumerates all the peripherals.
1486:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1487:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return bool  Status of peripheral reset. \n
1488:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *               \b Range: \a true if peripheral is in reset state. \a false if peripheral is enabl
1489:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1490:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1491:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Checks the reset status of the selected peripheral.\n\n
1492:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * The API reads the reset status from \a PRSTATn register. Returns true if the peripheral is in
1493:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * reset state. On power up of the device, all the peripherals will be in reset state.
1494:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * If the peripheral is enabled, \a false will be returned as the status.
1495:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1496:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_RESET_AssertPeripheralReset(), XMC_SCU_RESET_DeassertPeripheralReset() \n\n\n
1497:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1498:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** bool XMC_SCU_RESET_IsPeripheralResetAsserted(const XMC_SCU_PERIPHERAL_RESET_t peripheral);
1499:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
1500:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1501:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1502:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param memory  The on-chip RAM type, for which the parity error status has to be cleared.\n
1503:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: Use type @ref XMC_SCU_PARITY_t to identify the on-chip RAM type. Multiple
1504:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *          memory status bits can be cleared by using the \a OR operation.
1505:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1506:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1507:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1508:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1509:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Clears the parity error status bit. \n\n
1510:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * When a memory parity error is detected using the status bits in \a PEFLAG register. It has to
1511:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * be cleared by software to detect the parity error from the same memory next time.
1512:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * The API clears the parity error status bit of the selected peripheral by setting the
1513:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * respective bit in the \a PEFLAG register. Status of multiple memory parity errors
1514:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * can be cleared by combining the enum values using \a OR operation.
1515:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1516:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_PARITY_GetStatus(), XMC_SCU_PARITY_Enable(), XMC_SCU_PARITY_EnableTrapGeneration() \n\n\
1517:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1518:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_PARITY_ClearStatus(const uint32_t memory);
1519:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
1520:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1521:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1522:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param memory  The on-chip RAM type, for which the parity error checking has to be enabled.\n
1523:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: Use type @ref XMC_SCU_PARITY_t to identify the on-chip RAM type. Multiple
1524:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *          memory types can be combined using the \a OR operation.
1525:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1526:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1527:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1528:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1529:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Enables parity error checking for the selected on-chip RAM type.\n\n
1530:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Parity error checking can be enabled by setting respective bits in the \a PEEN register.
1531:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Additionally parity error can be configured to generate trap when the error is detected,
1532:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * using the API XMC_SCU_PARITY_EnableTrapGeneration(). Such a trap can be further configured
1533:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * to generate non maskable interrupt(NMI) using the API XMC_SCU_INTERRUPT_EnableNmiRequest().
1534:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1535:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_PARITY_EnableTrapGeneration(), XMC_SCU_INTERRUPT_EnableNmiRequest() \n\n\n
1536:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1537:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_PARITY_Enable(const uint32_t memory);
1538:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
1539:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1540:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1541:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param memory   The on-chip RAM type, for which the parity error checking has to be disabled.\n
1542:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: Use type @ref XMC_SCU_PARITY_t to identify the on-chip RAM type. Multiple
1543:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *          memory types can be combined using the \a OR operation.
1544:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1545:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1546:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1547:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1548:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Disables parity error checking for the selected on-chip RAM type.\n\n
1549:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Parity error detection can be disabled by clearing the respective bit in the \a PEEN register.
1550:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1551:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_PARITY_Enable(), XMC_SCU_PARITY_DisableTrapGeneration() \n\n\n
1552:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1553:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_PARITY_Disable(const uint32_t memory);
1554:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
1555:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1556:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1557:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param memory  The on-chip RAM type, for which the parity error trap generation has to be enable
1558:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: Use type @ref XMC_SCU_PARITY_t to identify the on-chip RAM type. Multiple
1559:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *          memory types can be combined using the \a OR operation.
1560:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1561:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1562:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1563:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1564:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Enables trap assertion for the parity error source.\n\n
1565:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Parity error detection for different types of on-chip RAM can generate trap.
1566:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Trap assertion for parity error can be individually enabled by setting the respective bits
1567:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * in the \a PETE register. The generated trap can be additionally configured to generate
1568:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * non maskable interrupt(NMI) using the API XMC_SCU_INTERRUPT_EnableNmiRequest().
1569:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1570:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_INTERRUPT_EnableNmiRequest(), XMC_SCU_PARITY_DisableTrapGeneration() \n\n\n
1571:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1572:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_PARITY_EnableTrapGeneration(const uint32_t memory);
1573:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
1574:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1575:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1576:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param memory  The on-chip RAM type, for which the parity error trap generation has to be disabl
1577:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: Use type @ref XMC_SCU_PARITY_t to identify the on-chip RAM type. Multiple
1578:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *          memory types can be combined using the \a OR operation.
1579:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1580:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1581:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1582:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1583:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Disables the assertion of trap for the parity error source.\n\n
1584:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Trap assertion can be disabled by clearing the respective bit of the RAM type in the \a PETE reg
1585:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1586:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1587:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_PARITY_EnableTrapGeneration() \n\n\n
1588:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1589:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_PARITY_DisableTrapGeneration(const uint32_t memory);
1590:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
1591:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1592:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1593:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Status of parity error detection for the on-chip RAM modules.\n
1594:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: Use type @ref XMC_SCU_PARITY_t to get the bit mask of each RAM module type.
1595:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1596:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1597:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the status of parity error detection for the on-chip RAM modules.\n\n
1598:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Parity error status information is obtained from the \a PEFLAG register.
1599:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * If a particular RAM module has parity error, its respective bit field will be set to 1 in the
1600:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * returned value. A check for the status of a particular RAM module can be done by
1601:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * masking the returned value with the RAM module identifier from the type @ref XMC_SCU_PARITY_t.
1602:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1603:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_PARITY_ClearStatus() \n\n\n
1604:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1605:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_PARITY_GetStatus(void);
1606:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
1607:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1608:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1609:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param memory  The on-chip RAM type, for which the parity logic should be overriden.\n
1610:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: Use type @ref XMC_SCU_PARITY_t to identify the on-chip RAM type. Multiple
1611:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *          memory types can be combined using the \a OR operation.
1612:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1613:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1614:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1615:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1616:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Enable access to parity bits of SRAM modules for various types of peripherals.
1617:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Enable direct write to parity bits using value selected using XMC_SCU_PARITY_SetParityWriteValue
1618:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1619:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_PARITY_SetParityWriteValue() \n\n\n
1620:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1621:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1622:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE void XMC_SCU_PARITY_OverrideParityBitLogic(uint32_t memory)
1623:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** {
1624:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   SCU_PARITY->MCHKCON = memory;
1625:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** }
1626:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
1627:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1628:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param memory  The on-chip RAM type, for which the parity test has to be enabled.\n
1629:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: Use type @ref XMC_SCU_PARITY_t to identify the on-chip RAM type.
1630:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Only a single memory type should be specified.
1631:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1632:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1633:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1634:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1635:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Selects parity test output from a memory instance that can be inspected using XMC_SCU_PARITY_Get
1636:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1637:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_PARITY_GetParityReadValue() \n\n\n
1638:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1639:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1640:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE void XMC_SCU_PARITY_SelectMemoryTest(const XMC_SCU_PARITY_t memory)
1641:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** {
1642:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   SCU_PARITY->PMTSR = memory;
1643:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** }
1644:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
1645:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1646:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param write_value parity bits value stored with next write access\n
1647:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1648:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1649:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1650:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1651:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * For each byte of a memory module the parity bits corresponding to the next write access are sele
1652:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1653:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1654:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_PARITY_OverrideParityBitLogic() \n\n\n
1655:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1656:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1657:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE void XMC_SCU_PARITY_SetParityWriteValue(uint8_t write_value)
1658:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** {
1659:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   SCU_PARITY->PMTPR = ((write_value << SCU_PARITY_PMTPR_PWR_Pos) & SCU_PARITY_PMTPR_PWR_Msk);
1660:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** }
1661:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
1662:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1663:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return parity bits generated during last read access
1664:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1665:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1666:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * For each byte of a memory module the parity bits generated during the most recent read access ca
1667:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1668:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1669:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_PARITY_OverrideParityBitLogic() \n\n\n
1670:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1671:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1672:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE uint8_t XMC_SCU_PARITY_GetParityReadValue(void)
1673:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** {
1674:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   return ((SCU_PARITY->PMTPR & SCU_PARITY_PMTPR_PRD_Msk) >> SCU_PARITY_PMTPR_PRD_Pos);
1675:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** }
1676:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
1677:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1678:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1679:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param clock  Peripheral for which the clock has to be enabled. \n
1680:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_CLOCK_t to select the peripheral.
1681:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1682:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1683:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1684:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1685:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Enables the source clock for selected peripheral.\n\n
1686:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * The various outputs of Clock Generation Unit (CGU) can be individually enabled by setting the pe
1687:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * specific bit in the \a CLKSET register.\n
1688:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * It is recommended to use following steps to verify whether a source clock of peripheral is enabl
1689:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_CLOCK_EnableClock() with desired peripheral identifier.\n
1690:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_CLOCK_IsClockEnabled() with same peripheral identifier to verify whether the c
1691:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1692:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_DisableClock(), XMC_SCU_RESET_DeassertPeripheralReset() \n\n\n
1693:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1694:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_EnableClock(const XMC_SCU_CLOCK_t clock);
1695:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
1696:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1697:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1698:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param clock  Peripheral for which the clock has to be disabled. \n
1699:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_CLOCK_t to select the peripheral.
1700:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1701:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1702:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1703:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1704:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Disables source clock for the peripheral selected.\n\n
1705:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * The various outputs of Clock Generation Unit (CGU) can be individually disabled  by setting the 
1706:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * specific bits in the \a CLKCLR register.\n
1707:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * It is recommended to use following steps to verify whether clock source of the peripheral is ena
1708:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_CLOCK_DisableClock with desired peripheral identifier.\n
1709:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_CLOCK_IsClockEnabled with same peripheral identifier to verify whether periphe
1710:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1711:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableClock(), XMC_SCU_RESET_AssertPeripheralReset() \n\n\n
1712:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1713:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_DisableClock(const XMC_SCU_CLOCK_t clock);
1714:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
1715:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1716:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1717:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param clock   Peripheral for which the clock status has to be checked. \n
1718:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_CLOCK_t to select the peripheral.
1719:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1720:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return bool  Status of peripheral clock.\n
1721:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: \a true if peripheral clock is enabled. \a false if peripheral clock is disable
1722:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1723:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1724:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Checks the status of peripheral source clock.\n\n
1725:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * The status of peripheral source clock is read from the \a CLKSTATn register.
1726:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Returns \a true if clock is enabled and returns \a false otherwise.
1727:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1728:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableClock(), XMC_SCU_CLOCK_DisableClock() \n\n\n
1729:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1730:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** bool XMC_SCU_CLOCK_IsClockEnabled(const XMC_SCU_CLOCK_t clock);
1731:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
1732:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1733:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1734:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param source  Source of clock for fSYS.\n
1735:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_CLOCK_SYSCLKSRC_t to select the source of clock.\n
1736:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_SYSCLKSRC_OFI for selecting internal fast clock as fSYS.\n
1737:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_SYSCLKSRC_PLL for selecting the output of PLL fPLL as fSYS.
1738:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1739:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1740:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1741:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1742:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Selects the source for system clock (fSYS).\n\n
1743:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * System clock is selected by setting \a SYSSEL bits in the \a SYSCLKCR register.
1744:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * If \a XMC_SCU_CLOCK_SYSCLKSRC_PLL is selected, then the dividers of the PLL have to be
1745:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * additionally configured to achieve the required system clock frequency.
1746:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   * \par<b>Related APIs:</b><BR>
1747:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_StartSystemPll(), XMC_SCU_CLOCK_EnableHighPerformanceOscillator() \n\n\n
1748:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1749:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetSystemClockSource(const XMC_SCU_CLOCK_SYSCLKSRC_t source);
1750:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
1751:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1752:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return XMC_SCU_CLOCK_SYSCLKSRC_t   Source of clock for fSYS.\n
1753:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_CLOCK_SYSCLKSRC_t to select the source of clock.\n
1754:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_SYSCLKSRC_OFI - internal fast clock selected as fSYS.\n
1755:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_SYSCLKSRC_PLL - output of PLL fPLL selected as fSYS.
1756:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1757:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1758:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the selected source of system clock (fSYS). \n\n
1759:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Selected source of fSYS is obtained by reading \a SYSSEL bits of \a SYSCLKCR register.
1760:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1761:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetSystemClockSource(), XMC_SCU_CLOCK_GetSystemPllClockSourceFrequency() \n\n\n
1762:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1763:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE XMC_SCU_CLOCK_SYSCLKSRC_t XMC_SCU_CLOCK_GetSystemClockSource(void)
1764:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** {
1765:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   return (XMC_SCU_CLOCK_SYSCLKSRC_t)(SCU_CLK->SYSCLKCR & SCU_CLK_SYSCLKCR_SYSSEL_Msk);
1766:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** }
1767:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
1768:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1769:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1770:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param source   Source of clock for USB and SDMMC(fUSB/SDMMC).\n
1771:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_CLOCK_USBCLKSRC_t to select the source of clock.\n
1772:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_USBCLKSRC_USBPLL - output of USB PLL as source of USB clock(fUSB/
1773:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_USBCLKSRC_SYSPLL - output of PLL fPLL as source of USB clock(fUSB
1774:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1775:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1776:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1777:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1778:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Selects the source of USB/SDMMC clock (fUSB/SDMMC).\n\n
1779:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * USB and SDMMC use a common clock source. They can either use fUSB PLL or fPLL as the source of c
1780:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * The selection is done by configuring the \a USBSEL bits of \a USBCLKCR register.
1781:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1782:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetUsbClockDivider(), XMC_SCU_CLOCK_GetUsbPllClockFrequency() \n\n\n
1783:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1784:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetUsbClockSource(const XMC_SCU_CLOCK_USBCLKSRC_t source);
1785:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
1786:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1787:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return XMC_SCU_CLOCK_USBCLKSRC_t   Source of clock for USB and SDMMC(fUSB/SDMMC).\n
1788:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_CLOCK_USBCLKSRC_t to identify the source of clock.\n
1789:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_USBCLKSRC_USBPLL - output of USB PLL is selected as source of USB
1790:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_USBCLKSRC_SYSPLL - output of PLL fPLL is selected as source of US
1791:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1792:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1793:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the selected source of USB and SDMMC clock frequency.\n\n
1794:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * The clock source is read from from the \a USBSEL bits of \a USBCLKCR register.
1795:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1796:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetUsbClockDivider(), XMC_SCU_CLOCK_GetUsbPllClockFrequency() \n\n\n
1797:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1798:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE XMC_SCU_CLOCK_USBCLKSRC_t XMC_SCU_CLOCK_GetUsbClockSource(void)
1799:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** {
  27              	 .loc 1 1799 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 00AF     	 add r7,sp,#0
  37              	.LCFI1:
  38              	 .cfi_def_cfa_register 7
1800:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   return (XMC_SCU_CLOCK_USBCLKSRC_t)(SCU_CLK->USBCLKCR & SCU_CLK_USBCLKCR_USBSEL_Msk);
  39              	 .loc 1 1800 0
  40 0004 044B     	 ldr r3,.L3
  41 0006 9B69     	 ldr r3,[r3,#24]
  42 0008 03F48033 	 and r3,r3,#65536
1801:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** }
  43              	 .loc 1 1801 0
  44 000c 1846     	 mov r0,r3
  45 000e BD46     	 mov sp,r7
  46              	.LCFI2:
  47              	 .cfi_def_cfa_register 13
  48              	 
  49 0010 5DF8047B 	 ldr r7,[sp],#4
  50              	.LCFI3:
  51              	 .cfi_restore 7
  52              	 .cfi_def_cfa_offset 0
  53 0014 7047     	 bx lr
  54              	.L4:
  55 0016 00BF     	 .align 2
  56              	.L3:
  57 0018 00460050 	 .word 1342195200
  58              	 .cfi_endproc
  59              	.LFE138:
  61              	 .section .text.XMC_SCU_CLOCK_GetWdtClockSource,"ax",%progbits
  62              	 .align 2
  63              	 .thumb
  64              	 .thumb_func
  66              	XMC_SCU_CLOCK_GetWdtClockSource:
  67              	.LFB139:
1802:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
1803:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1804:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1805:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param source  Clock source for watchdog timer.\n
1806:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type XMC_SCU_CLOCK_WDTCLKSRC_t to identify the clock source.\n
1807:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_WDTCLKSRC_OFI - internal fast oscillator (fOFI)\n
1808:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_WDTCLKSRC_STDBY - backup standby clock (fSTDBY)\n
1809:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_WDTCLKSRC_PLL - PLL output clock (fPLL)
1810:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1811:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1812:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1813:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1814:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Selects the source of WDT clock (fWDT).\n\n
1815:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * The selected value is configured to the \a WDTSEL bits of \a WDTCLKCR register.
1816:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * The watchdog timer counts at the frequency selected using this API. So the time for
1817:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * timeout or pre-warning of watchdog has to be calculated based on this selection.
1818:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1819:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1820:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetWdtClockDivider(), XMC_SCU_CLOCK_GetWdtClockFrequency() \n\n\n
1821:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1822:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetWdtClockSource(const XMC_SCU_CLOCK_WDTCLKSRC_t source);
1823:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
1824:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1825:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return XMC_SCU_CLOCK_WDTCLKSRC_t   Clock source configured for watchdog timer.\n
1826:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type XMC_SCU_CLOCK_WDTCLKSRC_t to identify the clock source.\n
1827:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_WDTCLKSRC_OFI - internal fast oscillator (fOFI)\n
1828:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_WDTCLKSRC_STDBY - backup standby clock (fSTDBY)\n
1829:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_WDTCLKSRC_PLL - PLL output clock (fPLL)
1830:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1831:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1832:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the source of clock used for watchdog timer.\n\n
1833:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a WDTSEL bits of \a WDTCLKCR register.
1834:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * The time for timeout or pre-warning of watchdog has to be calculated based on
1835:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * the clock source selected.
1836:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1837:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetWdtClockDivider(), XMC_SCU_CLOCK_SetWdtClockSource() \n\n\n
1838:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1839:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE XMC_SCU_CLOCK_WDTCLKSRC_t XMC_SCU_CLOCK_GetWdtClockSource(void)
1840:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** {
  68              	 .loc 1 1840 0
  69              	 .cfi_startproc
  70              	 
  71              	 
  72              	 
  73 0000 80B4     	 push {r7}
  74              	.LCFI4:
  75              	 .cfi_def_cfa_offset 4
  76              	 .cfi_offset 7,-4
  77 0002 00AF     	 add r7,sp,#0
  78              	.LCFI5:
  79              	 .cfi_def_cfa_register 7
1841:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   return (XMC_SCU_CLOCK_WDTCLKSRC_t)(SCU_CLK->WDTCLKCR & SCU_CLK_WDTCLKCR_WDTSEL_Msk);
  80              	 .loc 1 1841 0
  81 0004 044B     	 ldr r3,.L7
  82 0006 5B6A     	 ldr r3,[r3,#36]
  83 0008 03F44033 	 and r3,r3,#196608
1842:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** }
  84              	 .loc 1 1842 0
  85 000c 1846     	 mov r0,r3
  86 000e BD46     	 mov sp,r7
  87              	.LCFI6:
  88              	 .cfi_def_cfa_register 13
  89              	 
  90 0010 5DF8047B 	 ldr r7,[sp],#4
  91              	.LCFI7:
  92              	 .cfi_restore 7
  93              	 .cfi_def_cfa_offset 0
  94 0014 7047     	 bx lr
  95              	.L8:
  96 0016 00BF     	 .align 2
  97              	.L7:
  98 0018 00460050 	 .word 1342195200
  99              	 .cfi_endproc
 100              	.LFE139:
 102              	 .section .text.XMC_SCU_CLOCK_GetExternalOutputClockSource,"ax",%progbits
 103              	 .align 2
 104              	 .thumb
 105              	 .thumb_func
 107              	XMC_SCU_CLOCK_GetExternalOutputClockSource:
 108              	.LFB142:
1843:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
1844:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1845:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1846:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param source   Source for standby clock.\n
1847:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: Use type @ref XMC_SCU_HIB_STDBYCLKSRC_t to identify the clock source.\n
1848:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *                    XMC_SCU_HIB_STDBYCLKSRC_OSI - internal slow oscillator (fOSI) \n
1849:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *                    XMC_SCU_HIB_STDBYCLKSRC_OSCULP - ultra low power osciallator (fULP) \n
1850:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1851:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1852:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1853:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1854:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Selects the source of Standby clock (fSTDBY).\n\n
1855:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Clock source is configured by setting the \a STDBYSEL bits of \a HDCR register.
1856:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Hibernate domain should be enabled explicitly before using the API.
1857:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1858:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \note
1859:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * The register update in HIB domain is indicated by the MIRRST register which can be polled using 
1860:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1861:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1862:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_HIB_GetStdbyClockSource(), XMC_SCU_HIB_EnableHibernateDomain() \n\n\n
1863:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1864:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_HIB_SetStandbyClockSource(const XMC_SCU_HIB_STDBYCLKSRC_t source);
1865:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
1866:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1867:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return XMC_SCU_HIB_RTCCLKSRC_t   Source clock of standby clock(fSTDBY).\n
1868:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: Use type @ref XMC_SCU_HIB_STDBYCLKSRC_t to identify the clock source.\n
1869:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *                    XMC_SCU_HIB_STDBYCLKSRC_OSI - internal slow oscillator (fOSI) \n
1870:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *                    XMC_SCU_HIB_STDBYCLKSRC_OSCULP - ultra low power osciallator (fULP) \n
1871:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1872:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1873:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the source of standby clock (fSTDBY).\n\n
1874:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a STDBYSEL bits of \a HDCR register.\n
1875:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1876:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_HIB_SetStandbyClockSource(), XMC_SCU_HIB_EnableHibernateDomain() \n\n\n
1877:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1878:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE XMC_SCU_HIB_RTCCLKSRC_t XMC_SCU_HIB_GetStdbyClockSource(void)
1879:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** {
1880:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   return (XMC_SCU_HIB_RTCCLKSRC_t)(SCU_HIBERNATE->HDCR & SCU_HIBERNATE_HDCR_STDBYSEL_Msk);
1881:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** }
1882:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
1883:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1884:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1885:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param source  Source of RTC clock.\n
1886:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *            \b Range: Use type @ref XMC_SCU_HIB_RTCCLKSRC_t to identify the clock source.\n
1887:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *                       XMC_SCU_HIB_RTCCLKSRC_OSI - internal slow oscillator(fOSI). \n
1888:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *                       XMC_SCU_HIB_RTCCLKSRC_ULP - ultra low power oscillator(fULP). \n
1889:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1890:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1891:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1892:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1893:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Selects the source of RTC clock (fRTC).\n\n
1894:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is configured to \a RCS bit of \a HDCR register.
1895:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * fULP needs external input powered by VBAT or VDDP. fOSI is internal clock.
1896:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * The frequency of the clock will be 32.768 kHz.
1897:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1898:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \note
1899:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * The register update in HIB domain is indicated by the MIRRST register which can be polled using 
1900:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1901:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1902:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_HIB_GetRtcClockSource() \n\n\n
1903:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1904:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_HIB_SetRtcClockSource(const XMC_SCU_HIB_RTCCLKSRC_t source);
1905:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
1906:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1907:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return XMC_SCU_HIB_RTCCLKSRC_t   Source of RTC clock.\n
1908:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *            \b Range: Use type @ref XMC_SCU_HIB_RTCCLKSRC_t to identify the clock source.\n
1909:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *                       XMC_SCU_HIB_RTCCLKSRC_OSI - internal slow oscillator(fOSI). \n
1910:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *                       XMC_SCU_HIB_RTCCLKSRC_ULP - ultra low power oscillator(fULP). \n
1911:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1912:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1913:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the source of RTC clock (fRTC).
1914:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a RCS bit of \a HDCR register.
1915:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * The frequency of the clock will be 32.768 kHz.
1916:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1917:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_HIB_SetRtcClockSource() \n\n\n
1918:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1919:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE XMC_SCU_HIB_RTCCLKSRC_t XMC_SCU_HIB_GetRtcClockSource(void)
1920:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** {
1921:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   return (XMC_SCU_HIB_RTCCLKSRC_t)(SCU_HIBERNATE->HDCR & SCU_HIBERNATE_HDCR_RCS_Msk);
1922:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** }
1923:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
1924:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1925:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1926:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param clock  Source of external clock output(fEXT).\n
1927:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *           \b Range: Use type @ref XMC_SCU_CLOCK_EXTOUTCLKSRC_t to identify the clock.\n
1928:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *                      XMC_SCU_CLOCK_EXTOUTCLKSRC_SYS - system clock fSYS. \n
1929:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *                      XMC_SCU_CLOCK_EXTOUTCLKSRC_USB - USB clock fUSB. \n
1930:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *                      XMC_SCU_CLOCK_EXTOUTCLKSRC_PLL - PLL output fPLL. \n
1931:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \if XMC42
1932:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *                      XMC_SCU_CLOCK_EXTOUTCLKSRC_STDBY - Standby clock fSTDBY. \n
1933:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1934:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \endif
1935:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \if XMC41
1936:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *                      XMC_SCU_CLOCK_EXTOUTCLKSRC_STDBY - Standby clock fSTDBY. \n
1937:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \endif
1938:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1939:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1940:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1941:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1942:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Selects the source of external clock out (fEXT).\n\n
1943:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value will be configured to \a ECKSEL bits of \a EXTCLKCR register.
1944:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1945:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetExternalOutputClockSource(), XMC_SCU_CLOCK_SetExternalOutputClockDivider() \n\n
1946:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1947:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetExternalOutputClockSource(const XMC_SCU_CLOCK_EXTOUTCLKSRC_t clock);
1948:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
1949:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1950:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return XMC_SCU_CLOCK_EXTOUTCLKSRC_t   Source of external clock output(fEXT).\n
1951:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *           \b Range: Use type @ref XMC_SCU_CLOCK_EXTOUTCLKSRC_t to identify the clock.\n
1952:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *                      XMC_SCU_CLOCK_EXTOUTCLKSRC_SYS - system clock fSYS. \n
1953:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *                      XMC_SCU_CLOCK_EXTOUTCLKSRC_USB - USB clock fUSB. \n
1954:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *                      XMC_SCU_CLOCK_EXTOUTCLKSRC_PLL - PLL output fPLL. \n
1955:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \if XMC42
1956:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *                      XMC_SCU_CLOCK_EXTOUTCLKSRC_STDBY - Standby clock fSTDBY. \n
1957:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \endif
1958:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \if XMC41
1959:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *                      XMC_SCU_CLOCK_EXTOUTCLKSRC_STDBY - Standby clock fSTDBY. \n
1960:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \endif
1961:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1962:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1963:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the source of external clock output(fEXT).\n\n
1964:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a ECKSEL bits of \a EXTCLKCR register.
1965:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1966:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetExternalOutputClockSource(), XMC_SCU_CLOCK_SetExternalOutputClockDivider() \n\n
1967:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1968:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE XMC_SCU_CLOCK_EXTOUTCLKSRC_t XMC_SCU_CLOCK_GetExternalOutputClockSource(void)
1969:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** {
 109              	 .loc 1 1969 0
 110              	 .cfi_startproc
 111              	 
 112              	 
 113              	 
 114 0000 80B4     	 push {r7}
 115              	.LCFI8:
 116              	 .cfi_def_cfa_offset 4
 117              	 .cfi_offset 7,-4
 118 0002 00AF     	 add r7,sp,#0
 119              	.LCFI9:
 120              	 .cfi_def_cfa_register 7
1970:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   return (XMC_SCU_CLOCK_EXTOUTCLKSRC_t)(SCU_CLK->EXTCLKCR & SCU_CLK_EXTCLKCR_ECKSEL_Msk);
 121              	 .loc 1 1970 0
 122 0004 054B     	 ldr r3,.L11
 123 0006 9B6A     	 ldr r3,[r3,#40]
 124 0008 DBB2     	 uxtb r3,r3
 125 000a 03F00703 	 and r3,r3,#7
 126 000e DBB2     	 uxtb r3,r3
1971:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** }
 127              	 .loc 1 1971 0
 128 0010 1846     	 mov r0,r3
 129 0012 BD46     	 mov sp,r7
 130              	.LCFI10:
 131              	 .cfi_def_cfa_register 13
 132              	 
 133 0014 5DF8047B 	 ldr r7,[sp],#4
 134              	.LCFI11:
 135              	 .cfi_restore 7
 136              	 .cfi_def_cfa_offset 0
 137 0018 7047     	 bx lr
 138              	.L12:
 139 001a 00BF     	 .align 2
 140              	.L11:
 141 001c 00460050 	 .word 1342195200
 142              	 .cfi_endproc
 143              	.LFE142:
 145              	 .section .text.XMC_SCU_CLOCK_GetSystemClockFrequency,"ax",%progbits
 146              	 .align 2
 147              	 .thumb
 148              	 .thumb_func
 150              	XMC_SCU_CLOCK_GetSystemClockFrequency:
 151              	.LFB151:
1972:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
1973:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1974:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1975:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param source  Source of clock for system PLL.\n
1976:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_CLOCK_SYSPLLCLKSRC_t for identifying the clock source.\n
1977:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *                            XMC_SCU_CLOCK_SYSPLLCLKSRC_OSCHP - External High performance oscillat
1978:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *                            XMC_SCU_CLOCK_SYSPLLCLKSRC_OFI - Internal fast clock (fOFI).
1979:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1980:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1981:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1982:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1983:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Selects the source of system PLL.\n\n
1984:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is configured to \a VCOBYP bit of \a PLLCON0 register.
1985:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * If \a XMC_SCU_CLOCK_SYSPLLCLKSRC_OSCHP is selected, ensure that the high performance oscillator 
1986:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * enabled by using the API XMC_SCU_CLOCK_EnableHighPerformanceOscillator().
1987:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1988:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableHighPerformanceOscillator()\n\n\n
1989:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1990:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetSystemPllClockSource(const XMC_SCU_CLOCK_SYSPLLCLKSRC_t source);
1991:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
1992:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1993:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return XMC_SCU_CLOCK_OSCCLKSRC_t   Source of clock for system PLL.\n
1994:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_CLOCK_SYSPLLCLKSRC_t for identifying the clock source.\n
1995:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *                            XMC_SCU_CLOCK_SYSPLLCLKSRC_OSCHP - External High performance oscillat
1996:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *                            XMC_SCU_CLOCK_SYSPLLCLKSRC_OFI - Internal fast clock (fOFI).
1997:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1998:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1999:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the source of system PLL clock (fPLL). \n\n
2000:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a VCOBYP bit of \a PLLCON0 register.
2001:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2002:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableHighPerformanceOscillator(), XMC_SCU_CLOCK_SetSystemPllClockSource()\n\n\n
2003:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2004:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE XMC_SCU_CLOCK_SYSPLLCLKSRC_t XMC_SCU_CLOCK_GetSystemPllClockSource(void)
2005:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** {
2006:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   return (XMC_SCU_CLOCK_SYSPLLCLKSRC_t)(SCU_PLL->PLLCON0 & SCU_PLL_PLLCON0_VCOBYP_Msk);
2007:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** }
2008:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
2009:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(ECAT0)
2010:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2011:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2012:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param source  Source of ECAT clock.\n
2013:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *            \b Range: Use type @ref XMC_SCU_CLOCK_ECATCLKSRC_t to identify the clock source.\n
2014:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *                       XMC_SCU_CLOCK_ECATCLKSRC_USBPLL - USB PLL (fUSBPLL) as a source for ECAT c
2015:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *                       XMC_SCU_CLOCK_ECATCLKSRC_SYSPLL - Main PLL output (fPLL) as a source for E
2016:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2017:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
2018:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2019:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2020:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Selects the source of ECAT clock (fECAT).\n\n
2021:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is configured to \a ECATSEL bit of \a ECATCLKCR register.
2022:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2023:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetECATClockSource() \n\n\n
2024:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2025:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE void XMC_SCU_CLOCK_SetECATClockSource(const XMC_SCU_CLOCK_ECATCLKSRC_t source)
2026:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** {
2027:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   SCU_CLK->ECATCLKCR = (SCU_CLK->ECATCLKCR & ((uint32_t)~SCU_CLK_ECATCLKCR_ECATSEL_Msk)) |
2028:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****                        ((uint32_t)source);
2029:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** }
2030:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
2031:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2032:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return XMC_SCU_CLOCK_ECATCLKSRC_t   Source of ECAT clock.\n
2033:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *            \b Range: Use type @ref XMC_SCU_CLOCK_ECATCLKSRC_t to identify the clock source.\n
2034:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *                       XMC_SCU_CLOCK_ECATCLKSRC_USBPLL - USB PLL (fUSBPLL) as a source for ECAT c
2035:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *                       XMC_SCU_CLOCK_ECATCLKSRC_SYSPLL - Main PLL output (fPLL) as a source for E
2036:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2037:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2038:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the source of ECAT clock (fECAT).
2039:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a ECATSEL bit of \a ECATCLKCR register.
2040:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2041:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_HIB_SetRtcClockSource() \n\n\n
2042:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2043:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE XMC_SCU_CLOCK_ECATCLKSRC_t XMC_SCU_CLOCK_GetECATClockSource(void)
2044:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** {
2045:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   return (XMC_SCU_CLOCK_ECATCLKSRC_t)((SCU_CLK->ECATCLKCR & SCU_CLK_ECATCLKCR_ECATSEL_Msk) >> SCU_C
2046:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** }
2047:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
2048:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
2049:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2050:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2051:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param divider   Ratio of fSYS clock source to the value of fSYS.
2052:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *              \b Range: 1 to 256.
2053:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2054:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
2055:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2056:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2057:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Configures the ratio of system clock source to the value of system clock frequency.\n\n
2058:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is configured as \a SYSDIV bits of \a SYSCLKCR register. The divider value is
2059:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * decremented by 1 before configuring.
2060:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2061:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetSystemClockDivider(),  XMC_SCU_CLOCK_SetSystemClockSource() \n\n\n
2062:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2063:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetSystemClockDivider(const uint32_t divider);
2064:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
2065:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2066:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t   Ratio of fSYS clock source to the value of fSYS.
2067:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *              \b Range: 0 to 255.
2068:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2069:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2070:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the value of ratio between the source of system clock to the the value of system clock 
2071:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a SYSDIV bits of \a SYSCLKCR register.
2072:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2073:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetSystemClockDivider(),  XMC_SCU_CLOCK_SetSystemClockSource() \n\n\n
2074:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2075:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_CLOCK_GetSystemClockDivider(void)
2076:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** {
2077:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   return (uint32_t)((SCU_CLK->SYSCLKCR & SCU_CLK_SYSCLKCR_SYSDIV_Msk) >> SCU_CLK_SYSCLKCR_SYSDIV_Po
2078:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** }
2079:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
2080:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2081:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2082:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param ratio  Ratio of fCCU clock source to the value of fCCU.
2083:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *              \b Range: 1 or 2.\n
2084:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  1-> fCCU= fSYS \n
2085:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  2-> fCCU= fSYS/2.
2086:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2087:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
2088:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2089:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2090:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Configures the divider for CCU clock source. \n\n
2091:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Capture compare unit(CCU) can take either fSYS or fSYS/2 as the source of clock.
2092:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * The configuration is set to \a CCUDIV bit of \a CCUCLKCR register. The CCUDIV bit is 1 bit wide.
2093:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2094:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2095:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetCcuClockDivider() \n\n\n
2096:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2097:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetCcuClockDivider(const uint32_t ratio);
2098:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
2099:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2100:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Ratio of fCCU clock source to the value of fCCU.
2101:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *              \b Range: 0 or 1.\n
2102:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  0-> fCCU= fSYS \n
2103:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  1-> fCCU= fSYS/2.
2104:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2105:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2106:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the ratio of CCU clock(fCCU) to system clock(fSYS).\n\n
2107:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a CCUDIV bit of \a CCUCLKCR register.
2108:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2109:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2110:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetCcuClockDivider() \n\n\n
2111:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2112:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_CLOCK_GetCcuClockDivider(void)
2113:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** {
2114:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   return (uint32_t)((SCU_CLK->CCUCLKCR & SCU_CLK_CCUCLKCR_CCUDIV_Msk) >> SCU_CLK_CCUCLKCR_CCUDIV_Po
2115:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** }
2116:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
2117:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2118:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2119:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param ratio  Ratio between system clock(fSYS) and CPU clock(fCPU).
2120:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 1 or 2.\n
2121:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *            1-> fCPU= fSYS. \n
2122:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *            2-> fCPU= fSYS/2.
2123:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2124:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
2125:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2126:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2127:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Configures the CPU clock by setting the divider value for the system clock. \n\n
2128:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is set to the \a CPUDIV bit of \a CPUCLKCR register.
2129:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2130:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetCpuClockDivider() \n\n\n
2131:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2132:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetCpuClockDivider(const uint32_t ratio);
2133:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
2134:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2135:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t   Ratio between system clock(fSYS) and CPU clock(fCPU).
2136:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 0 or 1.\n
2137:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *            0-> fCPU= fSYS. \n
2138:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *            1-> fCPU= fSYS/2.
2139:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2140:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2141:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the ratio between system clock(fSYS) and CPU clock(fCPU). \n\n
2142:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a CPUDIV bit of \a CPUCLKCR register.
2143:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2144:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetCpuClockDivider() \n\n\n
2145:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2146:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_CLOCK_GetCpuClockDivider(void)
2147:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** {
2148:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   return (uint32_t)((SCU_CLK->CPUCLKCR & SCU_CLK_CPUCLKCR_CPUDIV_Msk) >> SCU_CLK_CPUCLKCR_CPUDIV_Po
2149:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** }
2150:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
2151:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2152:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2153:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param ratio  Ratio of peripheral clock source to the value of peripheral clock.\n
2154:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 1 or 2.\n
2155:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *                1-> fPERIPH= fCPU.\n
2156:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *                2-> fPERIPH= fCPU/2.
2157:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2158:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
2159:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2160:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2161:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Configures the peripheral clock by setting the divider for CPU clock(fCPU).\n\n
2162:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * The peripheral clock can be equal to either fCPU or fCPU/2. The value is configured to \a PBDIV 
2163:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2164:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2165:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetPeripheralClockDivider() \n\n\n
2166:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2167:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetPeripheralClockDivider(const uint32_t ratio);
2168:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
2169:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2170:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Ratio of peripheral clock source to the value of peripheral clock.\n
2171:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 0 or 1.\n
2172:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *                0-> fPERIPH= fCPU.\n
2173:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *                1-> fPERIPH= fCPU/2.
2174:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2175:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2176:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the ratio of CPU clock(fCPU) to peripheral clock(fPERIPH).\n\n
2177:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a PBDIV bit of \a PBCLKCR register.
2178:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2179:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetPeripheralClockDivider() \n\n\n
2180:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2181:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_CLOCK_GetPeripheralClockDivider(void)
2182:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** {
2183:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   return (uint32_t)((SCU_CLK->PBCLKCR & SCU_CLK_PBCLKCR_PBDIV_Msk) >> SCU_CLK_PBCLKCR_PBDIV_Pos);
2184:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** }
2185:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
2186:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2187:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2188:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param ratio   Ratio of PLL output clock(fPLL) to USB clock(fUSB).
2189:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 1 to 8.
2190:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2191:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
2192:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2193:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2194:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Configures the USB clock(fUSB) by setting the USB clock divider. \n\n
2195:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is decremented by 1 before setting it to \a USBDIV bits of \a USBCLKCR register.
2196:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2197:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2198:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetUsbClockDivider(), XMC_SCU_CLOCK_SetUsbClockSource() \n\n\n
2199:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2200:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetUsbClockDivider(const uint32_t ratio);
2201:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
2202:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2203:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2204:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Ratio of PLL output clock(fPLL) to USB clock(fUSB).
2205:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 0 to 7.
2206:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2207:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2208:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the ratio between PLL output frequency(fPLL) and USB clock(fUSB).\n\n
2209:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a USBDIV bit of \a USBCLKCR register.
2210:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2211:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetUsbClockDivider(), XMC_SCU_CLOCK_GetUsbClockSource() \n\n\n
2212:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2213:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_CLOCK_GetUsbClockDivider(void)
2214:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** {
2215:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   return (uint32_t)((SCU_CLK->USBCLKCR & SCU_CLK_USBCLKCR_USBDIV_Msk) >> SCU_CLK_USBCLKCR_USBDIV_Po
2216:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** }
2217:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
2218:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
2219:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
2220:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(EBU)
2221:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2222:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2223:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param ratio Ratio of PLL clock(fPLL) to EBU clock(fEBU).\n
2224:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 1 to 64.
2225:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2226:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
2227:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2228:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2229:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Configures the EBU clock(fEBU) by setting the divider value.\n\n
2230:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * The clock divider is configured to the \a EBUDIV bits of \a EBUCLKCR register.
2231:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2232:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetEbuClockDivider() \n\n\n
2233:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2234:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetEbuClockDivider(const uint32_t ratio);
2235:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
2236:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2237:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2238:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Ratio of PLL clock(fPLL) to EBU clock(fEBU).\n
2239:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 0 to 63.
2240:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2241:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2242:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the ratio between PLL clock(fPLL) and EBU clock(fEBU).\n\n
2243:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a EBUDIV bits of \a EBUCLKCR register.
2244:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2245:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetEbuClockDivider() \n\n\n
2246:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2247:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_CLOCK_GetEbuClockDivider(void)
2248:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** {
2249:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   return (uint32_t)((SCU_CLK->EBUCLKCR & SCU_CLK_EBUCLKCR_EBUDIV_Msk) >> SCU_CLK_EBUCLKCR_EBUDIV_Po
2250:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** }
2251:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
2252:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
2253:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2254:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2255:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param ratio  Ratio between the source of WDT clock and the WDT clock.\n
2256:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 1 to 256.
2257:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2258:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
2259:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2260:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2261:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Configures the WDT clock by setting the clock divider for the WDT clock source.\n\n
2262:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is configured to \a WDTDIV bits of \a WDTCLKCR register. The value of divider
2263:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * is decremented by 1 before configuring. Check the selected clock source for the WDT clock
2264:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * before configuring the divider using the API XMC_SCU_CLOCK_SetWdtClockSource().
2265:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2266:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetWdtClockSource(), XMC_SCU_CLOCK_GetWdtClockDivider() \n\n\n
2267:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2268:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetWdtClockDivider(const uint32_t ratio);
2269:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
2270:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2271:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2272:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Ratio between the source of WDT clock and the WDT clock.\n
2273:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 0 to 255.
2274:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2275:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2276:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the ratio between the WDT parent clock and the WDT clock. \n\n
2277:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a WDTDIV bits of \a WDTCLKCR register.
2278:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Ensure that the WDT parent clock is considered before using the value of
2279:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * the divider value.
2280:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2281:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetWdtClockSource(), XMC_SCU_CLOCK_SetWdtClockDivider() \n\n\n
2282:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2283:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_CLOCK_GetWdtClockDivider(void)
2284:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** {
2285:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   return (uint32_t)((SCU_CLK->WDTCLKCR & SCU_CLK_WDTCLKCR_WDTDIV_Msk) >> SCU_CLK_WDTCLKCR_WDTDIV_Po
2286:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** }
2287:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
2288:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2289:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2290:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param ratio   Ratio between the external output parent clock selected and the output clock.\n
2291:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 1 to 512.
2292:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2293:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
2294:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2295:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2296:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Configures the external output clock by setting the divider value for the parent clock. \n\n
2297:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value will be configured to \a ECKDIV bits of \a EXTCLKCR register.
2298:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * The divider value is decremented by 1 before storing it to the bit fields.
2299:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Ensure that the source of external output clock is configured appropriately using the API
2300:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetExternalOutputClockSource().
2301:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2302:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetExternalOutputClockSource(), XMC_SCU_CLOCK_GetExternalOutputClockDivider() \n\n
2303:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2304:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetExternalOutputClockDivider(const uint32_t ratio);
2305:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
2306:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2307:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2308:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Ratio between the external output parent clock selected and the output clock.\
2309:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 0 to 511.
2310:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2311:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2312:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the divider value applied on parent clock before the generation of external output cloc
2313:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a EXTDIV bit of \a EXTCLKCR register.
2314:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2315:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetExternalOutputClockSource(), XMC_SCU_CLOCK_SetExternalOutputClockDivider() \n\n
2316:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2317:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_CLOCK_GetExternalOutputClockDivider(void)
2318:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** {
2319:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   return (uint32_t)((SCU_CLK->EXTCLKCR & SCU_CLK_EXTCLKCR_ECKDIV_Msk) >> SCU_CLK_EXTCLKCR_ECKDIV_Po
2320:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** }
2321:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
2322:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(ECAT0)
2323:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2324:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2325:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param ratio   Ratio between the source of ECAT clock and the ECAT clock.\n
2326:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 1 to 4.
2327:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2328:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
2329:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2330:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2331:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Configures the ECAT clock by setting the clock divider for the ECAT clock source.\n\n
2332:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is configured to \a ECADIV bits of \a ECATCLKCR register. The value of divider
2333:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * is decremented by 1 before configuring.
2334:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2335:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetECATClockSource(), XMC_SCU_CLOCK_GetECATClockDivider() \n\n\n
2336:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2337:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetECATClockDivider(const uint32_t divider);
2338:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
2339:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2340:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2341:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Ratio between the source of ECAT clock and the ECAT clock.\n
2342:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 0 to 3.
2343:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2344:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2345:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the ratio between the ECAT parent clock and the ECAT clock. \n\n
2346:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a ECADIV bits of \a ECATCLKCR register.
2347:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2348:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetECATClockSource(), XMC_SCU_CLOCK_SetECATClockDivider() \n\n\n
2349:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2350:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_CLOCK_GetECATClockDivider(void)
2351:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** {
2352:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   return (uint32_t)((SCU_CLK->ECATCLKCR & SCU_CLK_ECATCLKCR_ECADIV_Msk) >> SCU_CLK_ECATCLKCR_ECADIV
2353:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** }
2354:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
2355:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
2356:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2357:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2358:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
2359:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2360:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2361:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Enables the high precision oscillator by configuring external crystal mode.\n\n
2362:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * The API configures \a MODE bits of \a OSCHPCTRL register to 0, there by configuring the
2363:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * external clock input.
2364:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * The System Oscillator Watchdog is enabled. The user should check the status
2365:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * of the oscillator using XMC_SCU_CLOCK_IsHighPerformanceOscillatorStable()
2366:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2367:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_DisableHighPerformanceOscillator() \n\n\n
2368:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2369:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_EnableHighPerformanceOscillator(void);
2370:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
2371:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2372:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
2373:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2374:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2375:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Disables the high precision oscillator by disabling the external oscillator.\n\n
2376:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * The API configures \a MODE bits of \a OSCHPCTRL register to 1, there by disabling the
2377:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * external oscillator.
2378:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2379:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableHighPerformanceOscillator() \n\n\n
2380:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2381:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_DisableHighPerformanceOscillator(void);
2382:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
2383:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2384:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2385:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return Status of high performance oscillator
2386:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2387:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2388:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Checks if the OSC_HP oscillator is stable and usable
2389:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2390:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableHighPerformanceOscillator() \n\n\n
2391:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2392:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** bool XMC_SCU_CLOCK_IsHighPerformanceOscillatorStable(void);
2393:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
2394:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2395:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2396:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
2397:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2398:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2399:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Enables XTAL1 input of OSC_ULP as general purpose input.
2400:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Use XMC_SCU_CLOCK_GetHighPerformanceOscillatorGeneralPurposeInputStatus to monitor the status of
2401:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @Note OSC_ULP should be disabled previously using XMC_SCU_CLOCK_DisableHighPerformanceOscillator
2402:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2403:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_DisableHighPerformanceOscillator() \n\n\n
2404:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2405:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_EnableHighPerformanceOscillatorGeneralPurposeInput(void);
2406:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
2407:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2408:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2409:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
2410:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2411:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2412:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Disables XTAL1 input of OSC_ULP as general purpose input.
2413:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2414:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableHighPerformanceOscillatorGeneralPurposeInput() \n\n\n
2415:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2416:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_DisableHighPerformanceOscillatorGeneralPurposeInput(void);
2417:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
2418:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2419:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2420:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return Status OSC_HP XTAL1 pin
2421:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2422:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2423:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Monitor the status of OSC_HP XTAL1 pin.
2424:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2425:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableHighPerformanceOscillatorGeneralPurposeInput() \n\n\n
2426:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2427:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_CLOCK_GetHighPerformanceOscillatorGeneralPurposeInputStatus(void);
2428:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
2429:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2430:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2431:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
2432:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2433:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2434:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Enables ultra low power oscillator(ULP). \n\n
2435:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * It enables the hibernate domain, configures the ultra low power oscillator
2436:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * uisng the \a MODE bits of the \a OSCULCTRL register. The \a Mode bits will be
2437:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * reset to 0 to enable the low power oscillator. Mirror register update delays
2438:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * are handled internally.
2439:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * The OSC_ULP Oscillator Watchdog is enabled. The user should check the status
2440:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * of the oscillator using XMC_SCU_CLOCK_IsLowPowerOscillatorStable()
2441:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2442:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_DisableLowPowerOscillator()
2443:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_IsLowPowerOscillatorStable() \n\n\n
2444:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2445:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_EnableLowPowerOscillator(void);
2446:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
2447:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2448:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2449:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
2450:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2451:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2452:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Disables ultra low power oscillator.\n\n
2453:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * It is disabled by setting the \a MODE bits of \a OSCULCTRL register to value 2.
2454:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * By default on power up, the ultra low power osciallator is disabled.
2455:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2456:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableLowPowerOscillator() \n\n\n
2457:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2458:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_DisableLowPowerOscillator(void);
2459:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
2460:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2461:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2462:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return Status of low power oscillator
2463:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2464:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2465:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Checks if the OSC_ULP oscillator is stable and usable
2466:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2467:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableLowPowerOscillator() \n\n\n
2468:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2469:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** bool XMC_SCU_CLOCK_IsLowPowerOscillatorStable(void);
2470:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
2471:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2472:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2473:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
2474:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2475:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2476:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Enables XTAL1 input of OSC_ULP as general purpose input.
2477:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Use XMC_SCU_CLOCK_GetLowPowerOscillatorGeneralPurposeInputStatus to monitor the status of OSC_UL
2478:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @Note OSC_ULP should be disabled previously using XMC_SCU_CLOCK_DisableLowPowerOscillator().
2479:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2480:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \note
2481:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * The register update in HIB domain is indicated by the MIRRST register which can be polled using 
2482:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2483:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2484:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_DisableLowPowerOscillator() \n\n\n
2485:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2486:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_EnableLowPowerOscillatorGeneralPurposeInput(void);
2487:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
2488:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2489:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2490:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
2491:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2492:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2493:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Disables XTAL1 input of OSC_ULP as general purpose input.
2494:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2495:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2496:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \note
2497:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * The register update in HIB domain is indicated by the MIRRST register which can be polled using 
2498:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2499:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableLowPowerOscillatorGeneralPurposeInput() \n\n\n
2500:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2501:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_DisableLowPowerOscillatorGeneralPurposeInput(void);
2502:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
2503:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2504:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2505:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return Status OSC_ULP XTAL1 pin
2506:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2507:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2508:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Monitor the status of OSC_ULP XTAL1 pin.
2509:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2510:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableLowPowerOscillatorGeneralPurposeInput() \n\n\n
2511:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2512:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_CLOCK_GetLowPowerOscillatorGeneralPurposeInputStatus(void);
2513:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
2514:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2515:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2516:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t   System frequency in Hertz.\n
2517:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *            \b Range: clock frequency in Hertz. Range of the value depends on the source clock fr
2518:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *            and the configured values of dividers.
2519:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2520:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2521:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the value of system PLL output clock frequency(fPLL).\n\n
2522:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * The API uses \a N-DIV,  \a P-DIV,  \a K1-DIV,  \a K2-DIV bits information from \a PLLCON1 regist
2523:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * VCOBYP bit information from \a PLLCON0 register. It calculates frequency of system pll clock usi
2524:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * If normal Mode : fPLL = (fOSC * N)/(P * K2).
2525:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * If prescaler mode: fPLL = fOSC/ K1.
2526:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2527:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetSystemClockSource() \n\n\n
2528:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2529:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_CLOCK_GetSystemPllClockFrequency(void);
2530:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
2531:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2532:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2533:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Source clock used for deriving system clock.\n
2534:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: fOHP frequency if external high precision frequency is used. \n
2535:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *                    fOFI fast internal clock frequency.
2536:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2537:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2538:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the value of the input clock frequency for deriving the system clock.
2539:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * The API retrieves frequency of system PLL input clock (fPLLin).
2540:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Based on \a PINSEL bits information from \a PLLCON2 register, the parent clock source is obtaine
2541:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * This bit field specifies if fOHP or fOFI is used for deriving system clock.
2542:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * System clock frequency is obtained by dividing the source clock frequency with different divider
2543:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2544:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetSystemPllClockFrequency() \n\n\n
2545:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2546:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_CLOCK_GetSystemPllClockSourceFrequency(void);
2547:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
2548:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2549:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2550:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t   USB PLL output clock frequency.
2551:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2552:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2553:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the frequency of USB PLL output clock (fUSBPLL).\n\n
2554:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * It obtains the \a VCOBYP bits information from \a USBPLLCON register and decides if USB PLL mode
2555:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * If USB PLL mode is used, the USB clock frequency is obtained by dividing the source clock by USB
2556:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * The frequency is obtained using following formula:\n
2557:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * If Normal Mode : fUSBPLL = (fOSC * N)/(P * 2).\n
2558:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * If Prescaler mode: fPLL = fOSC.
2559:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2560:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetSystemPllClockSourceFrequency() \n\n\n
2561:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2562:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_CLOCK_GetUsbPllClockFrequency(void);
2563:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** 
2564:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2565:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2566:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t   System clock frequency in Hertz.
2567:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2568:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2569:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the frequency of system clock (fSYS).\n\n
2570:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value obtained by dividing \a CPUDIV bits information of \a CPUCLKCR register with SystemCor
2571:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * Based on these values, fSYS clock frequency is derived using the following formula:\n
2572:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * fSYS = fCPU << CPUDIV.
2573:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2574:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetUsbPllClockFrequency() \n\n\n
2575:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2576:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_CLOCK_GetSystemClockFrequency(void)
2577:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** {
 152              	 .loc 1 2577 0
 153              	 .cfi_startproc
 154              	 
 155              	 
 156              	 
 157 0000 80B4     	 push {r7}
 158              	.LCFI12:
 159              	 .cfi_def_cfa_offset 4
 160              	 .cfi_offset 7,-4
 161 0002 00AF     	 add r7,sp,#0
 162              	.LCFI13:
 163              	 .cfi_def_cfa_register 7
2578:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h ****   return SystemCoreClock << ((SCU_CLK->CPUCLKCR & SCU_CLK_CPUCLKCR_CPUDIV_Msk) >> SCU_CLK_CPUCLKCR_
 164              	 .loc 1 2578 0
 165 0004 064B     	 ldr r3,.L15
 166 0006 1A68     	 ldr r2,[r3]
 167 0008 064B     	 ldr r3,.L15+4
 168 000a 1B69     	 ldr r3,[r3,#16]
 169 000c 03F00103 	 and r3,r3,#1
 170 0010 02FA03F3 	 lsl r3,r2,r3
2579:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc4_scu.h **** }
 171              	 .loc 1 2579 0
 172 0014 1846     	 mov r0,r3
 173 0016 BD46     	 mov sp,r7
 174              	.LCFI14:
 175              	 .cfi_def_cfa_register 13
 176              	 
 177 0018 5DF8047B 	 ldr r7,[sp],#4
 178              	.LCFI15:
 179              	 .cfi_restore 7
 180              	 .cfi_def_cfa_offset 0
 181 001c 7047     	 bx lr
 182              	.L16:
 183 001e 00BF     	 .align 2
 184              	.L15:
 185 0020 00000000 	 .word SystemCoreClock
 186 0024 00460050 	 .word 1342195200
 187              	 .cfi_endproc
 188              	.LFE151:
 190              	 .section .text.XMC_SCU_CLOCK_GetCpuClockFrequency,"ax",%progbits
 191              	 .align 2
 192              	 .thumb
 193              	 .thumb_func
 195              	XMC_SCU_CLOCK_GetCpuClockFrequency:
 196              	.LFB168:
 197              	 .file 2 "C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc/xmc_scu.h"
   1:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h **** /**
   2:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * @file xmc_scu.h
   3:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * @date 2019-12-02
   4:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  *
   5:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * @cond
   6:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  *****************************************************************************
   7:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * XMClib v2.2.0 - XMC Peripheral Driver Library
   8:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  *
   9:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  10:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * All rights reserved.
  11:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  *
  12:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * Boost Software License - Version 1.0 - August 17th, 2003
  13:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  *
  14:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * Permission is hereby granted, free of charge, to any person or organization
  15:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * obtaining a copy of the software and accompanying documentation covered by
  16:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * this license (the "Software") to use, reproduce, display, distribute,
  17:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * execute, and transmit the Software, and to prepare derivative works of the
  18:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * Software, and to permit third-parties to whom the Software is furnished to
  19:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * do so, all subject to the following:
  20:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  *
  21:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * The copyright notices in the Software and this entire statement, including
  22:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * the above license grant, this restriction and the following disclaimer,
  23:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * must be included in all copies of the Software, in whole or in part, and
  24:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * all derivative works of the Software, unless such copies or derivative
  25:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * works are solely in the form of machine-executable object code generated by
  26:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * a source language processor.
  27:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  *
  28:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  29:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  30:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
  31:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
  32:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
  33:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
  34:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * DEALINGS IN THE SOFTWARE.
  35:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  *
  36:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * To improve the quality of the software, users are encouraged to share
  37:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * modifications, enhancements or bug fixes with Infineon Technologies AG
  38:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * at XMCSupport@infineon.com.
  39:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  *****************************************************************************
  40:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  *
  41:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * Change History
  42:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * --------------
  43:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  *
  44:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * 2015-02-20:
  45:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  *     - Initial <br>
  46:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  *
  47:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * 2015-05-20:
  48:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  *     - Documentation improved <br>
  49:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  *     - XMC_ASSERT() hanging issues have fixed for XMC4 devices. <br>
  50:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  *
  51:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * 2015-06-20:
  52:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  53:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  *     - Removed STATIC_INLINE property for the below APIs and declared as void
  54:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  *       XMC_SCU_INTERRUPT_EnableEvent, XMC_SCU_INTERRUPT_DisableEvent,
  55:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  *       XMC_SCU_INTERRUPT_TriggerEvent, XMC_SCU_INTERUPT_GetEventStatus,
  56:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  *       XMC_SCU_INTERUPT_ClearEventStatus
  57:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  *
  58:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * 2015-11-30:
  59:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  *     - Documentation improved <br>
  60:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  *
  61:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * 2016-03-09:
  62:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  *     - Optimization of write only registers
  63:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  *
  64:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * 2019-12-02:
  65:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  *     - Fix including files following the convention: angle brackets are used for standard include
  66:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  *
  67:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * @endcond
  68:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  *
  69:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  */
  70:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h **** #ifndef XMC_SCU_H
  71:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h **** #define XMC_SCU_H
  72:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h **** 
  73:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h **** /**************************************************************************************************
  74:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * HEADER FILES
  75:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  **************************************************************************************************
  76:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h **** #include "xmc_common.h"
  77:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h **** 
  78:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h **** /**
  79:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * @addtogroup XMClib XMC Peripheral Library
  80:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * @{
  81:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  */
  82:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h **** 
  83:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h **** /**
  84:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * @addtogroup SCU
  85:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * @brief System Control Unit(SCU) driver for XMC microcontroller family.
  86:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  *
  87:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * System control unit is the SoC power, reset and a clock manager with additional responsibility o
  88:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * providing system stability protection and other auxiliary functions.<br>
  89:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * SCU provides the following features,
  90:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Power control
  91:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  \if XMC4
  92:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Hibernate control
  93:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  \endif
  94:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Reset control
  95:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Clock control
  96:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Miscellaneous control(boot mode, system interrupts etc.)<br><br>
  97:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  *
  98:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * The SCU driver is divided in to clock control logic, reset control logic, system interrupt contr
  99:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  \if XMC4
 100:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * , hibernate control logic, trap control logic, parity control logic
 101:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  \endif
 102:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * and miscellaneous control logic.<br>
 103:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  *
 104:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * Clock driver features:
 105:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows clock configuration using the structure XMC_SCU_CLOCK_CONFIG_t and API XMC_SCU_CLOCK_I
 106:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  \if XMC4
 107:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Provides structure XMC_SCU_CLOCK_SYSPLL_CONFIG_t for configuring the system PLL
 108:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows selection of clock source for system PLL, XMC_SCU_CLOCK_GetSystemPllClockSource()
 109:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Provides APIs for configuring different module clock frequencies XMC_SCU_CLOCK_SetWdtClockDiv
 110:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows selection of clock source for external output, XMC_SCU_CLOCK_SetExternalOutputClockSou
 111:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Provides APIs for enabling external high power oscillator and ultra low power oscillator, XMC
 112:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Provides APIs for getting various clock frequencies XMC_SCU_CLOCK_GetPeripheralClockFrequency
 113:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  XMC_SCU_CLOCK_GetCpuClockFrequency(), XMC_SCU_CLOCK_GetSystemClockFrequency()<br>
 114:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  \endif
 115:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  \if XMC1
 116:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows selection of peripheral clock frequency, XMC_SCU_CLOCK_SetFastPeripheralClockSource()
 117:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Provides API to get the peripheral clock frequency, XMC_SCU_CLOCK_GetFastPeripheralClockFrequ
 118:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  \endif
 119:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  *
 120:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * Reset driver features:
 121:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  \if XMC4
 122:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows to handle peripheral reset XMC_SCU_RESET_AssertPeripheralReset(), XMC_SCU_RESET_Deasse
 123:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows configuration of NMI generation for selected events, XMC_SCU_INTERRUPT_EnableNmiReques
 124:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  \endif
 125:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  \if XMC1
 126:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows to trigger device reset XMC_SCU_RESET_AssertMasterReset()
 127:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows to configure multiple sources for reset, XMC_SCU_RESET_EnableResetRequest()
 128:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  \endif <br>
 129:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  *
 130:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * Interrupt driver features:
 131:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Provides APIs for enabling/ disabling interrupt event generation XMC_SCU_INTERRUPT_EnableEven
 132:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  XMC_SCU_INTERRUPT_DisableEvent()
 133:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Provides API for registering callback function for events XMC_SCU_INTERRUPT_SetEventHandler()
 134:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  *
 135:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  \if XMC4
 136:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * Hibernate driver features:
 137:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows configuration of hibernate domain XMC_SCU_HIB_EnableHibernateDomain(), XMC_SCU_HIB_Dis
 138:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows selection of standby clock source, XMC_SCU_HIB_SetStandbyClockSource()
 139:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows selection of RTC clock source, XMC_SCU_HIB_SetRtcClockSource()
 140:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Provides API for enabling slow internal clock used for backup clock, XMC_SCU_HIB_EnableIntern
 141:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  *
 142:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * Trap driver features:
 143:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows handling of trap XMC_SCU_TRAP_Enable(), XMC_SCU_TRAP_GetStatus(), XMC_SCU_TRAP_Trigger
 144:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  *
 145:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * Parity driver features:
 146:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Parity error generated by on-chip RAM can be monitored, XMC_SCU_PARITY_Enable(), XMC_SCU_PARI
 147:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows configuration of trap generation on detection of parity error, XMC_SCU_PARITY_EnableTr
 148:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  *
 149:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * Power driver features:
 150:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows to power the USB module XMC_SCU_POWER_EnableUsb(), XMC_SCU_POWER_DisableUsb()
 151:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  \endif
 152:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  *
 153:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * Miscellaneous features:
 154:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows to trigger multiple capture compare unit(CCU) channels to be started together XMC_SCU_
 155:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  \if XMC4
 156:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Enables configuration of out of range comparator (ORC) XMC_SCU_EnableOutOfRangeComparator()
 157:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Enables configuration of die temperature sensor XMC_SCU_EnableTemperatureSensor(), XMC_SCU_Ca
 158:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Enables configuration of device boot mode XMC_SCU_SetBootMode()<br>
 159:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  \endif
 160:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  \if XMC1
 161:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Enables configuration of die temperature sensor XMC_SCU_StartTempMeasurement(), XMC_SCU_SetRa
 162:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows configuring supply monitor unit using the structure XMC_SCU_SUPPLYMONITOR_t and API XM
 163:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows handling of protected bits XMC_SCU_LockProtectedBits(), XMC_SCU_UnlockProtectedBits()<
 164:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  \endif
 165:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * @{
 166:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  */
 167:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h **** 
 168:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h **** /**************************************************************************************************
 169:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * MACROS
 170:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  **************************************************************************************************
 171:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h **** 
 172:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h **** /**************************************************************************************************
 173:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * ENUMS
 174:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  **************************************************************************************************
 175:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h **** /**
 176:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  *  Defines the status of SCU API execution, used to verify the SCU related API calls.
 177:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  */
 178:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h **** typedef enum XMC_SCU_STATUS
 179:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h **** {
 180:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****   XMC_SCU_STATUS_OK   = 0UL, /**< SCU related operation successfully completed.*/
 181:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****   XMC_SCU_STATUS_ERROR,      /**< SCU related operation failed. When API cannot fulfill request, th
 182:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****   XMC_SCU_STATUS_BUSY,       /**< Cannot execute the SCU related operation request because
 183:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****                                   another operation is in progress. \a XMC_SCU_STATUS_BUSY is retur
 184:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****                                   processing another request. */
 185:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h **** } XMC_SCU_STATUS_t;
 186:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h **** 
 187:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h **** 
 188:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h **** /**************************************************************************************************
 189:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * DATA TYPES
 190:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  **************************************************************************************************
 191:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h **** 
 192:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h **** /**
 193:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * Function pointer type used for registering callback functions on SCU event occurrence.
 194:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  */
 195:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h **** typedef void (*XMC_SCU_INTERRUPT_EVENT_HANDLER_t)(void);
 196:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h **** 
 197:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h **** /**************************************************************************************************
 198:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * DEVICE EXTENSIONS
 199:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  **************************************************************************************************
 200:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h **** 
 201:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h **** #if (UC_FAMILY == XMC1)
 202:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h **** #include "xmc1_scu.h"
 203:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h **** #elif (UC_FAMILY == XMC4)
 204:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h **** #include "xmc4_scu.h"
 205:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h **** #else
 206:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h **** #error "Unspecified chipset"
 207:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h **** #endif
 208:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h **** 
 209:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h **** /**************************************************************************************************
 210:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * API Prototypes
 211:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  **************************************************************************************************
 212:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h **** 
 213:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h **** #ifdef __cplusplus
 214:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h **** extern "C" {
 215:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h **** #endif
 216:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h **** 
 217:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h **** 
 218:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h **** /**
 219:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  *
 220:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * @param trigger    CCU slices to be triggered synchronously via software. The value is a bitmask 
 221:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  *                    in the register CCUCON. <br>
 222:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  *                    \b Range: Use type @ref XMC_SCU_CCU_TRIGGER_t for bitmask of individual CCU s
 223:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  *                    combined using \a OR operation.
 224:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  *
 225:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * @return None
 226:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  *
 227:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 228:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * Generates active edge(low to high) trigger for multiple CCU units at the same time.\n\n
 229:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * Before executing this API, all the required CCU timers should configure external start.
 230:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * The edge of the start signal should be selected as active edge.
 231:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * The input signal for the CCU slice should be selected as SCU input.
 232:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * The above mentioned configurations can be made using the CCU LLD API XMC_CCU4_SLICE_StartConfig(
 233:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * CCU timer slice should be started using XMC_CCU4_SLICE_StartTimer() before triggering
 234:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * the timer using this API.<BR>
 235:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 236:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * XMC_CCU4_SLICE_StartConfig(), XMC_CCU4_SLICE_SetInput(), XMC_SCU_SetCcuTriggerLow()\n\n\n
 237:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  */
 238:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h **** __STATIC_INLINE void XMC_SCU_SetCcuTriggerHigh(const uint32_t trigger)
 239:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h **** {
 240:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****   SCU_GENERAL->CCUCON |= (uint32_t)trigger;
 241:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h **** }
 242:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h **** 
 243:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h **** /**
 244:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  *
 245:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * @param trigger  CCU slices to be triggered synchronously via software. The value is a bitmask of
 246:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  *                    in the register CCUCON. <br>
 247:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  *                    \b Range: Use type @ref XMC_SCU_CCU_TRIGGER_t for bitmask of individual CCU s
 248:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  *                    combined using \a OR operation.
 249:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  *
 250:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * @return None
 251:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  *
 252:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 253:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * Generates passive edge(high to low) trigger for multiple CCU units at the same time.\n\n
 254:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * Before executing this API, all the required CCU timers should configure external start.
 255:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * The edge of the start signal should be selected as passive edge.
 256:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * The input signal for the CCU slice should be selected as SCU input.
 257:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * The above mentioned configurations can be made using the CCU LLD API XMC_CCU4_SLICE_StartConfig(
 258:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * CCU timer slice should be started using XMC_CCU4_SLICE_StartTimer() before triggering
 259:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * the timer using this API.<BR>
 260:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 261:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * XMC_CCU4_SLICE_StartConfig(), XMC_CCU4_SLICE_SetInput(), XMC_SCU_SetCcuTriggerHigh()\n\n\n
 262:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  */
 263:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h **** __STATIC_INLINE void XMC_SCU_SetCcuTriggerLow(const uint32_t trigger)
 264:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h **** {
 265:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****   SCU_GENERAL->CCUCON &= (uint32_t)~trigger;
 266:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h **** }
 267:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h **** 
 268:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h **** /**
 269:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  *
 270:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * @param config Pointer to structure holding the clock prescaler values and divider values for
 271:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  *                configuring clock generators and clock tree.\n
 272:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  *                \b Range: Configure the members of structure @ref XMC_SCU_CLOCK_CONFIG_t for vari
 273:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  *                parameters of clock setup.
 274:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  *
 275:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * @return None
 276:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  *
 277:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 278:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * Initializes clock generators and clock tree.\n\n
 279:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * \if XMC1
 280:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * Peripheral clock and system clock are configured based on the input configuration \a config.
 281:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * The system clock frequency is tuned by configuring the FDIV and IDIV values of CLKCR register.
 282:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * The values of FDIV and IDIV can be provided as part of input configuration.
 283:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * The PCLK divider determines the ratio of peripheral clock to the system clock.
 284:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * The source of RTC clock is set based on the input configuration.
 285:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * \a SystemCoreClock variable will be updated with the value of
 286:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * system clock frequency. Access to protected bit fields are handled internally.
 287:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * \endif
 288:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * \if XMC4
 289:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * Enables the high precision oscillator(fOHP) input and configures the system and peripheral clock
 290:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * Based on the system clock source selected in \a config, either fPLL or fOFI will be chosen as sy
 291:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * Based on PLL mode(normal or prescaler mode) used, PLL ramps up in steps to achieve target freque
 292:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * The clock dividers for CPU, CCU and peripheral clocks will be set based on the input configurati
 293:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * The \a SystemCoreClock variable is set with the value of system clock frequency.
 294:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * \endif
 295:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 296:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_CLOCK_GetPeripheralClockFrequency(), XMC_SCU_CLOCK_GetCpuClockFrequency() \n\n\n
 297:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  */
 298:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h **** void XMC_SCU_CLOCK_Init(const XMC_SCU_CLOCK_CONFIG_t *const config);
 299:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h **** 
 300:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h **** /**
 301:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  *
 302:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * @param event  Bit mask of the event to enable. \b Range: Use type @ref XMC_SCU_INTERRUPT_EVENT_t
 303:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  *                for providing the input value. Multiple events can be combined using the \a OR op
 304:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  *
 305:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * @return None
 306:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  *
 307:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 308:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * Enables the generation of interrupt for the input events.\n\n
 309:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * The events are enabled by setting the respective bit fields in the SRMSK register. \n
 310:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * Note: User should separately enable the NVIC node responsible for handling the SCU interrupt.
 311:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * The interrupt will be generated when the respective event occurs.
 312:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 313:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * NVIC_EnableIRQ(), XMC_SCU_INTERRUPT_DisableEvent()\n\n\n
 314:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  */
 315:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h **** void XMC_SCU_INTERRUPT_EnableEvent(const XMC_SCU_INTERRUPT_EVENT_t event);
 316:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h **** 
 317:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h **** 
 318:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h **** /**
 319:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  *
 320:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * @param event  Bit mask of the event to disable. \b Range: Use type @ref XMC_SCU_INTERRUPT_EVENT_
 321:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  *                for providing the input value. Multiple events can be combined using the \a OR op
 322:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  *
 323:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * @return None
 324:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  *
 325:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 326:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * Disables generation of interrupt on occurrence of the input event.\n\n
 327:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * The events are disabled by resetting the respective bit fields in the SRMSK register. \n
 328:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 329:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * NVIC_DisableIRQ(), XMC_SCU_INTERRUPT_EnableEvent()\n\n\n
 330:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  */
 331:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h **** void XMC_SCU_INTERRUPT_DisableEvent(const XMC_SCU_INTERRUPT_EVENT_t event);
 332:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h **** 
 333:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h **** /**
 334:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  *
 335:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * @param event Bit mask of the event to be triggered. \b Range: Use type @ref XMC_SCU_INTERRUPT_EV
 336:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  *                for providing the input value. Multiple events can be combined using the \a OR op
 337:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  *
 338:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * @return None
 339:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  *
 340:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 341:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * Triggers the event as if the hardware raised it.\n\n
 342:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * Event will be triggered by setting the respective bitfield in the SRSET register.\n
 343:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * Note: User should enable the NVIC node that handles the respective event for interrupt generatio
 344:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 345:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * NVIC_EnableIRQ(), XMC_SCU_INTERUPT_GetEventStatus(), XMC_SCU_INTERRUPT_ClearEventStatus() \n\n\n
 346:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  */
 347:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h **** void XMC_SCU_INTERRUPT_TriggerEvent(const XMC_SCU_INTERRUPT_EVENT_t  event);
 348:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h **** 
 349:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h **** /**
 350:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * @return uint32_t  Status of the SCU events.
 351:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  *
 352:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 353:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * Provides the status of all SCU events.\n\n
 354:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * The status is read from the SRRAW register. To check the status of a particular
 355:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * event, the returned value should be masked with the bit mask of the event. The bitmask
 356:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * of events can be obtained using the type @ref XMC_SCU_INTERRUPT_EVENT_t. Multiple events'
 357:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * status can be checked by combining the bit masks using \a OR operation.
 358:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * After detecting the event, the event status should be cleared using software to detect the event
 359:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 360:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_INTERRUPT_ClearEventStatus(), XMC_SCU_INTERRUPT_TriggerEvent(), XMC_SCU_INTERRUPT_SetEve
 361:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  */
 362:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h **** XMC_SCU_INTERRUPT_EVENT_t XMC_SCU_INTERUPT_GetEventStatus(void);
 363:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h **** 
 364:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h **** /**
 365:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  *
 366:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * @param event  Bit mask of the events to clear. \b Range: Use type @ref XMC_SCU_INTERRUPT_EVENT_t
 367:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  *                for providing the input value. Multiple events can be combined using the \a OR op
 368:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  *
 369:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * @return None
 370:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  *
 371:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 372:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * Clears the event status bit in SRRAW register.\n\n
 373:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * The events are cleared by writing value 1 to their bit positions in the SRCLR register.
 374:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * The API can be used when polling method is used. After detecting the event, the event status
 375:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * should be cleared using software to detect the event again.
 376:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  *
 377:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 378:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_INTERUPT_GetEventStatus(), XMC_SCU_INTERRUPT_TriggerEvent() \n\n\n
 379:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  */
 380:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h **** void XMC_SCU_INTERRUPT_ClearEventStatus(const XMC_SCU_INTERRUPT_EVENT_t event);
 381:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h **** 
 382:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h **** /**
 383:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  *
 384:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * @return uint32_t  Status representing the reason for device reset.
 385:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  *
 386:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 387:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * Provides the value representing the reason for device reset.\n\n
 388:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * The return value is an encoded word, which can indicate multiple reasons for the last reset. Eac
 389:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * returned word is representative of a last reset cause. The returned value should be appropriatel
 390:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * the cause of reset.
 391:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * The cause of the last reset gets automatically stored in
 392:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * the \a SCU_RSTSTAT register. The reset status shall be reset after each
 393:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * startup in order to ensure consistent source indication after the next reset.
 394:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * \b Range: The type @ref XMC_SCU_RESET_REASON_t can be used to get the bit masks of the reset cau
 395:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  *
 396:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 397:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_RESET_ClearDeviceResetReason() \n\n\n
 398:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  */
 399:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_RESET_GetDeviceResetReason(void)
 400:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h **** {
 401:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****   return ((SCU_RESET->RSTSTAT) & SCU_RESET_RSTSTAT_RSTSTAT_Msk);
 402:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h **** }
 403:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h **** /**
 404:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * @return None
 405:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  *
 406:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 407:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * Clears the reset reason bits in the reset status register. \n\n
 408:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * Clearing of the reset status information in the \a SCU_RSTSTAT register via register bit \a RSTC
 409:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * recommended to ensure a clear indication of the cause of next reset.
 410:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  *
 411:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 412:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_RESET_GetDeviceResetReason() \n\n\n
 413:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  */
 414:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h **** __STATIC_INLINE void XMC_SCU_RESET_ClearDeviceResetReason(void)
 415:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h **** {
 416:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****   /* Clear RSTSTAT.RSTSTAT bitfield */
 417:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****   SCU_RESET->RSTCLR = (uint32_t)SCU_RESET_RSTCLR_RSCLR_Msk;
 418:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h **** }
 419:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h **** 
 420:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h **** /**
 421:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * @return uint32_t  Value of CPU clock frequency.
 422:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  *
 423:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 424:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * Provides the vlaue of CPU clock frequency.\n\n
 425:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * The value is stored in a global variable \a \b SystemCoreClock.
 426:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * It is updated when the clock configuration is done using the SCU LLD APIs.
 427:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * The value represents the frequency of clock used for CPU operation.
 428:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * \b Range: Value is of type uint32_t, and gives the value of frequency in Hertz.
 429:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  *
 430:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 431:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_CLOCK_GetPeripheralClockFrequency(), XMC_SCU_CLOCK_GatePeripheralClock() \n\n\n
 432:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  */
 433:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_CLOCK_GetCpuClockFrequency(void)
 434:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h **** {
 198              	 .loc 2 434 0
 199              	 .cfi_startproc
 200              	 
 201              	 
 202              	 
 203 0000 80B4     	 push {r7}
 204              	.LCFI16:
 205              	 .cfi_def_cfa_offset 4
 206              	 .cfi_offset 7,-4
 207 0002 00AF     	 add r7,sp,#0
 208              	.LCFI17:
 209              	 .cfi_def_cfa_register 7
 435:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****   return SystemCoreClock;
 210              	 .loc 2 435 0
 211 0004 034B     	 ldr r3,.L19
 212 0006 1B68     	 ldr r3,[r3]
 436:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h **** }
 213              	 .loc 2 436 0
 214 0008 1846     	 mov r0,r3
 215 000a BD46     	 mov sp,r7
 216              	.LCFI18:
 217              	 .cfi_def_cfa_register 13
 218              	 
 219 000c 5DF8047B 	 ldr r7,[sp],#4
 220              	.LCFI19:
 221              	 .cfi_restore 7
 222              	 .cfi_def_cfa_offset 0
 223 0010 7047     	 bx lr
 224              	.L20:
 225 0012 00BF     	 .align 2
 226              	.L19:
 227 0014 00000000 	 .word SystemCoreClock
 228              	 .cfi_endproc
 229              	.LFE168:
 231              	 .section .text.XMC_SCU_GetMirrorStatus,"ax",%progbits
 232              	 .align 2
 233              	 .thumb
 234              	 .thumb_func
 236              	XMC_SCU_GetMirrorStatus:
 237              	.LFB169:
 437:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h **** 
 438:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h **** /**
 439:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * @return uint32_t  Value of peripheral clock frequency in Hertz.
 440:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  *
 441:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 442:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * Provides the vlaue of clock frequency at which the peripherals are working.\n\n
 443:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * The value is derived from the CPU frequency. \b Range: Value is of type uint32_t. It is represen
 444:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 445:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_CLOCK_GetCpuClockFrequency(),XMC_SCU_CLOCK_GatePeripheralClock() \n\n\n
 446:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  */
 447:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h **** uint32_t XMC_SCU_CLOCK_GetPeripheralClockFrequency(void);
 448:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h **** 
 449:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h **** #if(UC_SERIES != XMC45)
 450:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h **** 
 451:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h **** /**
 452:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  *
 453:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * @param  peripheral The peripheral for which the clock has to be gated. \b Range: Use type @ref X
 454:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  *                    to identify the peripheral clock to be gated.
 455:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  *
 456:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * @return None
 457:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  *
 458:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 459:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * Blocks the supply of clock to the selected peripheral.\n\n
 460:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * Clock gating helps in reducing the power consumption. User can selectively gate the clocks of un
 461:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * \if XMC1
 462:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * fPCLK is the source of clock to various peripherals. Some peripherals support clock gate. Such a
 463:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * the clock supply for the selected peripheral.
 464:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * Software can request for individual gating of such peripheral clocks by enabling the \a SCU_CGAT
 465:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * register bit field. Every bit in \a SCU_CGATSET0 register is protected by the bit protection sch
 466:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * bit fields are handled internally.
 467:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * \endif
 468:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * \if XMC4
 469:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * fPERI is the source of clock to various peripherals. Some peripherals support clock gate. Such a
 470:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * the clock supply for the selected peripheral.
 471:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * Software can request for individual gating of such peripheral clocks by enabling one of the \a
 472:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * SCU_CGATSET0, \a SCU_CGATSET1 or \a SCU_CGATSET2 register bitfields.
 473:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  *
 474:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * \endif
 475:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * Note: Clock gating shall not be activated unless the module is in reset state. So use \a
 476:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_CLOCK_IsPeripheralClockGated() API before enabling the gating of any peripheral.
 477:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 478:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_CLOCK_IsPeripheralClockGated(), XMC_SCU_CLOCK_UngatePeripheralClock() \n\n\n
 479:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  */
 480:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h **** void XMC_SCU_CLOCK_GatePeripheralClock(const XMC_SCU_PERIPHERAL_CLOCK_t peripheral);
 481:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h **** 
 482:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h **** /**
 483:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  *
 484:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * @param  peripheral  The peripheral for which the clock has to be ungated. \b Range: Use type @re
 485:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  *                    to identify the peripheral.
 486:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  *
 487:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * @return None
 488:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  *
 489:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 490:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * Enables the supply of clock to the selected peripheral.\n\n
 491:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * By default when the device powers on, the peripheral clock will be gated for the
 492:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * peripherals that support clock gating.
 493:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * The peripheral clock should be enabled before using it for any functionality.
 494:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * \if XMC1
 495:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * fPCLK is the source of clock to various peripherals. Some peripherals support clock gate.
 496:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * Software can request for individual ungating of such peripheral clocks by setting respective bit
 497:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * in the \a SCU_CGATCLR0 register.
 498:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * \endif
 499:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * \if XMC4
 500:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * fPERI is the source of clock to various peripherals. Some peripherals support clock gate.
 501:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * Software can request for individual ungating of such peripheral clocks by setting the respective
 502:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * SCU_CGATCLR0, \a SCU_CGATCLR1 or \a SCU_CGATCLR2 registers.
 503:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * \endif
 504:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  *
 505:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 506:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_CLOCK_IsPeripheralClockGated(), XMC_SCU_CLOCK_GatePeripheralClock() \n\n\n
 507:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  */
 508:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h **** void XMC_SCU_CLOCK_UngatePeripheralClock(const XMC_SCU_PERIPHERAL_CLOCK_t peripheral);
 509:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h **** 
 510:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h **** /**
 511:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  *
 512:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * @param  peripheral  The peripheral for which the check for clock gating has to be done.
 513:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  *                    \b Range: Use type @ref XMC_SCU_PERIPHERAL_CLOCK_t to identify the peripheral
 514:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  *
 515:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * @return bool Status of the peripheral clock gating. \b Range: true if the peripheral clock is ga
 516:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  *              false if the peripheral clock ungated(gate de-asserted).
 517:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  *
 518:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 519:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * Gives the status of peripheral clock gating.\n\n
 520:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * \if XMC1
 521:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * Checks the status of peripheral clock gating using the register CGATSTAT0.
 522:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * \endif
 523:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * \if XMC4
 524:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * Checks the status of peripheral clock gating using one of CGATSTAT0, CGATSTAT1 or CGATSTAT2 regi
 525:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * \endif
 526:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * It is recommended to use this API before
 527:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * enabling the gating of any peripherals through \a XMC_SCU_CLOCK_GatePeripheralClock() API.
 528:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  *
 529:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 530:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_CLOCK_UngatePeripheralClock(), XMC_SCU_CLOCK_GatePeripheralClock() \n\n\n
 531:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  */
 532:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h **** bool XMC_SCU_CLOCK_IsPeripheralClockGated(const XMC_SCU_PERIPHERAL_CLOCK_t peripheral);
 533:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h **** #endif
 534:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h **** 
 535:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h **** 
 536:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h **** /**
 537:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * @return  uint32_t  Status of the register mirror update.\n
 538:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  *                    \b Range: Use the bit mask of the SCU_GENERAL_MIRRSTS register for the mirror
 539:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  *                    interest. e.g.: SCU_GENERAL_MIRRSTS_RTC_CTR_Msk. Multiple update events can b
 540:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  *                    using \a OR operation.
 541:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  *
 542:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 543:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * Provides the status of hibernate domain register update, when the respective mirror registers ar
 544:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * The hibernate domain is connected to the core domain via SPI serial communication. MIRRSTS is a 
 545:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * representing the communication of changed value of a mirror register to its corresponding regist
 546:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * hibernate domain. The bit fields of the register indicate
 547:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * that a corresponding register of the hibernate domain is ready to accept a write or that the com
 548:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * is busy with executing the previous operation.\n
 549:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  * Note: There is no hibernate domain in XMC1x devices. This register is retained for legacy purpos
 550:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****  */
 551:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_GetMirrorStatus(void)
 552:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h **** {
 238              	 .loc 2 552 0
 239              	 .cfi_startproc
 240              	 
 241              	 
 242              	 
 243 0000 80B4     	 push {r7}
 244              	.LCFI20:
 245              	 .cfi_def_cfa_offset 4
 246              	 .cfi_offset 7,-4
 247 0002 00AF     	 add r7,sp,#0
 248              	.LCFI21:
 249              	 .cfi_def_cfa_register 7
 553:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h ****   return (SCU_GENERAL->MIRRSTS);
 250              	 .loc 2 553 0
 251 0004 034B     	 ldr r3,.L23
 252 0006 D3F8C430 	 ldr r3,[r3,#196]
 554:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_scu.h **** }
 253              	 .loc 2 554 0
 254 000a 1846     	 mov r0,r3
 255 000c BD46     	 mov sp,r7
 256              	.LCFI22:
 257              	 .cfi_def_cfa_register 13
 258              	 
 259 000e 5DF8047B 	 ldr r7,[sp],#4
 260              	.LCFI23:
 261              	 .cfi_restore 7
 262              	 .cfi_def_cfa_offset 0
 263 0012 7047     	 bx lr
 264              	.L24:
 265              	 .align 2
 266              	.L23:
 267 0014 00400050 	 .word 1342193664
 268              	 .cfi_endproc
 269              	.LFE169:
 271              	 .section .bss.event_handler_list,"aw",%nobits
 272              	 .align 2
 275              	event_handler_list:
 276 0000 00000000 	 .space 128
 276      00000000 
 276      00000000 
 276      00000000 
 276      00000000 
 277              	 .section .text.XMC_SCU_lDelay,"ax",%progbits
 278              	 .align 2
 279              	 .thumb
 280              	 .thumb_func
 282              	XMC_SCU_lDelay:
 283              	.LFB170:
 284              	 .file 3 "../Libraries/XMCLib/src/xmc4_scu.c"
   1:../Libraries/XMCLib/src/xmc4_scu.c **** /**
   2:../Libraries/XMCLib/src/xmc4_scu.c ****  * @file xmc4_scu.c
   3:../Libraries/XMCLib/src/xmc4_scu.c ****  * @date 2020-12-21
   4:../Libraries/XMCLib/src/xmc4_scu.c ****  *
   5:../Libraries/XMCLib/src/xmc4_scu.c ****  * @cond
   6:../Libraries/XMCLib/src/xmc4_scu.c ****  *****************************************************************************
   7:../Libraries/XMCLib/src/xmc4_scu.c ****  * XMClib v2.2.0 - XMC Peripheral Driver Library
   8:../Libraries/XMCLib/src/xmc4_scu.c ****  *
   9:../Libraries/XMCLib/src/xmc4_scu.c ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  10:../Libraries/XMCLib/src/xmc4_scu.c ****  * All rights reserved.
  11:../Libraries/XMCLib/src/xmc4_scu.c ****  *
  12:../Libraries/XMCLib/src/xmc4_scu.c ****  * Boost Software License - Version 1.0 - August 17th, 2003
  13:../Libraries/XMCLib/src/xmc4_scu.c ****  *
  14:../Libraries/XMCLib/src/xmc4_scu.c ****  * Permission is hereby granted, free of charge, to any person or organization
  15:../Libraries/XMCLib/src/xmc4_scu.c ****  * obtaining a copy of the software and accompanying documentation covered by
  16:../Libraries/XMCLib/src/xmc4_scu.c ****  * this license (the "Software") to use, reproduce, display, distribute,
  17:../Libraries/XMCLib/src/xmc4_scu.c ****  * execute, and transmit the Software, and to prepare derivative works of the
  18:../Libraries/XMCLib/src/xmc4_scu.c ****  * Software, and to permit third-parties to whom the Software is furnished to
  19:../Libraries/XMCLib/src/xmc4_scu.c ****  * do so, all subject to the following:
  20:../Libraries/XMCLib/src/xmc4_scu.c ****  *
  21:../Libraries/XMCLib/src/xmc4_scu.c ****  * The copyright notices in the Software and this entire statement, including
  22:../Libraries/XMCLib/src/xmc4_scu.c ****  * the above license grant, this restriction and the following disclaimer,
  23:../Libraries/XMCLib/src/xmc4_scu.c ****  * must be included in all copies of the Software, in whole or in part, and
  24:../Libraries/XMCLib/src/xmc4_scu.c ****  * all derivative works of the Software, unless such copies or derivative
  25:../Libraries/XMCLib/src/xmc4_scu.c ****  * works are solely in the form of machine-executable object code generated by
  26:../Libraries/XMCLib/src/xmc4_scu.c ****  * a source language processor.
  27:../Libraries/XMCLib/src/xmc4_scu.c ****  *
  28:../Libraries/XMCLib/src/xmc4_scu.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  29:../Libraries/XMCLib/src/xmc4_scu.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  30:../Libraries/XMCLib/src/xmc4_scu.c ****  * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
  31:../Libraries/XMCLib/src/xmc4_scu.c ****  * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
  32:../Libraries/XMCLib/src/xmc4_scu.c ****  * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
  33:../Libraries/XMCLib/src/xmc4_scu.c ****  * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
  34:../Libraries/XMCLib/src/xmc4_scu.c ****  * DEALINGS IN THE SOFTWARE.
  35:../Libraries/XMCLib/src/xmc4_scu.c ****  *
  36:../Libraries/XMCLib/src/xmc4_scu.c ****  * To improve the quality of the software, users are encouraged to share
  37:../Libraries/XMCLib/src/xmc4_scu.c ****  * modifications, enhancements or bug fixes with Infineon Technologies AG
  38:../Libraries/XMCLib/src/xmc4_scu.c ****  * at XMCSupport@infineon.com.
  39:../Libraries/XMCLib/src/xmc4_scu.c ****  *****************************************************************************
  40:../Libraries/XMCLib/src/xmc4_scu.c ****  *
  41:../Libraries/XMCLib/src/xmc4_scu.c ****  * Change History
  42:../Libraries/XMCLib/src/xmc4_scu.c ****  * --------------
  43:../Libraries/XMCLib/src/xmc4_scu.c ****  *
  44:../Libraries/XMCLib/src/xmc4_scu.c ****  * 2015-02-20:
  45:../Libraries/XMCLib/src/xmc4_scu.c ****  *     - Initial <br>
  46:../Libraries/XMCLib/src/xmc4_scu.c ****  *
  47:../Libraries/XMCLib/src/xmc4_scu.c ****  * 2015-05-20:
  48:../Libraries/XMCLib/src/xmc4_scu.c ****  *     - XMC_ASSERT() hanging issues have fixed.  <br>
  49:../Libraries/XMCLib/src/xmc4_scu.c ****  *     - Line indentation aligned with 120 characters. <br>
  50:../Libraries/XMCLib/src/xmc4_scu.c ****  *
  51:../Libraries/XMCLib/src/xmc4_scu.c ****  * 2015-06-20:
  52:../Libraries/XMCLib/src/xmc4_scu.c ****  *     - XMC_SCU_INTERRUPT_EnableEvent,XMC_SCU_INTERRUPT_DisableEvent,
  53:../Libraries/XMCLib/src/xmc4_scu.c ****  *     - XMC_SCU_INTERRUPT_TriggerEvent,XMC_SCU_INTERUPT_GetEventStatus,
  54:../Libraries/XMCLib/src/xmc4_scu.c ****  *     - XMC_SCU_INTERRUPT_ClearEventStatus are added
  55:../Libraries/XMCLib/src/xmc4_scu.c ****  *     - Added Weak implementation for OSCHP_GetFrequency()
  56:../Libraries/XMCLib/src/xmc4_scu.c ****  *
  57:../Libraries/XMCLib/src/xmc4_scu.c ****  * 2015-11-30:
  58:../Libraries/XMCLib/src/xmc4_scu.c ****  *     - Documentation improved <br>
  59:../Libraries/XMCLib/src/xmc4_scu.c ****  *     - Following API functionalities are improved
  60:../Libraries/XMCLib/src/xmc4_scu.c ****  *       XMC_SCU_CLOCK_GatePeripheralClock, XMC_SCU_CLOCK_UngatePeripheralClock, XMC_SCU_CLOCK_IsPe
  61:../Libraries/XMCLib/src/xmc4_scu.c ****  *       XMC_SCU_RESET_AssertPeripheralReset, XMC_SCU_RESET_DeassertPeripheralReset, XMC_SCU_RESET_
  62:../Libraries/XMCLib/src/xmc4_scu.c ****  *
  63:../Libraries/XMCLib/src/xmc4_scu.c ****  * 2015-12-08:
  64:../Libraries/XMCLib/src/xmc4_scu.c ****  *     - XMC_SCU_GetTemperature renamed to XMC_SCU_GetTemperatureMeasurement
  65:../Libraries/XMCLib/src/xmc4_scu.c ****  *
  66:../Libraries/XMCLib/src/xmc4_scu.c ****  * 2016-03-09:
  67:../Libraries/XMCLib/src/xmc4_scu.c ****  *     - Optimize write only registers
  68:../Libraries/XMCLib/src/xmc4_scu.c ****  *     - Added XMC_SCU_HIB_SetPinMode
  69:../Libraries/XMCLib/src/xmc4_scu.c ****  *     - Added XMC_SCU_HIB_GetHibernateControlStatus,
  70:../Libraries/XMCLib/src/xmc4_scu.c ****  *             XMC_SCU_HIB_GetEventStatus, XMC_SCU_HIB_ClearEventStatus, XMC_SCU_HIB_TriggerEvent,
  71:../Libraries/XMCLib/src/xmc4_scu.c ****  *             XMC_SCU_HIB_EnableEvent, XMC_SCU_HIB_DisableEvent
  72:../Libraries/XMCLib/src/xmc4_scu.c ****  *     - Added XMC_SCU_HIB_SetWakeupTriggerInput, XMC_SCU_HIB_SetPinMode, XMC_SCU_HIB_SetOutputPinL
  73:../Libraries/XMCLib/src/xmc4_scu.c ****  *             XMC_SCU_HIB_SetInput0, XMC_SCU_HIB_EnterHibernateState
  74:../Libraries/XMCLib/src/xmc4_scu.c ****  *
  75:../Libraries/XMCLib/src/xmc4_scu.c ****  * 2016-04-06:
  76:../Libraries/XMCLib/src/xmc4_scu.c ****  *     - Fixed XMC_SCU_ReadFromRetentionMemory functionality
  77:../Libraries/XMCLib/src/xmc4_scu.c ****  *
  78:../Libraries/XMCLib/src/xmc4_scu.c ****  * 2016-05-19:
  79:../Libraries/XMCLib/src/xmc4_scu.c ****  *     - Changed XMC_SCU_CLOCK_StartSystemPll to avoid using floating point calculation which might
  80:../Libraries/XMCLib/src/xmc4_scu.c ****  *     - Added XMC_SCU_CLOCK_IsLowPowerOscillatorStable() and XMC_SCU_CLOCK_IsHighPerformanceOscill
  81:../Libraries/XMCLib/src/xmc4_scu.c ****  *     - Added XMC_SCU_CLOCK_EnableLowPowerOscillatorGeneralPurposeInput(),
  82:../Libraries/XMCLib/src/xmc4_scu.c ****  *             XMC_SCU_CLOCK_DisableLowPowerOscillatorGeneralPurposeInput(),
  83:../Libraries/XMCLib/src/xmc4_scu.c ****  *             XMC_SCU_CLOCK_GetLowPowerOscillatorGeneralPurposeInputStatus()
  84:../Libraries/XMCLib/src/xmc4_scu.c ****  *     - Added XMC_SCU_CLOCK_EnableHighPerformanceOscillatorGeneralPurposeInput(),
  85:../Libraries/XMCLib/src/xmc4_scu.c ****  *             XMC_SCU_CLOCK_DisableHighPerformanceOscillatorGeneralPurposeInput(),
  86:../Libraries/XMCLib/src/xmc4_scu.c ****  *             XMC_SCU_CLOCK_GetHighPerformanceOscillatorGeneralPurposeInputStatus()
  87:../Libraries/XMCLib/src/xmc4_scu.c ****  *
  88:../Libraries/XMCLib/src/xmc4_scu.c ****  * 2016-06-15:
  89:../Libraries/XMCLib/src/xmc4_scu.c ****  *     - Added XMC_SCU_HIB_EnterHibernateStateEx() which allows to select between external or inter
  90:../Libraries/XMCLib/src/xmc4_scu.c ****  *     - Extended wakeup hibernate events using LPAC wakeup on events. Only available in XMC44, XMC
  91:../Libraries/XMCLib/src/xmc4_scu.c ****  *     - Added LPAC APIs. Only available in XMC44, XMC42 and XMC41 series.
  92:../Libraries/XMCLib/src/xmc4_scu.c ****  *
  93:../Libraries/XMCLib/src/xmc4_scu.c ****  * 2018-06-21:
  94:../Libraries/XMCLib/src/xmc4_scu.c ****  *     - Fixed XMC_SCU_HIB_SetSR1Input()
  95:../Libraries/XMCLib/src/xmc4_scu.c ****  *     - Fixed XMC_SCU_CLOCK_EnableLowPowerOscillator()
  96:../Libraries/XMCLib/src/xmc4_scu.c ****  *
  97:../Libraries/XMCLib/src/xmc4_scu.c ****  * 2019-12-16:
  98:../Libraries/XMCLib/src/xmc4_scu.c ****  *     - Fix including files following the convention: angle brackets are used for standard include
  99:../Libraries/XMCLib/src/xmc4_scu.c ****  *
 100:../Libraries/XMCLib/src/xmc4_scu.c ****  * 2019-09-30:
 101:../Libraries/XMCLib/src/xmc4_scu.c ****  *     - Fixes on XMC_SCU_CLOCK_StartUsbPll(), XMC_SCU_CLOCK_StartSystemPll() and XMC_SCU_CLOCK_Ste
 102:../Libraries/XMCLib/src/xmc4_scu.c ****  *
 103:../Libraries/XMCLib/src/xmc4_scu.c ****  * 2020-11-11:
 104:../Libraries/XMCLib/src/xmc4_scu.c ****  *     - Change making implementation of functions XMC_SCU_HighTemperature(), XMC_SCU_LowTemperatur
 105:../Libraries/XMCLib/src/xmc4_scu.c ****  *
 106:../Libraries/XMCLib/src/xmc4_scu.c ****  * 2020-12-21:
 107:../Libraries/XMCLib/src/xmc4_scu.c ****  *     - Updated XMC_SCU_CLOCK_Init to enable USB PLL locking when the System PLL is disabled.
 108:../Libraries/XMCLib/src/xmc4_scu.c ****  * @endcond
 109:../Libraries/XMCLib/src/xmc4_scu.c ****  *
 110:../Libraries/XMCLib/src/xmc4_scu.c ****  */
 111:../Libraries/XMCLib/src/xmc4_scu.c **** 
 112:../Libraries/XMCLib/src/xmc4_scu.c **** /**
 113:../Libraries/XMCLib/src/xmc4_scu.c ****  *
 114:../Libraries/XMCLib/src/xmc4_scu.c ****  * @brief SCU low level driver API prototype definition for XMC4 family of microcontrollers.
 115:../Libraries/XMCLib/src/xmc4_scu.c ****  *
 116:../Libraries/XMCLib/src/xmc4_scu.c ****  * <b>Detailed description of file:</b> <br>
 117:../Libraries/XMCLib/src/xmc4_scu.c ****  * APIs provided in this file cover the following functional blocks of SCU: <br>
 118:../Libraries/XMCLib/src/xmc4_scu.c ****  * -- GCU (APIs prefixed with XMC_SCU_GEN_) <br>
 119:../Libraries/XMCLib/src/xmc4_scu.c ****  * ------ Temperature Monitoring, Bootmode selection, CCU Start, Comparator configuration etc  <br>
 120:../Libraries/XMCLib/src/xmc4_scu.c ****  * -- CCU (APIs prefixed with XMC_SCU_CLOCK_) <br>
 121:../Libraries/XMCLib/src/xmc4_scu.c ****  * ------ Clock sources init, Clock tree init, Clock gating, Sleep Management etc <br>
 122:../Libraries/XMCLib/src/xmc4_scu.c ****  * -- RCU (APIs prefixed with XMC_SCU_RESET_) <br>
 123:../Libraries/XMCLib/src/xmc4_scu.c ****  * ------ Reset Init, Cause, Manual Reset Assert/Deassert <br>
 124:../Libraries/XMCLib/src/xmc4_scu.c ****  * -- INTERRUPT (APIs prefixed with XMC_SCU_INTERRUPT_) <br>
 125:../Libraries/XMCLib/src/xmc4_scu.c ****  * ------ Init, Manual Assert/Deassert, Acknowledge etc <br>
 126:../Libraries/XMCLib/src/xmc4_scu.c ****  * -- PARITY (APIs prefixed with XMC_SCU_PARITY_) <br>
 127:../Libraries/XMCLib/src/xmc4_scu.c ****  * ------ Init, Acknowledge etc <br>
 128:../Libraries/XMCLib/src/xmc4_scu.c ****  * -- HIBERNATION (APIs prefixed with XMC_SCU_HIB_) <br>
 129:../Libraries/XMCLib/src/xmc4_scu.c ****  * ------ Hibernation entry/exit config, entry/wakeup sequences, LPAC configuration etc <br>
 130:../Libraries/XMCLib/src/xmc4_scu.c ****  * -- TRAP (APIs prefixed with XMC_SCU_TRAP_) <br>
 131:../Libraries/XMCLib/src/xmc4_scu.c ****  * ------ Init, Enable/Disable, Acknowledge etc <br>
 132:../Libraries/XMCLib/src/xmc4_scu.c ****  *
 133:../Libraries/XMCLib/src/xmc4_scu.c ****  */
 134:../Libraries/XMCLib/src/xmc4_scu.c **** 
 135:../Libraries/XMCLib/src/xmc4_scu.c **** /**************************************************************************************************
 136:../Libraries/XMCLib/src/xmc4_scu.c ****  * HEADER FILES
 137:../Libraries/XMCLib/src/xmc4_scu.c ****  **************************************************************************************************
 138:../Libraries/XMCLib/src/xmc4_scu.c **** #include "xmc_scu.h"
 139:../Libraries/XMCLib/src/xmc4_scu.c **** 
 140:../Libraries/XMCLib/src/xmc4_scu.c **** #if UC_FAMILY == XMC4
 141:../Libraries/XMCLib/src/xmc4_scu.c **** 
 142:../Libraries/XMCLib/src/xmc4_scu.c **** /**************************************************************************************************
 143:../Libraries/XMCLib/src/xmc4_scu.c ****  * MACROS
 144:../Libraries/XMCLib/src/xmc4_scu.c ****  **************************************************************************************************
 145:../Libraries/XMCLib/src/xmc4_scu.c **** #define FOSCREF   (2500000UL)    /**< Oscillator reference frequency (fOSCREF) monitored by Oscilla
 146:../Libraries/XMCLib/src/xmc4_scu.c **** #define FREQ_1MHZ (1000000UL)    /**< Used during calculation. */
 147:../Libraries/XMCLib/src/xmc4_scu.c **** 
 148:../Libraries/XMCLib/src/xmc4_scu.c **** #ifndef OFI_FREQUENCY
 149:../Libraries/XMCLib/src/xmc4_scu.c **** #define OFI_FREQUENCY (24000000UL)    /**< Fast internal backup clock source. */
 150:../Libraries/XMCLib/src/xmc4_scu.c **** #endif
 151:../Libraries/XMCLib/src/xmc4_scu.c **** 
 152:../Libraries/XMCLib/src/xmc4_scu.c **** #ifndef OSI_FREQUENCY
 153:../Libraries/XMCLib/src/xmc4_scu.c **** #define OSI_FREQUENCY (32768UL)    /**< Internal slow clock source. */
 154:../Libraries/XMCLib/src/xmc4_scu.c **** #endif
 155:../Libraries/XMCLib/src/xmc4_scu.c **** 
 156:../Libraries/XMCLib/src/xmc4_scu.c **** #ifndef OSCHP_FREQUENCY
 157:../Libraries/XMCLib/src/xmc4_scu.c **** #define OSCHP_FREQUENCY (12000000U)    /**< External crystal High Precision Oscillator. */
 158:../Libraries/XMCLib/src/xmc4_scu.c **** #endif
 159:../Libraries/XMCLib/src/xmc4_scu.c **** 
 160:../Libraries/XMCLib/src/xmc4_scu.c **** #define XMC_SCU_PLL_PLLSTAT_OSC_USABLE  (SCU_PLL_PLLSTAT_PLLHV_Msk | \
 161:../Libraries/XMCLib/src/xmc4_scu.c ****                                          SCU_PLL_PLLSTAT_PLLLV_Msk | \
 162:../Libraries/XMCLib/src/xmc4_scu.c ****                                          SCU_PLL_PLLSTAT_PLLSP_Msk)  /**< Used to verify the OSC fr
 163:../Libraries/XMCLib/src/xmc4_scu.c ****                                                                           usable or not.*/
 164:../Libraries/XMCLib/src/xmc4_scu.c **** 
 165:../Libraries/XMCLib/src/xmc4_scu.c **** #define XMC_SCU_ORC_ADC_START_GROUP    (0UL)    /**< The ADC group whose channel input is compared 
 166:../Libraries/XMCLib/src/xmc4_scu.c ****                                                      Comparator (ORC) to serves the purpose of over
 167:../Libraries/XMCLib/src/xmc4_scu.c ****                                                      for analog input pins of the chip and ORC star
 168:../Libraries/XMCLib/src/xmc4_scu.c ****                                                      this group number. */
 169:../Libraries/XMCLib/src/xmc4_scu.c **** #define XMC_SCU_ORC_ADC_END_GROUP      (1UL)    /**< The ADC group whose channel input is compared 
 170:../Libraries/XMCLib/src/xmc4_scu.c ****                                                      Comparator (ORC) to serves the purpose of over
 171:../Libraries/XMCLib/src/xmc4_scu.c ****                                                      for analog input pins of the chip and ORC end 
 172:../Libraries/XMCLib/src/xmc4_scu.c ****                                                      this group number. */
 173:../Libraries/XMCLib/src/xmc4_scu.c **** #define XMC_SCU_ORC_START_ADC_CHANNEL  (6UL)    /**< The ADC channel whose channel input is compare
 174:../Libraries/XMCLib/src/xmc4_scu.c ****                                                      Comparator (ORC) to serves the purpose of over
 175:../Libraries/XMCLib/src/xmc4_scu.c ****                                                      for analog input pins of the chip and ORC star
 176:../Libraries/XMCLib/src/xmc4_scu.c ****                                                      this channel number. */
 177:../Libraries/XMCLib/src/xmc4_scu.c **** #define XMC_SCU_ORC_END_ADC_CHANNEL    (7UL)    /**< The ADC channel whose channel input is compare
 178:../Libraries/XMCLib/src/xmc4_scu.c ****                                                      Comparator (ORC) to serves the purpose of over
 179:../Libraries/XMCLib/src/xmc4_scu.c ****                                                      for analog input pins of the chip and ORC ends
 180:../Libraries/XMCLib/src/xmc4_scu.c ****                                                      this channel number. */
 181:../Libraries/XMCLib/src/xmc4_scu.c **** 
 182:../Libraries/XMCLib/src/xmc4_scu.c **** #define XMC_SCU_CHECK_GRPNUM(GROUP_NUM)   (((GROUP_NUM) == XMC_SCU_ORC_ADC_START_GROUP) || \
 183:../Libraries/XMCLib/src/xmc4_scu.c ****                                         ((GROUP_NUM) == XMC_SCU_ORC_ADC_END_GROUP) ) /**< Used to v
 184:../Libraries/XMCLib/src/xmc4_scu.c ****                                                                                       provided ADC 
 185:../Libraries/XMCLib/src/xmc4_scu.c ****                                                                                       within specif
 186:../Libraries/XMCLib/src/xmc4_scu.c ****                                                                                       end group num
 187:../Libraries/XMCLib/src/xmc4_scu.c **** 
 188:../Libraries/XMCLib/src/xmc4_scu.c **** #define XMC_SCU_CHECK_CHNUM(CH_NUM)       (((CH_NUM) == XMC_SCU_ORC_START_ADC_CHANNEL) || \
 189:../Libraries/XMCLib/src/xmc4_scu.c ****                                         ((CH_NUM) == XMC_SCU_ORC_END_ADC_CHANNEL) )  /**< Used to v
 190:../Libraries/XMCLib/src/xmc4_scu.c ****                                                                                       provided ADC 
 191:../Libraries/XMCLib/src/xmc4_scu.c ****                                                                                       within specif
 192:../Libraries/XMCLib/src/xmc4_scu.c ****                                                                                       end channel n
 193:../Libraries/XMCLib/src/xmc4_scu.c **** 
 194:../Libraries/XMCLib/src/xmc4_scu.c **** #define XMC_SCU_INTERRUPT_EVENT_MAX            (32U)      /**< Maximum supported SCU events. */
 195:../Libraries/XMCLib/src/xmc4_scu.c **** 
 196:../Libraries/XMCLib/src/xmc4_scu.c **** #define SCU_HIBERNATE_HDCR_HIBIOSEL_Size (4U)
 197:../Libraries/XMCLib/src/xmc4_scu.c **** 
 198:../Libraries/XMCLib/src/xmc4_scu.c **** #define SCU_HIBERNATE_OSCULCTRL_MODE_OSC_POWER_DOWN (0x2U)
 199:../Libraries/XMCLib/src/xmc4_scu.c **** 
 200:../Libraries/XMCLib/src/xmc4_scu.c **** #define XMC_SCU_POWER_LSB13V (0.0058F)
 201:../Libraries/XMCLib/src/xmc4_scu.c **** #define XMC_SCU_POWER_LSB33V (0.0225F)
 202:../Libraries/XMCLib/src/xmc4_scu.c **** 
 203:../Libraries/XMCLib/src/xmc4_scu.c **** /**************************************************************************************************
 204:../Libraries/XMCLib/src/xmc4_scu.c ****  * LOCAL DATA
 205:../Libraries/XMCLib/src/xmc4_scu.c ****  **************************************************************************************************
 206:../Libraries/XMCLib/src/xmc4_scu.c **** static XMC_SCU_INTERRUPT_EVENT_HANDLER_t event_handler_list[XMC_SCU_INTERRUPT_EVENT_MAX]; /**< For 
 207:../Libraries/XMCLib/src/xmc4_scu.c ****                                                                                                func
 208:../Libraries/XMCLib/src/xmc4_scu.c ****                                                                                                occu
 209:../Libraries/XMCLib/src/xmc4_scu.c **** 
 210:../Libraries/XMCLib/src/xmc4_scu.c **** /**************************************************************************************************
 211:../Libraries/XMCLib/src/xmc4_scu.c ****  * LOCAL ROUTINES
 212:../Libraries/XMCLib/src/xmc4_scu.c ****  **************************************************************************************************
 213:../Libraries/XMCLib/src/xmc4_scu.c **** #if defined(UC_ID)
 214:../Libraries/XMCLib/src/xmc4_scu.c **** /* This is a non-weak function, which retrieves high precision external oscillator frequency. */
 215:../Libraries/XMCLib/src/xmc4_scu.c **** __WEAK uint32_t OSCHP_GetFrequency(void)
 216:../Libraries/XMCLib/src/xmc4_scu.c **** {
 217:../Libraries/XMCLib/src/xmc4_scu.c ****   return (OSCHP_FREQUENCY);
 218:../Libraries/XMCLib/src/xmc4_scu.c **** }
 219:../Libraries/XMCLib/src/xmc4_scu.c **** #endif
 220:../Libraries/XMCLib/src/xmc4_scu.c **** 
 221:../Libraries/XMCLib/src/xmc4_scu.c **** /* This is a local function used to generate the delay until register get updated with new configur
 222:../Libraries/XMCLib/src/xmc4_scu.c **** static void XMC_SCU_lDelay(uint32_t cycles);
 223:../Libraries/XMCLib/src/xmc4_scu.c **** 
 224:../Libraries/XMCLib/src/xmc4_scu.c **** /**************************************************************************************************
 225:../Libraries/XMCLib/src/xmc4_scu.c ****  * API IMPLEMENTATION
 226:../Libraries/XMCLib/src/xmc4_scu.c ****  **************************************************************************************************
 227:../Libraries/XMCLib/src/xmc4_scu.c **** /* This is a local function used to generate the delay until register get updated with new configur
 228:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_lDelay(uint32_t delay)
 229:../Libraries/XMCLib/src/xmc4_scu.c **** {
 285              	 .loc 3 229 0
 286              	 .cfi_startproc
 287              	 
 288              	 
 289 0000 80B5     	 push {r7,lr}
 290              	.LCFI24:
 291              	 .cfi_def_cfa_offset 8
 292              	 .cfi_offset 7,-8
 293              	 .cfi_offset 14,-4
 294 0002 84B0     	 sub sp,sp,#16
 295              	.LCFI25:
 296              	 .cfi_def_cfa_offset 24
 297 0004 00AF     	 add r7,sp,#0
 298              	.LCFI26:
 299              	 .cfi_def_cfa_register 7
 300 0006 7860     	 str r0,[r7,#4]
 230:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t i;
 231:../Libraries/XMCLib/src/xmc4_scu.c **** 
 232:../Libraries/XMCLib/src/xmc4_scu.c ****   SystemCoreClockUpdate();
 301              	 .loc 3 232 0
 302 0008 FFF7FEFF 	 bl SystemCoreClockUpdate
 233:../Libraries/XMCLib/src/xmc4_scu.c ****   delay =  delay * (uint32_t)(SystemCoreClock / FREQ_1MHZ);
 303              	 .loc 3 233 0
 304 000c 0B4B     	 ldr r3,.L28
 305 000e 1B68     	 ldr r3,[r3]
 306 0010 0B4A     	 ldr r2,.L28+4
 307 0012 A2FB0323 	 umull r2,r3,r2,r3
 308 0016 9A0C     	 lsrs r2,r3,#18
 309 0018 7B68     	 ldr r3,[r7,#4]
 310 001a 02FB03F3 	 mul r3,r2,r3
 311 001e 7B60     	 str r3,[r7,#4]
 234:../Libraries/XMCLib/src/xmc4_scu.c **** 
 235:../Libraries/XMCLib/src/xmc4_scu.c ****   for (i = 0U; i < delay; ++i)
 312              	 .loc 3 235 0
 313 0020 0023     	 movs r3,#0
 314 0022 FB60     	 str r3,[r7,#12]
 315 0024 03E0     	 b .L26
 316              	.L27:
 236:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 237:../Libraries/XMCLib/src/xmc4_scu.c ****     __NOP();
 317              	 .loc 3 237 0 discriminator 3
 318              	
 319 0026 00BF     	 nop
 320              	
 235:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 321              	 .loc 3 235 0 discriminator 3
 322              	 .thumb
 323 0028 FB68     	 ldr r3,[r7,#12]
 324 002a 0133     	 adds r3,r3,#1
 325 002c FB60     	 str r3,[r7,#12]
 326              	.L26:
 235:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 327              	 .loc 3 235 0 is_stmt 0 discriminator 1
 328 002e FA68     	 ldr r2,[r7,#12]
 329 0030 7B68     	 ldr r3,[r7,#4]
 330 0032 9A42     	 cmp r2,r3
 331 0034 F7D3     	 bcc .L27
 238:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 239:../Libraries/XMCLib/src/xmc4_scu.c **** }
 332              	 .loc 3 239 0 is_stmt 1
 333 0036 1037     	 adds r7,r7,#16
 334              	.LCFI27:
 335              	 .cfi_def_cfa_offset 8
 336 0038 BD46     	 mov sp,r7
 337              	.LCFI28:
 338              	 .cfi_def_cfa_register 13
 339              	 
 340 003a 80BD     	 pop {r7,pc}
 341              	.L29:
 342              	 .align 2
 343              	.L28:
 344 003c 00000000 	 .word SystemCoreClock
 345 0040 83DE1B43 	 .word 1125899907
 346              	 .cfi_endproc
 347              	.LFE170:
 349              	 .section .text.XMC_SCU_INTERRUPT_EnableEvent,"ax",%progbits
 350              	 .align 2
 351              	 .global XMC_SCU_INTERRUPT_EnableEvent
 352              	 .thumb
 353              	 .thumb_func
 355              	XMC_SCU_INTERRUPT_EnableEvent:
 356              	.LFB171:
 240:../Libraries/XMCLib/src/xmc4_scu.c **** 
 241:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to enable the SCU event */
 242:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_INTERRUPT_EnableEvent(const XMC_SCU_INTERRUPT_EVENT_t event)
 243:../Libraries/XMCLib/src/xmc4_scu.c **** {
 357              	 .loc 3 243 0
 358              	 .cfi_startproc
 359              	 
 360              	 
 361              	 
 362 0000 80B4     	 push {r7}
 363              	.LCFI29:
 364              	 .cfi_def_cfa_offset 4
 365              	 .cfi_offset 7,-4
 366 0002 83B0     	 sub sp,sp,#12
 367              	.LCFI30:
 368              	 .cfi_def_cfa_offset 16
 369 0004 00AF     	 add r7,sp,#0
 370              	.LCFI31:
 371              	 .cfi_def_cfa_register 7
 372 0006 7860     	 str r0,[r7,#4]
 244:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_INTERRUPT->SRMSK |= (uint32_t)event;
 373              	 .loc 3 244 0
 374 0008 0549     	 ldr r1,.L31
 375 000a 054B     	 ldr r3,.L31
 376 000c 9A68     	 ldr r2,[r3,#8]
 377 000e 7B68     	 ldr r3,[r7,#4]
 378 0010 1343     	 orrs r3,r3,r2
 379 0012 8B60     	 str r3,[r1,#8]
 245:../Libraries/XMCLib/src/xmc4_scu.c **** }
 380              	 .loc 3 245 0
 381 0014 0C37     	 adds r7,r7,#12
 382              	.LCFI32:
 383              	 .cfi_def_cfa_offset 4
 384 0016 BD46     	 mov sp,r7
 385              	.LCFI33:
 386              	 .cfi_def_cfa_register 13
 387              	 
 388 0018 5DF8047B 	 ldr r7,[sp],#4
 389              	.LCFI34:
 390              	 .cfi_restore 7
 391              	 .cfi_def_cfa_offset 0
 392 001c 7047     	 bx lr
 393              	.L32:
 394 001e 00BF     	 .align 2
 395              	.L31:
 396 0020 74400050 	 .word 1342193780
 397              	 .cfi_endproc
 398              	.LFE171:
 400              	 .section .text.XMC_SCU_INTERRUPT_DisableEvent,"ax",%progbits
 401              	 .align 2
 402              	 .global XMC_SCU_INTERRUPT_DisableEvent
 403              	 .thumb
 404              	 .thumb_func
 406              	XMC_SCU_INTERRUPT_DisableEvent:
 407              	.LFB172:
 246:../Libraries/XMCLib/src/xmc4_scu.c **** 
 247:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to disable the SCU event */
 248:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_INTERRUPT_DisableEvent(const XMC_SCU_INTERRUPT_EVENT_t event)
 249:../Libraries/XMCLib/src/xmc4_scu.c **** {
 408              	 .loc 3 249 0
 409              	 .cfi_startproc
 410              	 
 411              	 
 412              	 
 413 0000 80B4     	 push {r7}
 414              	.LCFI35:
 415              	 .cfi_def_cfa_offset 4
 416              	 .cfi_offset 7,-4
 417 0002 83B0     	 sub sp,sp,#12
 418              	.LCFI36:
 419              	 .cfi_def_cfa_offset 16
 420 0004 00AF     	 add r7,sp,#0
 421              	.LCFI37:
 422              	 .cfi_def_cfa_register 7
 423 0006 7860     	 str r0,[r7,#4]
 250:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_INTERRUPT->SRMSK &= (uint32_t)~event;
 424              	 .loc 3 250 0
 425 0008 0549     	 ldr r1,.L34
 426 000a 054B     	 ldr r3,.L34
 427 000c 9A68     	 ldr r2,[r3,#8]
 428 000e 7B68     	 ldr r3,[r7,#4]
 429 0010 DB43     	 mvns r3,r3
 430 0012 1340     	 ands r3,r3,r2
 431 0014 8B60     	 str r3,[r1,#8]
 251:../Libraries/XMCLib/src/xmc4_scu.c **** }
 432              	 .loc 3 251 0
 433 0016 0C37     	 adds r7,r7,#12
 434              	.LCFI38:
 435              	 .cfi_def_cfa_offset 4
 436 0018 BD46     	 mov sp,r7
 437              	.LCFI39:
 438              	 .cfi_def_cfa_register 13
 439              	 
 440 001a 5DF8047B 	 ldr r7,[sp],#4
 441              	.LCFI40:
 442              	 .cfi_restore 7
 443              	 .cfi_def_cfa_offset 0
 444 001e 7047     	 bx lr
 445              	.L35:
 446              	 .align 2
 447              	.L34:
 448 0020 74400050 	 .word 1342193780
 449              	 .cfi_endproc
 450              	.LFE172:
 452              	 .section .text.XMC_SCU_INTERRUPT_TriggerEvent,"ax",%progbits
 453              	 .align 2
 454              	 .global XMC_SCU_INTERRUPT_TriggerEvent
 455              	 .thumb
 456              	 .thumb_func
 458              	XMC_SCU_INTERRUPT_TriggerEvent:
 459              	.LFB173:
 252:../Libraries/XMCLib/src/xmc4_scu.c **** 
 253:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to trigger the SCU event */
 254:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_INTERRUPT_TriggerEvent(const XMC_SCU_INTERRUPT_EVENT_t event)
 255:../Libraries/XMCLib/src/xmc4_scu.c **** {
 460              	 .loc 3 255 0
 461              	 .cfi_startproc
 462              	 
 463              	 
 464              	 
 465 0000 80B4     	 push {r7}
 466              	.LCFI41:
 467              	 .cfi_def_cfa_offset 4
 468              	 .cfi_offset 7,-4
 469 0002 83B0     	 sub sp,sp,#12
 470              	.LCFI42:
 471              	 .cfi_def_cfa_offset 16
 472 0004 00AF     	 add r7,sp,#0
 473              	.LCFI43:
 474              	 .cfi_def_cfa_register 7
 475 0006 7860     	 str r0,[r7,#4]
 256:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_INTERRUPT->SRSET |= (uint32_t)event;
 476              	 .loc 3 256 0
 477 0008 0549     	 ldr r1,.L37
 478 000a 054B     	 ldr r3,.L37
 479 000c 1A69     	 ldr r2,[r3,#16]
 480 000e 7B68     	 ldr r3,[r7,#4]
 481 0010 1343     	 orrs r3,r3,r2
 482 0012 0B61     	 str r3,[r1,#16]
 257:../Libraries/XMCLib/src/xmc4_scu.c **** }
 483              	 .loc 3 257 0
 484 0014 0C37     	 adds r7,r7,#12
 485              	.LCFI44:
 486              	 .cfi_def_cfa_offset 4
 487 0016 BD46     	 mov sp,r7
 488              	.LCFI45:
 489              	 .cfi_def_cfa_register 13
 490              	 
 491 0018 5DF8047B 	 ldr r7,[sp],#4
 492              	.LCFI46:
 493              	 .cfi_restore 7
 494              	 .cfi_def_cfa_offset 0
 495 001c 7047     	 bx lr
 496              	.L38:
 497 001e 00BF     	 .align 2
 498              	.L37:
 499 0020 74400050 	 .word 1342193780
 500              	 .cfi_endproc
 501              	.LFE173:
 503              	 .section .text.XMC_SCU_INTERUPT_GetEventStatus,"ax",%progbits
 504              	 .align 2
 505              	 .global XMC_SCU_INTERUPT_GetEventStatus
 506              	 .thumb
 507              	 .thumb_func
 509              	XMC_SCU_INTERUPT_GetEventStatus:
 510              	.LFB174:
 258:../Libraries/XMCLib/src/xmc4_scu.c **** 
 259:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to retrieve the SCU event status */
 260:../Libraries/XMCLib/src/xmc4_scu.c **** XMC_SCU_INTERRUPT_EVENT_t XMC_SCU_INTERUPT_GetEventStatus(void)
 261:../Libraries/XMCLib/src/xmc4_scu.c **** {
 511              	 .loc 3 261 0
 512              	 .cfi_startproc
 513              	 
 514              	 
 515              	 
 516 0000 80B4     	 push {r7}
 517              	.LCFI47:
 518              	 .cfi_def_cfa_offset 4
 519              	 .cfi_offset 7,-4
 520 0002 00AF     	 add r7,sp,#0
 521              	.LCFI48:
 522              	 .cfi_def_cfa_register 7
 262:../Libraries/XMCLib/src/xmc4_scu.c ****   return (SCU_INTERRUPT->SRRAW);
 523              	 .loc 3 262 0
 524 0004 034B     	 ldr r3,.L41
 525 0006 5B68     	 ldr r3,[r3,#4]
 263:../Libraries/XMCLib/src/xmc4_scu.c **** }
 526              	 .loc 3 263 0
 527 0008 1846     	 mov r0,r3
 528 000a BD46     	 mov sp,r7
 529              	.LCFI49:
 530              	 .cfi_def_cfa_register 13
 531              	 
 532 000c 5DF8047B 	 ldr r7,[sp],#4
 533              	.LCFI50:
 534              	 .cfi_restore 7
 535              	 .cfi_def_cfa_offset 0
 536 0010 7047     	 bx lr
 537              	.L42:
 538 0012 00BF     	 .align 2
 539              	.L41:
 540 0014 74400050 	 .word 1342193780
 541              	 .cfi_endproc
 542              	.LFE174:
 544              	 .section .text.XMC_SCU_INTERRUPT_ClearEventStatus,"ax",%progbits
 545              	 .align 2
 546              	 .global XMC_SCU_INTERRUPT_ClearEventStatus
 547              	 .thumb
 548              	 .thumb_func
 550              	XMC_SCU_INTERRUPT_ClearEventStatus:
 551              	.LFB175:
 264:../Libraries/XMCLib/src/xmc4_scu.c **** 
 265:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to clear the SCU event status */
 266:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_INTERRUPT_ClearEventStatus(const XMC_SCU_INTERRUPT_EVENT_t event)
 267:../Libraries/XMCLib/src/xmc4_scu.c **** {
 552              	 .loc 3 267 0
 553              	 .cfi_startproc
 554              	 
 555              	 
 556              	 
 557 0000 80B4     	 push {r7}
 558              	.LCFI51:
 559              	 .cfi_def_cfa_offset 4
 560              	 .cfi_offset 7,-4
 561 0002 83B0     	 sub sp,sp,#12
 562              	.LCFI52:
 563              	 .cfi_def_cfa_offset 16
 564 0004 00AF     	 add r7,sp,#0
 565              	.LCFI53:
 566              	 .cfi_def_cfa_register 7
 567 0006 7860     	 str r0,[r7,#4]
 268:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_INTERRUPT->SRCLR = (uint32_t)event;
 568              	 .loc 3 268 0
 569 0008 034A     	 ldr r2,.L44
 570 000a 7B68     	 ldr r3,[r7,#4]
 571 000c D360     	 str r3,[r2,#12]
 269:../Libraries/XMCLib/src/xmc4_scu.c **** }
 572              	 .loc 3 269 0
 573 000e 0C37     	 adds r7,r7,#12
 574              	.LCFI54:
 575              	 .cfi_def_cfa_offset 4
 576 0010 BD46     	 mov sp,r7
 577              	.LCFI55:
 578              	 .cfi_def_cfa_register 13
 579              	 
 580 0012 5DF8047B 	 ldr r7,[sp],#4
 581              	.LCFI56:
 582              	 .cfi_restore 7
 583              	 .cfi_def_cfa_offset 0
 584 0016 7047     	 bx lr
 585              	.L45:
 586              	 .align 2
 587              	.L44:
 588 0018 74400050 	 .word 1342193780
 589              	 .cfi_endproc
 590              	.LFE175:
 592              	 .section .text.XMC_SCU_GetBootMode,"ax",%progbits
 593              	 .align 2
 594              	 .global XMC_SCU_GetBootMode
 595              	 .thumb
 596              	 .thumb_func
 598              	XMC_SCU_GetBootMode:
 599              	.LFB176:
 270:../Libraries/XMCLib/src/xmc4_scu.c **** 
 271:../Libraries/XMCLib/src/xmc4_scu.c **** 
 272:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to retrieve the currently deployed device bootmode */
 273:../Libraries/XMCLib/src/xmc4_scu.c **** uint32_t XMC_SCU_GetBootMode(void)
 274:../Libraries/XMCLib/src/xmc4_scu.c **** {
 600              	 .loc 3 274 0
 601              	 .cfi_startproc
 602              	 
 603              	 
 604              	 
 605 0000 80B4     	 push {r7}
 606              	.LCFI57:
 607              	 .cfi_def_cfa_offset 4
 608              	 .cfi_offset 7,-4
 609 0002 00AF     	 add r7,sp,#0
 610              	.LCFI58:
 611              	 .cfi_def_cfa_register 7
 275:../Libraries/XMCLib/src/xmc4_scu.c ****   return (uint32_t)(SCU_GENERAL->STCON & SCU_GENERAL_STCON_SWCON_Msk);
 612              	 .loc 3 275 0
 613 0004 044B     	 ldr r3,.L48
 614 0006 1B69     	 ldr r3,[r3,#16]
 615 0008 03F47063 	 and r3,r3,#3840
 276:../Libraries/XMCLib/src/xmc4_scu.c **** }
 616              	 .loc 3 276 0
 617 000c 1846     	 mov r0,r3
 618 000e BD46     	 mov sp,r7
 619              	.LCFI59:
 620              	 .cfi_def_cfa_register 13
 621              	 
 622 0010 5DF8047B 	 ldr r7,[sp],#4
 623              	.LCFI60:
 624              	 .cfi_restore 7
 625              	 .cfi_def_cfa_offset 0
 626 0014 7047     	 bx lr
 627              	.L49:
 628 0016 00BF     	 .align 2
 629              	.L48:
 630 0018 00400050 	 .word 1342193664
 631              	 .cfi_endproc
 632              	.LFE176:
 634              	 .section .text.XMC_SCU_SetBootMode,"ax",%progbits
 635              	 .align 2
 636              	 .global XMC_SCU_SetBootMode
 637              	 .thumb
 638              	 .thumb_func
 640              	XMC_SCU_SetBootMode:
 641              	.LFB177:
 277:../Libraries/XMCLib/src/xmc4_scu.c **** 
 278:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to program a new device bootmode */
 279:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_SetBootMode(const XMC_SCU_BOOTMODE_t bootmode)
 280:../Libraries/XMCLib/src/xmc4_scu.c **** {
 642              	 .loc 3 280 0
 643              	 .cfi_startproc
 644              	 
 645              	 
 646              	 
 647 0000 80B4     	 push {r7}
 648              	.LCFI61:
 649              	 .cfi_def_cfa_offset 4
 650              	 .cfi_offset 7,-4
 651 0002 83B0     	 sub sp,sp,#12
 652              	.LCFI62:
 653              	 .cfi_def_cfa_offset 16
 654 0004 00AF     	 add r7,sp,#0
 655              	.LCFI63:
 656              	 .cfi_def_cfa_register 7
 657 0006 0346     	 mov r3,r0
 658 0008 FB80     	 strh r3,[r7,#6]
 281:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_GENERAL->STCON = (uint32_t)bootmode;
 659              	 .loc 3 281 0
 660 000a 044A     	 ldr r2,.L51
 661 000c FB88     	 ldrh r3,[r7,#6]
 662 000e 1361     	 str r3,[r2,#16]
 282:../Libraries/XMCLib/src/xmc4_scu.c **** }
 663              	 .loc 3 282 0
 664 0010 0C37     	 adds r7,r7,#12
 665              	.LCFI64:
 666              	 .cfi_def_cfa_offset 4
 667 0012 BD46     	 mov sp,r7
 668              	.LCFI65:
 669              	 .cfi_def_cfa_register 13
 670              	 
 671 0014 5DF8047B 	 ldr r7,[sp],#4
 672              	.LCFI66:
 673              	 .cfi_restore 7
 674              	 .cfi_def_cfa_offset 0
 675 0018 7047     	 bx lr
 676              	.L52:
 677 001a 00BF     	 .align 2
 678              	.L51:
 679 001c 00400050 	 .word 1342193664
 680              	 .cfi_endproc
 681              	.LFE177:
 683              	 .section .text.XMC_SCU_ReadGPR,"ax",%progbits
 684              	 .align 2
 685              	 .global XMC_SCU_ReadGPR
 686              	 .thumb
 687              	 .thumb_func
 689              	XMC_SCU_ReadGPR:
 690              	.LFB178:
 283:../Libraries/XMCLib/src/xmc4_scu.c **** 
 284:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to read from General purpose register */
 285:../Libraries/XMCLib/src/xmc4_scu.c **** uint32_t XMC_SCU_ReadGPR(const uint32_t index)
 286:../Libraries/XMCLib/src/xmc4_scu.c **** {
 691              	 .loc 3 286 0
 692              	 .cfi_startproc
 693              	 
 694              	 
 695              	 
 696 0000 80B4     	 push {r7}
 697              	.LCFI67:
 698              	 .cfi_def_cfa_offset 4
 699              	 .cfi_offset 7,-4
 700 0002 83B0     	 sub sp,sp,#12
 701              	.LCFI68:
 702              	 .cfi_def_cfa_offset 16
 703 0004 00AF     	 add r7,sp,#0
 704              	.LCFI69:
 705              	 .cfi_def_cfa_register 7
 706 0006 7860     	 str r0,[r7,#4]
 287:../Libraries/XMCLib/src/xmc4_scu.c ****   return (SCU_GENERAL->GPR[index]);
 707              	 .loc 3 287 0
 708 0008 054A     	 ldr r2,.L55
 709 000a 7B68     	 ldr r3,[r7,#4]
 710 000c 0A33     	 adds r3,r3,#10
 711 000e 9B00     	 lsls r3,r3,#2
 712 0010 1344     	 add r3,r3,r2
 713 0012 5B68     	 ldr r3,[r3,#4]
 288:../Libraries/XMCLib/src/xmc4_scu.c **** }
 714              	 .loc 3 288 0
 715 0014 1846     	 mov r0,r3
 716 0016 0C37     	 adds r7,r7,#12
 717              	.LCFI70:
 718              	 .cfi_def_cfa_offset 4
 719 0018 BD46     	 mov sp,r7
 720              	.LCFI71:
 721              	 .cfi_def_cfa_register 13
 722              	 
 723 001a 5DF8047B 	 ldr r7,[sp],#4
 724              	.LCFI72:
 725              	 .cfi_restore 7
 726              	 .cfi_def_cfa_offset 0
 727 001e 7047     	 bx lr
 728              	.L56:
 729              	 .align 2
 730              	.L55:
 731 0020 00400050 	 .word 1342193664
 732              	 .cfi_endproc
 733              	.LFE178:
 735              	 .section .text.XMC_SCU_WriteGPR,"ax",%progbits
 736              	 .align 2
 737              	 .global XMC_SCU_WriteGPR
 738              	 .thumb
 739              	 .thumb_func
 741              	XMC_SCU_WriteGPR:
 742              	.LFB179:
 289:../Libraries/XMCLib/src/xmc4_scu.c **** 
 290:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to write to GPR */
 291:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_WriteGPR(const uint32_t index, const uint32_t data)
 292:../Libraries/XMCLib/src/xmc4_scu.c **** {
 743              	 .loc 3 292 0
 744              	 .cfi_startproc
 745              	 
 746              	 
 747              	 
 748 0000 80B4     	 push {r7}
 749              	.LCFI73:
 750              	 .cfi_def_cfa_offset 4
 751              	 .cfi_offset 7,-4
 752 0002 83B0     	 sub sp,sp,#12
 753              	.LCFI74:
 754              	 .cfi_def_cfa_offset 16
 755 0004 00AF     	 add r7,sp,#0
 756              	.LCFI75:
 757              	 .cfi_def_cfa_register 7
 758 0006 7860     	 str r0,[r7,#4]
 759 0008 3960     	 str r1,[r7]
 293:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_GENERAL->GPR[index] = data;
 760              	 .loc 3 293 0
 761 000a 064A     	 ldr r2,.L58
 762 000c 7B68     	 ldr r3,[r7,#4]
 763 000e 0A33     	 adds r3,r3,#10
 764 0010 9B00     	 lsls r3,r3,#2
 765 0012 1344     	 add r3,r3,r2
 766 0014 3A68     	 ldr r2,[r7]
 767 0016 5A60     	 str r2,[r3,#4]
 294:../Libraries/XMCLib/src/xmc4_scu.c **** }
 768              	 .loc 3 294 0
 769 0018 0C37     	 adds r7,r7,#12
 770              	.LCFI76:
 771              	 .cfi_def_cfa_offset 4
 772 001a BD46     	 mov sp,r7
 773              	.LCFI77:
 774              	 .cfi_def_cfa_register 13
 775              	 
 776 001c 5DF8047B 	 ldr r7,[sp],#4
 777              	.LCFI78:
 778              	 .cfi_restore 7
 779              	 .cfi_def_cfa_offset 0
 780 0020 7047     	 bx lr
 781              	.L59:
 782 0022 00BF     	 .align 2
 783              	.L58:
 784 0024 00400050 	 .word 1342193664
 785              	 .cfi_endproc
 786              	.LFE179:
 788              	 .section .text.XMC_SCU_EnableOutOfRangeComparator,"ax",%progbits
 789              	 .align 2
 790              	 .global XMC_SCU_EnableOutOfRangeComparator
 791              	 .thumb
 792              	 .thumb_func
 794              	XMC_SCU_EnableOutOfRangeComparator:
 795              	.LFB180:
 295:../Libraries/XMCLib/src/xmc4_scu.c **** 
 296:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to enable Out of Range Comparator(ORC) for a desired group and a desired channel input */
 297:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_EnableOutOfRangeComparator(const uint32_t group, const uint32_t channel)
 298:../Libraries/XMCLib/src/xmc4_scu.c **** {
 796              	 .loc 3 298 0
 797              	 .cfi_startproc
 798              	 
 799              	 
 800              	 
 801 0000 80B4     	 push {r7}
 802              	.LCFI79:
 803              	 .cfi_def_cfa_offset 4
 804              	 .cfi_offset 7,-4
 805 0002 83B0     	 sub sp,sp,#12
 806              	.LCFI80:
 807              	 .cfi_def_cfa_offset 16
 808 0004 00AF     	 add r7,sp,#0
 809              	.LCFI81:
 810              	 .cfi_def_cfa_register 7
 811 0006 7860     	 str r0,[r7,#4]
 812 0008 3960     	 str r1,[r7]
 299:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_ASSERT("XMC_SCU_EnableOutOfangeComparator:Wrong Group Number", XMC_SCU_CHECK_GRPNUM(group));
 300:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_ASSERT("XMC_SCU_EnableOutOfangeComparator:Wrong Channel Number", XMC_SCU_CHECK_CHNUM(channel)
 301:../Libraries/XMCLib/src/xmc4_scu.c **** 
 302:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_GENERAL->GORCEN[group] |= (uint32_t)(1UL << channel);
 813              	 .loc 3 302 0
 814 000a 0A49     	 ldr r1,.L61
 815 000c 094A     	 ldr r2,.L61
 816 000e 7B68     	 ldr r3,[r7,#4]
 817 0010 2833     	 adds r3,r3,#40
 818 0012 52F82320 	 ldr r2,[r2,r3,lsl#2]
 819 0016 3B68     	 ldr r3,[r7]
 820 0018 0120     	 movs r0,#1
 821 001a 00FA03F3 	 lsl r3,r0,r3
 822 001e 1A43     	 orrs r2,r2,r3
 823 0020 7B68     	 ldr r3,[r7,#4]
 824 0022 2833     	 adds r3,r3,#40
 825 0024 41F82320 	 str r2,[r1,r3,lsl#2]
 303:../Libraries/XMCLib/src/xmc4_scu.c **** }
 826              	 .loc 3 303 0
 827 0028 0C37     	 adds r7,r7,#12
 828              	.LCFI82:
 829              	 .cfi_def_cfa_offset 4
 830 002a BD46     	 mov sp,r7
 831              	.LCFI83:
 832              	 .cfi_def_cfa_register 13
 833              	 
 834 002c 5DF8047B 	 ldr r7,[sp],#4
 835              	.LCFI84:
 836              	 .cfi_restore 7
 837              	 .cfi_def_cfa_offset 0
 838 0030 7047     	 bx lr
 839              	.L62:
 840 0032 00BF     	 .align 2
 841              	.L61:
 842 0034 00400050 	 .word 1342193664
 843              	 .cfi_endproc
 844              	.LFE180:
 846              	 .section .text.XMC_SCU_DisableOutOfRangeComparator,"ax",%progbits
 847              	 .align 2
 848              	 .global XMC_SCU_DisableOutOfRangeComparator
 849              	 .thumb
 850              	 .thumb_func
 852              	XMC_SCU_DisableOutOfRangeComparator:
 853              	.LFB181:
 304:../Libraries/XMCLib/src/xmc4_scu.c **** 
 305:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to enable Out of Range Comparator(ORC) for a desired group and a desired channel input */
 306:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_DisableOutOfRangeComparator(const uint32_t group, const uint32_t channel)
 307:../Libraries/XMCLib/src/xmc4_scu.c **** {
 854              	 .loc 3 307 0
 855              	 .cfi_startproc
 856              	 
 857              	 
 858              	 
 859 0000 80B4     	 push {r7}
 860              	.LCFI85:
 861              	 .cfi_def_cfa_offset 4
 862              	 .cfi_offset 7,-4
 863 0002 83B0     	 sub sp,sp,#12
 864              	.LCFI86:
 865              	 .cfi_def_cfa_offset 16
 866 0004 00AF     	 add r7,sp,#0
 867              	.LCFI87:
 868              	 .cfi_def_cfa_register 7
 869 0006 7860     	 str r0,[r7,#4]
 870 0008 3960     	 str r1,[r7]
 308:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_ASSERT("XMC_SCU_DisableOutOfRangeComparator:Wrong Group Number", XMC_SCU_CHECK_GRPNUM(group))
 309:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_ASSERT("XMC_SCU_DisableOutOfRangeComparator:Wrong Channel Number", XMC_SCU_CHECK_CHNUM(channe
 310:../Libraries/XMCLib/src/xmc4_scu.c **** 
 311:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_GENERAL->GORCEN[group] &= (uint32_t)~(1UL << channel);
 871              	 .loc 3 311 0
 872 000a 0A49     	 ldr r1,.L64
 873 000c 094A     	 ldr r2,.L64
 874 000e 7B68     	 ldr r3,[r7,#4]
 875 0010 2833     	 adds r3,r3,#40
 876 0012 52F82320 	 ldr r2,[r2,r3,lsl#2]
 877 0016 3B68     	 ldr r3,[r7]
 878 0018 0120     	 movs r0,#1
 879 001a 00FA03F3 	 lsl r3,r0,r3
 880 001e DB43     	 mvns r3,r3
 881 0020 1A40     	 ands r2,r2,r3
 882 0022 7B68     	 ldr r3,[r7,#4]
 883 0024 2833     	 adds r3,r3,#40
 884 0026 41F82320 	 str r2,[r1,r3,lsl#2]
 312:../Libraries/XMCLib/src/xmc4_scu.c **** }
 885              	 .loc 3 312 0
 886 002a 0C37     	 adds r7,r7,#12
 887              	.LCFI88:
 888              	 .cfi_def_cfa_offset 4
 889 002c BD46     	 mov sp,r7
 890              	.LCFI89:
 891              	 .cfi_def_cfa_register 13
 892              	 
 893 002e 5DF8047B 	 ldr r7,[sp],#4
 894              	.LCFI90:
 895              	 .cfi_restore 7
 896              	 .cfi_def_cfa_offset 0
 897 0032 7047     	 bx lr
 898              	.L65:
 899              	 .align 2
 900              	.L64:
 901 0034 00400050 	 .word 1342193664
 902              	 .cfi_endproc
 903              	.LFE181:
 905              	 .section .text.XMC_SCU_CalibrateTemperatureSensor,"ax",%progbits
 906              	 .align 2
 907              	 .global XMC_SCU_CalibrateTemperatureSensor
 908              	 .thumb
 909              	 .thumb_func
 911              	XMC_SCU_CalibrateTemperatureSensor:
 912              	.LFB182:
 313:../Libraries/XMCLib/src/xmc4_scu.c **** 
 314:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to calibrate temperature sensor */
 315:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CalibrateTemperatureSensor(uint32_t offset, uint32_t gain)
 316:../Libraries/XMCLib/src/xmc4_scu.c **** {
 913              	 .loc 3 316 0
 914              	 .cfi_startproc
 915              	 
 916              	 
 917              	 
 918 0000 80B4     	 push {r7}
 919              	.LCFI91:
 920              	 .cfi_def_cfa_offset 4
 921              	 .cfi_offset 7,-4
 922 0002 83B0     	 sub sp,sp,#12
 923              	.LCFI92:
 924              	 .cfi_def_cfa_offset 16
 925 0004 00AF     	 add r7,sp,#0
 926              	.LCFI93:
 927              	 .cfi_def_cfa_register 7
 928 0006 7860     	 str r0,[r7,#4]
 929 0008 3960     	 str r1,[r7]
 317:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_GENERAL->DTSCON = ((uint32_t)(offset << SCU_GENERAL_DTSCON_OFFSET_Pos) |
 930              	 .loc 3 317 0
 931 000a 0749     	 ldr r1,.L67
 932 000c 7B68     	 ldr r3,[r7,#4]
 933 000e 1A01     	 lsls r2,r3,#4
 318:../Libraries/XMCLib/src/xmc4_scu.c ****                          (uint32_t)(gain << SCU_GENERAL_DTSCON_GAIN_Pos) |
 934              	 .loc 3 318 0
 935 0010 3B68     	 ldr r3,[r7]
 936 0012 DB02     	 lsls r3,r3,#11
 317:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_GENERAL->DTSCON = ((uint32_t)(offset << SCU_GENERAL_DTSCON_OFFSET_Pos) |
 937              	 .loc 3 317 0
 938 0014 1343     	 orrs r3,r3,r2
 319:../Libraries/XMCLib/src/xmc4_scu.c ****                          (uint32_t)(0x4UL << SCU_GENERAL_DTSCON_REFTRIM_Pos) |
 939              	 .loc 3 319 0
 940 0016 43F40803 	 orr r3,r3,#8912896
 317:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_GENERAL->DTSCON = ((uint32_t)(offset << SCU_GENERAL_DTSCON_OFFSET_Pos) |
 941              	 .loc 3 317 0
 942 001a C1F88C30 	 str r3,[r1,#140]
 320:../Libraries/XMCLib/src/xmc4_scu.c ****                          (uint32_t)(0x8UL << SCU_GENERAL_DTSCON_BGTRIM_Pos));
 321:../Libraries/XMCLib/src/xmc4_scu.c **** }
 943              	 .loc 3 321 0
 944 001e 0C37     	 adds r7,r7,#12
 945              	.LCFI94:
 946              	 .cfi_def_cfa_offset 4
 947 0020 BD46     	 mov sp,r7
 948              	.LCFI95:
 949              	 .cfi_def_cfa_register 13
 950              	 
 951 0022 5DF8047B 	 ldr r7,[sp],#4
 952              	.LCFI96:
 953              	 .cfi_restore 7
 954              	 .cfi_def_cfa_offset 0
 955 0026 7047     	 bx lr
 956              	.L68:
 957              	 .align 2
 958              	.L67:
 959 0028 00400050 	 .word 1342193664
 960              	 .cfi_endproc
 961              	.LFE182:
 963              	 .section .text.XMC_SCU_EnableTemperatureSensor,"ax",%progbits
 964              	 .align 2
 965              	 .global XMC_SCU_EnableTemperatureSensor
 966              	 .thumb
 967              	 .thumb_func
 969              	XMC_SCU_EnableTemperatureSensor:
 970              	.LFB183:
 322:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to enable die temperature measurement by powering the DTS module. */
 323:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_EnableTemperatureSensor(void)
 324:../Libraries/XMCLib/src/xmc4_scu.c **** {
 971              	 .loc 3 324 0
 972              	 .cfi_startproc
 973              	 
 974              	 
 975              	 
 976 0000 80B4     	 push {r7}
 977              	.LCFI97:
 978              	 .cfi_def_cfa_offset 4
 979              	 .cfi_offset 7,-4
 980 0002 00AF     	 add r7,sp,#0
 981              	.LCFI98:
 982              	 .cfi_def_cfa_register 7
 325:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_GENERAL->DTSCON &= (uint32_t)~(SCU_GENERAL_DTSCON_PWD_Msk);
 983              	 .loc 3 325 0
 984 0004 054A     	 ldr r2,.L70
 985 0006 054B     	 ldr r3,.L70
 986 0008 D3F88C30 	 ldr r3,[r3,#140]
 987 000c 23F00103 	 bic r3,r3,#1
 988 0010 C2F88C30 	 str r3,[r2,#140]
 326:../Libraries/XMCLib/src/xmc4_scu.c **** }
 989              	 .loc 3 326 0
 990 0014 BD46     	 mov sp,r7
 991              	.LCFI99:
 992              	 .cfi_def_cfa_register 13
 993              	 
 994 0016 5DF8047B 	 ldr r7,[sp],#4
 995              	.LCFI100:
 996              	 .cfi_restore 7
 997              	 .cfi_def_cfa_offset 0
 998 001a 7047     	 bx lr
 999              	.L71:
 1000              	 .align 2
 1001              	.L70:
 1002 001c 00400050 	 .word 1342193664
 1003              	 .cfi_endproc
 1004              	.LFE183:
 1006              	 .section .text.XMC_SCU_DisableTemperatureSensor,"ax",%progbits
 1007              	 .align 2
 1008              	 .global XMC_SCU_DisableTemperatureSensor
 1009              	 .thumb
 1010              	 .thumb_func
 1012              	XMC_SCU_DisableTemperatureSensor:
 1013              	.LFB184:
 327:../Libraries/XMCLib/src/xmc4_scu.c **** 
 328:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to disable die temperature measurement by powering the DTS module off. */
 329:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_DisableTemperatureSensor(void)
 330:../Libraries/XMCLib/src/xmc4_scu.c **** {
 1014              	 .loc 3 330 0
 1015              	 .cfi_startproc
 1016              	 
 1017              	 
 1018              	 
 1019 0000 80B4     	 push {r7}
 1020              	.LCFI101:
 1021              	 .cfi_def_cfa_offset 4
 1022              	 .cfi_offset 7,-4
 1023 0002 00AF     	 add r7,sp,#0
 1024              	.LCFI102:
 1025              	 .cfi_def_cfa_register 7
 331:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_GENERAL->DTSCON |= (uint32_t)SCU_GENERAL_DTSCON_PWD_Msk;
 1026              	 .loc 3 331 0
 1027 0004 054A     	 ldr r2,.L73
 1028 0006 054B     	 ldr r3,.L73
 1029 0008 D3F88C30 	 ldr r3,[r3,#140]
 1030 000c 43F00103 	 orr r3,r3,#1
 1031 0010 C2F88C30 	 str r3,[r2,#140]
 332:../Libraries/XMCLib/src/xmc4_scu.c **** }
 1032              	 .loc 3 332 0
 1033 0014 BD46     	 mov sp,r7
 1034              	.LCFI103:
 1035              	 .cfi_def_cfa_register 13
 1036              	 
 1037 0016 5DF8047B 	 ldr r7,[sp],#4
 1038              	.LCFI104:
 1039              	 .cfi_restore 7
 1040              	 .cfi_def_cfa_offset 0
 1041 001a 7047     	 bx lr
 1042              	.L74:
 1043              	 .align 2
 1044              	.L73:
 1045 001c 00400050 	 .word 1342193664
 1046              	 .cfi_endproc
 1047              	.LFE184:
 1049              	 .section .text.XMC_SCU_IsTemperatureSensorEnabled,"ax",%progbits
 1050              	 .align 2
 1051              	 .global XMC_SCU_IsTemperatureSensorEnabled
 1052              	 .thumb
 1053              	 .thumb_func
 1055              	XMC_SCU_IsTemperatureSensorEnabled:
 1056              	.LFB185:
 333:../Libraries/XMCLib/src/xmc4_scu.c **** 
 334:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to provide the die temperature sensor power status. */
 335:../Libraries/XMCLib/src/xmc4_scu.c **** bool XMC_SCU_IsTemperatureSensorEnabled(void)
 336:../Libraries/XMCLib/src/xmc4_scu.c **** {
 1057              	 .loc 3 336 0
 1058              	 .cfi_startproc
 1059              	 
 1060              	 
 1061              	 
 1062 0000 80B4     	 push {r7}
 1063              	.LCFI105:
 1064              	 .cfi_def_cfa_offset 4
 1065              	 .cfi_offset 7,-4
 1066 0002 00AF     	 add r7,sp,#0
 1067              	.LCFI106:
 1068              	 .cfi_def_cfa_register 7
 337:../Libraries/XMCLib/src/xmc4_scu.c ****   return ((SCU_GENERAL->DTSCON & SCU_GENERAL_DTSCON_PWD_Msk) == 0U);
 1069              	 .loc 3 337 0
 1070 0004 074B     	 ldr r3,.L77
 1071 0006 D3F88C30 	 ldr r3,[r3,#140]
 1072 000a 03F00103 	 and r3,r3,#1
 1073 000e 002B     	 cmp r3,#0
 1074 0010 0CBF     	 ite eq
 1075 0012 0123     	 moveq r3,#1
 1076 0014 0023     	 movne r3,#0
 1077 0016 DBB2     	 uxtb r3,r3
 338:../Libraries/XMCLib/src/xmc4_scu.c **** }
 1078              	 .loc 3 338 0
 1079 0018 1846     	 mov r0,r3
 1080 001a BD46     	 mov sp,r7
 1081              	.LCFI107:
 1082              	 .cfi_def_cfa_register 13
 1083              	 
 1084 001c 5DF8047B 	 ldr r7,[sp],#4
 1085              	.LCFI108:
 1086              	 .cfi_restore 7
 1087              	 .cfi_def_cfa_offset 0
 1088 0020 7047     	 bx lr
 1089              	.L78:
 1090 0022 00BF     	 .align 2
 1091              	.L77:
 1092 0024 00400050 	 .word 1342193664
 1093              	 .cfi_endproc
 1094              	.LFE185:
 1096              	 .section .text.XMC_SCU_IsTemperatureSensorReady,"ax",%progbits
 1097              	 .align 2
 1098              	 .global XMC_SCU_IsTemperatureSensorReady
 1099              	 .thumb
 1100              	 .thumb_func
 1102              	XMC_SCU_IsTemperatureSensorReady:
 1103              	.LFB186:
 339:../Libraries/XMCLib/src/xmc4_scu.c **** 
 340:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to check if the die temperature sensor is ready to start a measurement. */
 341:../Libraries/XMCLib/src/xmc4_scu.c **** bool XMC_SCU_IsTemperatureSensorReady(void)
 342:../Libraries/XMCLib/src/xmc4_scu.c **** {
 1104              	 .loc 3 342 0
 1105              	 .cfi_startproc
 1106              	 
 1107              	 
 1108              	 
 1109 0000 80B4     	 push {r7}
 1110              	.LCFI109:
 1111              	 .cfi_def_cfa_offset 4
 1112              	 .cfi_offset 7,-4
 1113 0002 00AF     	 add r7,sp,#0
 1114              	.LCFI110:
 1115              	 .cfi_def_cfa_register 7
 343:../Libraries/XMCLib/src/xmc4_scu.c ****   return ((SCU_GENERAL->DTSSTAT & SCU_GENERAL_DTSSTAT_RDY_Msk) != 0U);
 1116              	 .loc 3 343 0
 1117 0004 074B     	 ldr r3,.L81
 1118 0006 D3F89030 	 ldr r3,[r3,#144]
 1119 000a 03F48043 	 and r3,r3,#16384
 1120 000e 002B     	 cmp r3,#0
 1121 0010 14BF     	 ite ne
 1122 0012 0123     	 movne r3,#1
 1123 0014 0023     	 moveq r3,#0
 1124 0016 DBB2     	 uxtb r3,r3
 344:../Libraries/XMCLib/src/xmc4_scu.c **** }
 1125              	 .loc 3 344 0
 1126 0018 1846     	 mov r0,r3
 1127 001a BD46     	 mov sp,r7
 1128              	.LCFI111:
 1129              	 .cfi_def_cfa_register 13
 1130              	 
 1131 001c 5DF8047B 	 ldr r7,[sp],#4
 1132              	.LCFI112:
 1133              	 .cfi_restore 7
 1134              	 .cfi_def_cfa_offset 0
 1135 0020 7047     	 bx lr
 1136              	.L82:
 1137 0022 00BF     	 .align 2
 1138              	.L81:
 1139 0024 00400050 	 .word 1342193664
 1140              	 .cfi_endproc
 1141              	.LFE186:
 1143              	 .section .text.XMC_SCU_StartTemperatureMeasurement,"ax",%progbits
 1144              	 .align 2
 1145              	 .global XMC_SCU_StartTemperatureMeasurement
 1146              	 .thumb
 1147              	 .thumb_func
 1149              	XMC_SCU_StartTemperatureMeasurement:
 1150              	.LFB187:
 345:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to start device temperature measurements */
 346:../Libraries/XMCLib/src/xmc4_scu.c **** XMC_SCU_STATUS_t XMC_SCU_StartTemperatureMeasurement(void)
 347:../Libraries/XMCLib/src/xmc4_scu.c **** {
 1151              	 .loc 3 347 0
 1152              	 .cfi_startproc
 1153              	 
 1154              	 
 1155 0000 80B5     	 push {r7,lr}
 1156              	.LCFI113:
 1157              	 .cfi_def_cfa_offset 8
 1158              	 .cfi_offset 7,-8
 1159              	 .cfi_offset 14,-4
 1160 0002 82B0     	 sub sp,sp,#8
 1161              	.LCFI114:
 1162              	 .cfi_def_cfa_offset 16
 1163 0004 00AF     	 add r7,sp,#0
 1164              	.LCFI115:
 1165              	 .cfi_def_cfa_register 7
 348:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_SCU_STATUS_t status = XMC_SCU_STATUS_OK;
 1166              	 .loc 3 348 0
 1167 0006 0023     	 movs r3,#0
 1168 0008 FB71     	 strb r3,[r7,#7]
 349:../Libraries/XMCLib/src/xmc4_scu.c **** 
 350:../Libraries/XMCLib/src/xmc4_scu.c ****   if (XMC_SCU_IsTemperatureSensorEnabled() == false)
 1169              	 .loc 3 350 0
 1170 000a FFF7FEFF 	 bl XMC_SCU_IsTemperatureSensorEnabled
 1171 000e 0346     	 mov r3,r0
 1172 0010 83F00103 	 eor r3,r3,#1
 1173 0014 DBB2     	 uxtb r3,r3
 1174 0016 002B     	 cmp r3,#0
 1175 0018 01D0     	 beq .L84
 351:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 352:../Libraries/XMCLib/src/xmc4_scu.c ****     status = XMC_SCU_STATUS_ERROR;
 1176              	 .loc 3 352 0
 1177 001a 0123     	 movs r3,#1
 1178 001c FB71     	 strb r3,[r7,#7]
 1179              	.L84:
 353:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 354:../Libraries/XMCLib/src/xmc4_scu.c **** 
 355:../Libraries/XMCLib/src/xmc4_scu.c ****   if (XMC_SCU_IsTemperatureSensorBusy() == true)
 1180              	 .loc 3 355 0
 1181 001e FFF7FEFF 	 bl XMC_SCU_IsTemperatureSensorBusy
 1182 0022 0346     	 mov r3,r0
 1183 0024 002B     	 cmp r3,#0
 1184 0026 01D0     	 beq .L85
 356:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 357:../Libraries/XMCLib/src/xmc4_scu.c ****     status = XMC_SCU_STATUS_BUSY;
 1185              	 .loc 3 357 0
 1186 0028 0223     	 movs r3,#2
 1187 002a FB71     	 strb r3,[r7,#7]
 1188              	.L85:
 358:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 359:../Libraries/XMCLib/src/xmc4_scu.c **** 
 360:../Libraries/XMCLib/src/xmc4_scu.c ****   /* And start the measurement */
 361:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_GENERAL->DTSCON |= (uint32_t)SCU_GENERAL_DTSCON_START_Msk;
 1189              	 .loc 3 361 0
 1190 002c 064A     	 ldr r2,.L87
 1191 002e 064B     	 ldr r3,.L87
 1192 0030 D3F88C30 	 ldr r3,[r3,#140]
 1193 0034 43F00203 	 orr r3,r3,#2
 1194 0038 C2F88C30 	 str r3,[r2,#140]
 362:../Libraries/XMCLib/src/xmc4_scu.c **** 
 363:../Libraries/XMCLib/src/xmc4_scu.c ****   return (status);
 1195              	 .loc 3 363 0
 1196 003c FB79     	 ldrb r3,[r7,#7]
 364:../Libraries/XMCLib/src/xmc4_scu.c **** }
 1197              	 .loc 3 364 0
 1198 003e 1846     	 mov r0,r3
 1199 0040 0837     	 adds r7,r7,#8
 1200              	.LCFI116:
 1201              	 .cfi_def_cfa_offset 8
 1202 0042 BD46     	 mov sp,r7
 1203              	.LCFI117:
 1204              	 .cfi_def_cfa_register 13
 1205              	 
 1206 0044 80BD     	 pop {r7,pc}
 1207              	.L88:
 1208 0046 00BF     	 .align 2
 1209              	.L87:
 1210 0048 00400050 	 .word 1342193664
 1211              	 .cfi_endproc
 1212              	.LFE187:
 1214              	 .section .text.XMC_SCU_GetTemperatureMeasurement,"ax",%progbits
 1215              	 .align 2
 1216              	 .global XMC_SCU_GetTemperatureMeasurement
 1217              	 .thumb
 1218              	 .thumb_func
 1220              	XMC_SCU_GetTemperatureMeasurement:
 1221              	.LFB188:
 365:../Libraries/XMCLib/src/xmc4_scu.c **** 
 366:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to retrieve the temperature measured */
 367:../Libraries/XMCLib/src/xmc4_scu.c **** uint32_t XMC_SCU_GetTemperatureMeasurement(void)
 368:../Libraries/XMCLib/src/xmc4_scu.c **** {
 1222              	 .loc 3 368 0
 1223              	 .cfi_startproc
 1224              	 
 1225              	 
 1226 0000 80B5     	 push {r7,lr}
 1227              	.LCFI118:
 1228              	 .cfi_def_cfa_offset 8
 1229              	 .cfi_offset 7,-8
 1230              	 .cfi_offset 14,-4
 1231 0002 82B0     	 sub sp,sp,#8
 1232              	.LCFI119:
 1233              	 .cfi_def_cfa_offset 16
 1234 0004 00AF     	 add r7,sp,#0
 1235              	.LCFI120:
 1236              	 .cfi_def_cfa_register 7
 369:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t temperature;
 370:../Libraries/XMCLib/src/xmc4_scu.c **** 
 371:../Libraries/XMCLib/src/xmc4_scu.c ****   if (XMC_SCU_IsTemperatureSensorEnabled() == false)
 1237              	 .loc 3 371 0
 1238 0006 FFF7FEFF 	 bl XMC_SCU_IsTemperatureSensorEnabled
 1239 000a 0346     	 mov r3,r0
 1240 000c 83F00103 	 eor r3,r3,#1
 1241 0010 DBB2     	 uxtb r3,r3
 1242 0012 002B     	 cmp r3,#0
 1243 0014 03D0     	 beq .L90
 372:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 373:../Libraries/XMCLib/src/xmc4_scu.c ****     temperature = 0x7FFFFFFFUL;
 1244              	 .loc 3 373 0
 1245 0016 6FF00043 	 mvn r3,#-2147483648
 1246 001a 7B60     	 str r3,[r7,#4]
 1247 001c 05E0     	 b .L91
 1248              	.L90:
 374:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 375:../Libraries/XMCLib/src/xmc4_scu.c ****   else
 376:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 377:../Libraries/XMCLib/src/xmc4_scu.c ****     temperature = (uint32_t)((SCU_GENERAL->DTSSTAT & SCU_GENERAL_DTSSTAT_RESULT_Msk) >> SCU_GENERAL
 1249              	 .loc 3 377 0
 1250 001e 054B     	 ldr r3,.L93
 1251 0020 D3F89030 	 ldr r3,[r3,#144]
 1252 0024 C3F30903 	 ubfx r3,r3,#0,#10
 1253 0028 7B60     	 str r3,[r7,#4]
 1254              	.L91:
 378:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 379:../Libraries/XMCLib/src/xmc4_scu.c **** 
 380:../Libraries/XMCLib/src/xmc4_scu.c ****   return ((uint32_t)temperature);
 1255              	 .loc 3 380 0
 1256 002a 7B68     	 ldr r3,[r7,#4]
 381:../Libraries/XMCLib/src/xmc4_scu.c **** }
 1257              	 .loc 3 381 0
 1258 002c 1846     	 mov r0,r3
 1259 002e 0837     	 adds r7,r7,#8
 1260              	.LCFI121:
 1261              	 .cfi_def_cfa_offset 8
 1262 0030 BD46     	 mov sp,r7
 1263              	.LCFI122:
 1264              	 .cfi_def_cfa_register 13
 1265              	 
 1266 0032 80BD     	 pop {r7,pc}
 1267              	.L94:
 1268              	 .align 2
 1269              	.L93:
 1270 0034 00400050 	 .word 1342193664
 1271              	 .cfi_endproc
 1272              	.LFE188:
 1274              	 .section .text.XMC_SCU_IsTemperatureSensorBusy,"ax",%progbits
 1275              	 .align 2
 1276              	 .global XMC_SCU_IsTemperatureSensorBusy
 1277              	 .thumb
 1278              	 .thumb_func
 1280              	XMC_SCU_IsTemperatureSensorBusy:
 1281              	.LFB189:
 382:../Libraries/XMCLib/src/xmc4_scu.c **** 
 383:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to know whether Die temperature sensor is busy */
 384:../Libraries/XMCLib/src/xmc4_scu.c **** bool XMC_SCU_IsTemperatureSensorBusy(void)
 385:../Libraries/XMCLib/src/xmc4_scu.c **** {
 1282              	 .loc 3 385 0
 1283              	 .cfi_startproc
 1284              	 
 1285              	 
 1286              	 
 1287 0000 80B4     	 push {r7}
 1288              	.LCFI123:
 1289              	 .cfi_def_cfa_offset 4
 1290              	 .cfi_offset 7,-4
 1291 0002 00AF     	 add r7,sp,#0
 1292              	.LCFI124:
 1293              	 .cfi_def_cfa_register 7
 386:../Libraries/XMCLib/src/xmc4_scu.c ****   return ((SCU_GENERAL->DTSSTAT & SCU_GENERAL_DTSSTAT_BUSY_Msk) != 0U);
 1294              	 .loc 3 386 0
 1295 0004 074B     	 ldr r3,.L97
 1296 0006 D3F89030 	 ldr r3,[r3,#144]
 1297 000a 03F40043 	 and r3,r3,#32768
 1298 000e 002B     	 cmp r3,#0
 1299 0010 14BF     	 ite ne
 1300 0012 0123     	 movne r3,#1
 1301 0014 0023     	 moveq r3,#0
 1302 0016 DBB2     	 uxtb r3,r3
 387:../Libraries/XMCLib/src/xmc4_scu.c **** }
 1303              	 .loc 3 387 0
 1304 0018 1846     	 mov r0,r3
 1305 001a BD46     	 mov sp,r7
 1306              	.LCFI125:
 1307              	 .cfi_def_cfa_register 13
 1308              	 
 1309 001c 5DF8047B 	 ldr r7,[sp],#4
 1310              	.LCFI126:
 1311              	 .cfi_restore 7
 1312              	 .cfi_def_cfa_offset 0
 1313 0020 7047     	 bx lr
 1314              	.L98:
 1315 0022 00BF     	 .align 2
 1316              	.L97:
 1317 0024 00400050 	 .word 1342193664
 1318              	 .cfi_endproc
 1319              	.LFE189:
 1321              	 .section .text.XMC_SCU_HighTemperature,"ax",%progbits
 1322              	 .align 2
 1323              	 .global XMC_SCU_HighTemperature
 1324              	 .thumb
 1325              	 .thumb_func
 1327              	XMC_SCU_HighTemperature:
 1328              	.LFB190:
 388:../Libraries/XMCLib/src/xmc4_scu.c **** 
 389:../Libraries/XMCLib/src/xmc4_scu.c **** 
 390:../Libraries/XMCLib/src/xmc4_scu.c **** #if ((UC_SERIES == XMC41) || (UC_SERIES == XMC42) || (UC_SERIES == XMC44))
 391:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to determine if device temperature has gone past the ceiling */
 392:../Libraries/XMCLib/src/xmc4_scu.c **** bool XMC_SCU_HighTemperature(void)
 393:../Libraries/XMCLib/src/xmc4_scu.c **** {
 1329              	 .loc 3 393 0
 1330              	 .cfi_startproc
 1331              	 
 1332              	 
 1333              	 
 1334 0000 80B4     	 push {r7}
 1335              	.LCFI127:
 1336              	 .cfi_def_cfa_offset 4
 1337              	 .cfi_offset 7,-4
 1338 0002 85B0     	 sub sp,sp,#20
 1339              	.LCFI128:
 1340              	 .cfi_def_cfa_offset 24
 1341 0004 00AF     	 add r7,sp,#0
 1342              	.LCFI129:
 1343              	 .cfi_def_cfa_register 7
 394:../Libraries/XMCLib/src/xmc4_scu.c ****   bool ret_val;
 395:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t   dtscon;
 396:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t   dtempalarm;
 397:../Libraries/XMCLib/src/xmc4_scu.c ****   dtscon = SCU_GENERAL->DTSCON;
 1344              	 .loc 3 397 0
 1345 0006 134B     	 ldr r3,.L104
 1346 0008 D3F88C30 	 ldr r3,[r3,#140]
 1347 000c BB60     	 str r3,[r7,#8]
 398:../Libraries/XMCLib/src/xmc4_scu.c ****   dtscon = dtscon & SCU_GENERAL_DTSCON_PWD_Msk;
 1348              	 .loc 3 398 0
 1349 000e BB68     	 ldr r3,[r7,#8]
 1350 0010 03F00103 	 and r3,r3,#1
 1351 0014 BB60     	 str r3,[r7,#8]
 399:../Libraries/XMCLib/src/xmc4_scu.c **** 
 400:../Libraries/XMCLib/src/xmc4_scu.c ****   ret_val = false;
 1352              	 .loc 3 400 0
 1353 0016 0023     	 movs r3,#0
 1354 0018 FB73     	 strb r3,[r7,#15]
 401:../Libraries/XMCLib/src/xmc4_scu.c **** 
 402:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Any audit makes sense only if the DTS were powered up */
 403:../Libraries/XMCLib/src/xmc4_scu.c ****   if (dtscon)
 1355              	 .loc 3 403 0
 1356 001a BB68     	 ldr r3,[r7,#8]
 1357 001c 002B     	 cmp r3,#0
 1358 001e 02D0     	 beq .L100
 404:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 405:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Powered down - return false */
 406:../Libraries/XMCLib/src/xmc4_scu.c ****     ret_val = false;
 1359              	 .loc 3 406 0
 1360 0020 0023     	 movs r3,#0
 1361 0022 FB73     	 strb r3,[r7,#15]
 1362 0024 0FE0     	 b .L101
 1363              	.L100:
 407:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 408:../Libraries/XMCLib/src/xmc4_scu.c ****   else
 409:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 410:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Powered up - Read the overflow bit and decide accordingly*/
 411:../Libraries/XMCLib/src/xmc4_scu.c ****     dtempalarm = SCU_GENERAL->DTEMPALARM;
 1364              	 .loc 3 411 0
 1365 0026 0B4B     	 ldr r3,.L104
 1366 0028 D3F8AC30 	 ldr r3,[r3,#172]
 1367 002c 7B60     	 str r3,[r7,#4]
 412:../Libraries/XMCLib/src/xmc4_scu.c ****     dtempalarm = dtempalarm & SCU_GENERAL_DTEMPALARM_OVERFL_Msk;
 1368              	 .loc 3 412 0
 1369 002e 7B68     	 ldr r3,[r7,#4]
 1370 0030 03F48033 	 and r3,r3,#65536
 1371 0034 7B60     	 str r3,[r7,#4]
 413:../Libraries/XMCLib/src/xmc4_scu.c **** 
 414:../Libraries/XMCLib/src/xmc4_scu.c ****     if (dtempalarm)
 1372              	 .loc 3 414 0
 1373 0036 7B68     	 ldr r3,[r7,#4]
 1374 0038 002B     	 cmp r3,#0
 1375 003a 02D0     	 beq .L102
 415:../Libraries/XMCLib/src/xmc4_scu.c ****     {
 416:../Libraries/XMCLib/src/xmc4_scu.c ****       ret_val = true;
 1376              	 .loc 3 416 0
 1377 003c 0123     	 movs r3,#1
 1378 003e FB73     	 strb r3,[r7,#15]
 1379 0040 01E0     	 b .L101
 1380              	.L102:
 417:../Libraries/XMCLib/src/xmc4_scu.c ****     }
 418:../Libraries/XMCLib/src/xmc4_scu.c ****     else
 419:../Libraries/XMCLib/src/xmc4_scu.c ****     {
 420:../Libraries/XMCLib/src/xmc4_scu.c ****       ret_val = false;
 1381              	 .loc 3 420 0
 1382 0042 0023     	 movs r3,#0
 1383 0044 FB73     	 strb r3,[r7,#15]
 1384              	.L101:
 421:../Libraries/XMCLib/src/xmc4_scu.c ****     }
 422:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 423:../Libraries/XMCLib/src/xmc4_scu.c ****   return (ret_val);
 1385              	 .loc 3 423 0
 1386 0046 FB7B     	 ldrb r3,[r7,#15]
 424:../Libraries/XMCLib/src/xmc4_scu.c **** }
 1387              	 .loc 3 424 0
 1388 0048 1846     	 mov r0,r3
 1389 004a 1437     	 adds r7,r7,#20
 1390              	.LCFI130:
 1391              	 .cfi_def_cfa_offset 4
 1392 004c BD46     	 mov sp,r7
 1393              	.LCFI131:
 1394              	 .cfi_def_cfa_register 13
 1395              	 
 1396 004e 5DF8047B 	 ldr r7,[sp],#4
 1397              	.LCFI132:
 1398              	 .cfi_restore 7
 1399              	 .cfi_def_cfa_offset 0
 1400 0052 7047     	 bx lr
 1401              	.L105:
 1402              	 .align 2
 1403              	.L104:
 1404 0054 00400050 	 .word 1342193664
 1405              	 .cfi_endproc
 1406              	.LFE190:
 1408              	 .section .text.XMC_SCU_SetRawTempLimits,"ax",%progbits
 1409              	 .align 2
 1410              	 .global XMC_SCU_SetRawTempLimits
 1411              	 .thumb
 1412              	 .thumb_func
 1414              	XMC_SCU_SetRawTempLimits:
 1415              	.LFB191:
 425:../Libraries/XMCLib/src/xmc4_scu.c **** 
 426:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to program raw values of temperature limits into the DTS */
 427:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_SetRawTempLimits(const uint32_t lower_temp, const uint32_t upper_temp)
 428:../Libraries/XMCLib/src/xmc4_scu.c **** {
 1416              	 .loc 3 428 0
 1417              	 .cfi_startproc
 1418              	 
 1419              	 
 1420              	 
 1421 0000 80B4     	 push {r7}
 1422              	.LCFI133:
 1423              	 .cfi_def_cfa_offset 4
 1424              	 .cfi_offset 7,-4
 1425 0002 83B0     	 sub sp,sp,#12
 1426              	.LCFI134:
 1427              	 .cfi_def_cfa_offset 16
 1428 0004 00AF     	 add r7,sp,#0
 1429              	.LCFI135:
 1430              	 .cfi_def_cfa_register 7
 1431 0006 7860     	 str r0,[r7,#4]
 1432 0008 3960     	 str r1,[r7]
 429:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Power up the DTS module */
 430:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_GENERAL->DTSCON &= (uint32_t)~SCU_GENERAL_DTSCON_PWD_Msk;
 1433              	 .loc 3 430 0
 1434 000a 114A     	 ldr r2,.L107
 1435 000c 104B     	 ldr r3,.L107
 1436 000e D3F88C30 	 ldr r3,[r3,#140]
 1437 0012 23F00103 	 bic r3,r3,#1
 1438 0016 C2F88C30 	 str r3,[r2,#140]
 431:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_GENERAL->DTEMPLIM = 0;
 1439              	 .loc 3 431 0
 1440 001a 0D4B     	 ldr r3,.L107
 1441 001c 0022     	 movs r2,#0
 1442 001e C3F8A820 	 str r2,[r3,#168]
 432:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_GENERAL->DTEMPLIM = (lower_temp & SCU_GENERAL_DTEMPLIM_LOWER_Msk);
 1443              	 .loc 3 432 0
 1444 0022 0B4A     	 ldr r2,.L107
 1445 0024 7B68     	 ldr r3,[r7,#4]
 1446 0026 C3F30903 	 ubfx r3,r3,#0,#10
 1447 002a C2F8A830 	 str r3,[r2,#168]
 433:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_GENERAL->DTEMPLIM |= (uint32_t)((upper_temp & SCU_GENERAL_DTEMPLIM_LOWER_Msk) << SCU_GENERAL_
 1448              	 .loc 3 433 0
 1449 002e 0849     	 ldr r1,.L107
 1450 0030 074B     	 ldr r3,.L107
 1451 0032 D3F8A820 	 ldr r2,[r3,#168]
 1452 0036 3B68     	 ldr r3,[r7]
 1453 0038 C3F30903 	 ubfx r3,r3,#0,#10
 1454 003c 1B04     	 lsls r3,r3,#16
 1455 003e 1343     	 orrs r3,r3,r2
 1456 0040 C1F8A830 	 str r3,[r1,#168]
 434:../Libraries/XMCLib/src/xmc4_scu.c **** }
 1457              	 .loc 3 434 0
 1458 0044 0C37     	 adds r7,r7,#12
 1459              	.LCFI136:
 1460              	 .cfi_def_cfa_offset 4
 1461 0046 BD46     	 mov sp,r7
 1462              	.LCFI137:
 1463              	 .cfi_def_cfa_register 13
 1464              	 
 1465 0048 5DF8047B 	 ldr r7,[sp],#4
 1466              	.LCFI138:
 1467              	 .cfi_restore 7
 1468              	 .cfi_def_cfa_offset 0
 1469 004c 7047     	 bx lr
 1470              	.L108:
 1471 004e 00BF     	 .align 2
 1472              	.L107:
 1473 0050 00400050 	 .word 1342193664
 1474              	 .cfi_endproc
 1475              	.LFE191:
 1477              	 .section .text.XMC_SCU_LowTemperature,"ax",%progbits
 1478              	 .align 2
 1479              	 .global XMC_SCU_LowTemperature
 1480              	 .thumb
 1481              	 .thumb_func
 1483              	XMC_SCU_LowTemperature:
 1484              	.LFB192:
 435:../Libraries/XMCLib/src/xmc4_scu.c **** 
 436:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to determine if device temperature has gone below the stipulated limit */
 437:../Libraries/XMCLib/src/xmc4_scu.c **** bool XMC_SCU_LowTemperature(void)
 438:../Libraries/XMCLib/src/xmc4_scu.c **** {
 1485              	 .loc 3 438 0
 1486              	 .cfi_startproc
 1487              	 
 1488              	 
 1489              	 
 1490 0000 80B4     	 push {r7}
 1491              	.LCFI139:
 1492              	 .cfi_def_cfa_offset 4
 1493              	 .cfi_offset 7,-4
 1494 0002 85B0     	 sub sp,sp,#20
 1495              	.LCFI140:
 1496              	 .cfi_def_cfa_offset 24
 1497 0004 00AF     	 add r7,sp,#0
 1498              	.LCFI141:
 1499              	 .cfi_def_cfa_register 7
 439:../Libraries/XMCLib/src/xmc4_scu.c ****   bool ret_val;
 440:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t   dtscon;
 441:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t   dtempalarm;
 442:../Libraries/XMCLib/src/xmc4_scu.c ****   dtscon = SCU_GENERAL->DTSCON;
 1500              	 .loc 3 442 0
 1501 0006 134B     	 ldr r3,.L114
 1502 0008 D3F88C30 	 ldr r3,[r3,#140]
 1503 000c BB60     	 str r3,[r7,#8]
 443:../Libraries/XMCLib/src/xmc4_scu.c ****   dtscon = dtscon & SCU_GENERAL_DTSCON_PWD_Msk;
 1504              	 .loc 3 443 0
 1505 000e BB68     	 ldr r3,[r7,#8]
 1506 0010 03F00103 	 and r3,r3,#1
 1507 0014 BB60     	 str r3,[r7,#8]
 444:../Libraries/XMCLib/src/xmc4_scu.c **** 
 445:../Libraries/XMCLib/src/xmc4_scu.c ****   ret_val = false;
 1508              	 .loc 3 445 0
 1509 0016 0023     	 movs r3,#0
 1510 0018 FB73     	 strb r3,[r7,#15]
 446:../Libraries/XMCLib/src/xmc4_scu.c **** 
 447:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Any audit makes sense only if the DTS were powered up */
 448:../Libraries/XMCLib/src/xmc4_scu.c ****   if (dtscon)
 1511              	 .loc 3 448 0
 1512 001a BB68     	 ldr r3,[r7,#8]
 1513 001c 002B     	 cmp r3,#0
 1514 001e 02D0     	 beq .L110
 449:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 450:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Powered down - return false */
 451:../Libraries/XMCLib/src/xmc4_scu.c ****     ret_val = false;
 1515              	 .loc 3 451 0
 1516 0020 0023     	 movs r3,#0
 1517 0022 FB73     	 strb r3,[r7,#15]
 1518 0024 0FE0     	 b .L111
 1519              	.L110:
 452:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 453:../Libraries/XMCLib/src/xmc4_scu.c ****   else
 454:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 455:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Powered up - Read the overflow bit and decide accordingly*/
 456:../Libraries/XMCLib/src/xmc4_scu.c ****     dtempalarm = SCU_GENERAL->DTEMPALARM;
 1520              	 .loc 3 456 0
 1521 0026 0B4B     	 ldr r3,.L114
 1522 0028 D3F8AC30 	 ldr r3,[r3,#172]
 1523 002c 7B60     	 str r3,[r7,#4]
 457:../Libraries/XMCLib/src/xmc4_scu.c ****     dtempalarm = dtempalarm & SCU_GENERAL_DTEMPALARM_UNDERFL_Msk;
 1524              	 .loc 3 457 0
 1525 002e 7B68     	 ldr r3,[r7,#4]
 1526 0030 03F00103 	 and r3,r3,#1
 1527 0034 7B60     	 str r3,[r7,#4]
 458:../Libraries/XMCLib/src/xmc4_scu.c **** 
 459:../Libraries/XMCLib/src/xmc4_scu.c ****     if (dtempalarm)
 1528              	 .loc 3 459 0
 1529 0036 7B68     	 ldr r3,[r7,#4]
 1530 0038 002B     	 cmp r3,#0
 1531 003a 02D0     	 beq .L112
 460:../Libraries/XMCLib/src/xmc4_scu.c ****     {
 461:../Libraries/XMCLib/src/xmc4_scu.c ****       ret_val = true;
 1532              	 .loc 3 461 0
 1533 003c 0123     	 movs r3,#1
 1534 003e FB73     	 strb r3,[r7,#15]
 1535 0040 01E0     	 b .L111
 1536              	.L112:
 462:../Libraries/XMCLib/src/xmc4_scu.c ****     }
 463:../Libraries/XMCLib/src/xmc4_scu.c ****     else
 464:../Libraries/XMCLib/src/xmc4_scu.c ****     {
 465:../Libraries/XMCLib/src/xmc4_scu.c ****       ret_val = false;
 1537              	 .loc 3 465 0
 1538 0042 0023     	 movs r3,#0
 1539 0044 FB73     	 strb r3,[r7,#15]
 1540              	.L111:
 466:../Libraries/XMCLib/src/xmc4_scu.c ****     }
 467:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 468:../Libraries/XMCLib/src/xmc4_scu.c **** 
 469:../Libraries/XMCLib/src/xmc4_scu.c ****   return (ret_val);
 1541              	 .loc 3 469 0
 1542 0046 FB7B     	 ldrb r3,[r7,#15]
 470:../Libraries/XMCLib/src/xmc4_scu.c **** }
 1543              	 .loc 3 470 0
 1544 0048 1846     	 mov r0,r3
 1545 004a 1437     	 adds r7,r7,#20
 1546              	.LCFI142:
 1547              	 .cfi_def_cfa_offset 4
 1548 004c BD46     	 mov sp,r7
 1549              	.LCFI143:
 1550              	 .cfi_def_cfa_register 13
 1551              	 
 1552 004e 5DF8047B 	 ldr r7,[sp],#4
 1553              	.LCFI144:
 1554              	 .cfi_restore 7
 1555              	 .cfi_def_cfa_offset 0
 1556 0052 7047     	 bx lr
 1557              	.L115:
 1558              	 .align 2
 1559              	.L114:
 1560 0054 00400050 	 .word 1342193664
 1561              	 .cfi_endproc
 1562              	.LFE192:
 1564              	 .section .text.XMC_SCU_WriteToRetentionMemory,"ax",%progbits
 1565              	 .align 2
 1566              	 .global XMC_SCU_WriteToRetentionMemory
 1567              	 .thumb
 1568              	 .thumb_func
 1570              	XMC_SCU_WriteToRetentionMemory:
 1571              	.LFB193:
 471:../Libraries/XMCLib/src/xmc4_scu.c **** #endif
 472:../Libraries/XMCLib/src/xmc4_scu.c **** 
 473:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to write into Retention memory in hibernate domain */
 474:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_WriteToRetentionMemory(uint32_t address, uint32_t data)
 475:../Libraries/XMCLib/src/xmc4_scu.c **** {
 1572              	 .loc 3 475 0
 1573              	 .cfi_startproc
 1574              	 
 1575              	 
 1576              	 
 1577 0000 80B4     	 push {r7}
 1578              	.LCFI145:
 1579              	 .cfi_def_cfa_offset 4
 1580              	 .cfi_offset 7,-4
 1581 0002 85B0     	 sub sp,sp,#20
 1582              	.LCFI146:
 1583              	 .cfi_def_cfa_offset 24
 1584 0004 00AF     	 add r7,sp,#0
 1585              	.LCFI147:
 1586              	 .cfi_def_cfa_register 7
 1587 0006 7860     	 str r0,[r7,#4]
 1588 0008 3960     	 str r1,[r7]
 476:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t rmacr;
 477:../Libraries/XMCLib/src/xmc4_scu.c **** 
 478:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Get the address right */
 479:../Libraries/XMCLib/src/xmc4_scu.c ****   rmacr = (uint32_t)((address << SCU_GENERAL_RMACR_ADDR_Pos) & (uint32_t)SCU_GENERAL_RMACR_ADDR_Msk
 1589              	 .loc 3 479 0
 1590 000a 7B68     	 ldr r3,[r7,#4]
 1591 000c 1B04     	 lsls r3,r3,#16
 1592 000e 03F47023 	 and r3,r3,#983040
 1593 0012 FB60     	 str r3,[r7,#12]
 480:../Libraries/XMCLib/src/xmc4_scu.c **** 
 481:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Transfer from RMDATA to Retention memory */
 482:../Libraries/XMCLib/src/xmc4_scu.c ****   rmacr |= (uint32_t)(SCU_GENERAL_RMACR_RDWR_Msk);
 1594              	 .loc 3 482 0
 1595 0014 FB68     	 ldr r3,[r7,#12]
 1596 0016 43F00103 	 orr r3,r3,#1
 1597 001a FB60     	 str r3,[r7,#12]
 483:../Libraries/XMCLib/src/xmc4_scu.c **** 
 484:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Write desired data into RMDATA register */
 485:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_GENERAL->RMDATA = data;
 1598              	 .loc 3 485 0
 1599 001c 0A4A     	 ldr r2,.L118
 1600 001e 3B68     	 ldr r3,[r7]
 1601 0020 C2F8CC30 	 str r3,[r2,#204]
 486:../Libraries/XMCLib/src/xmc4_scu.c **** 
 487:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Write address & direction of transfer into RMACR register */
 488:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_GENERAL->RMACR = rmacr;
 1602              	 .loc 3 488 0
 1603 0024 084A     	 ldr r2,.L118
 1604 0026 FB68     	 ldr r3,[r7,#12]
 1605 0028 C2F8C830 	 str r3,[r2,#200]
 489:../Libraries/XMCLib/src/xmc4_scu.c **** 
 490:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Wait until the update of RMX register in hibernate domain is completed */
 491:../Libraries/XMCLib/src/xmc4_scu.c ****   while ((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_RMX_Msk)
 1606              	 .loc 3 491 0
 1607 002c 00BF     	 nop
 1608              	.L117:
 1609              	 .loc 3 491 0 is_stmt 0 discriminator 1
 1610 002e 064B     	 ldr r3,.L118
 1611 0030 D3F8C430 	 ldr r3,[r3,#196]
 1612 0034 03F40053 	 and r3,r3,#8192
 1613 0038 002B     	 cmp r3,#0
 1614 003a F8D1     	 bne .L117
 492:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 493:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 494:../Libraries/XMCLib/src/xmc4_scu.c **** }
 1615              	 .loc 3 494 0 is_stmt 1
 1616 003c 1437     	 adds r7,r7,#20
 1617              	.LCFI148:
 1618              	 .cfi_def_cfa_offset 4
 1619 003e BD46     	 mov sp,r7
 1620              	.LCFI149:
 1621              	 .cfi_def_cfa_register 13
 1622              	 
 1623 0040 5DF8047B 	 ldr r7,[sp],#4
 1624              	.LCFI150:
 1625              	 .cfi_restore 7
 1626              	 .cfi_def_cfa_offset 0
 1627 0044 7047     	 bx lr
 1628              	.L119:
 1629 0046 00BF     	 .align 2
 1630              	.L118:
 1631 0048 00400050 	 .word 1342193664
 1632              	 .cfi_endproc
 1633              	.LFE193:
 1635              	 .section .text.XMC_SCU_ReadFromRetentionMemory,"ax",%progbits
 1636              	 .align 2
 1637              	 .global XMC_SCU_ReadFromRetentionMemory
 1638              	 .thumb
 1639              	 .thumb_func
 1641              	XMC_SCU_ReadFromRetentionMemory:
 1642              	.LFB194:
 495:../Libraries/XMCLib/src/xmc4_scu.c **** 
 496:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to read from Retention memory in hibernate domain */
 497:../Libraries/XMCLib/src/xmc4_scu.c **** uint32_t XMC_SCU_ReadFromRetentionMemory(uint32_t address)
 498:../Libraries/XMCLib/src/xmc4_scu.c **** {
 1643              	 .loc 3 498 0
 1644              	 .cfi_startproc
 1645              	 
 1646              	 
 1647              	 
 1648 0000 80B4     	 push {r7}
 1649              	.LCFI151:
 1650              	 .cfi_def_cfa_offset 4
 1651              	 .cfi_offset 7,-4
 1652 0002 85B0     	 sub sp,sp,#20
 1653              	.LCFI152:
 1654              	 .cfi_def_cfa_offset 24
 1655 0004 00AF     	 add r7,sp,#0
 1656              	.LCFI153:
 1657              	 .cfi_def_cfa_register 7
 1658 0006 7860     	 str r0,[r7,#4]
 499:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t rmacr;
 500:../Libraries/XMCLib/src/xmc4_scu.c **** 
 501:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Get the address right */
 502:../Libraries/XMCLib/src/xmc4_scu.c ****   rmacr = ((uint32_t)(address << SCU_GENERAL_RMACR_ADDR_Pos) & (uint32_t)SCU_GENERAL_RMACR_ADDR_Msk
 1659              	 .loc 3 502 0
 1660 0008 7B68     	 ldr r3,[r7,#4]
 1661 000a 1B04     	 lsls r3,r3,#16
 1662 000c 03F47023 	 and r3,r3,#983040
 1663 0010 FB60     	 str r3,[r7,#12]
 503:../Libraries/XMCLib/src/xmc4_scu.c **** 
 504:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Transfer from RMDATA to Retention memory */
 505:../Libraries/XMCLib/src/xmc4_scu.c ****   rmacr &= ~((uint32_t)(SCU_GENERAL_RMACR_RDWR_Msk));
 1664              	 .loc 3 505 0
 1665 0012 FB68     	 ldr r3,[r7,#12]
 1666 0014 23F00103 	 bic r3,r3,#1
 1667 0018 FB60     	 str r3,[r7,#12]
 506:../Libraries/XMCLib/src/xmc4_scu.c **** 
 507:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Writing an adress & direction of transfer into RMACR register */
 508:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_GENERAL->RMACR = rmacr;
 1668              	 .loc 3 508 0
 1669 001a 0A4A     	 ldr r2,.L123
 1670 001c FB68     	 ldr r3,[r7,#12]
 1671 001e C2F8C830 	 str r3,[r2,#200]
 509:../Libraries/XMCLib/src/xmc4_scu.c **** 
 510:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Wait until the update of RMX register in hibernate domain is completed */
 511:../Libraries/XMCLib/src/xmc4_scu.c ****   while ((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_RMX_Msk)
 1672              	 .loc 3 511 0
 1673 0022 00BF     	 nop
 1674              	.L121:
 1675              	 .loc 3 511 0 is_stmt 0 discriminator 1
 1676 0024 074B     	 ldr r3,.L123
 1677 0026 D3F8C430 	 ldr r3,[r3,#196]
 1678 002a 03F40053 	 and r3,r3,#8192
 1679 002e 002B     	 cmp r3,#0
 1680 0030 F8D1     	 bne .L121
 512:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 513:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 514:../Libraries/XMCLib/src/xmc4_scu.c **** 
 515:../Libraries/XMCLib/src/xmc4_scu.c ****   return (SCU_GENERAL->RMDATA);
 1681              	 .loc 3 515 0 is_stmt 1
 1682 0032 044B     	 ldr r3,.L123
 1683 0034 D3F8CC30 	 ldr r3,[r3,#204]
 516:../Libraries/XMCLib/src/xmc4_scu.c **** }
 1684              	 .loc 3 516 0
 1685 0038 1846     	 mov r0,r3
 1686 003a 1437     	 adds r7,r7,#20
 1687              	.LCFI154:
 1688              	 .cfi_def_cfa_offset 4
 1689 003c BD46     	 mov sp,r7
 1690              	.LCFI155:
 1691              	 .cfi_def_cfa_register 13
 1692              	 
 1693 003e 5DF8047B 	 ldr r7,[sp],#4
 1694              	.LCFI156:
 1695              	 .cfi_restore 7
 1696              	 .cfi_def_cfa_offset 0
 1697 0042 7047     	 bx lr
 1698              	.L124:
 1699              	 .align 2
 1700              	.L123:
 1701 0044 00400050 	 .word 1342193664
 1702              	 .cfi_endproc
 1703              	.LFE194:
 1705              	 .section .text.XMC_SCU_CLOCK_Init,"ax",%progbits
 1706              	 .align 2
 1707              	 .global XMC_SCU_CLOCK_Init
 1708              	 .thumb
 1709              	 .thumb_func
 1711              	XMC_SCU_CLOCK_Init:
 1712              	.LFB195:
 517:../Libraries/XMCLib/src/xmc4_scu.c **** 
 518:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to initialize the clock tree */
 519:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_Init(const XMC_SCU_CLOCK_CONFIG_t *const config)
 520:../Libraries/XMCLib/src/xmc4_scu.c **** {
 1713              	 .loc 3 520 0
 1714              	 .cfi_startproc
 1715              	 
 1716              	 
 1717 0000 B0B5     	 push {r4,r5,r7,lr}
 1718              	.LCFI157:
 1719              	 .cfi_def_cfa_offset 16
 1720              	 .cfi_offset 4,-16
 1721              	 .cfi_offset 5,-12
 1722              	 .cfi_offset 7,-8
 1723              	 .cfi_offset 14,-4
 1724 0002 84B0     	 sub sp,sp,#16
 1725              	.LCFI158:
 1726              	 .cfi_def_cfa_offset 32
 1727 0004 02AF     	 add r7,sp,#8
 1728              	.LCFI159:
 1729              	 .cfi_def_cfa 7,24
 1730 0006 7860     	 str r0,[r7,#4]
 521:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_ASSERT("", config->fsys_clkdiv != 0);
 522:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_ASSERT("", config->fcpu_clkdiv != 0);
 523:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_ASSERT("", config->fccu_clkdiv != 0);
 524:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_ASSERT("", config->fperipheral_clkdiv != 0);
 525:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_ASSERT("", ((config->syspll_config.p_div != 0) &&
 526:../Libraries/XMCLib/src/xmc4_scu.c ****                   (config->syspll_config.mode == XMC_SCU_CLOCK_SYSPLL_MODE_NORMAL)) ||
 527:../Libraries/XMCLib/src/xmc4_scu.c ****              (config->syspll_config.mode == XMC_SCU_CLOCK_SYSPLL_MODE_PRESCALAR));
 528:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_ASSERT("", ((config->syspll_config.n_div != 0) &&
 529:../Libraries/XMCLib/src/xmc4_scu.c ****                   (config->syspll_config.mode == XMC_SCU_CLOCK_SYSPLL_MODE_NORMAL)) ||
 530:../Libraries/XMCLib/src/xmc4_scu.c ****              (config->syspll_config.mode == XMC_SCU_CLOCK_SYSPLL_MODE_PRESCALAR));
 531:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_ASSERT("", (config->syspll_config.k_div != 0) &&
 532:../Libraries/XMCLib/src/xmc4_scu.c ****              ((config->syspll_config.mode == XMC_SCU_CLOCK_SYSPLL_MODE_NORMAL) ||
 533:../Libraries/XMCLib/src/xmc4_scu.c ****               (config->syspll_config.mode == XMC_SCU_CLOCK_SYSPLL_MODE_PRESCALAR)));
 534:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_ASSERT("", ((config->fsys_clksrc == XMC_SCU_CLOCK_SYSCLKSRC_PLL) ||
 535:../Libraries/XMCLib/src/xmc4_scu.c ****                   (config->fsys_clksrc == XMC_SCU_CLOCK_SYSCLKSRC_OFI)) &&
 536:../Libraries/XMCLib/src/xmc4_scu.c ****              ((config->syspll_config.mode == XMC_SCU_CLOCK_SYSPLL_MODE_NORMAL) ||
 537:../Libraries/XMCLib/src/xmc4_scu.c ****               (config->syspll_config.mode == XMC_SCU_CLOCK_SYSPLL_MODE_PRESCALAR)));
 538:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_ASSERT("", ((config->fstdby_clksrc == XMC_SCU_HIB_STDBYCLKSRC_OSCULP) && (config->enable_oscu
 539:../Libraries/XMCLib/src/xmc4_scu.c ****              (config->fstdby_clksrc != XMC_SCU_HIB_STDBYCLKSRC_OSCULP));
 540:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_ASSERT("", ((config->syspll_config.clksrc == XMC_SCU_CLOCK_SYSPLLCLKSRC_OSCHP) &&
 541:../Libraries/XMCLib/src/xmc4_scu.c ****                   (config->enable_oschp == true)) || (config->syspll_config.clksrc != XMC_SCU_CLOCK
 542:../Libraries/XMCLib/src/xmc4_scu.c **** 
 543:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_SCU_CLOCK_SetSystemClockSource(XMC_SCU_CLOCK_SYSCLKSRC_OFI);
 1731              	 .loc 3 543 0
 1732 0008 0020     	 movs r0,#0
 1733 000a FFF7FEFF 	 bl XMC_SCU_CLOCK_SetSystemClockSource
 544:../Libraries/XMCLib/src/xmc4_scu.c **** 
 545:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_SCU_HIB_EnableHibernateDomain();
 1734              	 .loc 3 545 0
 1735 000e FFF7FEFF 	 bl XMC_SCU_HIB_EnableHibernateDomain
 546:../Libraries/XMCLib/src/xmc4_scu.c **** 
 547:../Libraries/XMCLib/src/xmc4_scu.c ****   if (config->enable_osculp == true)
 1736              	 .loc 3 547 0
 1737 0012 7B68     	 ldr r3,[r7,#4]
 1738 0014 DB79     	 ldrb r3,[r3,#7]
 1739 0016 002B     	 cmp r3,#0
 1740 0018 0AD0     	 beq .L126
 548:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 549:../Libraries/XMCLib/src/xmc4_scu.c ****     XMC_SCU_CLOCK_EnableLowPowerOscillator();
 1741              	 .loc 3 549 0
 1742 001a FFF7FEFF 	 bl XMC_SCU_CLOCK_EnableLowPowerOscillator
 550:../Libraries/XMCLib/src/xmc4_scu.c ****     while (XMC_SCU_CLOCK_IsLowPowerOscillatorStable() == false);
 1743              	 .loc 3 550 0
 1744 001e 00BF     	 nop
 1745              	.L127:
 1746              	 .loc 3 550 0 is_stmt 0 discriminator 1
 1747 0020 FFF7FEFF 	 bl XMC_SCU_CLOCK_IsLowPowerOscillatorStable
 1748 0024 0346     	 mov r3,r0
 1749 0026 83F00103 	 eor r3,r3,#1
 1750 002a DBB2     	 uxtb r3,r3
 1751 002c 002B     	 cmp r3,#0
 1752 002e F7D1     	 bne .L127
 1753              	.L126:
 551:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 552:../Libraries/XMCLib/src/xmc4_scu.c **** 
 553:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_SCU_HIB_SetStandbyClockSource(config->fstdby_clksrc);
 1754              	 .loc 3 553 0 is_stmt 1
 1755 0030 7B68     	 ldr r3,[r7,#4]
 1756 0032 5B7A     	 ldrb r3,[r3,#9]
 1757 0034 1846     	 mov r0,r3
 1758 0036 FFF7FEFF 	 bl XMC_SCU_HIB_SetStandbyClockSource
 554:../Libraries/XMCLib/src/xmc4_scu.c ****   while (XMC_SCU_GetMirrorStatus() != 0)
 1759              	 .loc 3 554 0
 1760 003a 00BF     	 nop
 1761              	.L128:
 1762              	 .loc 3 554 0 is_stmt 0 discriminator 1
 1763 003c FFF7FEFF 	 bl XMC_SCU_GetMirrorStatus
 1764 0040 0346     	 mov r3,r0
 1765 0042 002B     	 cmp r3,#0
 1766 0044 FAD1     	 bne .L128
 555:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 556:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Wait until update of the stanby clock source is done in the HIB domain */
 557:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 558:../Libraries/XMCLib/src/xmc4_scu.c **** 
 559:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_SCU_CLOCK_SetBackupClockCalibrationMode(config->calibration_mode);
 1767              	 .loc 3 559 0 is_stmt 1
 1768 0046 7B68     	 ldr r3,[r7,#4]
 1769 0048 1B7A     	 ldrb r3,[r3,#8]
 1770 004a 1846     	 mov r0,r3
 1771 004c FFF7FEFF 	 bl XMC_SCU_CLOCK_SetBackupClockCalibrationMode
 560:../Libraries/XMCLib/src/xmc4_scu.c **** 
 561:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_SCU_CLOCK_SetSystemClockDivider((uint32_t)config->fsys_clkdiv);
 1772              	 .loc 3 561 0
 1773 0050 7B68     	 ldr r3,[r7,#4]
 1774 0052 1B7C     	 ldrb r3,[r3,#16]
 1775 0054 1846     	 mov r0,r3
 1776 0056 FFF7FEFF 	 bl XMC_SCU_CLOCK_SetSystemClockDivider
 562:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_SCU_CLOCK_SetCpuClockDivider((uint32_t)config->fcpu_clkdiv);
 1777              	 .loc 3 562 0
 1778 005a 7B68     	 ldr r3,[r7,#4]
 1779 005c 5B7C     	 ldrb r3,[r3,#17]
 1780 005e 1846     	 mov r0,r3
 1781 0060 FFF7FEFF 	 bl XMC_SCU_CLOCK_SetCpuClockDivider
 563:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_SCU_CLOCK_SetCcuClockDivider((uint32_t)config->fccu_clkdiv);
 1782              	 .loc 3 563 0
 1783 0064 7B68     	 ldr r3,[r7,#4]
 1784 0066 9B7C     	 ldrb r3,[r3,#18]
 1785 0068 1846     	 mov r0,r3
 1786 006a FFF7FEFF 	 bl XMC_SCU_CLOCK_SetCcuClockDivider
 564:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_SCU_CLOCK_SetPeripheralClockDivider((uint32_t)config->fperipheral_clkdiv);
 1787              	 .loc 3 564 0
 1788 006e 7B68     	 ldr r3,[r7,#4]
 1789 0070 DB7C     	 ldrb r3,[r3,#19]
 1790 0072 1846     	 mov r0,r3
 1791 0074 FFF7FEFF 	 bl XMC_SCU_CLOCK_SetPeripheralClockDivider
 565:../Libraries/XMCLib/src/xmc4_scu.c **** 
 566:../Libraries/XMCLib/src/xmc4_scu.c ****   if (config->enable_oschp == true)
 1792              	 .loc 3 566 0
 1793 0078 7B68     	 ldr r3,[r7,#4]
 1794 007a 9B79     	 ldrb r3,[r3,#6]
 1795 007c 002B     	 cmp r3,#0
 1796 007e 0AD0     	 beq .L129
 567:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 568:../Libraries/XMCLib/src/xmc4_scu.c ****     XMC_SCU_CLOCK_EnableHighPerformanceOscillator();
 1797              	 .loc 3 568 0
 1798 0080 FFF7FEFF 	 bl XMC_SCU_CLOCK_EnableHighPerformanceOscillator
 569:../Libraries/XMCLib/src/xmc4_scu.c ****     while (XMC_SCU_CLOCK_IsHighPerformanceOscillatorStable() == false);
 1799              	 .loc 3 569 0
 1800 0084 00BF     	 nop
 1801              	.L130:
 1802              	 .loc 3 569 0 is_stmt 0 discriminator 1
 1803 0086 FFF7FEFF 	 bl XMC_SCU_CLOCK_IsHighPerformanceOscillatorStable
 1804 008a 0346     	 mov r3,r0
 1805 008c 83F00103 	 eor r3,r3,#1
 1806 0090 DBB2     	 uxtb r3,r3
 1807 0092 002B     	 cmp r3,#0
 1808 0094 F7D1     	 bne .L130
 1809              	.L129:
 570:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 571:../Libraries/XMCLib/src/xmc4_scu.c **** 
 572:../Libraries/XMCLib/src/xmc4_scu.c ****   if (config->syspll_config.mode == XMC_SCU_CLOCK_SYSPLL_MODE_DISABLED)
 1810              	 .loc 3 572 0 is_stmt 1
 1811 0096 7B68     	 ldr r3,[r7,#4]
 1812 0098 DB78     	 ldrb r3,[r3,#3]
 1813 009a 002B     	 cmp r3,#0
 1814 009c 09D1     	 bne .L131
 573:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 574:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Do not enable PLL Power Down Mode when the OSC Watchdog is enabled */
 575:../Libraries/XMCLib/src/xmc4_scu.c ****     if (config->enable_oschp == false)
 1815              	 .loc 3 575 0
 1816 009e 7B68     	 ldr r3,[r7,#4]
 1817 00a0 9B79     	 ldrb r3,[r3,#6]
 1818 00a2 83F00103 	 eor r3,r3,#1
 1819 00a6 DBB2     	 uxtb r3,r3
 1820 00a8 002B     	 cmp r3,#0
 1821 00aa 17D0     	 beq .L133
 576:../Libraries/XMCLib/src/xmc4_scu.c ****     {
 577:../Libraries/XMCLib/src/xmc4_scu.c ****       XMC_SCU_CLOCK_DisableSystemPll();
 1822              	 .loc 3 577 0
 1823 00ac FFF7FEFF 	 bl XMC_SCU_CLOCK_DisableSystemPll
 1824 00b0 14E0     	 b .L133
 1825              	.L131:
 578:../Libraries/XMCLib/src/xmc4_scu.c ****     }
 579:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 580:../Libraries/XMCLib/src/xmc4_scu.c ****   else
 581:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 582:../Libraries/XMCLib/src/xmc4_scu.c **** 
 583:../Libraries/XMCLib/src/xmc4_scu.c ****     XMC_SCU_CLOCK_EnableSystemPll();
 1826              	 .loc 3 583 0
 1827 00b2 FFF7FEFF 	 bl XMC_SCU_CLOCK_EnableSystemPll
 584:../Libraries/XMCLib/src/xmc4_scu.c ****     XMC_SCU_CLOCK_StartSystemPll(config->syspll_config.clksrc,
 1828              	 .loc 3 584 0
 1829 00b6 7B68     	 ldr r3,[r7,#4]
 1830 00b8 9988     	 ldrh r1,[r3,#4]
 1831 00ba 7B68     	 ldr r3,[r7,#4]
 1832 00bc DA78     	 ldrb r2,[r3,#3]
 585:../Libraries/XMCLib/src/xmc4_scu.c ****                                  config->syspll_config.mode,
 586:../Libraries/XMCLib/src/xmc4_scu.c ****                                  (uint32_t)config->syspll_config.p_div,
 1833              	 .loc 3 586 0
 1834 00be 7B68     	 ldr r3,[r7,#4]
 1835 00c0 5B78     	 ldrb r3,[r3,#1]
 584:../Libraries/XMCLib/src/xmc4_scu.c ****     XMC_SCU_CLOCK_StartSystemPll(config->syspll_config.clksrc,
 1836              	 .loc 3 584 0
 1837 00c2 1D46     	 mov r5,r3
 587:../Libraries/XMCLib/src/xmc4_scu.c ****                                  (uint32_t)config->syspll_config.n_div,
 1838              	 .loc 3 587 0
 1839 00c4 7B68     	 ldr r3,[r7,#4]
 1840 00c6 1B78     	 ldrb r3,[r3]
 584:../Libraries/XMCLib/src/xmc4_scu.c ****     XMC_SCU_CLOCK_StartSystemPll(config->syspll_config.clksrc,
 1841              	 .loc 3 584 0
 1842 00c8 1C46     	 mov r4,r3
 588:../Libraries/XMCLib/src/xmc4_scu.c ****                                  (uint32_t)config->syspll_config.k_div);
 1843              	 .loc 3 588 0
 1844 00ca 7B68     	 ldr r3,[r7,#4]
 1845 00cc 9B78     	 ldrb r3,[r3,#2]
 584:../Libraries/XMCLib/src/xmc4_scu.c ****                                  config->syspll_config.mode,
 1846              	 .loc 3 584 0
 1847 00ce 0093     	 str r3,[sp]
 1848 00d0 0846     	 mov r0,r1
 1849 00d2 1146     	 mov r1,r2
 1850 00d4 2A46     	 mov r2,r5
 1851 00d6 2346     	 mov r3,r4
 1852 00d8 FFF7FEFF 	 bl XMC_SCU_CLOCK_StartSystemPll
 1853              	.L133:
 589:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 590:../Libraries/XMCLib/src/xmc4_scu.c **** 
 591:../Libraries/XMCLib/src/xmc4_scu.c ****   /* use SYSPLL? */
 592:../Libraries/XMCLib/src/xmc4_scu.c ****   if (config->fsys_clksrc == XMC_SCU_CLOCK_SYSCLKSRC_PLL)
 1854              	 .loc 3 592 0
 1855 00dc 7B68     	 ldr r3,[r7,#4]
 1856 00de DB68     	 ldr r3,[r3,#12]
 1857 00e0 B3F5803F 	 cmp r3,#65536
 1858 00e4 03D1     	 bne .L134
 593:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 594:../Libraries/XMCLib/src/xmc4_scu.c ****     XMC_SCU_CLOCK_SetSystemClockSource(XMC_SCU_CLOCK_SYSCLKSRC_PLL);
 1859              	 .loc 3 594 0
 1860 00e6 4FF48030 	 mov r0,#65536
 1861 00ea FFF7FEFF 	 bl XMC_SCU_CLOCK_SetSystemClockSource
 1862              	.L134:
 595:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 596:../Libraries/XMCLib/src/xmc4_scu.c ****   SystemCoreClockUpdate();
 1863              	 .loc 3 596 0
 1864 00ee FFF7FEFF 	 bl SystemCoreClockUpdate
 597:../Libraries/XMCLib/src/xmc4_scu.c **** }
 1865              	 .loc 3 597 0
 1866 00f2 0837     	 adds r7,r7,#8
 1867              	.LCFI160:
 1868              	 .cfi_def_cfa_offset 16
 1869 00f4 BD46     	 mov sp,r7
 1870              	.LCFI161:
 1871              	 .cfi_def_cfa_register 13
 1872              	 
 1873 00f6 B0BD     	 pop {r4,r5,r7,pc}
 1874              	 .cfi_endproc
 1875              	.LFE195:
 1877              	 .section .text.XMC_SCU_TRAP_Enable,"ax",%progbits
 1878              	 .align 2
 1879              	 .global XMC_SCU_TRAP_Enable
 1880              	 .thumb
 1881              	 .thumb_func
 1883              	XMC_SCU_TRAP_Enable:
 1884              	.LFB196:
 598:../Libraries/XMCLib/src/xmc4_scu.c **** 
 599:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to enable a trap source */
 600:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_TRAP_Enable(const uint32_t trap)
 601:../Libraries/XMCLib/src/xmc4_scu.c **** {
 1885              	 .loc 3 601 0
 1886              	 .cfi_startproc
 1887              	 
 1888              	 
 1889              	 
 1890 0000 80B4     	 push {r7}
 1891              	.LCFI162:
 1892              	 .cfi_def_cfa_offset 4
 1893              	 .cfi_offset 7,-4
 1894 0002 83B0     	 sub sp,sp,#12
 1895              	.LCFI163:
 1896              	 .cfi_def_cfa_offset 16
 1897 0004 00AF     	 add r7,sp,#0
 1898              	.LCFI164:
 1899              	 .cfi_def_cfa_register 7
 1900 0006 7860     	 str r0,[r7,#4]
 602:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_TRAP->TRAPDIS &= (uint32_t)~trap;
 1901              	 .loc 3 602 0
 1902 0008 0549     	 ldr r1,.L136
 1903 000a 054B     	 ldr r3,.L136
 1904 000c 9A68     	 ldr r2,[r3,#8]
 1905 000e 7B68     	 ldr r3,[r7,#4]
 1906 0010 DB43     	 mvns r3,r3
 1907 0012 1340     	 ands r3,r3,r2
 1908 0014 8B60     	 str r3,[r1,#8]
 603:../Libraries/XMCLib/src/xmc4_scu.c **** }
 1909              	 .loc 3 603 0
 1910 0016 0C37     	 adds r7,r7,#12
 1911              	.LCFI165:
 1912              	 .cfi_def_cfa_offset 4
 1913 0018 BD46     	 mov sp,r7
 1914              	.LCFI166:
 1915              	 .cfi_def_cfa_register 13
 1916              	 
 1917 001a 5DF8047B 	 ldr r7,[sp],#4
 1918              	.LCFI167:
 1919              	 .cfi_restore 7
 1920              	 .cfi_def_cfa_offset 0
 1921 001e 7047     	 bx lr
 1922              	.L137:
 1923              	 .align 2
 1924              	.L136:
 1925 0020 60410050 	 .word 1342194016
 1926              	 .cfi_endproc
 1927              	.LFE196:
 1929              	 .section .text.XMC_SCU_TRAP_Disable,"ax",%progbits
 1930              	 .align 2
 1931              	 .global XMC_SCU_TRAP_Disable
 1932              	 .thumb
 1933              	 .thumb_func
 1935              	XMC_SCU_TRAP_Disable:
 1936              	.LFB197:
 604:../Libraries/XMCLib/src/xmc4_scu.c **** 
 605:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to disable a trap source */
 606:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_TRAP_Disable(const uint32_t trap)
 607:../Libraries/XMCLib/src/xmc4_scu.c **** {
 1937              	 .loc 3 607 0
 1938              	 .cfi_startproc
 1939              	 
 1940              	 
 1941              	 
 1942 0000 80B4     	 push {r7}
 1943              	.LCFI168:
 1944              	 .cfi_def_cfa_offset 4
 1945              	 .cfi_offset 7,-4
 1946 0002 83B0     	 sub sp,sp,#12
 1947              	.LCFI169:
 1948              	 .cfi_def_cfa_offset 16
 1949 0004 00AF     	 add r7,sp,#0
 1950              	.LCFI170:
 1951              	 .cfi_def_cfa_register 7
 1952 0006 7860     	 str r0,[r7,#4]
 608:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_TRAP->TRAPDIS |= (uint32_t)trap;
 1953              	 .loc 3 608 0
 1954 0008 0549     	 ldr r1,.L139
 1955 000a 054B     	 ldr r3,.L139
 1956 000c 9A68     	 ldr r2,[r3,#8]
 1957 000e 7B68     	 ldr r3,[r7,#4]
 1958 0010 1343     	 orrs r3,r3,r2
 1959 0012 8B60     	 str r3,[r1,#8]
 609:../Libraries/XMCLib/src/xmc4_scu.c **** }
 1960              	 .loc 3 609 0
 1961 0014 0C37     	 adds r7,r7,#12
 1962              	.LCFI171:
 1963              	 .cfi_def_cfa_offset 4
 1964 0016 BD46     	 mov sp,r7
 1965              	.LCFI172:
 1966              	 .cfi_def_cfa_register 13
 1967              	 
 1968 0018 5DF8047B 	 ldr r7,[sp],#4
 1969              	.LCFI173:
 1970              	 .cfi_restore 7
 1971              	 .cfi_def_cfa_offset 0
 1972 001c 7047     	 bx lr
 1973              	.L140:
 1974 001e 00BF     	 .align 2
 1975              	.L139:
 1976 0020 60410050 	 .word 1342194016
 1977              	 .cfi_endproc
 1978              	.LFE197:
 1980              	 .section .text.XMC_SCU_TRAP_GetStatus,"ax",%progbits
 1981              	 .align 2
 1982              	 .global XMC_SCU_TRAP_GetStatus
 1983              	 .thumb
 1984              	 .thumb_func
 1986              	XMC_SCU_TRAP_GetStatus:
 1987              	.LFB198:
 610:../Libraries/XMCLib/src/xmc4_scu.c **** 
 611:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to determine if a trap source has generated event */
 612:../Libraries/XMCLib/src/xmc4_scu.c **** uint32_t XMC_SCU_TRAP_GetStatus(void)
 613:../Libraries/XMCLib/src/xmc4_scu.c **** {
 1988              	 .loc 3 613 0
 1989              	 .cfi_startproc
 1990              	 
 1991              	 
 1992              	 
 1993 0000 80B4     	 push {r7}
 1994              	.LCFI174:
 1995              	 .cfi_def_cfa_offset 4
 1996              	 .cfi_offset 7,-4
 1997 0002 00AF     	 add r7,sp,#0
 1998              	.LCFI175:
 1999              	 .cfi_def_cfa_register 7
 614:../Libraries/XMCLib/src/xmc4_scu.c ****   return (SCU_TRAP->TRAPRAW);
 2000              	 .loc 3 614 0
 2001 0004 034B     	 ldr r3,.L143
 2002 0006 5B68     	 ldr r3,[r3,#4]
 615:../Libraries/XMCLib/src/xmc4_scu.c **** }
 2003              	 .loc 3 615 0
 2004 0008 1846     	 mov r0,r3
 2005 000a BD46     	 mov sp,r7
 2006              	.LCFI176:
 2007              	 .cfi_def_cfa_register 13
 2008              	 
 2009 000c 5DF8047B 	 ldr r7,[sp],#4
 2010              	.LCFI177:
 2011              	 .cfi_restore 7
 2012              	 .cfi_def_cfa_offset 0
 2013 0010 7047     	 bx lr
 2014              	.L144:
 2015 0012 00BF     	 .align 2
 2016              	.L143:
 2017 0014 60410050 	 .word 1342194016
 2018              	 .cfi_endproc
 2019              	.LFE198:
 2021              	 .section .text.XMC_SCU_TRAP_Trigger,"ax",%progbits
 2022              	 .align 2
 2023              	 .global XMC_SCU_TRAP_Trigger
 2024              	 .thumb
 2025              	 .thumb_func
 2027              	XMC_SCU_TRAP_Trigger:
 2028              	.LFB199:
 616:../Libraries/XMCLib/src/xmc4_scu.c **** 
 617:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to manually trigger a trap event */
 618:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_TRAP_Trigger(const uint32_t trap)
 619:../Libraries/XMCLib/src/xmc4_scu.c **** {
 2029              	 .loc 3 619 0
 2030              	 .cfi_startproc
 2031              	 
 2032              	 
 2033              	 
 2034 0000 80B4     	 push {r7}
 2035              	.LCFI178:
 2036              	 .cfi_def_cfa_offset 4
 2037              	 .cfi_offset 7,-4
 2038 0002 83B0     	 sub sp,sp,#12
 2039              	.LCFI179:
 2040              	 .cfi_def_cfa_offset 16
 2041 0004 00AF     	 add r7,sp,#0
 2042              	.LCFI180:
 2043              	 .cfi_def_cfa_register 7
 2044 0006 7860     	 str r0,[r7,#4]
 620:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_TRAP->TRAPSET = (uint32_t)trap;
 2045              	 .loc 3 620 0
 2046 0008 034A     	 ldr r2,.L146
 2047 000a 7B68     	 ldr r3,[r7,#4]
 2048 000c 1361     	 str r3,[r2,#16]
 621:../Libraries/XMCLib/src/xmc4_scu.c **** }
 2049              	 .loc 3 621 0
 2050 000e 0C37     	 adds r7,r7,#12
 2051              	.LCFI181:
 2052              	 .cfi_def_cfa_offset 4
 2053 0010 BD46     	 mov sp,r7
 2054              	.LCFI182:
 2055              	 .cfi_def_cfa_register 13
 2056              	 
 2057 0012 5DF8047B 	 ldr r7,[sp],#4
 2058              	.LCFI183:
 2059              	 .cfi_restore 7
 2060              	 .cfi_def_cfa_offset 0
 2061 0016 7047     	 bx lr
 2062              	.L147:
 2063              	 .align 2
 2064              	.L146:
 2065 0018 60410050 	 .word 1342194016
 2066              	 .cfi_endproc
 2067              	.LFE199:
 2069              	 .section .text.XMC_SCU_TRAP_ClearStatus,"ax",%progbits
 2070              	 .align 2
 2071              	 .global XMC_SCU_TRAP_ClearStatus
 2072              	 .thumb
 2073              	 .thumb_func
 2075              	XMC_SCU_TRAP_ClearStatus:
 2076              	.LFB200:
 622:../Libraries/XMCLib/src/xmc4_scu.c **** 
 623:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to clear a trap event */
 624:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_TRAP_ClearStatus(const uint32_t trap)
 625:../Libraries/XMCLib/src/xmc4_scu.c **** {
 2077              	 .loc 3 625 0
 2078              	 .cfi_startproc
 2079              	 
 2080              	 
 2081              	 
 2082 0000 80B4     	 push {r7}
 2083              	.LCFI184:
 2084              	 .cfi_def_cfa_offset 4
 2085              	 .cfi_offset 7,-4
 2086 0002 83B0     	 sub sp,sp,#12
 2087              	.LCFI185:
 2088              	 .cfi_def_cfa_offset 16
 2089 0004 00AF     	 add r7,sp,#0
 2090              	.LCFI186:
 2091              	 .cfi_def_cfa_register 7
 2092 0006 7860     	 str r0,[r7,#4]
 626:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_TRAP->TRAPCLR = (uint32_t)trap;
 2093              	 .loc 3 626 0
 2094 0008 034A     	 ldr r2,.L149
 2095 000a 7B68     	 ldr r3,[r7,#4]
 2096 000c D360     	 str r3,[r2,#12]
 627:../Libraries/XMCLib/src/xmc4_scu.c **** }
 2097              	 .loc 3 627 0
 2098 000e 0C37     	 adds r7,r7,#12
 2099              	.LCFI187:
 2100              	 .cfi_def_cfa_offset 4
 2101 0010 BD46     	 mov sp,r7
 2102              	.LCFI188:
 2103              	 .cfi_def_cfa_register 13
 2104              	 
 2105 0012 5DF8047B 	 ldr r7,[sp],#4
 2106              	.LCFI189:
 2107              	 .cfi_restore 7
 2108              	 .cfi_def_cfa_offset 0
 2109 0016 7047     	 bx lr
 2110              	.L150:
 2111              	 .align 2
 2112              	.L149:
 2113 0018 60410050 	 .word 1342194016
 2114              	 .cfi_endproc
 2115              	.LFE200:
 2117              	 .section .text.XMC_SCU_PARITY_ClearStatus,"ax",%progbits
 2118              	 .align 2
 2119              	 .global XMC_SCU_PARITY_ClearStatus
 2120              	 .thumb
 2121              	 .thumb_func
 2123              	XMC_SCU_PARITY_ClearStatus:
 2124              	.LFB201:
 628:../Libraries/XMCLib/src/xmc4_scu.c **** 
 629:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to clear parity error event */
 630:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_PARITY_ClearStatus(const uint32_t memory)
 631:../Libraries/XMCLib/src/xmc4_scu.c **** {
 2125              	 .loc 3 631 0
 2126              	 .cfi_startproc
 2127              	 
 2128              	 
 2129              	 
 2130 0000 80B4     	 push {r7}
 2131              	.LCFI190:
 2132              	 .cfi_def_cfa_offset 4
 2133              	 .cfi_offset 7,-4
 2134 0002 83B0     	 sub sp,sp,#12
 2135              	.LCFI191:
 2136              	 .cfi_def_cfa_offset 16
 2137 0004 00AF     	 add r7,sp,#0
 2138              	.LCFI192:
 2139              	 .cfi_def_cfa_register 7
 2140 0006 7860     	 str r0,[r7,#4]
 632:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_PARITY->PEFLAG |= (uint32_t)memory;
 2141              	 .loc 3 632 0
 2142 0008 0549     	 ldr r1,.L152
 2143 000a 054B     	 ldr r3,.L152
 2144 000c 5A69     	 ldr r2,[r3,#20]
 2145 000e 7B68     	 ldr r3,[r7,#4]
 2146 0010 1343     	 orrs r3,r3,r2
 2147 0012 4B61     	 str r3,[r1,#20]
 633:../Libraries/XMCLib/src/xmc4_scu.c **** }
 2148              	 .loc 3 633 0
 2149 0014 0C37     	 adds r7,r7,#12
 2150              	.LCFI193:
 2151              	 .cfi_def_cfa_offset 4
 2152 0016 BD46     	 mov sp,r7
 2153              	.LCFI194:
 2154              	 .cfi_def_cfa_register 13
 2155              	 
 2156 0018 5DF8047B 	 ldr r7,[sp],#4
 2157              	.LCFI195:
 2158              	 .cfi_restore 7
 2159              	 .cfi_def_cfa_offset 0
 2160 001c 7047     	 bx lr
 2161              	.L153:
 2162 001e 00BF     	 .align 2
 2163              	.L152:
 2164 0020 3C410050 	 .word 1342193980
 2165              	 .cfi_endproc
 2166              	.LFE201:
 2168              	 .section .text.XMC_SCU_PARITY_GetStatus,"ax",%progbits
 2169              	 .align 2
 2170              	 .global XMC_SCU_PARITY_GetStatus
 2171              	 .thumb
 2172              	 .thumb_func
 2174              	XMC_SCU_PARITY_GetStatus:
 2175              	.LFB202:
 634:../Libraries/XMCLib/src/xmc4_scu.c **** 
 635:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to determine if the specified parity error has occured or not */
 636:../Libraries/XMCLib/src/xmc4_scu.c **** uint32_t XMC_SCU_PARITY_GetStatus(void)
 637:../Libraries/XMCLib/src/xmc4_scu.c **** {
 2176              	 .loc 3 637 0
 2177              	 .cfi_startproc
 2178              	 
 2179              	 
 2180              	 
 2181 0000 80B4     	 push {r7}
 2182              	.LCFI196:
 2183              	 .cfi_def_cfa_offset 4
 2184              	 .cfi_offset 7,-4
 2185 0002 00AF     	 add r7,sp,#0
 2186              	.LCFI197:
 2187              	 .cfi_def_cfa_register 7
 638:../Libraries/XMCLib/src/xmc4_scu.c ****   return (SCU_PARITY->PEFLAG);
 2188              	 .loc 3 638 0
 2189 0004 034B     	 ldr r3,.L156
 2190 0006 5B69     	 ldr r3,[r3,#20]
 639:../Libraries/XMCLib/src/xmc4_scu.c **** }
 2191              	 .loc 3 639 0
 2192 0008 1846     	 mov r0,r3
 2193 000a BD46     	 mov sp,r7
 2194              	.LCFI198:
 2195              	 .cfi_def_cfa_register 13
 2196              	 
 2197 000c 5DF8047B 	 ldr r7,[sp],#4
 2198              	.LCFI199:
 2199              	 .cfi_restore 7
 2200              	 .cfi_def_cfa_offset 0
 2201 0010 7047     	 bx lr
 2202              	.L157:
 2203 0012 00BF     	 .align 2
 2204              	.L156:
 2205 0014 3C410050 	 .word 1342193980
 2206              	 .cfi_endproc
 2207              	.LFE202:
 2209              	 .section .text.XMC_SCU_PARITY_Enable,"ax",%progbits
 2210              	 .align 2
 2211              	 .global XMC_SCU_PARITY_Enable
 2212              	 .thumb
 2213              	 .thumb_func
 2215              	XMC_SCU_PARITY_Enable:
 2216              	.LFB203:
 640:../Libraries/XMCLib/src/xmc4_scu.c **** 
 641:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to enable parity error checking for the selected on-chip RAM type */
 642:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_PARITY_Enable(const uint32_t memory)
 643:../Libraries/XMCLib/src/xmc4_scu.c **** {
 2217              	 .loc 3 643 0
 2218              	 .cfi_startproc
 2219              	 
 2220              	 
 2221              	 
 2222 0000 80B4     	 push {r7}
 2223              	.LCFI200:
 2224              	 .cfi_def_cfa_offset 4
 2225              	 .cfi_offset 7,-4
 2226 0002 83B0     	 sub sp,sp,#12
 2227              	.LCFI201:
 2228              	 .cfi_def_cfa_offset 16
 2229 0004 00AF     	 add r7,sp,#0
 2230              	.LCFI202:
 2231              	 .cfi_def_cfa_register 7
 2232 0006 7860     	 str r0,[r7,#4]
 644:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_PARITY->PEEN |= (uint32_t)memory;
 2233              	 .loc 3 644 0
 2234 0008 0549     	 ldr r1,.L159
 2235 000a 054B     	 ldr r3,.L159
 2236 000c 1A68     	 ldr r2,[r3]
 2237 000e 7B68     	 ldr r3,[r7,#4]
 2238 0010 1343     	 orrs r3,r3,r2
 2239 0012 0B60     	 str r3,[r1]
 645:../Libraries/XMCLib/src/xmc4_scu.c **** }
 2240              	 .loc 3 645 0
 2241 0014 0C37     	 adds r7,r7,#12
 2242              	.LCFI203:
 2243              	 .cfi_def_cfa_offset 4
 2244 0016 BD46     	 mov sp,r7
 2245              	.LCFI204:
 2246              	 .cfi_def_cfa_register 13
 2247              	 
 2248 0018 5DF8047B 	 ldr r7,[sp],#4
 2249              	.LCFI205:
 2250              	 .cfi_restore 7
 2251              	 .cfi_def_cfa_offset 0
 2252 001c 7047     	 bx lr
 2253              	.L160:
 2254 001e 00BF     	 .align 2
 2255              	.L159:
 2256 0020 3C410050 	 .word 1342193980
 2257              	 .cfi_endproc
 2258              	.LFE203:
 2260              	 .section .text.XMC_SCU_PARITY_Disable,"ax",%progbits
 2261              	 .align 2
 2262              	 .global XMC_SCU_PARITY_Disable
 2263              	 .thumb
 2264              	 .thumb_func
 2266              	XMC_SCU_PARITY_Disable:
 2267              	.LFB204:
 646:../Libraries/XMCLib/src/xmc4_scu.c **** 
 647:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to disable parity error checking for the selected on-chip RAM type */
 648:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_PARITY_Disable(const uint32_t memory)
 649:../Libraries/XMCLib/src/xmc4_scu.c **** {
 2268              	 .loc 3 649 0
 2269              	 .cfi_startproc
 2270              	 
 2271              	 
 2272              	 
 2273 0000 80B4     	 push {r7}
 2274              	.LCFI206:
 2275              	 .cfi_def_cfa_offset 4
 2276              	 .cfi_offset 7,-4
 2277 0002 83B0     	 sub sp,sp,#12
 2278              	.LCFI207:
 2279              	 .cfi_def_cfa_offset 16
 2280 0004 00AF     	 add r7,sp,#0
 2281              	.LCFI208:
 2282              	 .cfi_def_cfa_register 7
 2283 0006 7860     	 str r0,[r7,#4]
 650:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_PARITY->PEEN &= (uint32_t)~memory;
 2284              	 .loc 3 650 0
 2285 0008 0549     	 ldr r1,.L162
 2286 000a 054B     	 ldr r3,.L162
 2287 000c 1A68     	 ldr r2,[r3]
 2288 000e 7B68     	 ldr r3,[r7,#4]
 2289 0010 DB43     	 mvns r3,r3
 2290 0012 1340     	 ands r3,r3,r2
 2291 0014 0B60     	 str r3,[r1]
 651:../Libraries/XMCLib/src/xmc4_scu.c **** }
 2292              	 .loc 3 651 0
 2293 0016 0C37     	 adds r7,r7,#12
 2294              	.LCFI209:
 2295              	 .cfi_def_cfa_offset 4
 2296 0018 BD46     	 mov sp,r7
 2297              	.LCFI210:
 2298              	 .cfi_def_cfa_register 13
 2299              	 
 2300 001a 5DF8047B 	 ldr r7,[sp],#4
 2301              	.LCFI211:
 2302              	 .cfi_restore 7
 2303              	 .cfi_def_cfa_offset 0
 2304 001e 7047     	 bx lr
 2305              	.L163:
 2306              	 .align 2
 2307              	.L162:
 2308 0020 3C410050 	 .word 1342193980
 2309              	 .cfi_endproc
 2310              	.LFE204:
 2312              	 .section .text.XMC_SCU_PARITY_EnableTrapGeneration,"ax",%progbits
 2313              	 .align 2
 2314              	 .global XMC_SCU_PARITY_EnableTrapGeneration
 2315              	 .thumb
 2316              	 .thumb_func
 2318              	XMC_SCU_PARITY_EnableTrapGeneration:
 2319              	.LFB205:
 652:../Libraries/XMCLib/src/xmc4_scu.c **** 
 653:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to enable trap assertion for the parity error source */
 654:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_PARITY_EnableTrapGeneration(const uint32_t memory)
 655:../Libraries/XMCLib/src/xmc4_scu.c **** {
 2320              	 .loc 3 655 0
 2321              	 .cfi_startproc
 2322              	 
 2323              	 
 2324              	 
 2325 0000 80B4     	 push {r7}
 2326              	.LCFI212:
 2327              	 .cfi_def_cfa_offset 4
 2328              	 .cfi_offset 7,-4
 2329 0002 83B0     	 sub sp,sp,#12
 2330              	.LCFI213:
 2331              	 .cfi_def_cfa_offset 16
 2332 0004 00AF     	 add r7,sp,#0
 2333              	.LCFI214:
 2334              	 .cfi_def_cfa_register 7
 2335 0006 7860     	 str r0,[r7,#4]
 656:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_PARITY->PETE |= (uint32_t)memory;
 2336              	 .loc 3 656 0
 2337 0008 0549     	 ldr r1,.L165
 2338 000a 054B     	 ldr r3,.L165
 2339 000c 9A68     	 ldr r2,[r3,#8]
 2340 000e 7B68     	 ldr r3,[r7,#4]
 2341 0010 1343     	 orrs r3,r3,r2
 2342 0012 8B60     	 str r3,[r1,#8]
 657:../Libraries/XMCLib/src/xmc4_scu.c **** }
 2343              	 .loc 3 657 0
 2344 0014 0C37     	 adds r7,r7,#12
 2345              	.LCFI215:
 2346              	 .cfi_def_cfa_offset 4
 2347 0016 BD46     	 mov sp,r7
 2348              	.LCFI216:
 2349              	 .cfi_def_cfa_register 13
 2350              	 
 2351 0018 5DF8047B 	 ldr r7,[sp],#4
 2352              	.LCFI217:
 2353              	 .cfi_restore 7
 2354              	 .cfi_def_cfa_offset 0
 2355 001c 7047     	 bx lr
 2356              	.L166:
 2357 001e 00BF     	 .align 2
 2358              	.L165:
 2359 0020 3C410050 	 .word 1342193980
 2360              	 .cfi_endproc
 2361              	.LFE205:
 2363              	 .section .text.XMC_SCU_PARITY_DisableTrapGeneration,"ax",%progbits
 2364              	 .align 2
 2365              	 .global XMC_SCU_PARITY_DisableTrapGeneration
 2366              	 .thumb
 2367              	 .thumb_func
 2369              	XMC_SCU_PARITY_DisableTrapGeneration:
 2370              	.LFB206:
 658:../Libraries/XMCLib/src/xmc4_scu.c **** 
 659:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to disable the assertion of trap for the parity error source */
 660:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_PARITY_DisableTrapGeneration(const uint32_t memory)
 661:../Libraries/XMCLib/src/xmc4_scu.c **** {
 2371              	 .loc 3 661 0
 2372              	 .cfi_startproc
 2373              	 
 2374              	 
 2375              	 
 2376 0000 80B4     	 push {r7}
 2377              	.LCFI218:
 2378              	 .cfi_def_cfa_offset 4
 2379              	 .cfi_offset 7,-4
 2380 0002 83B0     	 sub sp,sp,#12
 2381              	.LCFI219:
 2382              	 .cfi_def_cfa_offset 16
 2383 0004 00AF     	 add r7,sp,#0
 2384              	.LCFI220:
 2385              	 .cfi_def_cfa_register 7
 2386 0006 7860     	 str r0,[r7,#4]
 662:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_PARITY->PETE &= (uint32_t)~memory;
 2387              	 .loc 3 662 0
 2388 0008 0549     	 ldr r1,.L168
 2389 000a 054B     	 ldr r3,.L168
 2390 000c 9A68     	 ldr r2,[r3,#8]
 2391 000e 7B68     	 ldr r3,[r7,#4]
 2392 0010 DB43     	 mvns r3,r3
 2393 0012 1340     	 ands r3,r3,r2
 2394 0014 8B60     	 str r3,[r1,#8]
 663:../Libraries/XMCLib/src/xmc4_scu.c **** }
 2395              	 .loc 3 663 0
 2396 0016 0C37     	 adds r7,r7,#12
 2397              	.LCFI221:
 2398              	 .cfi_def_cfa_offset 4
 2399 0018 BD46     	 mov sp,r7
 2400              	.LCFI222:
 2401              	 .cfi_def_cfa_register 13
 2402              	 
 2403 001a 5DF8047B 	 ldr r7,[sp],#4
 2404              	.LCFI223:
 2405              	 .cfi_restore 7
 2406              	 .cfi_def_cfa_offset 0
 2407 001e 7047     	 bx lr
 2408              	.L169:
 2409              	 .align 2
 2410              	.L168:
 2411 0020 3C410050 	 .word 1342193980
 2412              	 .cfi_endproc
 2413              	.LFE206:
 2415              	 .section .text.XMC_SCU_INTERRUPT_EnableNmiRequest,"ax",%progbits
 2416              	 .align 2
 2417              	 .global XMC_SCU_INTERRUPT_EnableNmiRequest
 2418              	 .thumb
 2419              	 .thumb_func
 2421              	XMC_SCU_INTERRUPT_EnableNmiRequest:
 2422              	.LFB207:
 664:../Libraries/XMCLib/src/xmc4_scu.c **** 
 665:../Libraries/XMCLib/src/xmc4_scu.c **** /* Enables a NMI source */
 666:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_INTERRUPT_EnableNmiRequest(const uint32_t request)
 667:../Libraries/XMCLib/src/xmc4_scu.c **** {
 2423              	 .loc 3 667 0
 2424              	 .cfi_startproc
 2425              	 
 2426              	 
 2427              	 
 2428 0000 80B4     	 push {r7}
 2429              	.LCFI224:
 2430              	 .cfi_def_cfa_offset 4
 2431              	 .cfi_offset 7,-4
 2432 0002 83B0     	 sub sp,sp,#12
 2433              	.LCFI225:
 2434              	 .cfi_def_cfa_offset 16
 2435 0004 00AF     	 add r7,sp,#0
 2436              	.LCFI226:
 2437              	 .cfi_def_cfa_register 7
 2438 0006 7860     	 str r0,[r7,#4]
 668:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_INTERRUPT->NMIREQEN |= (uint32_t)request;
 2439              	 .loc 3 668 0
 2440 0008 0549     	 ldr r1,.L171
 2441 000a 054B     	 ldr r3,.L171
 2442 000c 5A69     	 ldr r2,[r3,#20]
 2443 000e 7B68     	 ldr r3,[r7,#4]
 2444 0010 1343     	 orrs r3,r3,r2
 2445 0012 4B61     	 str r3,[r1,#20]
 669:../Libraries/XMCLib/src/xmc4_scu.c **** }
 2446              	 .loc 3 669 0
 2447 0014 0C37     	 adds r7,r7,#12
 2448              	.LCFI227:
 2449              	 .cfi_def_cfa_offset 4
 2450 0016 BD46     	 mov sp,r7
 2451              	.LCFI228:
 2452              	 .cfi_def_cfa_register 13
 2453              	 
 2454 0018 5DF8047B 	 ldr r7,[sp],#4
 2455              	.LCFI229:
 2456              	 .cfi_restore 7
 2457              	 .cfi_def_cfa_offset 0
 2458 001c 7047     	 bx lr
 2459              	.L172:
 2460 001e 00BF     	 .align 2
 2461              	.L171:
 2462 0020 74400050 	 .word 1342193780
 2463              	 .cfi_endproc
 2464              	.LFE207:
 2466              	 .section .text.XMC_SCU_INTERRUPT_DisableNmiRequest,"ax",%progbits
 2467              	 .align 2
 2468              	 .global XMC_SCU_INTERRUPT_DisableNmiRequest
 2469              	 .thumb
 2470              	 .thumb_func
 2472              	XMC_SCU_INTERRUPT_DisableNmiRequest:
 2473              	.LFB208:
 670:../Libraries/XMCLib/src/xmc4_scu.c **** 
 671:../Libraries/XMCLib/src/xmc4_scu.c **** /* Disables a NMI source */
 672:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_INTERRUPT_DisableNmiRequest(const uint32_t request)
 673:../Libraries/XMCLib/src/xmc4_scu.c **** {
 2474              	 .loc 3 673 0
 2475              	 .cfi_startproc
 2476              	 
 2477              	 
 2478              	 
 2479 0000 80B4     	 push {r7}
 2480              	.LCFI230:
 2481              	 .cfi_def_cfa_offset 4
 2482              	 .cfi_offset 7,-4
 2483 0002 83B0     	 sub sp,sp,#12
 2484              	.LCFI231:
 2485              	 .cfi_def_cfa_offset 16
 2486 0004 00AF     	 add r7,sp,#0
 2487              	.LCFI232:
 2488              	 .cfi_def_cfa_register 7
 2489 0006 7860     	 str r0,[r7,#4]
 674:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_INTERRUPT->NMIREQEN &= (uint32_t)~request;
 2490              	 .loc 3 674 0
 2491 0008 0549     	 ldr r1,.L174
 2492 000a 054B     	 ldr r3,.L174
 2493 000c 5A69     	 ldr r2,[r3,#20]
 2494 000e 7B68     	 ldr r3,[r7,#4]
 2495 0010 DB43     	 mvns r3,r3
 2496 0012 1340     	 ands r3,r3,r2
 2497 0014 4B61     	 str r3,[r1,#20]
 675:../Libraries/XMCLib/src/xmc4_scu.c **** }
 2498              	 .loc 3 675 0
 2499 0016 0C37     	 adds r7,r7,#12
 2500              	.LCFI233:
 2501              	 .cfi_def_cfa_offset 4
 2502 0018 BD46     	 mov sp,r7
 2503              	.LCFI234:
 2504              	 .cfi_def_cfa_register 13
 2505              	 
 2506 001a 5DF8047B 	 ldr r7,[sp],#4
 2507              	.LCFI235:
 2508              	 .cfi_restore 7
 2509              	 .cfi_def_cfa_offset 0
 2510 001e 7047     	 bx lr
 2511              	.L175:
 2512              	 .align 2
 2513              	.L174:
 2514 0020 74400050 	 .word 1342193780
 2515              	 .cfi_endproc
 2516              	.LFE208:
 2518              	 .section .text.XMC_SCU_RESET_AssertPeripheralReset,"ax",%progbits
 2519              	 .align 2
 2520              	 .global XMC_SCU_RESET_AssertPeripheralReset
 2521              	 .thumb
 2522              	 .thumb_func
 2524              	XMC_SCU_RESET_AssertPeripheralReset:
 2525              	.LFB209:
 676:../Libraries/XMCLib/src/xmc4_scu.c **** 
 677:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to manually assert a reset request */
 678:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_RESET_AssertPeripheralReset(const XMC_SCU_PERIPHERAL_RESET_t peripheral)
 679:../Libraries/XMCLib/src/xmc4_scu.c **** {
 2526              	 .loc 3 679 0
 2527              	 .cfi_startproc
 2528              	 
 2529              	 
 2530              	 
 2531 0000 80B4     	 push {r7}
 2532              	.LCFI236:
 2533              	 .cfi_def_cfa_offset 4
 2534              	 .cfi_offset 7,-4
 2535 0002 85B0     	 sub sp,sp,#20
 2536              	.LCFI237:
 2537              	 .cfi_def_cfa_offset 24
 2538 0004 00AF     	 add r7,sp,#0
 2539              	.LCFI238:
 2540              	 .cfi_def_cfa_register 7
 2541 0006 7860     	 str r0,[r7,#4]
 680:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t index = (uint32_t)((((uint32_t)peripheral) & 0xf0000000UL) >> 28UL);
 2542              	 .loc 3 680 0
 2543 0008 7B68     	 ldr r3,[r7,#4]
 2544 000a 1B0F     	 lsrs r3,r3,#28
 2545 000c FB60     	 str r3,[r7,#12]
 681:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t mask = (((uint32_t)peripheral) & ((uint32_t)~0xf0000000UL));
 2546              	 .loc 3 681 0
 2547 000e 7B68     	 ldr r3,[r7,#4]
 2548 0010 23F07043 	 bic r3,r3,#-268435456
 2549 0014 BB60     	 str r3,[r7,#8]
 682:../Libraries/XMCLib/src/xmc4_scu.c **** 
 683:../Libraries/XMCLib/src/xmc4_scu.c ****   *(volatile uint32_t *)(&(SCU_RESET->PRSET0) + (index * 3U)) = (uint32_t)mask;
 2550              	 .loc 3 683 0
 2551 0016 FA68     	 ldr r2,[r7,#12]
 2552 0018 1346     	 mov r3,r2
 2553 001a 5B00     	 lsls r3,r3,#1
 2554 001c 1344     	 add r3,r3,r2
 2555 001e 9B00     	 lsls r3,r3,#2
 2556 0020 1A46     	 mov r2,r3
 2557 0022 044B     	 ldr r3,.L177
 2558 0024 1344     	 add r3,r3,r2
 2559 0026 BA68     	 ldr r2,[r7,#8]
 2560 0028 1A60     	 str r2,[r3]
 684:../Libraries/XMCLib/src/xmc4_scu.c **** }
 2561              	 .loc 3 684 0
 2562 002a 1437     	 adds r7,r7,#20
 2563              	.LCFI239:
 2564              	 .cfi_def_cfa_offset 4
 2565 002c BD46     	 mov sp,r7
 2566              	.LCFI240:
 2567              	 .cfi_def_cfa_register 13
 2568              	 
 2569 002e 5DF8047B 	 ldr r7,[sp],#4
 2570              	.LCFI241:
 2571              	 .cfi_restore 7
 2572              	 .cfi_def_cfa_offset 0
 2573 0032 7047     	 bx lr
 2574              	.L178:
 2575              	 .align 2
 2576              	.L177:
 2577 0034 10440050 	 .word 1342194704
 2578              	 .cfi_endproc
 2579              	.LFE209:
 2581              	 .section .text.XMC_SCU_RESET_DeassertPeripheralReset,"ax",%progbits
 2582              	 .align 2
 2583              	 .global XMC_SCU_RESET_DeassertPeripheralReset
 2584              	 .thumb
 2585              	 .thumb_func
 2587              	XMC_SCU_RESET_DeassertPeripheralReset:
 2588              	.LFB210:
 685:../Libraries/XMCLib/src/xmc4_scu.c **** 
 686:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to manually de-assert a reset request */
 687:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_RESET_DeassertPeripheralReset(const XMC_SCU_PERIPHERAL_RESET_t peripheral)
 688:../Libraries/XMCLib/src/xmc4_scu.c **** {
 2589              	 .loc 3 688 0
 2590              	 .cfi_startproc
 2591              	 
 2592              	 
 2593              	 
 2594 0000 80B4     	 push {r7}
 2595              	.LCFI242:
 2596              	 .cfi_def_cfa_offset 4
 2597              	 .cfi_offset 7,-4
 2598 0002 85B0     	 sub sp,sp,#20
 2599              	.LCFI243:
 2600              	 .cfi_def_cfa_offset 24
 2601 0004 00AF     	 add r7,sp,#0
 2602              	.LCFI244:
 2603              	 .cfi_def_cfa_register 7
 2604 0006 7860     	 str r0,[r7,#4]
 689:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t index = (uint32_t)((((uint32_t)peripheral) & 0xf0000000UL) >> 28UL);
 2605              	 .loc 3 689 0
 2606 0008 7B68     	 ldr r3,[r7,#4]
 2607 000a 1B0F     	 lsrs r3,r3,#28
 2608 000c FB60     	 str r3,[r7,#12]
 690:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t mask = (((uint32_t)peripheral) & ((uint32_t)~0xf0000000UL));
 2609              	 .loc 3 690 0
 2610 000e 7B68     	 ldr r3,[r7,#4]
 2611 0010 23F07043 	 bic r3,r3,#-268435456
 2612 0014 BB60     	 str r3,[r7,#8]
 691:../Libraries/XMCLib/src/xmc4_scu.c **** 
 692:../Libraries/XMCLib/src/xmc4_scu.c ****   *(volatile uint32_t *)(&(SCU_RESET->PRCLR0) + (index * 3U)) = (uint32_t)mask;
 2613              	 .loc 3 692 0
 2614 0016 FA68     	 ldr r2,[r7,#12]
 2615 0018 1346     	 mov r3,r2
 2616 001a 5B00     	 lsls r3,r3,#1
 2617 001c 1344     	 add r3,r3,r2
 2618 001e 9B00     	 lsls r3,r3,#2
 2619 0020 1A46     	 mov r2,r3
 2620 0022 044B     	 ldr r3,.L180
 2621 0024 1344     	 add r3,r3,r2
 2622 0026 BA68     	 ldr r2,[r7,#8]
 2623 0028 1A60     	 str r2,[r3]
 693:../Libraries/XMCLib/src/xmc4_scu.c **** }
 2624              	 .loc 3 693 0
 2625 002a 1437     	 adds r7,r7,#20
 2626              	.LCFI245:
 2627              	 .cfi_def_cfa_offset 4
 2628 002c BD46     	 mov sp,r7
 2629              	.LCFI246:
 2630              	 .cfi_def_cfa_register 13
 2631              	 
 2632 002e 5DF8047B 	 ldr r7,[sp],#4
 2633              	.LCFI247:
 2634              	 .cfi_restore 7
 2635              	 .cfi_def_cfa_offset 0
 2636 0032 7047     	 bx lr
 2637              	.L181:
 2638              	 .align 2
 2639              	.L180:
 2640 0034 14440050 	 .word 1342194708
 2641              	 .cfi_endproc
 2642              	.LFE210:
 2644              	 .section .text.XMC_SCU_RESET_IsPeripheralResetAsserted,"ax",%progbits
 2645              	 .align 2
 2646              	 .global XMC_SCU_RESET_IsPeripheralResetAsserted
 2647              	 .thumb
 2648              	 .thumb_func
 2650              	XMC_SCU_RESET_IsPeripheralResetAsserted:
 2651              	.LFB211:
 694:../Libraries/XMCLib/src/xmc4_scu.c **** 
 695:../Libraries/XMCLib/src/xmc4_scu.c **** /* Find out if the peripheral reset is asserted */
 696:../Libraries/XMCLib/src/xmc4_scu.c **** bool XMC_SCU_RESET_IsPeripheralResetAsserted(const XMC_SCU_PERIPHERAL_RESET_t peripheral)
 697:../Libraries/XMCLib/src/xmc4_scu.c **** {
 2652              	 .loc 3 697 0
 2653              	 .cfi_startproc
 2654              	 
 2655              	 
 2656              	 
 2657 0000 80B4     	 push {r7}
 2658              	.LCFI248:
 2659              	 .cfi_def_cfa_offset 4
 2660              	 .cfi_offset 7,-4
 2661 0002 85B0     	 sub sp,sp,#20
 2662              	.LCFI249:
 2663              	 .cfi_def_cfa_offset 24
 2664 0004 00AF     	 add r7,sp,#0
 2665              	.LCFI250:
 2666              	 .cfi_def_cfa_register 7
 2667 0006 7860     	 str r0,[r7,#4]
 698:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t index = (uint32_t)((((uint32_t)peripheral) & 0xf0000000UL) >> 28UL);
 2668              	 .loc 3 698 0
 2669 0008 7B68     	 ldr r3,[r7,#4]
 2670 000a 1B0F     	 lsrs r3,r3,#28
 2671 000c FB60     	 str r3,[r7,#12]
 699:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t mask = (((uint32_t)peripheral) & ((uint32_t)~0xf0000000UL));
 2672              	 .loc 3 699 0
 2673 000e 7B68     	 ldr r3,[r7,#4]
 2674 0010 23F07043 	 bic r3,r3,#-268435456
 2675 0014 BB60     	 str r3,[r7,#8]
 700:../Libraries/XMCLib/src/xmc4_scu.c **** 
 701:../Libraries/XMCLib/src/xmc4_scu.c ****   return ((*(const volatile uint32_t *)(&(SCU_RESET->PRSTAT0) + (index * 3U)) & mask) != 0U);
 2676              	 .loc 3 701 0
 2677 0016 FA68     	 ldr r2,[r7,#12]
 2678 0018 1346     	 mov r3,r2
 2679 001a 5B00     	 lsls r3,r3,#1
 2680 001c 1344     	 add r3,r3,r2
 2681 001e 9B00     	 lsls r3,r3,#2
 2682 0020 1A46     	 mov r2,r3
 2683 0022 084B     	 ldr r3,.L184
 2684 0024 1344     	 add r3,r3,r2
 2685 0026 1A68     	 ldr r2,[r3]
 2686 0028 BB68     	 ldr r3,[r7,#8]
 2687 002a 1340     	 ands r3,r3,r2
 2688 002c 002B     	 cmp r3,#0
 2689 002e 14BF     	 ite ne
 2690 0030 0123     	 movne r3,#1
 2691 0032 0023     	 moveq r3,#0
 2692 0034 DBB2     	 uxtb r3,r3
 702:../Libraries/XMCLib/src/xmc4_scu.c **** }
 2693              	 .loc 3 702 0
 2694 0036 1846     	 mov r0,r3
 2695 0038 1437     	 adds r7,r7,#20
 2696              	.LCFI251:
 2697              	 .cfi_def_cfa_offset 4
 2698 003a BD46     	 mov sp,r7
 2699              	.LCFI252:
 2700              	 .cfi_def_cfa_register 13
 2701              	 
 2702 003c 5DF8047B 	 ldr r7,[sp],#4
 2703              	.LCFI253:
 2704              	 .cfi_restore 7
 2705              	 .cfi_def_cfa_offset 0
 2706 0040 7047     	 bx lr
 2707              	.L185:
 2708 0042 00BF     	 .align 2
 2709              	.L184:
 2710 0044 0C440050 	 .word 1342194700
 2711              	 .cfi_endproc
 2712              	.LFE211:
 2714              	 .section .text.XMC_SCU_CLOCK_GetSystemPllClockFrequency,"ax",%progbits
 2715              	 .align 2
 2716              	 .global XMC_SCU_CLOCK_GetSystemPllClockFrequency
 2717              	 .thumb
 2718              	 .thumb_func
 2720              	XMC_SCU_CLOCK_GetSystemPllClockFrequency:
 2721              	.LFB212:
 703:../Libraries/XMCLib/src/xmc4_scu.c **** 
 704:../Libraries/XMCLib/src/xmc4_scu.c **** /*
 705:../Libraries/XMCLib/src/xmc4_scu.c ****  * API to retrieve frequency of System PLL output clock
 706:../Libraries/XMCLib/src/xmc4_scu.c ****  */
 707:../Libraries/XMCLib/src/xmc4_scu.c **** uint32_t XMC_SCU_CLOCK_GetSystemPllClockFrequency(void)
 708:../Libraries/XMCLib/src/xmc4_scu.c **** {
 2722              	 .loc 3 708 0
 2723              	 .cfi_startproc
 2724              	 
 2725              	 
 2726 0000 80B5     	 push {r7,lr}
 2727              	.LCFI254:
 2728              	 .cfi_def_cfa_offset 8
 2729              	 .cfi_offset 7,-8
 2730              	 .cfi_offset 14,-4
 2731 0002 84B0     	 sub sp,sp,#16
 2732              	.LCFI255:
 2733              	 .cfi_def_cfa_offset 24
 2734 0004 00AF     	 add r7,sp,#0
 2735              	.LCFI256:
 2736              	 .cfi_def_cfa_register 7
 709:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t clock_frequency;
 710:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t p_div;
 711:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t n_div;
 712:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t k2_div;
 713:../Libraries/XMCLib/src/xmc4_scu.c **** 
 714:../Libraries/XMCLib/src/xmc4_scu.c ****   clock_frequency = XMC_SCU_CLOCK_GetSystemPllClockSourceFrequency();
 2737              	 .loc 3 714 0
 2738 0006 FFF7FEFF 	 bl XMC_SCU_CLOCK_GetSystemPllClockSourceFrequency
 2739 000a F860     	 str r0,[r7,#12]
 715:../Libraries/XMCLib/src/xmc4_scu.c ****   if (SCU_PLL->PLLSTAT & SCU_PLL_PLLSTAT_VCOBYST_Msk)
 2740              	 .loc 3 715 0
 2741 000c 1A4B     	 ldr r3,.L190
 2742 000e 1B68     	 ldr r3,[r3]
 2743 0010 03F00103 	 and r3,r3,#1
 2744 0014 002B     	 cmp r3,#0
 2745 0016 09D0     	 beq .L187
 716:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 717:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Prescalar mode - fOSC is the parent*/
 718:../Libraries/XMCLib/src/xmc4_scu.c ****     clock_frequency = (uint32_t)(clock_frequency /
 719:../Libraries/XMCLib/src/xmc4_scu.c ****                                  ((((SCU_PLL->PLLCON1) & SCU_PLL_PLLCON1_K1DIV_Msk) >> SCU_PLL_PLLC
 2746              	 .loc 3 719 0
 2747 0018 174B     	 ldr r3,.L190
 2748 001a 9B68     	 ldr r3,[r3,#8]
 2749 001c 03F07F03 	 and r3,r3,#127
 2750 0020 0133     	 adds r3,r3,#1
 718:../Libraries/XMCLib/src/xmc4_scu.c ****                                  ((((SCU_PLL->PLLCON1) & SCU_PLL_PLLCON1_K1DIV_Msk) >> SCU_PLL_PLLC
 2751              	 .loc 3 718 0
 2752 0022 FA68     	 ldr r2,[r7,#12]
 2753 0024 B2FBF3F3 	 udiv r3,r2,r3
 2754 0028 FB60     	 str r3,[r7,#12]
 2755 002a 1FE0     	 b .L188
 2756              	.L187:
 720:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 721:../Libraries/XMCLib/src/xmc4_scu.c ****   else
 722:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 723:../Libraries/XMCLib/src/xmc4_scu.c ****     p_div  = (uint32_t)((((SCU_PLL->PLLCON1) & SCU_PLL_PLLCON1_PDIV_Msk) >> SCU_PLL_PLLCON1_PDIV_Po
 2757              	 .loc 3 723 0
 2758 002c 124B     	 ldr r3,.L190
 2759 002e 9B68     	 ldr r3,[r3,#8]
 2760 0030 03F07063 	 and r3,r3,#251658240
 2761 0034 1B0E     	 lsrs r3,r3,#24
 2762 0036 0133     	 adds r3,r3,#1
 2763 0038 BB60     	 str r3,[r7,#8]
 724:../Libraries/XMCLib/src/xmc4_scu.c ****     n_div  = (uint32_t)((((SCU_PLL->PLLCON1) & SCU_PLL_PLLCON1_NDIV_Msk) >> SCU_PLL_PLLCON1_NDIV_Po
 2764              	 .loc 3 724 0
 2765 003a 0F4B     	 ldr r3,.L190
 2766 003c 9B68     	 ldr r3,[r3,#8]
 2767 003e 03F4FE43 	 and r3,r3,#32512
 2768 0042 1B0A     	 lsrs r3,r3,#8
 2769 0044 0133     	 adds r3,r3,#1
 2770 0046 7B60     	 str r3,[r7,#4]
 725:../Libraries/XMCLib/src/xmc4_scu.c ****     k2_div = (uint32_t)((((SCU_PLL->PLLCON1) & SCU_PLL_PLLCON1_K2DIV_Msk) >> SCU_PLL_PLLCON1_K2DIV_
 2771              	 .loc 3 725 0
 2772 0048 0B4B     	 ldr r3,.L190
 2773 004a 9B68     	 ldr r3,[r3,#8]
 2774 004c 03F4FE03 	 and r3,r3,#8323072
 2775 0050 1B0C     	 lsrs r3,r3,#16
 2776 0052 0133     	 adds r3,r3,#1
 2777 0054 3B60     	 str r3,[r7]
 726:../Libraries/XMCLib/src/xmc4_scu.c **** 
 727:../Libraries/XMCLib/src/xmc4_scu.c ****     clock_frequency = (clock_frequency * n_div) / (p_div * k2_div);
 2778              	 .loc 3 727 0
 2779 0056 FB68     	 ldr r3,[r7,#12]
 2780 0058 7A68     	 ldr r2,[r7,#4]
 2781 005a 02FB03F2 	 mul r2,r2,r3
 2782 005e BB68     	 ldr r3,[r7,#8]
 2783 0060 3968     	 ldr r1,[r7]
 2784 0062 01FB03F3 	 mul r3,r1,r3
 2785 0066 B2FBF3F3 	 udiv r3,r2,r3
 2786 006a FB60     	 str r3,[r7,#12]
 2787              	.L188:
 728:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 729:../Libraries/XMCLib/src/xmc4_scu.c **** 
 730:../Libraries/XMCLib/src/xmc4_scu.c ****   return (clock_frequency);
 2788              	 .loc 3 730 0
 2789 006c FB68     	 ldr r3,[r7,#12]
 731:../Libraries/XMCLib/src/xmc4_scu.c **** }
 2790              	 .loc 3 731 0
 2791 006e 1846     	 mov r0,r3
 2792 0070 1037     	 adds r7,r7,#16
 2793              	.LCFI257:
 2794              	 .cfi_def_cfa_offset 8
 2795 0072 BD46     	 mov sp,r7
 2796              	.LCFI258:
 2797              	 .cfi_def_cfa_register 13
 2798              	 
 2799 0074 80BD     	 pop {r7,pc}
 2800              	.L191:
 2801 0076 00BF     	 .align 2
 2802              	.L190:
 2803 0078 10470050 	 .word 1342195472
 2804              	 .cfi_endproc
 2805              	.LFE212:
 2807              	 .section .text.XMC_SCU_CLOCK_GetSystemPllClockSourceFrequency,"ax",%progbits
 2808              	 .align 2
 2809              	 .global XMC_SCU_CLOCK_GetSystemPllClockSourceFrequency
 2810              	 .thumb
 2811              	 .thumb_func
 2813              	XMC_SCU_CLOCK_GetSystemPllClockSourceFrequency:
 2814              	.LFB213:
 732:../Libraries/XMCLib/src/xmc4_scu.c **** 
 733:../Libraries/XMCLib/src/xmc4_scu.c **** /**
 734:../Libraries/XMCLib/src/xmc4_scu.c ****  * API to retrieve frequency of System PLL VCO input clock
 735:../Libraries/XMCLib/src/xmc4_scu.c ****  */
 736:../Libraries/XMCLib/src/xmc4_scu.c **** uint32_t XMC_SCU_CLOCK_GetSystemPllClockSourceFrequency(void)
 737:../Libraries/XMCLib/src/xmc4_scu.c **** {
 2815              	 .loc 3 737 0
 2816              	 .cfi_startproc
 2817              	 
 2818              	 
 2819 0000 80B5     	 push {r7,lr}
 2820              	.LCFI259:
 2821              	 .cfi_def_cfa_offset 8
 2822              	 .cfi_offset 7,-8
 2823              	 .cfi_offset 14,-4
 2824 0002 82B0     	 sub sp,sp,#8
 2825              	.LCFI260:
 2826              	 .cfi_def_cfa_offset 16
 2827 0004 00AF     	 add r7,sp,#0
 2828              	.LCFI261:
 2829              	 .cfi_def_cfa_register 7
 738:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t clock_frequency;
 739:../Libraries/XMCLib/src/xmc4_scu.c **** 
 740:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Prescalar mode - fOSC is the parent*/
 741:../Libraries/XMCLib/src/xmc4_scu.c ****   if ((SCU_PLL->PLLCON2 & SCU_PLL_PLLCON2_PINSEL_Msk) == (uint32_t)XMC_SCU_CLOCK_SYSPLLCLKSRC_OSCHP
 2830              	 .loc 3 741 0
 2831 0006 084B     	 ldr r3,.L196
 2832 0008 DB68     	 ldr r3,[r3,#12]
 2833 000a 03F00103 	 and r3,r3,#1
 2834 000e 002B     	 cmp r3,#0
 2835 0010 03D1     	 bne .L193
 742:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 743:../Libraries/XMCLib/src/xmc4_scu.c ****     clock_frequency = OSCHP_GetFrequency();
 2836              	 .loc 3 743 0
 2837 0012 FFF7FEFF 	 bl OSCHP_GetFrequency
 2838 0016 7860     	 str r0,[r7,#4]
 2839 0018 01E0     	 b .L194
 2840              	.L193:
 744:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 745:../Libraries/XMCLib/src/xmc4_scu.c ****   else
 746:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 747:../Libraries/XMCLib/src/xmc4_scu.c ****     clock_frequency = OFI_FREQUENCY;
 2841              	 .loc 3 747 0
 2842 001a 044B     	 ldr r3,.L196+4
 2843 001c 7B60     	 str r3,[r7,#4]
 2844              	.L194:
 748:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 749:../Libraries/XMCLib/src/xmc4_scu.c **** 
 750:../Libraries/XMCLib/src/xmc4_scu.c ****   return (clock_frequency);
 2845              	 .loc 3 750 0
 2846 001e 7B68     	 ldr r3,[r7,#4]
 751:../Libraries/XMCLib/src/xmc4_scu.c **** }
 2847              	 .loc 3 751 0
 2848 0020 1846     	 mov r0,r3
 2849 0022 0837     	 adds r7,r7,#8
 2850              	.LCFI262:
 2851              	 .cfi_def_cfa_offset 8
 2852 0024 BD46     	 mov sp,r7
 2853              	.LCFI263:
 2854              	 .cfi_def_cfa_register 13
 2855              	 
 2856 0026 80BD     	 pop {r7,pc}
 2857              	.L197:
 2858              	 .align 2
 2859              	.L196:
 2860 0028 10470050 	 .word 1342195472
 2861 002c 00366E01 	 .word 24000000
 2862              	 .cfi_endproc
 2863              	.LFE213:
 2865              	 .section .text.XMC_SCU_CLOCK_GetUsbPllClockFrequency,"ax",%progbits
 2866              	 .align 2
 2867              	 .global XMC_SCU_CLOCK_GetUsbPllClockFrequency
 2868              	 .thumb
 2869              	 .thumb_func
 2871              	XMC_SCU_CLOCK_GetUsbPllClockFrequency:
 2872              	.LFB214:
 752:../Libraries/XMCLib/src/xmc4_scu.c **** 
 753:../Libraries/XMCLib/src/xmc4_scu.c **** /*
 754:../Libraries/XMCLib/src/xmc4_scu.c ****  * API to retrieve frequency of USB PLL output clock
 755:../Libraries/XMCLib/src/xmc4_scu.c ****  */
 756:../Libraries/XMCLib/src/xmc4_scu.c **** uint32_t XMC_SCU_CLOCK_GetUsbPllClockFrequency(void)
 757:../Libraries/XMCLib/src/xmc4_scu.c **** {
 2873              	 .loc 3 757 0
 2874              	 .cfi_startproc
 2875              	 
 2876              	 
 2877 0000 80B5     	 push {r7,lr}
 2878              	.LCFI264:
 2879              	 .cfi_def_cfa_offset 8
 2880              	 .cfi_offset 7,-8
 2881              	 .cfi_offset 14,-4
 2882 0002 84B0     	 sub sp,sp,#16
 2883              	.LCFI265:
 2884              	 .cfi_def_cfa_offset 24
 2885 0004 00AF     	 add r7,sp,#0
 2886              	.LCFI266:
 2887              	 .cfi_def_cfa_register 7
 758:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t clock_frequency;
 759:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t n_div;
 760:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t p_div;
 761:../Libraries/XMCLib/src/xmc4_scu.c **** 
 762:../Libraries/XMCLib/src/xmc4_scu.c ****   clock_frequency = OSCHP_GetFrequency();
 2888              	 .loc 3 762 0
 2889 0006 FFF7FEFF 	 bl OSCHP_GetFrequency
 2890 000a F860     	 str r0,[r7,#12]
 763:../Libraries/XMCLib/src/xmc4_scu.c ****   if ((SCU_PLL->USBPLLSTAT & SCU_PLL_USBPLLSTAT_VCOBYST_Msk) == 0U)
 2891              	 .loc 3 763 0
 2892 000c 104B     	 ldr r3,.L201
 2893 000e 1B69     	 ldr r3,[r3,#16]
 2894 0010 03F00103 	 and r3,r3,#1
 2895 0014 002B     	 cmp r3,#0
 2896 0016 16D1     	 bne .L199
 764:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 765:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Normal mode - fVCO is the parent*/
 766:../Libraries/XMCLib/src/xmc4_scu.c ****     n_div = (uint32_t)((((SCU_PLL->USBPLLCON) & SCU_PLL_USBPLLCON_NDIV_Msk) >> SCU_PLL_USBPLLCON_ND
 2897              	 .loc 3 766 0
 2898 0018 0D4B     	 ldr r3,.L201
 2899 001a 5B69     	 ldr r3,[r3,#20]
 2900 001c 03F4FE43 	 and r3,r3,#32512
 2901 0020 1B0A     	 lsrs r3,r3,#8
 2902 0022 0133     	 adds r3,r3,#1
 2903 0024 BB60     	 str r3,[r7,#8]
 767:../Libraries/XMCLib/src/xmc4_scu.c ****     p_div = (uint32_t)((((SCU_PLL->USBPLLCON) & SCU_PLL_USBPLLCON_PDIV_Msk) >> SCU_PLL_USBPLLCON_PD
 2904              	 .loc 3 767 0
 2905 0026 0A4B     	 ldr r3,.L201
 2906 0028 5B69     	 ldr r3,[r3,#20]
 2907 002a 03F07063 	 and r3,r3,#251658240
 2908 002e 1B0E     	 lsrs r3,r3,#24
 2909 0030 0133     	 adds r3,r3,#1
 2910 0032 7B60     	 str r3,[r7,#4]
 768:../Libraries/XMCLib/src/xmc4_scu.c ****     clock_frequency = (uint32_t)((clock_frequency * n_div) / (uint32_t)(p_div * 2UL));
 2911              	 .loc 3 768 0
 2912 0034 FB68     	 ldr r3,[r7,#12]
 2913 0036 BA68     	 ldr r2,[r7,#8]
 2914 0038 02FB03F2 	 mul r2,r2,r3
 2915 003c 7B68     	 ldr r3,[r7,#4]
 2916 003e 5B00     	 lsls r3,r3,#1
 2917 0040 B2FBF3F3 	 udiv r3,r2,r3
 2918 0044 FB60     	 str r3,[r7,#12]
 2919              	.L199:
 769:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 770:../Libraries/XMCLib/src/xmc4_scu.c ****   return (clock_frequency);
 2920              	 .loc 3 770 0
 2921 0046 FB68     	 ldr r3,[r7,#12]
 771:../Libraries/XMCLib/src/xmc4_scu.c **** }
 2922              	 .loc 3 771 0
 2923 0048 1846     	 mov r0,r3
 2924 004a 1037     	 adds r7,r7,#16
 2925              	.LCFI267:
 2926              	 .cfi_def_cfa_offset 8
 2927 004c BD46     	 mov sp,r7
 2928              	.LCFI268:
 2929              	 .cfi_def_cfa_register 13
 2930              	 
 2931 004e 80BD     	 pop {r7,pc}
 2932              	.L202:
 2933              	 .align 2
 2934              	.L201:
 2935 0050 10470050 	 .word 1342195472
 2936              	 .cfi_endproc
 2937              	.LFE214:
 2939              	 .section .text.XMC_SCU_CLOCK_GetCcuClockFrequency,"ax",%progbits
 2940              	 .align 2
 2941              	 .global XMC_SCU_CLOCK_GetCcuClockFrequency
 2942              	 .thumb
 2943              	 .thumb_func
 2945              	XMC_SCU_CLOCK_GetCcuClockFrequency:
 2946              	.LFB215:
 772:../Libraries/XMCLib/src/xmc4_scu.c **** 
 773:../Libraries/XMCLib/src/xmc4_scu.c **** /*
 774:../Libraries/XMCLib/src/xmc4_scu.c ****  * API to retrieve frequency of CCU clock frequency
 775:../Libraries/XMCLib/src/xmc4_scu.c ****  */
 776:../Libraries/XMCLib/src/xmc4_scu.c **** uint32_t XMC_SCU_CLOCK_GetCcuClockFrequency(void)
 777:../Libraries/XMCLib/src/xmc4_scu.c **** {
 2947              	 .loc 3 777 0
 2948              	 .cfi_startproc
 2949              	 
 2950              	 
 2951 0000 80B5     	 push {r7,lr}
 2952              	.LCFI269:
 2953              	 .cfi_def_cfa_offset 8
 2954              	 .cfi_offset 7,-8
 2955              	 .cfi_offset 14,-4
 2956 0002 82B0     	 sub sp,sp,#8
 2957              	.LCFI270:
 2958              	 .cfi_def_cfa_offset 16
 2959 0004 00AF     	 add r7,sp,#0
 2960              	.LCFI271:
 2961              	 .cfi_def_cfa_register 7
 778:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t frequency = 0UL;
 2962              	 .loc 3 778 0
 2963 0006 0023     	 movs r3,#0
 2964 0008 7B60     	 str r3,[r7,#4]
 779:../Libraries/XMCLib/src/xmc4_scu.c ****   frequency = XMC_SCU_CLOCK_GetSystemClockFrequency();
 2965              	 .loc 3 779 0
 2966 000a FFF7FEFF 	 bl XMC_SCU_CLOCK_GetSystemClockFrequency
 2967 000e 7860     	 str r0,[r7,#4]
 780:../Libraries/XMCLib/src/xmc4_scu.c **** 
 781:../Libraries/XMCLib/src/xmc4_scu.c ****   return (uint32_t)(frequency >> ((uint32_t)((SCU_CLK->CCUCLKCR & SCU_CLK_CCUCLKCR_CCUDIV_Msk) >>
 2968              	 .loc 3 781 0
 2969 0010 054B     	 ldr r3,.L205
 2970 0012 1B6A     	 ldr r3,[r3,#32]
 2971 0014 03F00103 	 and r3,r3,#1
 2972 0018 7A68     	 ldr r2,[r7,#4]
 2973 001a 22FA03F3 	 lsr r3,r2,r3
 782:../Libraries/XMCLib/src/xmc4_scu.c ****                                   SCU_CLK_CCUCLKCR_CCUDIV_Pos)));
 783:../Libraries/XMCLib/src/xmc4_scu.c **** }
 2974              	 .loc 3 783 0
 2975 001e 1846     	 mov r0,r3
 2976 0020 0837     	 adds r7,r7,#8
 2977              	.LCFI272:
 2978              	 .cfi_def_cfa_offset 8
 2979 0022 BD46     	 mov sp,r7
 2980              	.LCFI273:
 2981              	 .cfi_def_cfa_register 13
 2982              	 
 2983 0024 80BD     	 pop {r7,pc}
 2984              	.L206:
 2985 0026 00BF     	 .align 2
 2986              	.L205:
 2987 0028 00460050 	 .word 1342195200
 2988              	 .cfi_endproc
 2989              	.LFE215:
 2991              	 .section .text.XMC_SCU_CLOCK_GetUsbClockFrequency,"ax",%progbits
 2992              	 .align 2
 2993              	 .global XMC_SCU_CLOCK_GetUsbClockFrequency
 2994              	 .thumb
 2995              	 .thumb_func
 2997              	XMC_SCU_CLOCK_GetUsbClockFrequency:
 2998              	.LFB216:
 784:../Libraries/XMCLib/src/xmc4_scu.c **** 
 785:../Libraries/XMCLib/src/xmc4_scu.c **** /*
 786:../Libraries/XMCLib/src/xmc4_scu.c ****  * API to retrieve USB and SDMMC clock frequency
 787:../Libraries/XMCLib/src/xmc4_scu.c ****  */
 788:../Libraries/XMCLib/src/xmc4_scu.c **** uint32_t XMC_SCU_CLOCK_GetUsbClockFrequency(void)
 789:../Libraries/XMCLib/src/xmc4_scu.c **** {
 2999              	 .loc 3 789 0
 3000              	 .cfi_startproc
 3001              	 
 3002              	 
 3003 0000 80B5     	 push {r7,lr}
 3004              	.LCFI274:
 3005              	 .cfi_def_cfa_offset 8
 3006              	 .cfi_offset 7,-8
 3007              	 .cfi_offset 14,-4
 3008 0002 82B0     	 sub sp,sp,#8
 3009              	.LCFI275:
 3010              	 .cfi_def_cfa_offset 16
 3011 0004 00AF     	 add r7,sp,#0
 3012              	.LCFI276:
 3013              	 .cfi_def_cfa_register 7
 790:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t frequency = 0UL;
 3014              	 .loc 3 790 0
 3015 0006 0023     	 movs r3,#0
 3016 0008 7B60     	 str r3,[r7,#4]
 791:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_SCU_CLOCK_USBCLKSRC_t clksrc;
 792:../Libraries/XMCLib/src/xmc4_scu.c **** 
 793:../Libraries/XMCLib/src/xmc4_scu.c ****   clksrc = XMC_SCU_CLOCK_GetUsbClockSource();
 3017              	 .loc 3 793 0
 3018 000a FFF7FEFF 	 bl XMC_SCU_CLOCK_GetUsbClockSource
 3019 000e 3860     	 str r0,[r7]
 794:../Libraries/XMCLib/src/xmc4_scu.c **** 
 795:../Libraries/XMCLib/src/xmc4_scu.c ****   if (clksrc == XMC_SCU_CLOCK_USBCLKSRC_SYSPLL)
 3020              	 .loc 3 795 0
 3021 0010 3B68     	 ldr r3,[r7]
 3022 0012 B3F5803F 	 cmp r3,#65536
 3023 0016 03D1     	 bne .L208
 796:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 797:../Libraries/XMCLib/src/xmc4_scu.c ****     frequency = XMC_SCU_CLOCK_GetSystemPllClockFrequency();
 3024              	 .loc 3 797 0
 3025 0018 FFF7FEFF 	 bl XMC_SCU_CLOCK_GetSystemPllClockFrequency
 3026 001c 7860     	 str r0,[r7,#4]
 3027 001e 05E0     	 b .L209
 3028              	.L208:
 798:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 799:../Libraries/XMCLib/src/xmc4_scu.c ****   else if (clksrc == XMC_SCU_CLOCK_USBCLKSRC_USBPLL)
 3029              	 .loc 3 799 0
 3030 0020 3B68     	 ldr r3,[r7]
 3031 0022 002B     	 cmp r3,#0
 3032 0024 02D1     	 bne .L209
 800:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 801:../Libraries/XMCLib/src/xmc4_scu.c ****     frequency = XMC_SCU_CLOCK_GetUsbPllClockFrequency();
 3033              	 .loc 3 801 0
 3034 0026 FFF7FEFF 	 bl XMC_SCU_CLOCK_GetUsbPllClockFrequency
 3035 002a 7860     	 str r0,[r7,#4]
 3036              	.L209:
 802:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 803:../Libraries/XMCLib/src/xmc4_scu.c ****   else
 804:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 805:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 806:../Libraries/XMCLib/src/xmc4_scu.c **** 
 807:../Libraries/XMCLib/src/xmc4_scu.c ****   return (uint32_t)(frequency / (((SCU_CLK->USBCLKCR & SCU_CLK_USBCLKCR_USBDIV_Msk) >>
 3037              	 .loc 3 807 0
 3038 002c 054B     	 ldr r3,.L211
 3039 002e 9B69     	 ldr r3,[r3,#24]
 3040 0030 03F00703 	 and r3,r3,#7
 808:../Libraries/XMCLib/src/xmc4_scu.c ****                                   SCU_CLK_USBCLKCR_USBDIV_Pos) + 1UL));
 3041              	 .loc 3 808 0
 3042 0034 0133     	 adds r3,r3,#1
 807:../Libraries/XMCLib/src/xmc4_scu.c ****                                   SCU_CLK_USBCLKCR_USBDIV_Pos) + 1UL));
 3043              	 .loc 3 807 0
 3044 0036 7A68     	 ldr r2,[r7,#4]
 3045 0038 B2FBF3F3 	 udiv r3,r2,r3
 809:../Libraries/XMCLib/src/xmc4_scu.c **** }
 3046              	 .loc 3 809 0
 3047 003c 1846     	 mov r0,r3
 3048 003e 0837     	 adds r7,r7,#8
 3049              	.LCFI277:
 3050              	 .cfi_def_cfa_offset 8
 3051 0040 BD46     	 mov sp,r7
 3052              	.LCFI278:
 3053              	 .cfi_def_cfa_register 13
 3054              	 
 3055 0042 80BD     	 pop {r7,pc}
 3056              	.L212:
 3057              	 .align 2
 3058              	.L211:
 3059 0044 00460050 	 .word 1342195200
 3060              	 .cfi_endproc
 3061              	.LFE216:
 3063              	 .section .text.XMC_SCU_CLOCK_GetWdtClockFrequency,"ax",%progbits
 3064              	 .align 2
 3065              	 .global XMC_SCU_CLOCK_GetWdtClockFrequency
 3066              	 .thumb
 3067              	 .thumb_func
 3069              	XMC_SCU_CLOCK_GetWdtClockFrequency:
 3070              	.LFB217:
 810:../Libraries/XMCLib/src/xmc4_scu.c **** 
 811:../Libraries/XMCLib/src/xmc4_scu.c **** #if defined(EBU)
 812:../Libraries/XMCLib/src/xmc4_scu.c **** /*
 813:../Libraries/XMCLib/src/xmc4_scu.c ****  * API to retrieve EBU clock frequency
 814:../Libraries/XMCLib/src/xmc4_scu.c ****  */
 815:../Libraries/XMCLib/src/xmc4_scu.c **** uint32_t XMC_SCU_CLOCK_GetEbuClockFrequency(void)
 816:../Libraries/XMCLib/src/xmc4_scu.c **** {
 817:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t frequency = XMC_SCU_CLOCK_GetSystemPllClockFrequency();
 818:../Libraries/XMCLib/src/xmc4_scu.c **** 
 819:../Libraries/XMCLib/src/xmc4_scu.c ****   return (uint32_t)((frequency / (((SCU_CLK->EBUCLKCR & SCU_CLK_EBUCLKCR_EBUDIV_Msk) >>
 820:../Libraries/XMCLib/src/xmc4_scu.c ****                                    SCU_CLK_EBUCLKCR_EBUDIV_Pos) + 1UL)));
 821:../Libraries/XMCLib/src/xmc4_scu.c **** }
 822:../Libraries/XMCLib/src/xmc4_scu.c **** #endif
 823:../Libraries/XMCLib/src/xmc4_scu.c **** 
 824:../Libraries/XMCLib/src/xmc4_scu.c **** #if defined(ECAT0)
 825:../Libraries/XMCLib/src/xmc4_scu.c **** /*
 826:../Libraries/XMCLib/src/xmc4_scu.c ****  * API to retrieve ECAT clock frequency
 827:../Libraries/XMCLib/src/xmc4_scu.c ****  */
 828:../Libraries/XMCLib/src/xmc4_scu.c **** uint32_t XMC_SCU_CLOCK_GetECATClockFrequency(void)
 829:../Libraries/XMCLib/src/xmc4_scu.c **** {
 830:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t frequency;
 831:../Libraries/XMCLib/src/xmc4_scu.c **** 
 832:../Libraries/XMCLib/src/xmc4_scu.c ****   if ((SCU_CLK->ECATCLKCR & SCU_CLK_ECATCLKCR_ECATSEL_Msk) != 0U)
 833:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 834:../Libraries/XMCLib/src/xmc4_scu.c ****     frequency =  XMC_SCU_CLOCK_GetSystemPllClockFrequency();
 835:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 836:../Libraries/XMCLib/src/xmc4_scu.c ****   else
 837:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 838:../Libraries/XMCLib/src/xmc4_scu.c ****     frequency =  XMC_SCU_CLOCK_GetUsbPllClockFrequency();
 839:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 840:../Libraries/XMCLib/src/xmc4_scu.c **** 
 841:../Libraries/XMCLib/src/xmc4_scu.c ****   return (uint32_t)((frequency / (XMC_SCU_CLOCK_GetECATClockDivider() + 1UL)));
 842:../Libraries/XMCLib/src/xmc4_scu.c **** }
 843:../Libraries/XMCLib/src/xmc4_scu.c **** #endif
 844:../Libraries/XMCLib/src/xmc4_scu.c **** 
 845:../Libraries/XMCLib/src/xmc4_scu.c **** /*
 846:../Libraries/XMCLib/src/xmc4_scu.c ****  * API to retrieve WDT clock frequency
 847:../Libraries/XMCLib/src/xmc4_scu.c ****  */
 848:../Libraries/XMCLib/src/xmc4_scu.c **** uint32_t XMC_SCU_CLOCK_GetWdtClockFrequency(void)
 849:../Libraries/XMCLib/src/xmc4_scu.c **** {
 3071              	 .loc 3 849 0
 3072              	 .cfi_startproc
 3073              	 
 3074              	 
 3075 0000 80B5     	 push {r7,lr}
 3076              	.LCFI279:
 3077              	 .cfi_def_cfa_offset 8
 3078              	 .cfi_offset 7,-8
 3079              	 .cfi_offset 14,-4
 3080 0002 82B0     	 sub sp,sp,#8
 3081              	.LCFI280:
 3082              	 .cfi_def_cfa_offset 16
 3083 0004 00AF     	 add r7,sp,#0
 3084              	.LCFI281:
 3085              	 .cfi_def_cfa_register 7
 850:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t frequency = 0UL;
 3086              	 .loc 3 850 0
 3087 0006 0023     	 movs r3,#0
 3088 0008 7B60     	 str r3,[r7,#4]
 851:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_SCU_CLOCK_WDTCLKSRC_t clksrc;
 852:../Libraries/XMCLib/src/xmc4_scu.c **** 
 853:../Libraries/XMCLib/src/xmc4_scu.c ****   clksrc = XMC_SCU_CLOCK_GetWdtClockSource();
 3089              	 .loc 3 853 0
 3090 000a FFF7FEFF 	 bl XMC_SCU_CLOCK_GetWdtClockSource
 3091 000e 3860     	 str r0,[r7]
 854:../Libraries/XMCLib/src/xmc4_scu.c **** 
 855:../Libraries/XMCLib/src/xmc4_scu.c ****   if (clksrc == XMC_SCU_CLOCK_WDTCLKSRC_PLL)
 3092              	 .loc 3 855 0
 3093 0010 3B68     	 ldr r3,[r7]
 3094 0012 B3F5003F 	 cmp r3,#131072
 3095 0016 03D1     	 bne .L214
 856:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 857:../Libraries/XMCLib/src/xmc4_scu.c ****     frequency = XMC_SCU_CLOCK_GetSystemPllClockFrequency();
 3096              	 .loc 3 857 0
 3097 0018 FFF7FEFF 	 bl XMC_SCU_CLOCK_GetSystemPllClockFrequency
 3098 001c 7860     	 str r0,[r7,#4]
 3099 001e 0CE0     	 b .L215
 3100              	.L214:
 858:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 859:../Libraries/XMCLib/src/xmc4_scu.c ****   else if (clksrc == XMC_SCU_CLOCK_WDTCLKSRC_OFI)
 3101              	 .loc 3 859 0
 3102 0020 3B68     	 ldr r3,[r7]
 3103 0022 002B     	 cmp r3,#0
 3104 0024 02D1     	 bne .L216
 860:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 861:../Libraries/XMCLib/src/xmc4_scu.c ****     frequency = OFI_FREQUENCY;
 3105              	 .loc 3 861 0
 3106 0026 0A4B     	 ldr r3,.L218
 3107 0028 7B60     	 str r3,[r7,#4]
 3108 002a 06E0     	 b .L215
 3109              	.L216:
 862:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 863:../Libraries/XMCLib/src/xmc4_scu.c ****   else if (clksrc == XMC_SCU_CLOCK_WDTCLKSRC_STDBY)
 3110              	 .loc 3 863 0
 3111 002c 3B68     	 ldr r3,[r7]
 3112 002e B3F5803F 	 cmp r3,#65536
 3113 0032 02D1     	 bne .L215
 864:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 865:../Libraries/XMCLib/src/xmc4_scu.c ****     frequency = OSI_FREQUENCY;
 3114              	 .loc 3 865 0
 3115 0034 4FF40043 	 mov r3,#32768
 3116 0038 7B60     	 str r3,[r7,#4]
 3117              	.L215:
 866:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 867:../Libraries/XMCLib/src/xmc4_scu.c ****   else
 868:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 869:../Libraries/XMCLib/src/xmc4_scu.c **** 
 870:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 871:../Libraries/XMCLib/src/xmc4_scu.c **** 
 872:../Libraries/XMCLib/src/xmc4_scu.c ****   return (uint32_t)((frequency / (((SCU_CLK->WDTCLKCR & SCU_CLK_WDTCLKCR_WDTDIV_Msk) >>
 3118              	 .loc 3 872 0
 3119 003a 064B     	 ldr r3,.L218+4
 3120 003c 5B6A     	 ldr r3,[r3,#36]
 3121 003e DBB2     	 uxtb r3,r3
 873:../Libraries/XMCLib/src/xmc4_scu.c ****                                    SCU_CLK_WDTCLKCR_WDTDIV_Pos) + 1UL)));
 3122              	 .loc 3 873 0
 3123 0040 0133     	 adds r3,r3,#1
 872:../Libraries/XMCLib/src/xmc4_scu.c ****                                    SCU_CLK_WDTCLKCR_WDTDIV_Pos) + 1UL)));
 3124              	 .loc 3 872 0
 3125 0042 7A68     	 ldr r2,[r7,#4]
 3126 0044 B2FBF3F3 	 udiv r3,r2,r3
 874:../Libraries/XMCLib/src/xmc4_scu.c **** }
 3127              	 .loc 3 874 0
 3128 0048 1846     	 mov r0,r3
 3129 004a 0837     	 adds r7,r7,#8
 3130              	.LCFI282:
 3131              	 .cfi_def_cfa_offset 8
 3132 004c BD46     	 mov sp,r7
 3133              	.LCFI283:
 3134              	 .cfi_def_cfa_register 13
 3135              	 
 3136 004e 80BD     	 pop {r7,pc}
 3137              	.L219:
 3138              	 .align 2
 3139              	.L218:
 3140 0050 00366E01 	 .word 24000000
 3141 0054 00460050 	 .word 1342195200
 3142              	 .cfi_endproc
 3143              	.LFE217:
 3145              	 .section .text.XMC_SCU_CLOCK_GetExternalOutputClockFrequency,"ax",%progbits
 3146              	 .align 2
 3147              	 .global XMC_SCU_CLOCK_GetExternalOutputClockFrequency
 3148              	 .thumb
 3149              	 .thumb_func
 3151              	XMC_SCU_CLOCK_GetExternalOutputClockFrequency:
 3152              	.LFB218:
 875:../Libraries/XMCLib/src/xmc4_scu.c **** 
 876:../Libraries/XMCLib/src/xmc4_scu.c **** /**
 877:../Libraries/XMCLib/src/xmc4_scu.c ****  * @brief API to retrieve EXTERNAL-OUT clock frequency
 878:../Libraries/XMCLib/src/xmc4_scu.c ****  * @retval Clock frequency
 879:../Libraries/XMCLib/src/xmc4_scu.c ****  */
 880:../Libraries/XMCLib/src/xmc4_scu.c **** uint32_t XMC_SCU_CLOCK_GetExternalOutputClockFrequency(void)
 881:../Libraries/XMCLib/src/xmc4_scu.c **** {
 3153              	 .loc 3 881 0
 3154              	 .cfi_startproc
 3155              	 
 3156              	 
 3157 0000 80B5     	 push {r7,lr}
 3158              	.LCFI284:
 3159              	 .cfi_def_cfa_offset 8
 3160              	 .cfi_offset 7,-8
 3161              	 .cfi_offset 14,-4
 3162 0002 82B0     	 sub sp,sp,#8
 3163              	.LCFI285:
 3164              	 .cfi_def_cfa_offset 16
 3165 0004 00AF     	 add r7,sp,#0
 3166              	.LCFI286:
 3167              	 .cfi_def_cfa_register 7
 882:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t frequency = 0UL;
 3168              	 .loc 3 882 0
 3169 0006 0023     	 movs r3,#0
 3170 0008 7B60     	 str r3,[r7,#4]
 883:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_SCU_CLOCK_EXTOUTCLKSRC_t clksrc;
 884:../Libraries/XMCLib/src/xmc4_scu.c **** 
 885:../Libraries/XMCLib/src/xmc4_scu.c ****   clksrc = XMC_SCU_CLOCK_GetExternalOutputClockSource();
 3171              	 .loc 3 885 0
 3172 000a FFF7FEFF 	 bl XMC_SCU_CLOCK_GetExternalOutputClockSource
 3173 000e 0346     	 mov r3,r0
 3174 0010 FB70     	 strb r3,[r7,#3]
 886:../Libraries/XMCLib/src/xmc4_scu.c **** 
 887:../Libraries/XMCLib/src/xmc4_scu.c ****   if (clksrc == XMC_SCU_CLOCK_EXTOUTCLKSRC_PLL)
 3175              	 .loc 3 887 0
 3176 0012 FB78     	 ldrb r3,[r7,#3]
 3177 0014 032B     	 cmp r3,#3
 3178 0016 0DD1     	 bne .L221
 888:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 889:../Libraries/XMCLib/src/xmc4_scu.c ****     frequency = XMC_SCU_CLOCK_GetSystemPllClockFrequency();
 3179              	 .loc 3 889 0
 3180 0018 FFF7FEFF 	 bl XMC_SCU_CLOCK_GetSystemPllClockFrequency
 3181 001c 7860     	 str r0,[r7,#4]
 890:../Libraries/XMCLib/src/xmc4_scu.c **** 
 891:../Libraries/XMCLib/src/xmc4_scu.c ****     frequency = (uint32_t)((frequency / ((((SCU_CLK->EXTCLKCR) & SCU_CLK_EXTCLKCR_ECKDIV_Msk) >>
 3182              	 .loc 3 891 0
 3183 001e 134B     	 ldr r3,.L225
 3184 0020 9A6A     	 ldr r2,[r3,#40]
 3185 0022 134B     	 ldr r3,.L225+4
 3186 0024 1340     	 ands r3,r3,r2
 3187 0026 1B0C     	 lsrs r3,r3,#16
 892:../Libraries/XMCLib/src/xmc4_scu.c ****                                           SCU_CLK_EXTCLKCR_ECKDIV_Pos) + 1UL)));
 3188              	 .loc 3 892 0
 3189 0028 0133     	 adds r3,r3,#1
 891:../Libraries/XMCLib/src/xmc4_scu.c ****                                           SCU_CLK_EXTCLKCR_ECKDIV_Pos) + 1UL)));
 3190              	 .loc 3 891 0
 3191 002a 7A68     	 ldr r2,[r7,#4]
 3192 002c B2FBF3F3 	 udiv r3,r2,r3
 3193 0030 7B60     	 str r3,[r7,#4]
 3194 0032 16E0     	 b .L222
 3195              	.L221:
 893:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 894:../Libraries/XMCLib/src/xmc4_scu.c ****   else if (clksrc == XMC_SCU_CLOCK_EXTOUTCLKSRC_SYS)
 3196              	 .loc 3 894 0
 3197 0034 FB78     	 ldrb r3,[r7,#3]
 3198 0036 002B     	 cmp r3,#0
 3199 0038 03D1     	 bne .L223
 895:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 896:../Libraries/XMCLib/src/xmc4_scu.c ****     frequency = XMC_SCU_CLOCK_GetSystemClockFrequency();
 3200              	 .loc 3 896 0
 3201 003a FFF7FEFF 	 bl XMC_SCU_CLOCK_GetSystemClockFrequency
 3202 003e 7860     	 str r0,[r7,#4]
 3203 0040 0FE0     	 b .L222
 3204              	.L223:
 897:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 898:../Libraries/XMCLib/src/xmc4_scu.c ****   else if (clksrc == XMC_SCU_CLOCK_EXTOUTCLKSRC_USB)
 3205              	 .loc 3 898 0
 3206 0042 FB78     	 ldrb r3,[r7,#3]
 3207 0044 022B     	 cmp r3,#2
 3208 0046 0CD1     	 bne .L222
 899:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 900:../Libraries/XMCLib/src/xmc4_scu.c ****     frequency = XMC_SCU_CLOCK_GetUsbPllClockFrequency();
 3209              	 .loc 3 900 0
 3210 0048 FFF7FEFF 	 bl XMC_SCU_CLOCK_GetUsbPllClockFrequency
 3211 004c 7860     	 str r0,[r7,#4]
 901:../Libraries/XMCLib/src/xmc4_scu.c **** 
 902:../Libraries/XMCLib/src/xmc4_scu.c ****     frequency = (uint32_t)((frequency / ((((SCU_CLK->EXTCLKCR) & SCU_CLK_EXTCLKCR_ECKDIV_Msk) >>
 3212              	 .loc 3 902 0
 3213 004e 074B     	 ldr r3,.L225
 3214 0050 9A6A     	 ldr r2,[r3,#40]
 3215 0052 074B     	 ldr r3,.L225+4
 3216 0054 1340     	 ands r3,r3,r2
 3217 0056 1B0C     	 lsrs r3,r3,#16
 903:../Libraries/XMCLib/src/xmc4_scu.c ****                                           SCU_CLK_EXTCLKCR_ECKDIV_Pos) + 1UL)));
 3218              	 .loc 3 903 0
 3219 0058 0133     	 adds r3,r3,#1
 902:../Libraries/XMCLib/src/xmc4_scu.c ****                                           SCU_CLK_EXTCLKCR_ECKDIV_Pos) + 1UL)));
 3220              	 .loc 3 902 0
 3221 005a 7A68     	 ldr r2,[r7,#4]
 3222 005c B2FBF3F3 	 udiv r3,r2,r3
 3223 0060 7B60     	 str r3,[r7,#4]
 3224              	.L222:
 904:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 905:../Libraries/XMCLib/src/xmc4_scu.c ****   else
 906:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 907:../Libraries/XMCLib/src/xmc4_scu.c **** 
 908:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 909:../Libraries/XMCLib/src/xmc4_scu.c **** 
 910:../Libraries/XMCLib/src/xmc4_scu.c ****   return (frequency);
 3225              	 .loc 3 910 0
 3226 0062 7B68     	 ldr r3,[r7,#4]
 911:../Libraries/XMCLib/src/xmc4_scu.c **** }
 3227              	 .loc 3 911 0
 3228 0064 1846     	 mov r0,r3
 3229 0066 0837     	 adds r7,r7,#8
 3230              	.LCFI287:
 3231              	 .cfi_def_cfa_offset 8
 3232 0068 BD46     	 mov sp,r7
 3233              	.LCFI288:
 3234              	 .cfi_def_cfa_register 13
 3235              	 
 3236 006a 80BD     	 pop {r7,pc}
 3237              	.L226:
 3238              	 .align 2
 3239              	.L225:
 3240 006c 00460050 	 .word 1342195200
 3241 0070 0000FF01 	 .word 33488896
 3242              	 .cfi_endproc
 3243              	.LFE218:
 3245              	 .section .text.XMC_SCU_CLOCK_GetPeripheralClockFrequency,"ax",%progbits
 3246              	 .align 2
 3247              	 .global XMC_SCU_CLOCK_GetPeripheralClockFrequency
 3248              	 .thumb
 3249              	 .thumb_func
 3251              	XMC_SCU_CLOCK_GetPeripheralClockFrequency:
 3252              	.LFB219:
 912:../Libraries/XMCLib/src/xmc4_scu.c **** 
 913:../Libraries/XMCLib/src/xmc4_scu.c **** /*
 914:../Libraries/XMCLib/src/xmc4_scu.c ****  * API to retrieve clock frequency of peripherals on the peripheral bus using a shared functional c
 915:../Libraries/XMCLib/src/xmc4_scu.c ****  */
 916:../Libraries/XMCLib/src/xmc4_scu.c **** uint32_t XMC_SCU_CLOCK_GetPeripheralClockFrequency(void)
 917:../Libraries/XMCLib/src/xmc4_scu.c **** {
 3253              	 .loc 3 917 0
 3254              	 .cfi_startproc
 3255              	 
 3256              	 
 3257 0000 80B5     	 push {r7,lr}
 3258              	.LCFI289:
 3259              	 .cfi_def_cfa_offset 8
 3260              	 .cfi_offset 7,-8
 3261              	 .cfi_offset 14,-4
 3262 0002 00AF     	 add r7,sp,#0
 3263              	.LCFI290:
 3264              	 .cfi_def_cfa_register 7
 918:../Libraries/XMCLib/src/xmc4_scu.c ****   return (uint32_t)(XMC_SCU_CLOCK_GetCpuClockFrequency() >>
 3265              	 .loc 3 918 0
 3266 0004 FFF7FEFF 	 bl XMC_SCU_CLOCK_GetCpuClockFrequency
 3267 0008 0246     	 mov r2,r0
 919:../Libraries/XMCLib/src/xmc4_scu.c ****                     ((SCU_CLK->PBCLKCR & SCU_CLK_PBCLKCR_PBDIV_Msk) >> SCU_CLK_PBCLKCR_PBDIV_Pos));
 3268              	 .loc 3 919 0
 3269 000a 044B     	 ldr r3,.L229
 3270 000c 5B69     	 ldr r3,[r3,#20]
 918:../Libraries/XMCLib/src/xmc4_scu.c ****   return (uint32_t)(XMC_SCU_CLOCK_GetCpuClockFrequency() >>
 3271              	 .loc 3 918 0
 3272 000e 03F00103 	 and r3,r3,#1
 3273 0012 22FA03F3 	 lsr r3,r2,r3
 920:../Libraries/XMCLib/src/xmc4_scu.c **** }
 3274              	 .loc 3 920 0
 3275 0016 1846     	 mov r0,r3
 3276 0018 80BD     	 pop {r7,pc}
 3277              	.L230:
 3278 001a 00BF     	 .align 2
 3279              	.L229:
 3280 001c 00460050 	 .word 1342195200
 3281              	 .cfi_endproc
 3282              	.LFE219:
 3284              	 .section .text.XMC_SCU_CLOCK_SetSystemClockSource,"ax",%progbits
 3285              	 .align 2
 3286              	 .global XMC_SCU_CLOCK_SetSystemClockSource
 3287              	 .thumb
 3288              	 .thumb_func
 3290              	XMC_SCU_CLOCK_SetSystemClockSource:
 3291              	.LFB220:
 921:../Libraries/XMCLib/src/xmc4_scu.c **** 
 922:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to select fSYS */
 923:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_SetSystemClockSource(const XMC_SCU_CLOCK_SYSCLKSRC_t source)
 924:../Libraries/XMCLib/src/xmc4_scu.c **** {
 3292              	 .loc 3 924 0
 3293              	 .cfi_startproc
 3294              	 
 3295              	 
 3296              	 
 3297 0000 80B4     	 push {r7}
 3298              	.LCFI291:
 3299              	 .cfi_def_cfa_offset 4
 3300              	 .cfi_offset 7,-4
 3301 0002 83B0     	 sub sp,sp,#12
 3302              	.LCFI292:
 3303              	 .cfi_def_cfa_offset 16
 3304 0004 00AF     	 add r7,sp,#0
 3305              	.LCFI293:
 3306              	 .cfi_def_cfa_register 7
 3307 0006 7860     	 str r0,[r7,#4]
 925:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_CLK->SYSCLKCR = (SCU_CLK->SYSCLKCR & ((uint32_t)~SCU_CLK_SYSCLKCR_SYSSEL_Msk)) |
 3308              	 .loc 3 925 0
 3309 0008 0649     	 ldr r1,.L232
 3310 000a 064B     	 ldr r3,.L232
 3311 000c DB68     	 ldr r3,[r3,#12]
 3312 000e 23F48032 	 bic r2,r3,#65536
 3313 0012 7B68     	 ldr r3,[r7,#4]
 3314 0014 1343     	 orrs r3,r3,r2
 3315 0016 CB60     	 str r3,[r1,#12]
 926:../Libraries/XMCLib/src/xmc4_scu.c ****                       ((uint32_t)source);
 927:../Libraries/XMCLib/src/xmc4_scu.c **** }
 3316              	 .loc 3 927 0
 3317 0018 0C37     	 adds r7,r7,#12
 3318              	.LCFI294:
 3319              	 .cfi_def_cfa_offset 4
 3320 001a BD46     	 mov sp,r7
 3321              	.LCFI295:
 3322              	 .cfi_def_cfa_register 13
 3323              	 
 3324 001c 5DF8047B 	 ldr r7,[sp],#4
 3325              	.LCFI296:
 3326              	 .cfi_restore 7
 3327              	 .cfi_def_cfa_offset 0
 3328 0020 7047     	 bx lr
 3329              	.L233:
 3330 0022 00BF     	 .align 2
 3331              	.L232:
 3332 0024 00460050 	 .word 1342195200
 3333              	 .cfi_endproc
 3334              	.LFE220:
 3336              	 .section .text.XMC_SCU_CLOCK_SetUsbClockSource,"ax",%progbits
 3337              	 .align 2
 3338              	 .global XMC_SCU_CLOCK_SetUsbClockSource
 3339              	 .thumb
 3340              	 .thumb_func
 3342              	XMC_SCU_CLOCK_SetUsbClockSource:
 3343              	.LFB221:
 928:../Libraries/XMCLib/src/xmc4_scu.c **** 
 929:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to select fUSB */
 930:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_SetUsbClockSource(const XMC_SCU_CLOCK_USBCLKSRC_t source)
 931:../Libraries/XMCLib/src/xmc4_scu.c **** {
 3344              	 .loc 3 931 0
 3345              	 .cfi_startproc
 3346              	 
 3347              	 
 3348              	 
 3349 0000 80B4     	 push {r7}
 3350              	.LCFI297:
 3351              	 .cfi_def_cfa_offset 4
 3352              	 .cfi_offset 7,-4
 3353 0002 83B0     	 sub sp,sp,#12
 3354              	.LCFI298:
 3355              	 .cfi_def_cfa_offset 16
 3356 0004 00AF     	 add r7,sp,#0
 3357              	.LCFI299:
 3358              	 .cfi_def_cfa_register 7
 3359 0006 7860     	 str r0,[r7,#4]
 932:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_CLK->USBCLKCR = (SCU_CLK->USBCLKCR & ((uint32_t)~SCU_CLK_USBCLKCR_USBSEL_Msk)) |
 3360              	 .loc 3 932 0
 3361 0008 0649     	 ldr r1,.L235
 3362 000a 064B     	 ldr r3,.L235
 3363 000c 9B69     	 ldr r3,[r3,#24]
 3364 000e 23F48032 	 bic r2,r3,#65536
 3365 0012 7B68     	 ldr r3,[r7,#4]
 3366 0014 1343     	 orrs r3,r3,r2
 3367 0016 8B61     	 str r3,[r1,#24]
 933:../Libraries/XMCLib/src/xmc4_scu.c ****                       ((uint32_t)source);
 934:../Libraries/XMCLib/src/xmc4_scu.c **** }
 3368              	 .loc 3 934 0
 3369 0018 0C37     	 adds r7,r7,#12
 3370              	.LCFI300:
 3371              	 .cfi_def_cfa_offset 4
 3372 001a BD46     	 mov sp,r7
 3373              	.LCFI301:
 3374              	 .cfi_def_cfa_register 13
 3375              	 
 3376 001c 5DF8047B 	 ldr r7,[sp],#4
 3377              	.LCFI302:
 3378              	 .cfi_restore 7
 3379              	 .cfi_def_cfa_offset 0
 3380 0020 7047     	 bx lr
 3381              	.L236:
 3382 0022 00BF     	 .align 2
 3383              	.L235:
 3384 0024 00460050 	 .word 1342195200
 3385              	 .cfi_endproc
 3386              	.LFE221:
 3388              	 .section .text.XMC_SCU_CLOCK_SetWdtClockSource,"ax",%progbits
 3389              	 .align 2
 3390              	 .global XMC_SCU_CLOCK_SetWdtClockSource
 3391              	 .thumb
 3392              	 .thumb_func
 3394              	XMC_SCU_CLOCK_SetWdtClockSource:
 3395              	.LFB222:
 935:../Libraries/XMCLib/src/xmc4_scu.c **** 
 936:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to select fWDT */
 937:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_SetWdtClockSource(const XMC_SCU_CLOCK_WDTCLKSRC_t source)
 938:../Libraries/XMCLib/src/xmc4_scu.c **** {
 3396              	 .loc 3 938 0
 3397              	 .cfi_startproc
 3398              	 
 3399              	 
 3400              	 
 3401 0000 80B4     	 push {r7}
 3402              	.LCFI303:
 3403              	 .cfi_def_cfa_offset 4
 3404              	 .cfi_offset 7,-4
 3405 0002 83B0     	 sub sp,sp,#12
 3406              	.LCFI304:
 3407              	 .cfi_def_cfa_offset 16
 3408 0004 00AF     	 add r7,sp,#0
 3409              	.LCFI305:
 3410              	 .cfi_def_cfa_register 7
 3411 0006 7860     	 str r0,[r7,#4]
 939:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_CLK->WDTCLKCR = (SCU_CLK->WDTCLKCR & ((uint32_t)~SCU_CLK_WDTCLKCR_WDTSEL_Msk)) |
 3412              	 .loc 3 939 0
 3413 0008 0649     	 ldr r1,.L238
 3414 000a 064B     	 ldr r3,.L238
 3415 000c 5B6A     	 ldr r3,[r3,#36]
 3416 000e 23F44032 	 bic r2,r3,#196608
 3417 0012 7B68     	 ldr r3,[r7,#4]
 3418 0014 1343     	 orrs r3,r3,r2
 3419 0016 4B62     	 str r3,[r1,#36]
 940:../Libraries/XMCLib/src/xmc4_scu.c ****                       ((uint32_t)source);
 941:../Libraries/XMCLib/src/xmc4_scu.c **** }
 3420              	 .loc 3 941 0
 3421 0018 0C37     	 adds r7,r7,#12
 3422              	.LCFI306:
 3423              	 .cfi_def_cfa_offset 4
 3424 001a BD46     	 mov sp,r7
 3425              	.LCFI307:
 3426              	 .cfi_def_cfa_register 13
 3427              	 
 3428 001c 5DF8047B 	 ldr r7,[sp],#4
 3429              	.LCFI308:
 3430              	 .cfi_restore 7
 3431              	 .cfi_def_cfa_offset 0
 3432 0020 7047     	 bx lr
 3433              	.L239:
 3434 0022 00BF     	 .align 2
 3435              	.L238:
 3436 0024 00460050 	 .word 1342195200
 3437              	 .cfi_endproc
 3438              	.LFE222:
 3440              	 .section .text.XMC_SCU_CLOCK_SetExternalOutputClockSource,"ax",%progbits
 3441              	 .align 2
 3442              	 .global XMC_SCU_CLOCK_SetExternalOutputClockSource
 3443              	 .thumb
 3444              	 .thumb_func
 3446              	XMC_SCU_CLOCK_SetExternalOutputClockSource:
 3447              	.LFB223:
 942:../Libraries/XMCLib/src/xmc4_scu.c **** 
 943:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to select fEXT */
 944:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_SetExternalOutputClockSource(const XMC_SCU_CLOCK_EXTOUTCLKSRC_t source)
 945:../Libraries/XMCLib/src/xmc4_scu.c **** {
 3448              	 .loc 3 945 0
 3449              	 .cfi_startproc
 3450              	 
 3451              	 
 3452              	 
 3453 0000 80B4     	 push {r7}
 3454              	.LCFI309:
 3455              	 .cfi_def_cfa_offset 4
 3456              	 .cfi_offset 7,-4
 3457 0002 83B0     	 sub sp,sp,#12
 3458              	.LCFI310:
 3459              	 .cfi_def_cfa_offset 16
 3460 0004 00AF     	 add r7,sp,#0
 3461              	.LCFI311:
 3462              	 .cfi_def_cfa_register 7
 3463 0006 0346     	 mov r3,r0
 3464 0008 FB71     	 strb r3,[r7,#7]
 946:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_CLK->EXTCLKCR = (SCU_CLK->EXTCLKCR & ((uint32_t)~SCU_CLK_EXTCLKCR_ECKSEL_Msk)) |
 3465              	 .loc 3 946 0
 3466 000a 0649     	 ldr r1,.L241
 3467 000c 054B     	 ldr r3,.L241
 3468 000e 9B6A     	 ldr r3,[r3,#40]
 3469 0010 23F00702 	 bic r2,r3,#7
 947:../Libraries/XMCLib/src/xmc4_scu.c ****                       ((uint32_t)source);
 3470              	 .loc 3 947 0
 3471 0014 FB79     	 ldrb r3,[r7,#7]
 946:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_CLK->EXTCLKCR = (SCU_CLK->EXTCLKCR & ((uint32_t)~SCU_CLK_EXTCLKCR_ECKSEL_Msk)) |
 3472              	 .loc 3 946 0
 3473 0016 1343     	 orrs r3,r3,r2
 3474 0018 8B62     	 str r3,[r1,#40]
 948:../Libraries/XMCLib/src/xmc4_scu.c **** }
 3475              	 .loc 3 948 0
 3476 001a 0C37     	 adds r7,r7,#12
 3477              	.LCFI312:
 3478              	 .cfi_def_cfa_offset 4
 3479 001c BD46     	 mov sp,r7
 3480              	.LCFI313:
 3481              	 .cfi_def_cfa_register 13
 3482              	 
 3483 001e 5DF8047B 	 ldr r7,[sp],#4
 3484              	.LCFI314:
 3485              	 .cfi_restore 7
 3486              	 .cfi_def_cfa_offset 0
 3487 0022 7047     	 bx lr
 3488              	.L242:
 3489              	 .align 2
 3490              	.L241:
 3491 0024 00460050 	 .word 1342195200
 3492              	 .cfi_endproc
 3493              	.LFE223:
 3495              	 .section .text.XMC_SCU_CLOCK_SetSystemPllClockSource,"ax",%progbits
 3496              	 .align 2
 3497              	 .global XMC_SCU_CLOCK_SetSystemPllClockSource
 3498              	 .thumb
 3499              	 .thumb_func
 3501              	XMC_SCU_CLOCK_SetSystemPllClockSource:
 3502              	.LFB224:
 949:../Libraries/XMCLib/src/xmc4_scu.c **** 
 950:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to select fPLL */
 951:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_SetSystemPllClockSource(const XMC_SCU_CLOCK_SYSPLLCLKSRC_t source)
 952:../Libraries/XMCLib/src/xmc4_scu.c **** {
 3503              	 .loc 3 952 0
 3504              	 .cfi_startproc
 3505              	 
 3506              	 
 3507              	 
 3508 0000 80B4     	 push {r7}
 3509              	.LCFI315:
 3510              	 .cfi_def_cfa_offset 4
 3511              	 .cfi_offset 7,-4
 3512 0002 83B0     	 sub sp,sp,#12
 3513              	.LCFI316:
 3514              	 .cfi_def_cfa_offset 16
 3515 0004 00AF     	 add r7,sp,#0
 3516              	.LCFI317:
 3517              	 .cfi_def_cfa_register 7
 3518 0006 0346     	 mov r3,r0
 3519 0008 FB80     	 strh r3,[r7,#6]
 953:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Check input clock */
 954:../Libraries/XMCLib/src/xmc4_scu.c ****   if (source == XMC_SCU_CLOCK_SYSPLLCLKSRC_OSCHP) /* Select PLLClockSource */
 3520              	 .loc 3 954 0
 3521 000a FB88     	 ldrh r3,[r7,#6]
 3522 000c 002B     	 cmp r3,#0
 3523 000e 08D1     	 bne .L244
 955:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 956:../Libraries/XMCLib/src/xmc4_scu.c ****     SCU_PLL->PLLCON2 &= (uint32_t)~(SCU_PLL_PLLCON2_PINSEL_Msk | SCU_PLL_PLLCON2_K1INSEL_Msk);
 3524              	 .loc 3 956 0
 3525 0010 0A4A     	 ldr r2,.L246
 3526 0012 0A4B     	 ldr r3,.L246
 3527 0014 DB68     	 ldr r3,[r3,#12]
 3528 0016 23F48073 	 bic r3,r3,#256
 3529 001a 23F00103 	 bic r3,r3,#1
 3530 001e D360     	 str r3,[r2,#12]
 3531 0020 07E0     	 b .L243
 3532              	.L244:
 957:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 958:../Libraries/XMCLib/src/xmc4_scu.c ****   else
 959:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 960:../Libraries/XMCLib/src/xmc4_scu.c ****     SCU_PLL->PLLCON2 |= (uint32_t)(SCU_PLL_PLLCON2_PINSEL_Msk | SCU_PLL_PLLCON2_K1INSEL_Msk);
 3533              	 .loc 3 960 0
 3534 0022 064A     	 ldr r2,.L246
 3535 0024 054B     	 ldr r3,.L246
 3536 0026 DB68     	 ldr r3,[r3,#12]
 3537 0028 43F48073 	 orr r3,r3,#256
 3538 002c 43F00103 	 orr r3,r3,#1
 3539 0030 D360     	 str r3,[r2,#12]
 3540              	.L243:
 961:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 962:../Libraries/XMCLib/src/xmc4_scu.c **** }
 3541              	 .loc 3 962 0
 3542 0032 0C37     	 adds r7,r7,#12
 3543              	.LCFI318:
 3544              	 .cfi_def_cfa_offset 4
 3545 0034 BD46     	 mov sp,r7
 3546              	.LCFI319:
 3547              	 .cfi_def_cfa_register 13
 3548              	 
 3549 0036 5DF8047B 	 ldr r7,[sp],#4
 3550              	.LCFI320:
 3551              	 .cfi_restore 7
 3552              	 .cfi_def_cfa_offset 0
 3553 003a 7047     	 bx lr
 3554              	.L247:
 3555              	 .align 2
 3556              	.L246:
 3557 003c 10470050 	 .word 1342195472
 3558              	 .cfi_endproc
 3559              	.LFE224:
 3561              	 .section .text.XMC_SCU_HIB_SetRtcClockSource,"ax",%progbits
 3562              	 .align 2
 3563              	 .global XMC_SCU_HIB_SetRtcClockSource
 3564              	 .thumb
 3565              	 .thumb_func
 3567              	XMC_SCU_HIB_SetRtcClockSource:
 3568              	.LFB225:
 963:../Libraries/XMCLib/src/xmc4_scu.c **** 
 964:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to select fRTC */
 965:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_SetRtcClockSource(const XMC_SCU_HIB_RTCCLKSRC_t source)
 966:../Libraries/XMCLib/src/xmc4_scu.c **** {
 3569              	 .loc 3 966 0
 3570              	 .cfi_startproc
 3571              	 
 3572              	 
 3573              	 
 3574 0000 80B4     	 push {r7}
 3575              	.LCFI321:
 3576              	 .cfi_def_cfa_offset 4
 3577              	 .cfi_offset 7,-4
 3578 0002 83B0     	 sub sp,sp,#12
 3579              	.LCFI322:
 3580              	 .cfi_def_cfa_offset 16
 3581 0004 00AF     	 add r7,sp,#0
 3582              	.LCFI323:
 3583              	 .cfi_def_cfa_register 7
 3584 0006 0346     	 mov r3,r0
 3585 0008 FB71     	 strb r3,[r7,#7]
 967:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Wait until the update of HDCR register in hibernate domain is completed */
 968:../Libraries/XMCLib/src/xmc4_scu.c ****   while ((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_HDCR_Msk)
 3586              	 .loc 3 968 0
 3587 000a 00BF     	 nop
 3588              	.L249:
 3589              	 .loc 3 968 0 is_stmt 0 discriminator 1
 3590 000c 094B     	 ldr r3,.L250
 3591 000e D3F8C430 	 ldr r3,[r3,#196]
 3592 0012 03F00803 	 and r3,r3,#8
 3593 0016 002B     	 cmp r3,#0
 3594 0018 F8D1     	 bne .L249
 969:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 970:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 971:../Libraries/XMCLib/src/xmc4_scu.c **** 
 972:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->HDCR = (SCU_HIBERNATE->HDCR & ((uint32_t)~SCU_HIBERNATE_HDCR_RCS_Msk)) |
 3595              	 .loc 3 972 0 is_stmt 1
 3596 001a 0749     	 ldr r1,.L250+4
 3597 001c 064B     	 ldr r3,.L250+4
 3598 001e DB68     	 ldr r3,[r3,#12]
 3599 0020 23F04002 	 bic r2,r3,#64
 973:../Libraries/XMCLib/src/xmc4_scu.c ****                         ((uint32_t)source);
 3600              	 .loc 3 973 0
 3601 0024 FB79     	 ldrb r3,[r7,#7]
 972:../Libraries/XMCLib/src/xmc4_scu.c ****                         ((uint32_t)source);
 3602              	 .loc 3 972 0
 3603 0026 1343     	 orrs r3,r3,r2
 3604 0028 CB60     	 str r3,[r1,#12]
 974:../Libraries/XMCLib/src/xmc4_scu.c **** }
 3605              	 .loc 3 974 0
 3606 002a 0C37     	 adds r7,r7,#12
 3607              	.LCFI324:
 3608              	 .cfi_def_cfa_offset 4
 3609 002c BD46     	 mov sp,r7
 3610              	.LCFI325:
 3611              	 .cfi_def_cfa_register 13
 3612              	 
 3613 002e 5DF8047B 	 ldr r7,[sp],#4
 3614              	.LCFI326:
 3615              	 .cfi_restore 7
 3616              	 .cfi_def_cfa_offset 0
 3617 0032 7047     	 bx lr
 3618              	.L251:
 3619              	 .align 2
 3620              	.L250:
 3621 0034 00400050 	 .word 1342193664
 3622 0038 00430050 	 .word 1342194432
 3623              	 .cfi_endproc
 3624              	.LFE225:
 3626              	 .section .text.XMC_SCU_HIB_SetStandbyClockSource,"ax",%progbits
 3627              	 .align 2
 3628              	 .global XMC_SCU_HIB_SetStandbyClockSource
 3629              	 .thumb
 3630              	 .thumb_func
 3632              	XMC_SCU_HIB_SetStandbyClockSource:
 3633              	.LFB226:
 975:../Libraries/XMCLib/src/xmc4_scu.c **** 
 976:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to select fSTDBY */
 977:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_SetStandbyClockSource(const XMC_SCU_HIB_STDBYCLKSRC_t source)
 978:../Libraries/XMCLib/src/xmc4_scu.c **** {
 3634              	 .loc 3 978 0
 3635              	 .cfi_startproc
 3636              	 
 3637              	 
 3638              	 
 3639 0000 80B4     	 push {r7}
 3640              	.LCFI327:
 3641              	 .cfi_def_cfa_offset 4
 3642              	 .cfi_offset 7,-4
 3643 0002 83B0     	 sub sp,sp,#12
 3644              	.LCFI328:
 3645              	 .cfi_def_cfa_offset 16
 3646 0004 00AF     	 add r7,sp,#0
 3647              	.LCFI329:
 3648              	 .cfi_def_cfa_register 7
 3649 0006 0346     	 mov r3,r0
 3650 0008 FB71     	 strb r3,[r7,#7]
 979:../Libraries/XMCLib/src/xmc4_scu.c ****   while ((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_HDCR_Msk)
 3651              	 .loc 3 979 0
 3652 000a 00BF     	 nop
 3653              	.L253:
 3654              	 .loc 3 979 0 is_stmt 0 discriminator 1
 3655 000c 094B     	 ldr r3,.L254
 3656 000e D3F8C430 	 ldr r3,[r3,#196]
 3657 0012 03F00803 	 and r3,r3,#8
 3658 0016 002B     	 cmp r3,#0
 3659 0018 F8D1     	 bne .L253
 980:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 981:../Libraries/XMCLib/src/xmc4_scu.c ****     /* check SCU_MIRRSTS to ensure that no transfer over serial interface is pending */
 982:../Libraries/XMCLib/src/xmc4_scu.c ****   }
 983:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->HDCR = (SCU_HIBERNATE->HDCR & ((uint32_t)~SCU_HIBERNATE_HDCR_STDBYSEL_Msk)) |
 3660              	 .loc 3 983 0 is_stmt 1
 3661 001a 0749     	 ldr r1,.L254+4
 3662 001c 064B     	 ldr r3,.L254+4
 3663 001e DB68     	 ldr r3,[r3,#12]
 3664 0020 23F08002 	 bic r2,r3,#128
 984:../Libraries/XMCLib/src/xmc4_scu.c ****                         ((uint32_t)source);
 3665              	 .loc 3 984 0
 3666 0024 FB79     	 ldrb r3,[r7,#7]
 983:../Libraries/XMCLib/src/xmc4_scu.c ****                         ((uint32_t)source);
 3667              	 .loc 3 983 0
 3668 0026 1343     	 orrs r3,r3,r2
 3669 0028 CB60     	 str r3,[r1,#12]
 985:../Libraries/XMCLib/src/xmc4_scu.c **** }
 3670              	 .loc 3 985 0
 3671 002a 0C37     	 adds r7,r7,#12
 3672              	.LCFI330:
 3673              	 .cfi_def_cfa_offset 4
 3674 002c BD46     	 mov sp,r7
 3675              	.LCFI331:
 3676              	 .cfi_def_cfa_register 13
 3677              	 
 3678 002e 5DF8047B 	 ldr r7,[sp],#4
 3679              	.LCFI332:
 3680              	 .cfi_restore 7
 3681              	 .cfi_def_cfa_offset 0
 3682 0032 7047     	 bx lr
 3683              	.L255:
 3684              	 .align 2
 3685              	.L254:
 3686 0034 00400050 	 .word 1342193664
 3687 0038 00430050 	 .word 1342194432
 3688              	 .cfi_endproc
 3689              	.LFE226:
 3691              	 .section .text.XMC_SCU_CLOCK_SetSystemClockDivider,"ax",%progbits
 3692              	 .align 2
 3693              	 .global XMC_SCU_CLOCK_SetSystemClockDivider
 3694              	 .thumb
 3695              	 .thumb_func
 3697              	XMC_SCU_CLOCK_SetSystemClockDivider:
 3698              	.LFB227:
 986:../Libraries/XMCLib/src/xmc4_scu.c **** 
 987:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to program the divider placed between fsys and its parent */
 988:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_SetSystemClockDivider(const uint32_t divider)
 989:../Libraries/XMCLib/src/xmc4_scu.c **** {
 3699              	 .loc 3 989 0
 3700              	 .cfi_startproc
 3701              	 
 3702              	 
 3703              	 
 3704 0000 80B4     	 push {r7}
 3705              	.LCFI333:
 3706              	 .cfi_def_cfa_offset 4
 3707              	 .cfi_offset 7,-4
 3708 0002 83B0     	 sub sp,sp,#12
 3709              	.LCFI334:
 3710              	 .cfi_def_cfa_offset 16
 3711 0004 00AF     	 add r7,sp,#0
 3712              	.LCFI335:
 3713              	 .cfi_def_cfa_register 7
 3714 0006 7860     	 str r0,[r7,#4]
 990:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_ASSERT("XMC_SCU_CLOCK_SetSystemClockDivider:Wrong clock divider value",
 991:../Libraries/XMCLib/src/xmc4_scu.c ****              (divider <= (SCU_CLK_SYSCLKCR_SYSDIV_Msk + 1UL)) );
 992:../Libraries/XMCLib/src/xmc4_scu.c **** 
 993:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_CLK->SYSCLKCR = (SCU_CLK->SYSCLKCR & ((uint32_t)~SCU_CLK_SYSCLKCR_SYSDIV_Msk)) |
 3715              	 .loc 3 993 0
 3716 0008 0649     	 ldr r1,.L257
 3717 000a 064B     	 ldr r3,.L257
 3718 000c DB68     	 ldr r3,[r3,#12]
 3719 000e 23F0FF02 	 bic r2,r3,#255
 994:../Libraries/XMCLib/src/xmc4_scu.c ****                       ((uint32_t)(((uint32_t)(divider - 1UL)) << SCU_CLK_SYSCLKCR_SYSDIV_Pos));
 3720              	 .loc 3 994 0
 3721 0012 7B68     	 ldr r3,[r7,#4]
 3722 0014 013B     	 subs r3,r3,#1
 993:../Libraries/XMCLib/src/xmc4_scu.c ****                       ((uint32_t)(((uint32_t)(divider - 1UL)) << SCU_CLK_SYSCLKCR_SYSDIV_Pos));
 3723              	 .loc 3 993 0
 3724 0016 1343     	 orrs r3,r3,r2
 3725 0018 CB60     	 str r3,[r1,#12]
 995:../Libraries/XMCLib/src/xmc4_scu.c **** }
 3726              	 .loc 3 995 0
 3727 001a 0C37     	 adds r7,r7,#12
 3728              	.LCFI336:
 3729              	 .cfi_def_cfa_offset 4
 3730 001c BD46     	 mov sp,r7
 3731              	.LCFI337:
 3732              	 .cfi_def_cfa_register 13
 3733              	 
 3734 001e 5DF8047B 	 ldr r7,[sp],#4
 3735              	.LCFI338:
 3736              	 .cfi_restore 7
 3737              	 .cfi_def_cfa_offset 0
 3738 0022 7047     	 bx lr
 3739              	.L258:
 3740              	 .align 2
 3741              	.L257:
 3742 0024 00460050 	 .word 1342195200
 3743              	 .cfi_endproc
 3744              	.LFE227:
 3746              	 .section .text.XMC_SCU_CLOCK_SetCcuClockDivider,"ax",%progbits
 3747              	 .align 2
 3748              	 .global XMC_SCU_CLOCK_SetCcuClockDivider
 3749              	 .thumb
 3750              	 .thumb_func
 3752              	XMC_SCU_CLOCK_SetCcuClockDivider:
 3753              	.LFB228:
 996:../Libraries/XMCLib/src/xmc4_scu.c **** 
 997:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to program the divider placed between fccu and its parent */
 998:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_SetCcuClockDivider(const uint32_t divider)
 999:../Libraries/XMCLib/src/xmc4_scu.c **** {
 3754              	 .loc 3 999 0
 3755              	 .cfi_startproc
 3756              	 
 3757              	 
 3758              	 
 3759 0000 80B4     	 push {r7}
 3760              	.LCFI339:
 3761              	 .cfi_def_cfa_offset 4
 3762              	 .cfi_offset 7,-4
 3763 0002 83B0     	 sub sp,sp,#12
 3764              	.LCFI340:
 3765              	 .cfi_def_cfa_offset 16
 3766 0004 00AF     	 add r7,sp,#0
 3767              	.LCFI341:
 3768              	 .cfi_def_cfa_register 7
 3769 0006 7860     	 str r0,[r7,#4]
1000:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_ASSERT("XMC_SCU_CLOCK_SetCapcomClockDivider:Wrong clock divider value", (divider <= 2UL) );
1001:../Libraries/XMCLib/src/xmc4_scu.c **** 
1002:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_CLK->CCUCLKCR = (SCU_CLK->CCUCLKCR & ((uint32_t)~SCU_CLK_CCUCLKCR_CCUDIV_Msk)) |
 3770              	 .loc 3 1002 0
 3771 0008 0649     	 ldr r1,.L260
 3772 000a 064B     	 ldr r3,.L260
 3773 000c 1B6A     	 ldr r3,[r3,#32]
 3774 000e 23F00102 	 bic r2,r3,#1
1003:../Libraries/XMCLib/src/xmc4_scu.c ****                       (uint32_t)((uint32_t)(divider - 1UL) << SCU_CLK_CCUCLKCR_CCUDIV_Pos);
 3775              	 .loc 3 1003 0
 3776 0012 7B68     	 ldr r3,[r7,#4]
 3777 0014 013B     	 subs r3,r3,#1
1002:../Libraries/XMCLib/src/xmc4_scu.c ****                       (uint32_t)((uint32_t)(divider - 1UL) << SCU_CLK_CCUCLKCR_CCUDIV_Pos);
 3778              	 .loc 3 1002 0
 3779 0016 1343     	 orrs r3,r3,r2
 3780 0018 0B62     	 str r3,[r1,#32]
1004:../Libraries/XMCLib/src/xmc4_scu.c **** }
 3781              	 .loc 3 1004 0
 3782 001a 0C37     	 adds r7,r7,#12
 3783              	.LCFI342:
 3784              	 .cfi_def_cfa_offset 4
 3785 001c BD46     	 mov sp,r7
 3786              	.LCFI343:
 3787              	 .cfi_def_cfa_register 13
 3788              	 
 3789 001e 5DF8047B 	 ldr r7,[sp],#4
 3790              	.LCFI344:
 3791              	 .cfi_restore 7
 3792              	 .cfi_def_cfa_offset 0
 3793 0022 7047     	 bx lr
 3794              	.L261:
 3795              	 .align 2
 3796              	.L260:
 3797 0024 00460050 	 .word 1342195200
 3798              	 .cfi_endproc
 3799              	.LFE228:
 3801              	 .section .text.XMC_SCU_CLOCK_SetCpuClockDivider,"ax",%progbits
 3802              	 .align 2
 3803              	 .global XMC_SCU_CLOCK_SetCpuClockDivider
 3804              	 .thumb
 3805              	 .thumb_func
 3807              	XMC_SCU_CLOCK_SetCpuClockDivider:
 3808              	.LFB229:
1005:../Libraries/XMCLib/src/xmc4_scu.c **** 
1006:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to program the divider placed between fcpu and its parent */
1007:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_SetCpuClockDivider(const uint32_t divider)
1008:../Libraries/XMCLib/src/xmc4_scu.c **** {
 3809              	 .loc 3 1008 0
 3810              	 .cfi_startproc
 3811              	 
 3812              	 
 3813              	 
 3814 0000 80B4     	 push {r7}
 3815              	.LCFI345:
 3816              	 .cfi_def_cfa_offset 4
 3817              	 .cfi_offset 7,-4
 3818 0002 83B0     	 sub sp,sp,#12
 3819              	.LCFI346:
 3820              	 .cfi_def_cfa_offset 16
 3821 0004 00AF     	 add r7,sp,#0
 3822              	.LCFI347:
 3823              	 .cfi_def_cfa_register 7
 3824 0006 7860     	 str r0,[r7,#4]
1009:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_ASSERT("XMC_SCU_CLOCK_SetCpuClockDivider:Wrong clock divider value", (divider <= 2UL) );
1010:../Libraries/XMCLib/src/xmc4_scu.c **** 
1011:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_CLK->CPUCLKCR = (SCU_CLK->CPUCLKCR & ((uint32_t)~SCU_CLK_CPUCLKCR_CPUDIV_Msk)) |
 3825              	 .loc 3 1011 0
 3826 0008 0649     	 ldr r1,.L263
 3827 000a 064B     	 ldr r3,.L263
 3828 000c 1B69     	 ldr r3,[r3,#16]
 3829 000e 23F00102 	 bic r2,r3,#1
1012:../Libraries/XMCLib/src/xmc4_scu.c ****                       (uint32_t)((uint32_t)(divider - 1UL) << SCU_CLK_CPUCLKCR_CPUDIV_Pos);
 3830              	 .loc 3 1012 0
 3831 0012 7B68     	 ldr r3,[r7,#4]
 3832 0014 013B     	 subs r3,r3,#1
1011:../Libraries/XMCLib/src/xmc4_scu.c ****                       (uint32_t)((uint32_t)(divider - 1UL) << SCU_CLK_CPUCLKCR_CPUDIV_Pos);
 3833              	 .loc 3 1011 0
 3834 0016 1343     	 orrs r3,r3,r2
 3835 0018 0B61     	 str r3,[r1,#16]
1013:../Libraries/XMCLib/src/xmc4_scu.c **** }
 3836              	 .loc 3 1013 0
 3837 001a 0C37     	 adds r7,r7,#12
 3838              	.LCFI348:
 3839              	 .cfi_def_cfa_offset 4
 3840 001c BD46     	 mov sp,r7
 3841              	.LCFI349:
 3842              	 .cfi_def_cfa_register 13
 3843              	 
 3844 001e 5DF8047B 	 ldr r7,[sp],#4
 3845              	.LCFI350:
 3846              	 .cfi_restore 7
 3847              	 .cfi_def_cfa_offset 0
 3848 0022 7047     	 bx lr
 3849              	.L264:
 3850              	 .align 2
 3851              	.L263:
 3852 0024 00460050 	 .word 1342195200
 3853              	 .cfi_endproc
 3854              	.LFE229:
 3856              	 .section .text.XMC_SCU_CLOCK_SetPeripheralClockDivider,"ax",%progbits
 3857              	 .align 2
 3858              	 .global XMC_SCU_CLOCK_SetPeripheralClockDivider
 3859              	 .thumb
 3860              	 .thumb_func
 3862              	XMC_SCU_CLOCK_SetPeripheralClockDivider:
 3863              	.LFB230:
1014:../Libraries/XMCLib/src/xmc4_scu.c **** 
1015:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to program the divider placed between fperiph and its parent */
1016:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_SetPeripheralClockDivider(const uint32_t divider)
1017:../Libraries/XMCLib/src/xmc4_scu.c **** {
 3864              	 .loc 3 1017 0
 3865              	 .cfi_startproc
 3866              	 
 3867              	 
 3868              	 
 3869 0000 80B4     	 push {r7}
 3870              	.LCFI351:
 3871              	 .cfi_def_cfa_offset 4
 3872              	 .cfi_offset 7,-4
 3873 0002 83B0     	 sub sp,sp,#12
 3874              	.LCFI352:
 3875              	 .cfi_def_cfa_offset 16
 3876 0004 00AF     	 add r7,sp,#0
 3877              	.LCFI353:
 3878              	 .cfi_def_cfa_register 7
 3879 0006 7860     	 str r0,[r7,#4]
1018:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_ASSERT("XMC_SCU_CLOCK_SetPeripheralClockDivider:Wrong clock divider value", (divider <= 2UL) 
1019:../Libraries/XMCLib/src/xmc4_scu.c **** 
1020:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_CLK->PBCLKCR = (SCU_CLK->PBCLKCR & ((uint32_t)~SCU_CLK_PBCLKCR_PBDIV_Msk)) |
 3880              	 .loc 3 1020 0
 3881 0008 0649     	 ldr r1,.L266
 3882 000a 064B     	 ldr r3,.L266
 3883 000c 5B69     	 ldr r3,[r3,#20]
 3884 000e 23F00102 	 bic r2,r3,#1
1021:../Libraries/XMCLib/src/xmc4_scu.c ****                      ((uint32_t)((uint32_t)(divider - 1UL) << SCU_CLK_PBCLKCR_PBDIV_Pos));
 3885              	 .loc 3 1021 0
 3886 0012 7B68     	 ldr r3,[r7,#4]
 3887 0014 013B     	 subs r3,r3,#1
1020:../Libraries/XMCLib/src/xmc4_scu.c ****                      ((uint32_t)((uint32_t)(divider - 1UL) << SCU_CLK_PBCLKCR_PBDIV_Pos));
 3888              	 .loc 3 1020 0
 3889 0016 1343     	 orrs r3,r3,r2
 3890 0018 4B61     	 str r3,[r1,#20]
1022:../Libraries/XMCLib/src/xmc4_scu.c **** }
 3891              	 .loc 3 1022 0
 3892 001a 0C37     	 adds r7,r7,#12
 3893              	.LCFI354:
 3894              	 .cfi_def_cfa_offset 4
 3895 001c BD46     	 mov sp,r7
 3896              	.LCFI355:
 3897              	 .cfi_def_cfa_register 13
 3898              	 
 3899 001e 5DF8047B 	 ldr r7,[sp],#4
 3900              	.LCFI356:
 3901              	 .cfi_restore 7
 3902              	 .cfi_def_cfa_offset 0
 3903 0022 7047     	 bx lr
 3904              	.L267:
 3905              	 .align 2
 3906              	.L266:
 3907 0024 00460050 	 .word 1342195200
 3908              	 .cfi_endproc
 3909              	.LFE230:
 3911              	 .section .text.XMC_SCU_CLOCK_SetUsbClockDivider,"ax",%progbits
 3912              	 .align 2
 3913              	 .global XMC_SCU_CLOCK_SetUsbClockDivider
 3914              	 .thumb
 3915              	 .thumb_func
 3917              	XMC_SCU_CLOCK_SetUsbClockDivider:
 3918              	.LFB231:
1023:../Libraries/XMCLib/src/xmc4_scu.c **** 
1024:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to program the divider placed between fsdmmc and its parent */
1025:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_SetUsbClockDivider(const uint32_t divider)
1026:../Libraries/XMCLib/src/xmc4_scu.c **** {
 3919              	 .loc 3 1026 0
 3920              	 .cfi_startproc
 3921              	 
 3922              	 
 3923              	 
 3924 0000 80B4     	 push {r7}
 3925              	.LCFI357:
 3926              	 .cfi_def_cfa_offset 4
 3927              	 .cfi_offset 7,-4
 3928 0002 83B0     	 sub sp,sp,#12
 3929              	.LCFI358:
 3930              	 .cfi_def_cfa_offset 16
 3931 0004 00AF     	 add r7,sp,#0
 3932              	.LCFI359:
 3933              	 .cfi_def_cfa_register 7
 3934 0006 7860     	 str r0,[r7,#4]
1027:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_ASSERT("XMC_SCU_CLOCK_SetSdmmcClockDivider:Wrong clock divider value",
1028:../Libraries/XMCLib/src/xmc4_scu.c ****              (divider <= (SCU_CLK_USBCLKCR_USBDIV_Msk + 1UL)) );
1029:../Libraries/XMCLib/src/xmc4_scu.c **** 
1030:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_CLK->USBCLKCR = (SCU_CLK->USBCLKCR & ((uint32_t)~SCU_CLK_USBCLKCR_USBDIV_Msk)) |
 3935              	 .loc 3 1030 0
 3936 0008 0649     	 ldr r1,.L269
 3937 000a 064B     	 ldr r3,.L269
 3938 000c 9B69     	 ldr r3,[r3,#24]
 3939 000e 23F00702 	 bic r2,r3,#7
1031:../Libraries/XMCLib/src/xmc4_scu.c ****                       (uint32_t)((uint32_t)(divider - 1UL) << SCU_CLK_USBCLKCR_USBDIV_Pos);
 3940              	 .loc 3 1031 0
 3941 0012 7B68     	 ldr r3,[r7,#4]
 3942 0014 013B     	 subs r3,r3,#1
1030:../Libraries/XMCLib/src/xmc4_scu.c ****                       (uint32_t)((uint32_t)(divider - 1UL) << SCU_CLK_USBCLKCR_USBDIV_Pos);
 3943              	 .loc 3 1030 0
 3944 0016 1343     	 orrs r3,r3,r2
 3945 0018 8B61     	 str r3,[r1,#24]
1032:../Libraries/XMCLib/src/xmc4_scu.c **** }
 3946              	 .loc 3 1032 0
 3947 001a 0C37     	 adds r7,r7,#12
 3948              	.LCFI360:
 3949              	 .cfi_def_cfa_offset 4
 3950 001c BD46     	 mov sp,r7
 3951              	.LCFI361:
 3952              	 .cfi_def_cfa_register 13
 3953              	 
 3954 001e 5DF8047B 	 ldr r7,[sp],#4
 3955              	.LCFI362:
 3956              	 .cfi_restore 7
 3957              	 .cfi_def_cfa_offset 0
 3958 0022 7047     	 bx lr
 3959              	.L270:
 3960              	 .align 2
 3961              	.L269:
 3962 0024 00460050 	 .word 1342195200
 3963              	 .cfi_endproc
 3964              	.LFE231:
 3966              	 .section .text.XMC_SCU_CLOCK_SetWdtClockDivider,"ax",%progbits
 3967              	 .align 2
 3968              	 .global XMC_SCU_CLOCK_SetWdtClockDivider
 3969              	 .thumb
 3970              	 .thumb_func
 3972              	XMC_SCU_CLOCK_SetWdtClockDivider:
 3973              	.LFB232:
1033:../Libraries/XMCLib/src/xmc4_scu.c **** 
1034:../Libraries/XMCLib/src/xmc4_scu.c **** #if defined(EBU)
1035:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to program the divider placed between febu and its parent */
1036:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_SetEbuClockDivider(const uint32_t divider)
1037:../Libraries/XMCLib/src/xmc4_scu.c **** {
1038:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_ASSERT("XMC_SCU_CLOCK_SetEbuClockDivider:Wrong clock divider value",
1039:../Libraries/XMCLib/src/xmc4_scu.c ****              (divider <= (SCU_CLK_EBUCLKCR_EBUDIV_Msk + 1UL) ) );
1040:../Libraries/XMCLib/src/xmc4_scu.c **** 
1041:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_CLK->EBUCLKCR = (SCU_CLK->EBUCLKCR & ((uint32_t)~SCU_CLK_EBUCLKCR_EBUDIV_Msk)) |
1042:../Libraries/XMCLib/src/xmc4_scu.c ****                       (uint32_t)(((uint32_t)(divider - 1UL)) << SCU_CLK_EBUCLKCR_EBUDIV_Pos);
1043:../Libraries/XMCLib/src/xmc4_scu.c **** }
1044:../Libraries/XMCLib/src/xmc4_scu.c **** #endif
1045:../Libraries/XMCLib/src/xmc4_scu.c **** 
1046:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to program the divider placed between fwdt and its parent */
1047:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_SetWdtClockDivider(const uint32_t divider)
1048:../Libraries/XMCLib/src/xmc4_scu.c **** {
 3974              	 .loc 3 1048 0
 3975              	 .cfi_startproc
 3976              	 
 3977              	 
 3978              	 
 3979 0000 80B4     	 push {r7}
 3980              	.LCFI363:
 3981              	 .cfi_def_cfa_offset 4
 3982              	 .cfi_offset 7,-4
 3983 0002 83B0     	 sub sp,sp,#12
 3984              	.LCFI364:
 3985              	 .cfi_def_cfa_offset 16
 3986 0004 00AF     	 add r7,sp,#0
 3987              	.LCFI365:
 3988              	 .cfi_def_cfa_register 7
 3989 0006 7860     	 str r0,[r7,#4]
1049:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_ASSERT("XMC_SCU_CLOCK_SetWdtClockDivider:Wrong clock divider value",
1050:../Libraries/XMCLib/src/xmc4_scu.c ****              (divider <= (SCU_CLK_WDTCLKCR_WDTDIV_Msk + 1UL) ) );
1051:../Libraries/XMCLib/src/xmc4_scu.c **** 
1052:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_CLK->WDTCLKCR = (SCU_CLK->WDTCLKCR & ((uint32_t)~SCU_CLK_WDTCLKCR_WDTDIV_Msk)) |
 3990              	 .loc 3 1052 0
 3991 0008 0649     	 ldr r1,.L272
 3992 000a 064B     	 ldr r3,.L272
 3993 000c 5B6A     	 ldr r3,[r3,#36]
 3994 000e 23F0FF02 	 bic r2,r3,#255
1053:../Libraries/XMCLib/src/xmc4_scu.c ****                       (uint32_t)(((uint32_t)(divider - 1UL)) << SCU_CLK_WDTCLKCR_WDTDIV_Pos);
 3995              	 .loc 3 1053 0
 3996 0012 7B68     	 ldr r3,[r7,#4]
 3997 0014 013B     	 subs r3,r3,#1
1052:../Libraries/XMCLib/src/xmc4_scu.c ****                       (uint32_t)(((uint32_t)(divider - 1UL)) << SCU_CLK_WDTCLKCR_WDTDIV_Pos);
 3998              	 .loc 3 1052 0
 3999 0016 1343     	 orrs r3,r3,r2
 4000 0018 4B62     	 str r3,[r1,#36]
1054:../Libraries/XMCLib/src/xmc4_scu.c **** }
 4001              	 .loc 3 1054 0
 4002 001a 0C37     	 adds r7,r7,#12
 4003              	.LCFI366:
 4004              	 .cfi_def_cfa_offset 4
 4005 001c BD46     	 mov sp,r7
 4006              	.LCFI367:
 4007              	 .cfi_def_cfa_register 13
 4008              	 
 4009 001e 5DF8047B 	 ldr r7,[sp],#4
 4010              	.LCFI368:
 4011              	 .cfi_restore 7
 4012              	 .cfi_def_cfa_offset 0
 4013 0022 7047     	 bx lr
 4014              	.L273:
 4015              	 .align 2
 4016              	.L272:
 4017 0024 00460050 	 .word 1342195200
 4018              	 .cfi_endproc
 4019              	.LFE232:
 4021              	 .section .text.XMC_SCU_CLOCK_SetExternalOutputClockDivider,"ax",%progbits
 4022              	 .align 2
 4023              	 .global XMC_SCU_CLOCK_SetExternalOutputClockDivider
 4024              	 .thumb
 4025              	 .thumb_func
 4027              	XMC_SCU_CLOCK_SetExternalOutputClockDivider:
 4028              	.LFB233:
1055:../Libraries/XMCLib/src/xmc4_scu.c **** 
1056:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to program the divider placed between fext and its parent */
1057:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_SetExternalOutputClockDivider(const uint32_t divider)
1058:../Libraries/XMCLib/src/xmc4_scu.c **** {
 4029              	 .loc 3 1058 0
 4030              	 .cfi_startproc
 4031              	 
 4032              	 
 4033              	 
 4034 0000 80B4     	 push {r7}
 4035              	.LCFI369:
 4036              	 .cfi_def_cfa_offset 4
 4037              	 .cfi_offset 7,-4
 4038 0002 83B0     	 sub sp,sp,#12
 4039              	.LCFI370:
 4040              	 .cfi_def_cfa_offset 16
 4041 0004 00AF     	 add r7,sp,#0
 4042              	.LCFI371:
 4043              	 .cfi_def_cfa_register 7
 4044 0006 7860     	 str r0,[r7,#4]
1059:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_ASSERT("XMC_SCU_CLOCK_SetExternalOutputClockDivider:Wrong clock divider value",
1060:../Libraries/XMCLib/src/xmc4_scu.c ****              (divider <= (SCU_CLK_EXTCLKCR_ECKDIV_Msk + 1UL) ) );
1061:../Libraries/XMCLib/src/xmc4_scu.c **** 
1062:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_CLK->EXTCLKCR = (SCU_CLK->EXTCLKCR & ((uint32_t)~SCU_CLK_EXTCLKCR_ECKDIV_Msk)) |
 4045              	 .loc 3 1062 0
 4046 0008 0849     	 ldr r1,.L275
 4047 000a 084B     	 ldr r3,.L275
 4048 000c 9B6A     	 ldr r3,[r3,#40]
 4049 000e 23F0FF73 	 bic r3,r3,#33423360
 4050 0012 23F48033 	 bic r3,r3,#65536
1063:../Libraries/XMCLib/src/xmc4_scu.c ****                       (uint32_t)(((uint32_t)(divider - 1UL)) << SCU_CLK_EXTCLKCR_ECKDIV_Pos);
 4051              	 .loc 3 1063 0
 4052 0016 7A68     	 ldr r2,[r7,#4]
 4053 0018 013A     	 subs r2,r2,#1
 4054 001a 1204     	 lsls r2,r2,#16
1062:../Libraries/XMCLib/src/xmc4_scu.c ****                       (uint32_t)(((uint32_t)(divider - 1UL)) << SCU_CLK_EXTCLKCR_ECKDIV_Pos);
 4055              	 .loc 3 1062 0
 4056 001c 1343     	 orrs r3,r3,r2
 4057 001e 8B62     	 str r3,[r1,#40]
1064:../Libraries/XMCLib/src/xmc4_scu.c **** }
 4058              	 .loc 3 1064 0
 4059 0020 0C37     	 adds r7,r7,#12
 4060              	.LCFI372:
 4061              	 .cfi_def_cfa_offset 4
 4062 0022 BD46     	 mov sp,r7
 4063              	.LCFI373:
 4064              	 .cfi_def_cfa_register 13
 4065              	 
 4066 0024 5DF8047B 	 ldr r7,[sp],#4
 4067              	.LCFI374:
 4068              	 .cfi_restore 7
 4069              	 .cfi_def_cfa_offset 0
 4070 0028 7047     	 bx lr
 4071              	.L276:
 4072 002a 00BF     	 .align 2
 4073              	.L275:
 4074 002c 00460050 	 .word 1342195200
 4075              	 .cfi_endproc
 4076              	.LFE233:
 4078              	 .section .text.XMC_SCU_CLOCK_EnableClock,"ax",%progbits
 4079              	 .align 2
 4080              	 .global XMC_SCU_CLOCK_EnableClock
 4081              	 .thumb
 4082              	 .thumb_func
 4084              	XMC_SCU_CLOCK_EnableClock:
 4085              	.LFB234:
1065:../Libraries/XMCLib/src/xmc4_scu.c **** 
1066:../Libraries/XMCLib/src/xmc4_scu.c **** #if defined(ECAT0)
1067:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to configure the ECAT clock by setting the clock divider for the ECAT clock source */
1068:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_SetECATClockDivider(const uint32_t divider)
1069:../Libraries/XMCLib/src/xmc4_scu.c **** {
1070:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_CLK->ECATCLKCR = (SCU_CLK->ECATCLKCR & ~SCU_CLK_ECATCLKCR_ECADIV_Msk) |
1071:../Libraries/XMCLib/src/xmc4_scu.c ****                        (uint32_t)(((uint32_t)(divider - 1UL)) << SCU_CLK_ECATCLKCR_ECADIV_Pos);
1072:../Libraries/XMCLib/src/xmc4_scu.c **** }
1073:../Libraries/XMCLib/src/xmc4_scu.c **** #endif
1074:../Libraries/XMCLib/src/xmc4_scu.c **** 
1075:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to enable a given module clock */
1076:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_EnableClock(const XMC_SCU_CLOCK_t clock)
1077:../Libraries/XMCLib/src/xmc4_scu.c **** {
 4086              	 .loc 3 1077 0
 4087              	 .cfi_startproc
 4088              	 
 4089              	 
 4090              	 
 4091 0000 80B4     	 push {r7}
 4092              	.LCFI375:
 4093              	 .cfi_def_cfa_offset 4
 4094              	 .cfi_offset 7,-4
 4095 0002 83B0     	 sub sp,sp,#12
 4096              	.LCFI376:
 4097              	 .cfi_def_cfa_offset 16
 4098 0004 00AF     	 add r7,sp,#0
 4099              	.LCFI377:
 4100              	 .cfi_def_cfa_register 7
 4101 0006 0346     	 mov r3,r0
 4102 0008 FB71     	 strb r3,[r7,#7]
1078:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_CLK->CLKSET = ((uint32_t)clock);
 4103              	 .loc 3 1078 0
 4104 000a 044A     	 ldr r2,.L278
 4105 000c FB79     	 ldrb r3,[r7,#7]
 4106 000e 5360     	 str r3,[r2,#4]
1079:../Libraries/XMCLib/src/xmc4_scu.c **** }
 4107              	 .loc 3 1079 0
 4108 0010 0C37     	 adds r7,r7,#12
 4109              	.LCFI378:
 4110              	 .cfi_def_cfa_offset 4
 4111 0012 BD46     	 mov sp,r7
 4112              	.LCFI379:
 4113              	 .cfi_def_cfa_register 13
 4114              	 
 4115 0014 5DF8047B 	 ldr r7,[sp],#4
 4116              	.LCFI380:
 4117              	 .cfi_restore 7
 4118              	 .cfi_def_cfa_offset 0
 4119 0018 7047     	 bx lr
 4120              	.L279:
 4121 001a 00BF     	 .align 2
 4122              	.L278:
 4123 001c 00460050 	 .word 1342195200
 4124              	 .cfi_endproc
 4125              	.LFE234:
 4127              	 .section .text.XMC_SCU_CLOCK_DisableClock,"ax",%progbits
 4128              	 .align 2
 4129              	 .global XMC_SCU_CLOCK_DisableClock
 4130              	 .thumb
 4131              	 .thumb_func
 4133              	XMC_SCU_CLOCK_DisableClock:
 4134              	.LFB235:
1080:../Libraries/XMCLib/src/xmc4_scu.c **** 
1081:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to disable a given module clock */
1082:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_DisableClock(const XMC_SCU_CLOCK_t clock)
1083:../Libraries/XMCLib/src/xmc4_scu.c **** {
 4135              	 .loc 3 1083 0
 4136              	 .cfi_startproc
 4137              	 
 4138              	 
 4139              	 
 4140 0000 80B4     	 push {r7}
 4141              	.LCFI381:
 4142              	 .cfi_def_cfa_offset 4
 4143              	 .cfi_offset 7,-4
 4144 0002 83B0     	 sub sp,sp,#12
 4145              	.LCFI382:
 4146              	 .cfi_def_cfa_offset 16
 4147 0004 00AF     	 add r7,sp,#0
 4148              	.LCFI383:
 4149              	 .cfi_def_cfa_register 7
 4150 0006 0346     	 mov r3,r0
 4151 0008 FB71     	 strb r3,[r7,#7]
1084:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_CLK->CLKCLR = ((uint32_t)clock);
 4152              	 .loc 3 1084 0
 4153 000a 044A     	 ldr r2,.L281
 4154 000c FB79     	 ldrb r3,[r7,#7]
 4155 000e 9360     	 str r3,[r2,#8]
1085:../Libraries/XMCLib/src/xmc4_scu.c **** }
 4156              	 .loc 3 1085 0
 4157 0010 0C37     	 adds r7,r7,#12
 4158              	.LCFI384:
 4159              	 .cfi_def_cfa_offset 4
 4160 0012 BD46     	 mov sp,r7
 4161              	.LCFI385:
 4162              	 .cfi_def_cfa_register 13
 4163              	 
 4164 0014 5DF8047B 	 ldr r7,[sp],#4
 4165              	.LCFI386:
 4166              	 .cfi_restore 7
 4167              	 .cfi_def_cfa_offset 0
 4168 0018 7047     	 bx lr
 4169              	.L282:
 4170 001a 00BF     	 .align 2
 4171              	.L281:
 4172 001c 00460050 	 .word 1342195200
 4173              	 .cfi_endproc
 4174              	.LFE235:
 4176              	 .section .text.XMC_SCU_CLOCK_IsClockEnabled,"ax",%progbits
 4177              	 .align 2
 4178              	 .global XMC_SCU_CLOCK_IsClockEnabled
 4179              	 .thumb
 4180              	 .thumb_func
 4182              	XMC_SCU_CLOCK_IsClockEnabled:
 4183              	.LFB236:
1086:../Libraries/XMCLib/src/xmc4_scu.c **** 
1087:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to determine if module clock of the given peripheral is enabled */
1088:../Libraries/XMCLib/src/xmc4_scu.c **** bool XMC_SCU_CLOCK_IsClockEnabled(const XMC_SCU_CLOCK_t clock)
1089:../Libraries/XMCLib/src/xmc4_scu.c **** {
 4184              	 .loc 3 1089 0
 4185              	 .cfi_startproc
 4186              	 
 4187              	 
 4188              	 
 4189 0000 80B4     	 push {r7}
 4190              	.LCFI387:
 4191              	 .cfi_def_cfa_offset 4
 4192              	 .cfi_offset 7,-4
 4193 0002 83B0     	 sub sp,sp,#12
 4194              	.LCFI388:
 4195              	 .cfi_def_cfa_offset 16
 4196 0004 00AF     	 add r7,sp,#0
 4197              	.LCFI389:
 4198              	 .cfi_def_cfa_register 7
 4199 0006 0346     	 mov r3,r0
 4200 0008 FB71     	 strb r3,[r7,#7]
1090:../Libraries/XMCLib/src/xmc4_scu.c ****   return (bool)(SCU_CLK->CLKSTAT & ((uint32_t)clock));
 4201              	 .loc 3 1090 0
 4202 000a 074B     	 ldr r3,.L285
 4203 000c 1A68     	 ldr r2,[r3]
 4204 000e FB79     	 ldrb r3,[r7,#7]
 4205 0010 1340     	 ands r3,r3,r2
 4206 0012 002B     	 cmp r3,#0
 4207 0014 14BF     	 ite ne
 4208 0016 0123     	 movne r3,#1
 4209 0018 0023     	 moveq r3,#0
 4210 001a DBB2     	 uxtb r3,r3
1091:../Libraries/XMCLib/src/xmc4_scu.c **** }
 4211              	 .loc 3 1091 0
 4212 001c 1846     	 mov r0,r3
 4213 001e 0C37     	 adds r7,r7,#12
 4214              	.LCFI390:
 4215              	 .cfi_def_cfa_offset 4
 4216 0020 BD46     	 mov sp,r7
 4217              	.LCFI391:
 4218              	 .cfi_def_cfa_register 13
 4219              	 
 4220 0022 5DF8047B 	 ldr r7,[sp],#4
 4221              	.LCFI392:
 4222              	 .cfi_restore 7
 4223              	 .cfi_def_cfa_offset 0
 4224 0026 7047     	 bx lr
 4225              	.L286:
 4226              	 .align 2
 4227              	.L285:
 4228 0028 00460050 	 .word 1342195200
 4229              	 .cfi_endproc
 4230              	.LFE236:
 4232              	 .section .text.XMC_SCU_CLOCK_GatePeripheralClock,"ax",%progbits
 4233              	 .align 2
 4234              	 .global XMC_SCU_CLOCK_GatePeripheralClock
 4235              	 .thumb
 4236              	 .thumb_func
 4238              	XMC_SCU_CLOCK_GatePeripheralClock:
 4239              	.LFB237:
1092:../Libraries/XMCLib/src/xmc4_scu.c **** 
1093:../Libraries/XMCLib/src/xmc4_scu.c **** #if defined(CLOCK_GATING_SUPPORTED)
1094:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to gate a given module clock */
1095:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_GatePeripheralClock(const XMC_SCU_PERIPHERAL_CLOCK_t peripheral)
1096:../Libraries/XMCLib/src/xmc4_scu.c **** {
 4240              	 .loc 3 1096 0
 4241              	 .cfi_startproc
 4242              	 
 4243              	 
 4244              	 
 4245 0000 80B4     	 push {r7}
 4246              	.LCFI393:
 4247              	 .cfi_def_cfa_offset 4
 4248              	 .cfi_offset 7,-4
 4249 0002 85B0     	 sub sp,sp,#20
 4250              	.LCFI394:
 4251              	 .cfi_def_cfa_offset 24
 4252 0004 00AF     	 add r7,sp,#0
 4253              	.LCFI395:
 4254              	 .cfi_def_cfa_register 7
 4255 0006 7860     	 str r0,[r7,#4]
1097:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t index = (peripheral & 0xf0000000UL) >> 28UL;
 4256              	 .loc 3 1097 0
 4257 0008 7B68     	 ldr r3,[r7,#4]
 4258 000a 1B0F     	 lsrs r3,r3,#28
 4259 000c FB60     	 str r3,[r7,#12]
1098:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t mask = (peripheral & (uint32_t)~0xf0000000UL);
 4260              	 .loc 3 1098 0
 4261 000e 7B68     	 ldr r3,[r7,#4]
 4262 0010 23F07043 	 bic r3,r3,#-268435456
 4263 0014 BB60     	 str r3,[r7,#8]
1099:../Libraries/XMCLib/src/xmc4_scu.c **** 
1100:../Libraries/XMCLib/src/xmc4_scu.c ****   *(volatile uint32_t *)((&(SCU_CLK->CGATSET0)) + (index * 3U)) = (uint32_t)mask;
 4264              	 .loc 3 1100 0
 4265 0016 FA68     	 ldr r2,[r7,#12]
 4266 0018 1346     	 mov r3,r2
 4267 001a 5B00     	 lsls r3,r3,#1
 4268 001c 1344     	 add r3,r3,r2
 4269 001e 9B00     	 lsls r3,r3,#2
 4270 0020 1A46     	 mov r2,r3
 4271 0022 044B     	 ldr r3,.L288
 4272 0024 1344     	 add r3,r3,r2
 4273 0026 BA68     	 ldr r2,[r7,#8]
 4274 0028 1A60     	 str r2,[r3]
1101:../Libraries/XMCLib/src/xmc4_scu.c **** }
 4275              	 .loc 3 1101 0
 4276 002a 1437     	 adds r7,r7,#20
 4277              	.LCFI396:
 4278              	 .cfi_def_cfa_offset 4
 4279 002c BD46     	 mov sp,r7
 4280              	.LCFI397:
 4281              	 .cfi_def_cfa_register 13
 4282              	 
 4283 002e 5DF8047B 	 ldr r7,[sp],#4
 4284              	.LCFI398:
 4285              	 .cfi_restore 7
 4286              	 .cfi_def_cfa_offset 0
 4287 0032 7047     	 bx lr
 4288              	.L289:
 4289              	 .align 2
 4290              	.L288:
 4291 0034 44460050 	 .word 1342195268
 4292              	 .cfi_endproc
 4293              	.LFE237:
 4295              	 .section .text.XMC_SCU_CLOCK_UngatePeripheralClock,"ax",%progbits
 4296              	 .align 2
 4297              	 .global XMC_SCU_CLOCK_UngatePeripheralClock
 4298              	 .thumb
 4299              	 .thumb_func
 4301              	XMC_SCU_CLOCK_UngatePeripheralClock:
 4302              	.LFB238:
1102:../Libraries/XMCLib/src/xmc4_scu.c **** 
1103:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to ungate a given module clock */
1104:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_UngatePeripheralClock(const XMC_SCU_PERIPHERAL_CLOCK_t peripheral)
1105:../Libraries/XMCLib/src/xmc4_scu.c **** {
 4303              	 .loc 3 1105 0
 4304              	 .cfi_startproc
 4305              	 
 4306              	 
 4307              	 
 4308 0000 80B4     	 push {r7}
 4309              	.LCFI399:
 4310              	 .cfi_def_cfa_offset 4
 4311              	 .cfi_offset 7,-4
 4312 0002 85B0     	 sub sp,sp,#20
 4313              	.LCFI400:
 4314              	 .cfi_def_cfa_offset 24
 4315 0004 00AF     	 add r7,sp,#0
 4316              	.LCFI401:
 4317              	 .cfi_def_cfa_register 7
 4318 0006 7860     	 str r0,[r7,#4]
1106:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t index = (uint32_t)((peripheral & 0xf0000000UL) >> 28UL);
 4319              	 .loc 3 1106 0
 4320 0008 7B68     	 ldr r3,[r7,#4]
 4321 000a 1B0F     	 lsrs r3,r3,#28
 4322 000c FB60     	 str r3,[r7,#12]
1107:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t mask = (peripheral & (uint32_t)~0xf0000000UL);
 4323              	 .loc 3 1107 0
 4324 000e 7B68     	 ldr r3,[r7,#4]
 4325 0010 23F07043 	 bic r3,r3,#-268435456
 4326 0014 BB60     	 str r3,[r7,#8]
1108:../Libraries/XMCLib/src/xmc4_scu.c **** 
1109:../Libraries/XMCLib/src/xmc4_scu.c ****   *(volatile uint32_t *)(&(SCU_CLK->CGATCLR0) + (index * 3U)) = (uint32_t)mask;
 4327              	 .loc 3 1109 0
 4328 0016 FA68     	 ldr r2,[r7,#12]
 4329 0018 1346     	 mov r3,r2
 4330 001a 5B00     	 lsls r3,r3,#1
 4331 001c 1344     	 add r3,r3,r2
 4332 001e 9B00     	 lsls r3,r3,#2
 4333 0020 1A46     	 mov r2,r3
 4334 0022 044B     	 ldr r3,.L291
 4335 0024 1344     	 add r3,r3,r2
 4336 0026 BA68     	 ldr r2,[r7,#8]
 4337 0028 1A60     	 str r2,[r3]
1110:../Libraries/XMCLib/src/xmc4_scu.c **** }
 4338              	 .loc 3 1110 0
 4339 002a 1437     	 adds r7,r7,#20
 4340              	.LCFI402:
 4341              	 .cfi_def_cfa_offset 4
 4342 002c BD46     	 mov sp,r7
 4343              	.LCFI403:
 4344              	 .cfi_def_cfa_register 13
 4345              	 
 4346 002e 5DF8047B 	 ldr r7,[sp],#4
 4347              	.LCFI404:
 4348              	 .cfi_restore 7
 4349              	 .cfi_def_cfa_offset 0
 4350 0032 7047     	 bx lr
 4351              	.L292:
 4352              	 .align 2
 4353              	.L291:
 4354 0034 48460050 	 .word 1342195272
 4355              	 .cfi_endproc
 4356              	.LFE238:
 4358              	 .section .text.XMC_SCU_CLOCK_IsPeripheralClockGated,"ax",%progbits
 4359              	 .align 2
 4360              	 .global XMC_SCU_CLOCK_IsPeripheralClockGated
 4361              	 .thumb
 4362              	 .thumb_func
 4364              	XMC_SCU_CLOCK_IsPeripheralClockGated:
 4365              	.LFB239:
1111:../Libraries/XMCLib/src/xmc4_scu.c **** 
1112:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to ungate a given module clock */
1113:../Libraries/XMCLib/src/xmc4_scu.c **** bool XMC_SCU_CLOCK_IsPeripheralClockGated(const XMC_SCU_PERIPHERAL_CLOCK_t peripheral)
1114:../Libraries/XMCLib/src/xmc4_scu.c **** {
 4366              	 .loc 3 1114 0
 4367              	 .cfi_startproc
 4368              	 
 4369              	 
 4370              	 
 4371 0000 80B4     	 push {r7}
 4372              	.LCFI405:
 4373              	 .cfi_def_cfa_offset 4
 4374              	 .cfi_offset 7,-4
 4375 0002 85B0     	 sub sp,sp,#20
 4376              	.LCFI406:
 4377              	 .cfi_def_cfa_offset 24
 4378 0004 00AF     	 add r7,sp,#0
 4379              	.LCFI407:
 4380              	 .cfi_def_cfa_register 7
 4381 0006 7860     	 str r0,[r7,#4]
1115:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t index = ((peripheral & 0xf0000000UL) >> 28UL);
 4382              	 .loc 3 1115 0
 4383 0008 7B68     	 ldr r3,[r7,#4]
 4384 000a 1B0F     	 lsrs r3,r3,#28
 4385 000c FB60     	 str r3,[r7,#12]
1116:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t mask = (peripheral & (uint32_t)~0xf0000000UL);
 4386              	 .loc 3 1116 0
 4387 000e 7B68     	 ldr r3,[r7,#4]
 4388 0010 23F07043 	 bic r3,r3,#-268435456
 4389 0014 BB60     	 str r3,[r7,#8]
1117:../Libraries/XMCLib/src/xmc4_scu.c **** 
1118:../Libraries/XMCLib/src/xmc4_scu.c ****   return ((*(const volatile uint32_t *)(&(SCU_CLK->CGATSTAT0) + (index * 3U)) & mask) != 0U);
 4390              	 .loc 3 1118 0
 4391 0016 FA68     	 ldr r2,[r7,#12]
 4392 0018 1346     	 mov r3,r2
 4393 001a 5B00     	 lsls r3,r3,#1
 4394 001c 1344     	 add r3,r3,r2
 4395 001e 9B00     	 lsls r3,r3,#2
 4396 0020 1A46     	 mov r2,r3
 4397 0022 084B     	 ldr r3,.L295
 4398 0024 1344     	 add r3,r3,r2
 4399 0026 1A68     	 ldr r2,[r3]
 4400 0028 BB68     	 ldr r3,[r7,#8]
 4401 002a 1340     	 ands r3,r3,r2
 4402 002c 002B     	 cmp r3,#0
 4403 002e 14BF     	 ite ne
 4404 0030 0123     	 movne r3,#1
 4405 0032 0023     	 moveq r3,#0
 4406 0034 DBB2     	 uxtb r3,r3
1119:../Libraries/XMCLib/src/xmc4_scu.c **** }
 4407              	 .loc 3 1119 0
 4408 0036 1846     	 mov r0,r3
 4409 0038 1437     	 adds r7,r7,#20
 4410              	.LCFI408:
 4411              	 .cfi_def_cfa_offset 4
 4412 003a BD46     	 mov sp,r7
 4413              	.LCFI409:
 4414              	 .cfi_def_cfa_register 13
 4415              	 
 4416 003c 5DF8047B 	 ldr r7,[sp],#4
 4417              	.LCFI410:
 4418              	 .cfi_restore 7
 4419              	 .cfi_def_cfa_offset 0
 4420 0040 7047     	 bx lr
 4421              	.L296:
 4422 0042 00BF     	 .align 2
 4423              	.L295:
 4424 0044 40460050 	 .word 1342195264
 4425              	 .cfi_endproc
 4426              	.LFE239:
 4428              	 .section .text.XMC_SCU_POWER_GetEVR13Voltage,"ax",%progbits
 4429              	 .align 2
 4430              	 .global XMC_SCU_POWER_GetEVR13Voltage
 4431              	 .thumb
 4432              	 .thumb_func
 4434              	XMC_SCU_POWER_GetEVR13Voltage:
 4435              	.LFB240:
1120:../Libraries/XMCLib/src/xmc4_scu.c **** #endif
1121:../Libraries/XMCLib/src/xmc4_scu.c **** 
1122:../Libraries/XMCLib/src/xmc4_scu.c **** float XMC_SCU_POWER_GetEVR13Voltage(void)
1123:../Libraries/XMCLib/src/xmc4_scu.c **** {
 4436              	 .loc 3 1123 0
 4437              	 .cfi_startproc
 4438              	 
 4439              	 
 4440              	 
 4441 0000 80B4     	 push {r7}
 4442              	.LCFI411:
 4443              	 .cfi_def_cfa_offset 4
 4444              	 .cfi_offset 7,-4
 4445 0002 00AF     	 add r7,sp,#0
 4446              	.LCFI412:
 4447              	 .cfi_def_cfa_register 7
1124:../Libraries/XMCLib/src/xmc4_scu.c ****   return (SCU_POWER->EVRVADCSTAT & SCU_POWER_EVRVADCSTAT_VADC13V_Msk) * XMC_SCU_POWER_LSB13V;
 4448              	 .loc 3 1124 0
 4449 0004 084B     	 ldr r3,.L299
 4450 0006 5B69     	 ldr r3,[r3,#20]
 4451 0008 DBB2     	 uxtb r3,r3
 4452 000a 07EE903A 	 fmsr s15,r3
 4453 000e F8EE677A 	 fuitos s15,s15
 4454 0012 9FED067A 	 flds s14,.L299+4
 4455 0016 67EE877A 	 fmuls s15,s15,s14
 4456 001a 17EE903A 	 fmrs r3,s15
1125:../Libraries/XMCLib/src/xmc4_scu.c **** }
 4457              	 .loc 3 1125 0
 4458 001e 1846     	 mov r0,r3
 4459 0020 BD46     	 mov sp,r7
 4460              	.LCFI413:
 4461              	 .cfi_def_cfa_register 13
 4462              	 
 4463 0022 5DF8047B 	 ldr r7,[sp],#4
 4464              	.LCFI414:
 4465              	 .cfi_restore 7
 4466              	 .cfi_def_cfa_offset 0
 4467 0026 7047     	 bx lr
 4468              	.L300:
 4469              	 .align 2
 4470              	.L299:
 4471 0028 00420050 	 .word 1342194176
 4472 002c ED0DBE3B 	 .word 1002311149
 4473              	 .cfi_endproc
 4474              	.LFE240:
 4476              	 .section .text.XMC_SCU_POWER_GetEVR33Voltage,"ax",%progbits
 4477              	 .align 2
 4478              	 .global XMC_SCU_POWER_GetEVR33Voltage
 4479              	 .thumb
 4480              	 .thumb_func
 4482              	XMC_SCU_POWER_GetEVR33Voltage:
 4483              	.LFB241:
1126:../Libraries/XMCLib/src/xmc4_scu.c **** 
1127:../Libraries/XMCLib/src/xmc4_scu.c **** float XMC_SCU_POWER_GetEVR33Voltage(void)
1128:../Libraries/XMCLib/src/xmc4_scu.c **** {
 4484              	 .loc 3 1128 0
 4485              	 .cfi_startproc
 4486              	 
 4487              	 
 4488              	 
 4489 0000 80B4     	 push {r7}
 4490              	.LCFI415:
 4491              	 .cfi_def_cfa_offset 4
 4492              	 .cfi_offset 7,-4
 4493 0002 00AF     	 add r7,sp,#0
 4494              	.LCFI416:
 4495              	 .cfi_def_cfa_register 7
1129:../Libraries/XMCLib/src/xmc4_scu.c ****   return ((SCU_POWER->EVRVADCSTAT & SCU_POWER_EVRVADCSTAT_VADC33V_Msk) >> SCU_POWER_EVRVADCSTAT_VAD
 4496              	 .loc 3 1129 0
 4497 0004 094B     	 ldr r3,.L303
 4498 0006 5B69     	 ldr r3,[r3,#20]
 4499 0008 03F47F43 	 and r3,r3,#65280
 4500 000c 1B0A     	 lsrs r3,r3,#8
 4501 000e 07EE903A 	 fmsr s15,r3
 4502 0012 F8EE677A 	 fuitos s15,s15
 4503 0016 9FED067A 	 flds s14,.L303+4
 4504 001a 67EE877A 	 fmuls s15,s15,s14
 4505 001e 17EE903A 	 fmrs r3,s15
1130:../Libraries/XMCLib/src/xmc4_scu.c **** }
 4506              	 .loc 3 1130 0
 4507 0022 1846     	 mov r0,r3
 4508 0024 BD46     	 mov sp,r7
 4509              	.LCFI417:
 4510              	 .cfi_def_cfa_register 13
 4511              	 
 4512 0026 5DF8047B 	 ldr r7,[sp],#4
 4513              	.LCFI418:
 4514              	 .cfi_restore 7
 4515              	 .cfi_def_cfa_offset 0
 4516 002a 7047     	 bx lr
 4517              	.L304:
 4518              	 .align 2
 4519              	.L303:
 4520 002c 00420050 	 .word 1342194176
 4521 0030 EC51B83C 	 .word 1018712556
 4522              	 .cfi_endproc
 4523              	.LFE241:
 4525              	 .section .text.XMC_SCU_CLOCK_EnableUsbPll,"ax",%progbits
 4526              	 .align 2
 4527              	 .global XMC_SCU_CLOCK_EnableUsbPll
 4528              	 .thumb
 4529              	 .thumb_func
 4531              	XMC_SCU_CLOCK_EnableUsbPll:
 4532              	.LFB242:
1131:../Libraries/XMCLib/src/xmc4_scu.c **** 
1132:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to enable USB PLL for USB clock */
1133:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_EnableUsbPll(void)
1134:../Libraries/XMCLib/src/xmc4_scu.c **** {
 4533              	 .loc 3 1134 0
 4534              	 .cfi_startproc
 4535              	 
 4536              	 
 4537              	 
 4538 0000 80B4     	 push {r7}
 4539              	.LCFI419:
 4540              	 .cfi_def_cfa_offset 4
 4541              	 .cfi_offset 7,-4
 4542 0002 00AF     	 add r7,sp,#0
 4543              	.LCFI420:
 4544              	 .cfi_def_cfa_register 7
1135:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_PLL->USBPLLCON &= (uint32_t)~(SCU_PLL_USBPLLCON_VCOPWD_Msk | SCU_PLL_USBPLLCON_PLLPWD_Msk);
 4545              	 .loc 3 1135 0
 4546 0004 054A     	 ldr r2,.L306
 4547 0006 054B     	 ldr r3,.L306
 4548 0008 5B69     	 ldr r3,[r3,#20]
 4549 000a 23F48033 	 bic r3,r3,#65536
 4550 000e 23F00203 	 bic r3,r3,#2
 4551 0012 5361     	 str r3,[r2,#20]
1136:../Libraries/XMCLib/src/xmc4_scu.c **** }
 4552              	 .loc 3 1136 0
 4553 0014 BD46     	 mov sp,r7
 4554              	.LCFI421:
 4555              	 .cfi_def_cfa_register 13
 4556              	 
 4557 0016 5DF8047B 	 ldr r7,[sp],#4
 4558              	.LCFI422:
 4559              	 .cfi_restore 7
 4560              	 .cfi_def_cfa_offset 0
 4561 001a 7047     	 bx lr
 4562              	.L307:
 4563              	 .align 2
 4564              	.L306:
 4565 001c 10470050 	 .word 1342195472
 4566              	 .cfi_endproc
 4567              	.LFE242:
 4569              	 .section .text.XMC_SCU_CLOCK_DisableUsbPll,"ax",%progbits
 4570              	 .align 2
 4571              	 .global XMC_SCU_CLOCK_DisableUsbPll
 4572              	 .thumb
 4573              	 .thumb_func
 4575              	XMC_SCU_CLOCK_DisableUsbPll:
 4576              	.LFB243:
1137:../Libraries/XMCLib/src/xmc4_scu.c **** 
1138:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to disable USB PLL for USB clock */
1139:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_DisableUsbPll(void)
1140:../Libraries/XMCLib/src/xmc4_scu.c **** {
 4577              	 .loc 3 1140 0
 4578              	 .cfi_startproc
 4579              	 
 4580              	 
 4581              	 
 4582 0000 80B4     	 push {r7}
 4583              	.LCFI423:
 4584              	 .cfi_def_cfa_offset 4
 4585              	 .cfi_offset 7,-4
 4586 0002 00AF     	 add r7,sp,#0
 4587              	.LCFI424:
 4588              	 .cfi_def_cfa_register 7
1141:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_PLL->USBPLLCON |= (uint32_t)(SCU_PLL_USBPLLCON_VCOPWD_Msk | SCU_PLL_USBPLLCON_PLLPWD_Msk);
 4589              	 .loc 3 1141 0
 4590 0004 054A     	 ldr r2,.L309
 4591 0006 054B     	 ldr r3,.L309
 4592 0008 5B69     	 ldr r3,[r3,#20]
 4593 000a 43F48033 	 orr r3,r3,#65536
 4594 000e 43F00203 	 orr r3,r3,#2
 4595 0012 5361     	 str r3,[r2,#20]
1142:../Libraries/XMCLib/src/xmc4_scu.c **** }
 4596              	 .loc 3 1142 0
 4597 0014 BD46     	 mov sp,r7
 4598              	.LCFI425:
 4599              	 .cfi_def_cfa_register 13
 4600              	 
 4601 0016 5DF8047B 	 ldr r7,[sp],#4
 4602              	.LCFI426:
 4603              	 .cfi_restore 7
 4604              	 .cfi_def_cfa_offset 0
 4605 001a 7047     	 bx lr
 4606              	.L310:
 4607              	 .align 2
 4608              	.L309:
 4609 001c 10470050 	 .word 1342195472
 4610              	 .cfi_endproc
 4611              	.LFE243:
 4613              	 .section .text.XMC_SCU_CLOCK_StartUsbPll,"ax",%progbits
 4614              	 .align 2
 4615              	 .global XMC_SCU_CLOCK_StartUsbPll
 4616              	 .thumb
 4617              	 .thumb_func
 4619              	XMC_SCU_CLOCK_StartUsbPll:
 4620              	.LFB244:
1143:../Libraries/XMCLib/src/xmc4_scu.c **** 
1144:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to configure USB PLL */
1145:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_StartUsbPll(uint32_t pdiv, uint32_t ndiv)
1146:../Libraries/XMCLib/src/xmc4_scu.c **** {
 4621              	 .loc 3 1146 0
 4622              	 .cfi_startproc
 4623              	 
 4624              	 
 4625              	 
 4626 0000 80B4     	 push {r7}
 4627              	.LCFI427:
 4628              	 .cfi_def_cfa_offset 4
 4629              	 .cfi_offset 7,-4
 4630 0002 83B0     	 sub sp,sp,#12
 4631              	.LCFI428:
 4632              	 .cfi_def_cfa_offset 16
 4633 0004 00AF     	 add r7,sp,#0
 4634              	.LCFI429:
 4635              	 .cfi_def_cfa_register 7
 4636 0006 7860     	 str r0,[r7,#4]
 4637 0008 3960     	 str r1,[r7]
1147:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Go to bypass the USB PLL */
1148:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_PLL->USBPLLCON |= (uint32_t)SCU_PLL_USBPLLCON_VCOBYP_Msk;
 4638              	 .loc 3 1148 0
 4639 000a 284A     	 ldr r2,.L315
 4640 000c 274B     	 ldr r3,.L315
 4641 000e 5B69     	 ldr r3,[r3,#20]
 4642 0010 43F00103 	 orr r3,r3,#1
 4643 0014 5361     	 str r3,[r2,#20]
1149:../Libraries/XMCLib/src/xmc4_scu.c ****   while ((SCU_PLL->USBPLLSTAT & SCU_PLL_USBPLLSTAT_VCOBYST_Msk) == 0U)
 4644              	 .loc 3 1149 0
 4645 0016 00BF     	 nop
 4646              	.L312:
 4647              	 .loc 3 1149 0 is_stmt 0 discriminator 1
 4648 0018 244B     	 ldr r3,.L315
 4649 001a 1B69     	 ldr r3,[r3,#16]
 4650 001c 03F00103 	 and r3,r3,#1
 4651 0020 002B     	 cmp r3,#0
 4652 0022 F9D0     	 beq .L312
1150:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1151:../Libraries/XMCLib/src/xmc4_scu.c ****     /* wait for prescaler mode */
1152:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1153:../Libraries/XMCLib/src/xmc4_scu.c **** 
1154:../Libraries/XMCLib/src/xmc4_scu.c ****   /* disconnect Oscillator from USB PLL */
1155:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_PLL->USBPLLCON |= (uint32_t)SCU_PLL_USBPLLCON_FINDIS_Msk;
 4653              	 .loc 3 1155 0 is_stmt 1
 4654 0024 214A     	 ldr r2,.L315
 4655 0026 214B     	 ldr r3,.L315
 4656 0028 5B69     	 ldr r3,[r3,#20]
 4657 002a 43F01003 	 orr r3,r3,#16
 4658 002e 5361     	 str r3,[r2,#20]
1156:../Libraries/XMCLib/src/xmc4_scu.c **** 
1157:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Setup Divider settings for USB PLL */
1158:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_PLL->USBPLLCON = (uint32_t)((uint32_t)((ndiv - 1U) << SCU_PLL_USBPLLCON_NDIV_Pos) |
 4659              	 .loc 3 1158 0
 4660 0030 1E49     	 ldr r1,.L315
 4661 0032 3B68     	 ldr r3,[r7]
 4662 0034 013B     	 subs r3,r3,#1
 4663 0036 1A02     	 lsls r2,r3,#8
1159:../Libraries/XMCLib/src/xmc4_scu.c ****                                   (uint32_t)((pdiv - 1U) << SCU_PLL_USBPLLCON_PDIV_Pos));
 4664              	 .loc 3 1159 0
 4665 0038 7B68     	 ldr r3,[r7,#4]
 4666 003a 013B     	 subs r3,r3,#1
 4667 003c 1B06     	 lsls r3,r3,#24
1158:../Libraries/XMCLib/src/xmc4_scu.c ****                                   (uint32_t)((pdiv - 1U) << SCU_PLL_USBPLLCON_PDIV_Pos));
 4668              	 .loc 3 1158 0
 4669 003e 1343     	 orrs r3,r3,r2
 4670 0040 4B61     	 str r3,[r1,#20]
1160:../Libraries/XMCLib/src/xmc4_scu.c **** 
1161:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Set OSCDISCDIS */
1162:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_PLL->USBPLLCON |= (uint32_t)SCU_PLL_USBPLLCON_OSCDISCDIS_Msk;
 4671              	 .loc 3 1162 0
 4672 0042 1A4A     	 ldr r2,.L315
 4673 0044 194B     	 ldr r3,.L315
 4674 0046 5B69     	 ldr r3,[r3,#20]
 4675 0048 43F04003 	 orr r3,r3,#64
 4676 004c 5361     	 str r3,[r2,#20]
1163:../Libraries/XMCLib/src/xmc4_scu.c **** 
1164:../Libraries/XMCLib/src/xmc4_scu.c ****   /* connect Oscillator to USB PLL */
1165:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_PLL->USBPLLCON &= (uint32_t)~SCU_PLL_USBPLLCON_FINDIS_Msk;
 4677              	 .loc 3 1165 0
 4678 004e 174A     	 ldr r2,.L315
 4679 0050 164B     	 ldr r3,.L315
 4680 0052 5B69     	 ldr r3,[r3,#20]
 4681 0054 23F01003 	 bic r3,r3,#16
 4682 0058 5361     	 str r3,[r2,#20]
1166:../Libraries/XMCLib/src/xmc4_scu.c **** 
1167:../Libraries/XMCLib/src/xmc4_scu.c ****   /* restart PLL Lock detection */
1168:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_PLL->USBPLLCON |= (uint32_t)SCU_PLL_USBPLLCON_RESLD_Msk;
 4683              	 .loc 3 1168 0
 4684 005a 144A     	 ldr r2,.L315
 4685 005c 134B     	 ldr r3,.L315
 4686 005e 5B69     	 ldr r3,[r3,#20]
 4687 0060 43F48023 	 orr r3,r3,#262144
 4688 0064 5361     	 str r3,[r2,#20]
1169:../Libraries/XMCLib/src/xmc4_scu.c **** 
1170:../Libraries/XMCLib/src/xmc4_scu.c ****   while ((SCU_PLL->USBPLLSTAT & SCU_PLL_USBPLLSTAT_VCOLOCK_Msk) == 0U)
 4689              	 .loc 3 1170 0
 4690 0066 00BF     	 nop
 4691              	.L313:
 4692              	 .loc 3 1170 0 is_stmt 0 discriminator 1
 4693 0068 104B     	 ldr r3,.L315
 4694 006a 1B69     	 ldr r3,[r3,#16]
 4695 006c 03F00403 	 and r3,r3,#4
 4696 0070 002B     	 cmp r3,#0
 4697 0072 F9D0     	 beq .L313
1171:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1172:../Libraries/XMCLib/src/xmc4_scu.c ****     /* wait for PLL Lock */
1173:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1174:../Libraries/XMCLib/src/xmc4_scu.c **** 
1175:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Disable bypass- put PLL clock back */
1176:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_PLL->USBPLLCON &= ~SCU_PLL_USBPLLCON_VCOBYP_Msk;
 4698              	 .loc 3 1176 0 is_stmt 1
 4699 0074 0D4A     	 ldr r2,.L315
 4700 0076 0D4B     	 ldr r3,.L315
 4701 0078 5B69     	 ldr r3,[r3,#20]
 4702 007a 23F00103 	 bic r3,r3,#1
 4703 007e 5361     	 str r3,[r2,#20]
1177:../Libraries/XMCLib/src/xmc4_scu.c ****   while ((SCU_PLL->USBPLLSTAT & SCU_PLL_USBPLLSTAT_VCOBYST_Msk) != 0U)
 4704              	 .loc 3 1177 0
 4705 0080 00BF     	 nop
 4706              	.L314:
 4707              	 .loc 3 1177 0 is_stmt 0 discriminator 1
 4708 0082 0A4B     	 ldr r3,.L315
 4709 0084 1B69     	 ldr r3,[r3,#16]
 4710 0086 03F00103 	 and r3,r3,#1
 4711 008a 002B     	 cmp r3,#0
 4712 008c F9D1     	 bne .L314
1178:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1179:../Libraries/XMCLib/src/xmc4_scu.c ****     /* wait for normal mode */
1180:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1181:../Libraries/XMCLib/src/xmc4_scu.c **** 
1182:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Reset OSCDISCDIS */
1183:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_PLL->USBPLLCON &= ~SCU_PLL_USBPLLCON_OSCDISCDIS_Msk;
 4713              	 .loc 3 1183 0 is_stmt 1
 4714 008e 074A     	 ldr r2,.L315
 4715 0090 064B     	 ldr r3,.L315
 4716 0092 5B69     	 ldr r3,[r3,#20]
 4717 0094 23F04003 	 bic r3,r3,#64
 4718 0098 5361     	 str r3,[r2,#20]
1184:../Libraries/XMCLib/src/xmc4_scu.c **** 
1185:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_TRAP->TRAPCLR = SCU_TRAP_TRAPCLR_UVCOLCKT_Msk;
 4719              	 .loc 3 1185 0
 4720 009a 054B     	 ldr r3,.L315+4
 4721 009c 0822     	 movs r2,#8
 4722 009e DA60     	 str r2,[r3,#12]
1186:../Libraries/XMCLib/src/xmc4_scu.c **** }
 4723              	 .loc 3 1186 0
 4724 00a0 0C37     	 adds r7,r7,#12
 4725              	.LCFI430:
 4726              	 .cfi_def_cfa_offset 4
 4727 00a2 BD46     	 mov sp,r7
 4728              	.LCFI431:
 4729              	 .cfi_def_cfa_register 13
 4730              	 
 4731 00a4 5DF8047B 	 ldr r7,[sp],#4
 4732              	.LCFI432:
 4733              	 .cfi_restore 7
 4734              	 .cfi_def_cfa_offset 0
 4735 00a8 7047     	 bx lr
 4736              	.L316:
 4737 00aa 00BF     	 .align 2
 4738              	.L315:
 4739 00ac 10470050 	 .word 1342195472
 4740 00b0 60410050 	 .word 1342194016
 4741              	 .cfi_endproc
 4742              	.LFE244:
 4744              	 .section .text.XMC_SCU_CLOCK_StopUsbPll,"ax",%progbits
 4745              	 .align 2
 4746              	 .global XMC_SCU_CLOCK_StopUsbPll
 4747              	 .thumb
 4748              	 .thumb_func
 4750              	XMC_SCU_CLOCK_StopUsbPll:
 4751              	.LFB245:
1187:../Libraries/XMCLib/src/xmc4_scu.c **** 
1188:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to disable USB PLL operation */
1189:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_StopUsbPll(void)
1190:../Libraries/XMCLib/src/xmc4_scu.c **** {
 4752              	 .loc 3 1190 0
 4753              	 .cfi_startproc
 4754              	 
 4755              	 
 4756              	 
 4757 0000 80B4     	 push {r7}
 4758              	.LCFI433:
 4759              	 .cfi_def_cfa_offset 4
 4760              	 .cfi_offset 7,-4
 4761 0002 00AF     	 add r7,sp,#0
 4762              	.LCFI434:
 4763              	 .cfi_def_cfa_register 7
1191:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_PLL->USBPLLCON = (uint32_t)(SCU_PLL_USBPLLCON_VCOPWD_Msk | SCU_PLL_USBPLLCON_PLLPWD_Msk |
 4764              	 .loc 3 1191 0
 4765 0004 034B     	 ldr r3,.L318
 4766 0006 044A     	 ldr r2,.L318+4
 4767 0008 5A61     	 str r2,[r3,#20]
1192:../Libraries/XMCLib/src/xmc4_scu.c ****                                   SCU_PLL_USBPLLCON_VCOBYP_Msk);
1193:../Libraries/XMCLib/src/xmc4_scu.c **** }
 4768              	 .loc 3 1193 0
 4769 000a BD46     	 mov sp,r7
 4770              	.LCFI435:
 4771              	 .cfi_def_cfa_register 13
 4772              	 
 4773 000c 5DF8047B 	 ldr r7,[sp],#4
 4774              	.LCFI436:
 4775              	 .cfi_restore 7
 4776              	 .cfi_def_cfa_offset 0
 4777 0010 7047     	 bx lr
 4778              	.L319:
 4779 0012 00BF     	 .align 2
 4780              	.L318:
 4781 0014 10470050 	 .word 1342195472
 4782 0018 03000100 	 .word 65539
 4783              	 .cfi_endproc
 4784              	.LFE245:
 4786              	 .section .text.XMC_SCU_CLOCK_SetBackupClockCalibrationMode,"ax",%progbits
 4787              	 .align 2
 4788              	 .global XMC_SCU_CLOCK_SetBackupClockCalibrationMode
 4789              	 .thumb
 4790              	 .thumb_func
 4792              	XMC_SCU_CLOCK_SetBackupClockCalibrationMode:
 4793              	.LFB246:
1194:../Libraries/XMCLib/src/xmc4_scu.c **** 
1195:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to onfigure the calibration mode for internal oscillator */
1196:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_SetBackupClockCalibrationMode(XMC_SCU_CLOCK_FOFI_CALIBRATION_MODE_t mode)
1197:../Libraries/XMCLib/src/xmc4_scu.c **** {
 4794              	 .loc 3 1197 0
 4795              	 .cfi_startproc
 4796              	 
 4797              	 
 4798 0000 80B5     	 push {r7,lr}
 4799              	.LCFI437:
 4800              	 .cfi_def_cfa_offset 8
 4801              	 .cfi_offset 7,-8
 4802              	 .cfi_offset 14,-4
 4803 0002 82B0     	 sub sp,sp,#8
 4804              	.LCFI438:
 4805              	 .cfi_def_cfa_offset 16
 4806 0004 00AF     	 add r7,sp,#0
 4807              	.LCFI439:
 4808              	 .cfi_def_cfa_register 7
 4809 0006 0346     	 mov r3,r0
 4810 0008 FB71     	 strb r3,[r7,#7]
1198:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Enable factory calibration based trimming */
1199:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_PLL->PLLCON0 |= (uint32_t)SCU_PLL_PLLCON0_FOTR_Msk;
 4811              	 .loc 3 1199 0
 4812 000a 0F4A     	 ldr r2,.L322
 4813 000c 0E4B     	 ldr r3,.L322
 4814 000e 5B68     	 ldr r3,[r3,#4]
 4815 0010 43F48013 	 orr r3,r3,#1048576
 4816 0014 5360     	 str r3,[r2,#4]
1200:../Libraries/XMCLib/src/xmc4_scu.c **** 
1201:../Libraries/XMCLib/src/xmc4_scu.c ****   if (mode == XMC_SCU_CLOCK_FOFI_CALIBRATION_MODE_AUTOMATIC)
 4817              	 .loc 3 1201 0
 4818 0016 FB79     	 ldrb r3,[r7,#7]
 4819 0018 012B     	 cmp r3,#1
 4820 001a 0ED1     	 bne .L321
1202:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1203:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Disable factory calibration based trimming */
1204:../Libraries/XMCLib/src/xmc4_scu.c ****     SCU_PLL->PLLCON0 &= (uint32_t)~SCU_PLL_PLLCON0_FOTR_Msk;
 4821              	 .loc 3 1204 0
 4822 001c 0A4A     	 ldr r2,.L322
 4823 001e 0A4B     	 ldr r3,.L322
 4824 0020 5B68     	 ldr r3,[r3,#4]
 4825 0022 23F48013 	 bic r3,r3,#1048576
 4826 0026 5360     	 str r3,[r2,#4]
1205:../Libraries/XMCLib/src/xmc4_scu.c ****     XMC_SCU_lDelay(100UL);
 4827              	 .loc 3 1205 0
 4828 0028 6420     	 movs r0,#100
 4829 002a FFF7FEFF 	 bl XMC_SCU_lDelay
1206:../Libraries/XMCLib/src/xmc4_scu.c **** 
1207:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Enable automatic calibration */
1208:../Libraries/XMCLib/src/xmc4_scu.c ****     SCU_PLL->PLLCON0 |= (uint32_t)SCU_PLL_PLLCON0_AOTREN_Msk;
 4830              	 .loc 3 1208 0
 4831 002e 064A     	 ldr r2,.L322
 4832 0030 054B     	 ldr r3,.L322
 4833 0032 5B68     	 ldr r3,[r3,#4]
 4834 0034 43F40023 	 orr r3,r3,#524288
 4835 0038 5360     	 str r3,[r2,#4]
 4836              	.L321:
1209:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1210:../Libraries/XMCLib/src/xmc4_scu.c **** 
1211:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_SCU_lDelay(100UL);
 4837              	 .loc 3 1211 0
 4838 003a 6420     	 movs r0,#100
 4839 003c FFF7FEFF 	 bl XMC_SCU_lDelay
1212:../Libraries/XMCLib/src/xmc4_scu.c **** }
 4840              	 .loc 3 1212 0
 4841 0040 0837     	 adds r7,r7,#8
 4842              	.LCFI440:
 4843              	 .cfi_def_cfa_offset 8
 4844 0042 BD46     	 mov sp,r7
 4845              	.LCFI441:
 4846              	 .cfi_def_cfa_register 13
 4847              	 
 4848 0044 80BD     	 pop {r7,pc}
 4849              	.L323:
 4850 0046 00BF     	 .align 2
 4851              	.L322:
 4852 0048 10470050 	 .word 1342195472
 4853              	 .cfi_endproc
 4854              	.LFE246:
 4856              	 .section .text.XMC_SCU_POWER_EnableUsb,"ax",%progbits
 4857              	 .align 2
 4858              	 .global XMC_SCU_POWER_EnableUsb
 4859              	 .thumb
 4860              	 .thumb_func
 4862              	XMC_SCU_POWER_EnableUsb:
 4863              	.LFB247:
1213:../Libraries/XMCLib/src/xmc4_scu.c **** 
1214:../Libraries/XMCLib/src/xmc4_scu.c **** 
1215:../Libraries/XMCLib/src/xmc4_scu.c **** 
1216:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to enable USB Phy and comparator */
1217:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_POWER_EnableUsb(void)
1218:../Libraries/XMCLib/src/xmc4_scu.c **** {
 4864              	 .loc 3 1218 0
 4865              	 .cfi_startproc
 4866              	 
 4867              	 
 4868              	 
 4869 0000 80B4     	 push {r7}
 4870              	.LCFI442:
 4871              	 .cfi_def_cfa_offset 4
 4872              	 .cfi_offset 7,-4
 4873 0002 00AF     	 add r7,sp,#0
 4874              	.LCFI443:
 4875              	 .cfi_def_cfa_register 7
1219:../Libraries/XMCLib/src/xmc4_scu.c **** #if defined(USB_OTG_SUPPORTED)
1220:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_POWER->PWRSET = (uint32_t)(SCU_POWER_PWRSET_USBOTGEN_Msk | SCU_POWER_PWRSET_USBPHYPDQ_Msk);
1221:../Libraries/XMCLib/src/xmc4_scu.c **** #else
1222:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_POWER->PWRSET = (uint32_t)SCU_POWER_PWRSET_USBPHYPDQ_Msk;
 4876              	 .loc 3 1222 0
 4877 0004 034B     	 ldr r3,.L325
 4878 0006 4FF48032 	 mov r2,#65536
 4879 000a 5A60     	 str r2,[r3,#4]
1223:../Libraries/XMCLib/src/xmc4_scu.c **** #endif
1224:../Libraries/XMCLib/src/xmc4_scu.c **** }
 4880              	 .loc 3 1224 0
 4881 000c BD46     	 mov sp,r7
 4882              	.LCFI444:
 4883              	 .cfi_def_cfa_register 13
 4884              	 
 4885 000e 5DF8047B 	 ldr r7,[sp],#4
 4886              	.LCFI445:
 4887              	 .cfi_restore 7
 4888              	 .cfi_def_cfa_offset 0
 4889 0012 7047     	 bx lr
 4890              	.L326:
 4891              	 .align 2
 4892              	.L325:
 4893 0014 00420050 	 .word 1342194176
 4894              	 .cfi_endproc
 4895              	.LFE247:
 4897              	 .section .text.XMC_SCU_POWER_DisableUsb,"ax",%progbits
 4898              	 .align 2
 4899              	 .global XMC_SCU_POWER_DisableUsb
 4900              	 .thumb
 4901              	 .thumb_func
 4903              	XMC_SCU_POWER_DisableUsb:
 4904              	.LFB248:
1225:../Libraries/XMCLib/src/xmc4_scu.c **** 
1226:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to power down USB Phy and comparator */
1227:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_POWER_DisableUsb(void)
1228:../Libraries/XMCLib/src/xmc4_scu.c **** {
 4905              	 .loc 3 1228 0
 4906              	 .cfi_startproc
 4907              	 
 4908              	 
 4909              	 
 4910 0000 80B4     	 push {r7}
 4911              	.LCFI446:
 4912              	 .cfi_def_cfa_offset 4
 4913              	 .cfi_offset 7,-4
 4914 0002 00AF     	 add r7,sp,#0
 4915              	.LCFI447:
 4916              	 .cfi_def_cfa_register 7
1229:../Libraries/XMCLib/src/xmc4_scu.c **** #if defined(USB_OTG_SUPPORTED)
1230:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_POWER->PWRCLR = (uint32_t)(SCU_POWER_PWRCLR_USBOTGEN_Msk | SCU_POWER_PWRSET_USBPHYPDQ_Msk);
1231:../Libraries/XMCLib/src/xmc4_scu.c **** #else
1232:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_POWER->PWRCLR = (uint32_t)SCU_POWER_PWRCLR_USBPHYPDQ_Msk;
 4917              	 .loc 3 1232 0
 4918 0004 034B     	 ldr r3,.L328
 4919 0006 4FF48032 	 mov r2,#65536
 4920 000a 9A60     	 str r2,[r3,#8]
1233:../Libraries/XMCLib/src/xmc4_scu.c **** #endif
1234:../Libraries/XMCLib/src/xmc4_scu.c **** }
 4921              	 .loc 3 1234 0
 4922 000c BD46     	 mov sp,r7
 4923              	.LCFI448:
 4924              	 .cfi_def_cfa_register 13
 4925              	 
 4926 000e 5DF8047B 	 ldr r7,[sp],#4
 4927              	.LCFI449:
 4928              	 .cfi_restore 7
 4929              	 .cfi_def_cfa_offset 0
 4930 0012 7047     	 bx lr
 4931              	.L329:
 4932              	 .align 2
 4933              	.L328:
 4934 0014 00420050 	 .word 1342194176
 4935              	 .cfi_endproc
 4936              	.LFE248:
 4938              	 .section .text.XMC_SCU_CLOCK_IsUsbPllLocked,"ax",%progbits
 4939              	 .align 2
 4940              	 .global XMC_SCU_CLOCK_IsUsbPllLocked
 4941              	 .thumb
 4942              	 .thumb_func
 4944              	XMC_SCU_CLOCK_IsUsbPllLocked:
 4945              	.LFB249:
1235:../Libraries/XMCLib/src/xmc4_scu.c **** 
1236:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to check USB PLL is locked or not */
1237:../Libraries/XMCLib/src/xmc4_scu.c **** bool XMC_SCU_CLOCK_IsUsbPllLocked(void)
1238:../Libraries/XMCLib/src/xmc4_scu.c **** {
 4946              	 .loc 3 1238 0
 4947              	 .cfi_startproc
 4948              	 
 4949              	 
 4950              	 
 4951 0000 80B4     	 push {r7}
 4952              	.LCFI450:
 4953              	 .cfi_def_cfa_offset 4
 4954              	 .cfi_offset 7,-4
 4955 0002 00AF     	 add r7,sp,#0
 4956              	.LCFI451:
 4957              	 .cfi_def_cfa_register 7
1239:../Libraries/XMCLib/src/xmc4_scu.c ****   return (bool)((SCU_PLL->USBPLLSTAT & SCU_PLL_USBPLLSTAT_VCOLOCK_Msk) != 0UL);
 4958              	 .loc 3 1239 0
 4959 0004 064B     	 ldr r3,.L332
 4960 0006 1B69     	 ldr r3,[r3,#16]
 4961 0008 03F00403 	 and r3,r3,#4
 4962 000c 002B     	 cmp r3,#0
 4963 000e 14BF     	 ite ne
 4964 0010 0123     	 movne r3,#1
 4965 0012 0023     	 moveq r3,#0
 4966 0014 DBB2     	 uxtb r3,r3
1240:../Libraries/XMCLib/src/xmc4_scu.c **** }
 4967              	 .loc 3 1240 0
 4968 0016 1846     	 mov r0,r3
 4969 0018 BD46     	 mov sp,r7
 4970              	.LCFI452:
 4971              	 .cfi_def_cfa_register 13
 4972              	 
 4973 001a 5DF8047B 	 ldr r7,[sp],#4
 4974              	.LCFI453:
 4975              	 .cfi_restore 7
 4976              	 .cfi_def_cfa_offset 0
 4977 001e 7047     	 bx lr
 4978              	.L333:
 4979              	 .align 2
 4980              	.L332:
 4981 0020 10470050 	 .word 1342195472
 4982              	 .cfi_endproc
 4983              	.LFE249:
 4985              	 .section .text.XMC_SCU_HIB_EnableHibernateDomain,"ax",%progbits
 4986              	 .align 2
 4987              	 .global XMC_SCU_HIB_EnableHibernateDomain
 4988              	 .thumb
 4989              	 .thumb_func
 4991              	XMC_SCU_HIB_EnableHibernateDomain:
 4992              	.LFB250:
1241:../Libraries/XMCLib/src/xmc4_scu.c **** 
1242:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to power up the hibernation domain */
1243:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_EnableHibernateDomain(void)
1244:../Libraries/XMCLib/src/xmc4_scu.c **** {
 4993              	 .loc 3 1244 0
 4994              	 .cfi_startproc
 4995              	 
 4996              	 
 4997              	 
 4998 0000 80B4     	 push {r7}
 4999              	.LCFI454:
 5000              	 .cfi_def_cfa_offset 4
 5001              	 .cfi_offset 7,-4
 5002 0002 00AF     	 add r7,sp,#0
 5003              	.LCFI455:
 5004              	 .cfi_def_cfa_register 7
1245:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Power up HIB domain if and only if it is currently powered down */
1246:../Libraries/XMCLib/src/xmc4_scu.c ****   if ((SCU_POWER->PWRSTAT & SCU_POWER_PWRSTAT_HIBEN_Msk) == 0UL)
 5005              	 .loc 3 1246 0
 5006 0004 124B     	 ldr r3,.L339
 5007 0006 1B68     	 ldr r3,[r3]
 5008 0008 03F00103 	 and r3,r3,#1
 5009 000c 002B     	 cmp r3,#0
 5010 000e 09D1     	 bne .L335
1247:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1248:../Libraries/XMCLib/src/xmc4_scu.c ****     SCU_POWER->PWRSET = (uint32_t)SCU_POWER_PWRSET_HIB_Msk;
 5011              	 .loc 3 1248 0
 5012 0010 0F4B     	 ldr r3,.L339
 5013 0012 0122     	 movs r2,#1
 5014 0014 5A60     	 str r2,[r3,#4]
1249:../Libraries/XMCLib/src/xmc4_scu.c **** 
1250:../Libraries/XMCLib/src/xmc4_scu.c ****     while ((SCU_POWER->PWRSTAT & SCU_POWER_PWRSTAT_HIBEN_Msk) == 0UL)
 5015              	 .loc 3 1250 0
 5016 0016 00BF     	 nop
 5017              	.L336:
 5018              	 .loc 3 1250 0 is_stmt 0 discriminator 1
 5019 0018 0D4B     	 ldr r3,.L339
 5020 001a 1B68     	 ldr r3,[r3]
 5021 001c 03F00103 	 and r3,r3,#1
 5022 0020 002B     	 cmp r3,#0
 5023 0022 F9D0     	 beq .L336
 5024              	.L335:
1251:../Libraries/XMCLib/src/xmc4_scu.c ****     {
1252:../Libraries/XMCLib/src/xmc4_scu.c ****       /* wait until HIB domain is enabled */
1253:../Libraries/XMCLib/src/xmc4_scu.c ****     }
1254:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1255:../Libraries/XMCLib/src/xmc4_scu.c **** 
1256:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Remove the reset only if HIB domain were in a state of reset */
1257:../Libraries/XMCLib/src/xmc4_scu.c ****   if ((SCU_RESET->RSTSTAT) & SCU_RESET_RSTSTAT_HIBRS_Msk)
 5025              	 .loc 3 1257 0 is_stmt 1
 5026 0024 0B4B     	 ldr r3,.L339+4
 5027 0026 1B68     	 ldr r3,[r3]
 5028 0028 03F40073 	 and r3,r3,#512
 5029 002c 002B     	 cmp r3,#0
 5030 002e 0AD0     	 beq .L334
1258:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1259:../Libraries/XMCLib/src/xmc4_scu.c ****     SCU_RESET->RSTCLR = (uint32_t)SCU_RESET_RSTCLR_HIBRS_Msk;
 5031              	 .loc 3 1259 0
 5032 0030 084B     	 ldr r3,.L339+4
 5033 0032 4FF40072 	 mov r2,#512
 5034 0036 9A60     	 str r2,[r3,#8]
1260:../Libraries/XMCLib/src/xmc4_scu.c ****     while ((SCU_RESET->RSTSTAT & SCU_RESET_RSTSTAT_HIBRS_Msk) != 0UL)
 5035              	 .loc 3 1260 0
 5036 0038 00BF     	 nop
 5037              	.L338:
 5038              	 .loc 3 1260 0 is_stmt 0 discriminator 1
 5039 003a 064B     	 ldr r3,.L339+4
 5040 003c 1B68     	 ldr r3,[r3]
 5041 003e 03F40073 	 and r3,r3,#512
 5042 0042 002B     	 cmp r3,#0
 5043 0044 F9D1     	 bne .L338
 5044              	.L334:
1261:../Libraries/XMCLib/src/xmc4_scu.c ****     {
1262:../Libraries/XMCLib/src/xmc4_scu.c ****       /* wait until HIB domain is enabled */
1263:../Libraries/XMCLib/src/xmc4_scu.c ****     }
1264:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1265:../Libraries/XMCLib/src/xmc4_scu.c **** }
 5045              	 .loc 3 1265 0 is_stmt 1
 5046 0046 BD46     	 mov sp,r7
 5047              	.LCFI456:
 5048              	 .cfi_def_cfa_register 13
 5049              	 
 5050 0048 5DF8047B 	 ldr r7,[sp],#4
 5051              	.LCFI457:
 5052              	 .cfi_restore 7
 5053              	 .cfi_def_cfa_offset 0
 5054 004c 7047     	 bx lr
 5055              	.L340:
 5056 004e 00BF     	 .align 2
 5057              	.L339:
 5058 0050 00420050 	 .word 1342194176
 5059 0054 00440050 	 .word 1342194688
 5060              	 .cfi_endproc
 5061              	.LFE250:
 5063              	 .section .text.XMC_SCU_HIB_DisableHibernateDomain,"ax",%progbits
 5064              	 .align 2
 5065              	 .global XMC_SCU_HIB_DisableHibernateDomain
 5066              	 .thumb
 5067              	 .thumb_func
 5069              	XMC_SCU_HIB_DisableHibernateDomain:
 5070              	.LFB251:
1266:../Libraries/XMCLib/src/xmc4_scu.c **** 
1267:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to power down the hibernation domain */
1268:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_DisableHibernateDomain(void)
1269:../Libraries/XMCLib/src/xmc4_scu.c **** {
 5071              	 .loc 3 1269 0
 5072              	 .cfi_startproc
 5073              	 
 5074              	 
 5075              	 
 5076 0000 80B4     	 push {r7}
 5077              	.LCFI458:
 5078              	 .cfi_def_cfa_offset 4
 5079              	 .cfi_offset 7,-4
 5080 0002 00AF     	 add r7,sp,#0
 5081              	.LCFI459:
 5082              	 .cfi_def_cfa_register 7
1270:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Disable hibernate domain */
1271:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_POWER->PWRCLR = (uint32_t)SCU_POWER_PWRCLR_HIB_Msk;
 5083              	 .loc 3 1271 0
 5084 0004 054B     	 ldr r3,.L342
 5085 0006 0122     	 movs r2,#1
 5086 0008 9A60     	 str r2,[r3,#8]
1272:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Reset of hibernate domain reset */
1273:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_RESET->RSTSET = (uint32_t)SCU_RESET_RSTSET_HIBRS_Msk;
 5087              	 .loc 3 1273 0
 5088 000a 054B     	 ldr r3,.L342+4
 5089 000c 4FF40072 	 mov r2,#512
 5090 0010 5A60     	 str r2,[r3,#4]
1274:../Libraries/XMCLib/src/xmc4_scu.c **** }
 5091              	 .loc 3 1274 0
 5092 0012 BD46     	 mov sp,r7
 5093              	.LCFI460:
 5094              	 .cfi_def_cfa_register 13
 5095              	 
 5096 0014 5DF8047B 	 ldr r7,[sp],#4
 5097              	.LCFI461:
 5098              	 .cfi_restore 7
 5099              	 .cfi_def_cfa_offset 0
 5100 0018 7047     	 bx lr
 5101              	.L343:
 5102 001a 00BF     	 .align 2
 5103              	.L342:
 5104 001c 00420050 	 .word 1342194176
 5105 0020 00440050 	 .word 1342194688
 5106              	 .cfi_endproc
 5107              	.LFE251:
 5109              	 .section .text.XMC_SCU_HIB_IsHibernateDomainEnabled,"ax",%progbits
 5110              	 .align 2
 5111              	 .global XMC_SCU_HIB_IsHibernateDomainEnabled
 5112              	 .thumb
 5113              	 .thumb_func
 5115              	XMC_SCU_HIB_IsHibernateDomainEnabled:
 5116              	.LFB252:
1275:../Libraries/XMCLib/src/xmc4_scu.c **** 
1276:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to check the hibernation domain is enabled or not */
1277:../Libraries/XMCLib/src/xmc4_scu.c **** bool XMC_SCU_HIB_IsHibernateDomainEnabled(void)
1278:../Libraries/XMCLib/src/xmc4_scu.c **** {
 5117              	 .loc 3 1278 0
 5118              	 .cfi_startproc
 5119              	 
 5120              	 
 5121              	 
 5122 0000 80B4     	 push {r7}
 5123              	.LCFI462:
 5124              	 .cfi_def_cfa_offset 4
 5125              	 .cfi_offset 7,-4
 5126 0002 00AF     	 add r7,sp,#0
 5127              	.LCFI463:
 5128              	 .cfi_def_cfa_register 7
1279:../Libraries/XMCLib/src/xmc4_scu.c ****   return ((bool)(SCU_POWER->PWRSTAT & SCU_POWER_PWRSTAT_HIBEN_Msk) &&
 5129              	 .loc 3 1279 0
 5130 0004 0B4B     	 ldr r3,.L348
 5131 0006 1B68     	 ldr r3,[r3]
 5132 0008 03F00103 	 and r3,r3,#1
 5133 000c 002B     	 cmp r3,#0
 5134 000e 07D0     	 beq .L345
1280:../Libraries/XMCLib/src/xmc4_scu.c ****           !(bool)(SCU_RESET->RSTSTAT & SCU_RESET_RSTSTAT_HIBRS_Msk));
 5135              	 .loc 3 1280 0 discriminator 1
 5136 0010 094B     	 ldr r3,.L348+4
 5137 0012 1B68     	 ldr r3,[r3]
 5138 0014 03F40073 	 and r3,r3,#512
1279:../Libraries/XMCLib/src/xmc4_scu.c ****   return ((bool)(SCU_POWER->PWRSTAT & SCU_POWER_PWRSTAT_HIBEN_Msk) &&
 5139              	 .loc 3 1279 0 discriminator 1
 5140 0018 002B     	 cmp r3,#0
 5141 001a 01D1     	 bne .L345
1279:../Libraries/XMCLib/src/xmc4_scu.c ****   return ((bool)(SCU_POWER->PWRSTAT & SCU_POWER_PWRSTAT_HIBEN_Msk) &&
 5142              	 .loc 3 1279 0 is_stmt 0 discriminator 3
 5143 001c 0123     	 movs r3,#1
 5144 001e 00E0     	 b .L346
 5145              	.L345:
1279:../Libraries/XMCLib/src/xmc4_scu.c ****   return ((bool)(SCU_POWER->PWRSTAT & SCU_POWER_PWRSTAT_HIBEN_Msk) &&
 5146              	 .loc 3 1279 0 discriminator 4
 5147 0020 0023     	 movs r3,#0
 5148              	.L346:
1279:../Libraries/XMCLib/src/xmc4_scu.c ****   return ((bool)(SCU_POWER->PWRSTAT & SCU_POWER_PWRSTAT_HIBEN_Msk) &&
 5149              	 .loc 3 1279 0 discriminator 6
 5150 0022 03F00103 	 and r3,r3,#1
 5151 0026 DBB2     	 uxtb r3,r3
1281:../Libraries/XMCLib/src/xmc4_scu.c **** }
 5152              	 .loc 3 1281 0 is_stmt 1 discriminator 6
 5153 0028 1846     	 mov r0,r3
 5154 002a BD46     	 mov sp,r7
 5155              	.LCFI464:
 5156              	 .cfi_def_cfa_register 13
 5157              	 
 5158 002c 5DF8047B 	 ldr r7,[sp],#4
 5159              	.LCFI465:
 5160              	 .cfi_restore 7
 5161              	 .cfi_def_cfa_offset 0
 5162 0030 7047     	 bx lr
 5163              	.L349:
 5164 0032 00BF     	 .align 2
 5165              	.L348:
 5166 0034 00420050 	 .word 1342194176
 5167 0038 00440050 	 .word 1342194688
 5168              	 .cfi_endproc
 5169              	.LFE252:
 5171              	 .section .text.XMC_SCU_HIB_EnableInternalSlowClock,"ax",%progbits
 5172              	 .align 2
 5173              	 .global XMC_SCU_HIB_EnableInternalSlowClock
 5174              	 .thumb
 5175              	 .thumb_func
 5177              	XMC_SCU_HIB_EnableInternalSlowClock:
 5178              	.LFB253:
1282:../Libraries/XMCLib/src/xmc4_scu.c **** 
1283:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to enable internal slow clock - fOSI (32.768kHz) in hibernate domain */
1284:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_EnableInternalSlowClock(void)
1285:../Libraries/XMCLib/src/xmc4_scu.c **** {
 5179              	 .loc 3 1285 0
 5180              	 .cfi_startproc
 5181              	 
 5182              	 
 5183              	 
 5184 0000 80B4     	 push {r7}
 5185              	.LCFI466:
 5186              	 .cfi_def_cfa_offset 4
 5187              	 .cfi_offset 7,-4
 5188 0002 00AF     	 add r7,sp,#0
 5189              	.LCFI467:
 5190              	 .cfi_def_cfa_register 7
1286:../Libraries/XMCLib/src/xmc4_scu.c ****   while ((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_OSCSICTRL_Msk)
 5191              	 .loc 3 1286 0
 5192 0004 00BF     	 nop
 5193              	.L351:
 5194              	 .loc 3 1286 0 is_stmt 0 discriminator 1
 5195 0006 084B     	 ldr r3,.L352
 5196 0008 D3F8C430 	 ldr r3,[r3,#196]
 5197 000c 03F02003 	 and r3,r3,#32
 5198 0010 002B     	 cmp r3,#0
 5199 0012 F8D1     	 bne .L351
1287:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1288:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Wait until OSCSICTRL register in hibernate domain is ready to accept a write */
1289:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1290:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->OSCSICTRL &= (uint32_t)~(SCU_HIBERNATE_OSCSICTRL_PWD_Msk);
 5200              	 .loc 3 1290 0 is_stmt 1
 5201 0014 054A     	 ldr r2,.L352+4
 5202 0016 054B     	 ldr r3,.L352+4
 5203 0018 5B69     	 ldr r3,[r3,#20]
 5204 001a 23F00103 	 bic r3,r3,#1
 5205 001e 5361     	 str r3,[r2,#20]
1291:../Libraries/XMCLib/src/xmc4_scu.c **** }
 5206              	 .loc 3 1291 0
 5207 0020 BD46     	 mov sp,r7
 5208              	.LCFI468:
 5209              	 .cfi_def_cfa_register 13
 5210              	 
 5211 0022 5DF8047B 	 ldr r7,[sp],#4
 5212              	.LCFI469:
 5213              	 .cfi_restore 7
 5214              	 .cfi_def_cfa_offset 0
 5215 0026 7047     	 bx lr
 5216              	.L353:
 5217              	 .align 2
 5218              	.L352:
 5219 0028 00400050 	 .word 1342193664
 5220 002c 00430050 	 .word 1342194432
 5221              	 .cfi_endproc
 5222              	.LFE253:
 5224              	 .section .text.XMC_SCU_HIB_DisableInternalSlowClock,"ax",%progbits
 5225              	 .align 2
 5226              	 .global XMC_SCU_HIB_DisableInternalSlowClock
 5227              	 .thumb
 5228              	 .thumb_func
 5230              	XMC_SCU_HIB_DisableInternalSlowClock:
 5231              	.LFB254:
1292:../Libraries/XMCLib/src/xmc4_scu.c **** 
1293:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to disable internal slow clock - fOSI (32.768kHz) in hibernate domain */
1294:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_DisableInternalSlowClock(void)
1295:../Libraries/XMCLib/src/xmc4_scu.c **** {
 5232              	 .loc 3 1295 0
 5233              	 .cfi_startproc
 5234              	 
 5235              	 
 5236              	 
 5237 0000 80B4     	 push {r7}
 5238              	.LCFI470:
 5239              	 .cfi_def_cfa_offset 4
 5240              	 .cfi_offset 7,-4
 5241 0002 00AF     	 add r7,sp,#0
 5242              	.LCFI471:
 5243              	 .cfi_def_cfa_register 7
1296:../Libraries/XMCLib/src/xmc4_scu.c ****   while ((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_OSCSICTRL_Msk)
 5244              	 .loc 3 1296 0
 5245 0004 00BF     	 nop
 5246              	.L355:
 5247              	 .loc 3 1296 0 is_stmt 0 discriminator 1
 5248 0006 084B     	 ldr r3,.L356
 5249 0008 D3F8C430 	 ldr r3,[r3,#196]
 5250 000c 03F02003 	 and r3,r3,#32
 5251 0010 002B     	 cmp r3,#0
 5252 0012 F8D1     	 bne .L355
1297:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1298:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Wait until OSCSICTRL register in hibernate domain is ready to accept a write */
1299:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1300:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->OSCSICTRL |= (uint32_t)SCU_HIBERNATE_OSCSICTRL_PWD_Msk;
 5253              	 .loc 3 1300 0 is_stmt 1
 5254 0014 054A     	 ldr r2,.L356+4
 5255 0016 054B     	 ldr r3,.L356+4
 5256 0018 5B69     	 ldr r3,[r3,#20]
 5257 001a 43F00103 	 orr r3,r3,#1
 5258 001e 5361     	 str r3,[r2,#20]
1301:../Libraries/XMCLib/src/xmc4_scu.c **** }
 5259              	 .loc 3 1301 0
 5260 0020 BD46     	 mov sp,r7
 5261              	.LCFI472:
 5262              	 .cfi_def_cfa_register 13
 5263              	 
 5264 0022 5DF8047B 	 ldr r7,[sp],#4
 5265              	.LCFI473:
 5266              	 .cfi_restore 7
 5267              	 .cfi_def_cfa_offset 0
 5268 0026 7047     	 bx lr
 5269              	.L357:
 5270              	 .align 2
 5271              	.L356:
 5272 0028 00400050 	 .word 1342193664
 5273 002c 00430050 	 .word 1342194432
 5274              	 .cfi_endproc
 5275              	.LFE254:
 5277              	 .section .text.XMC_SCU_HIB_ClearEventStatus,"ax",%progbits
 5278              	 .align 2
 5279              	 .global XMC_SCU_HIB_ClearEventStatus
 5280              	 .thumb
 5281              	 .thumb_func
 5283              	XMC_SCU_HIB_ClearEventStatus:
 5284              	.LFB255:
1302:../Libraries/XMCLib/src/xmc4_scu.c **** 
1303:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_ClearEventStatus(int32_t event)
1304:../Libraries/XMCLib/src/xmc4_scu.c **** {
 5285              	 .loc 3 1304 0
 5286              	 .cfi_startproc
 5287              	 
 5288              	 
 5289              	 
 5290 0000 80B4     	 push {r7}
 5291              	.LCFI474:
 5292              	 .cfi_def_cfa_offset 4
 5293              	 .cfi_offset 7,-4
 5294 0002 83B0     	 sub sp,sp,#12
 5295              	.LCFI475:
 5296              	 .cfi_def_cfa_offset 16
 5297 0004 00AF     	 add r7,sp,#0
 5298              	.LCFI476:
 5299              	 .cfi_def_cfa_register 7
 5300 0006 7860     	 str r0,[r7,#4]
1305:../Libraries/XMCLib/src/xmc4_scu.c ****   while ((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_HDCLR_Msk)
 5301              	 .loc 3 1305 0
 5302 0008 00BF     	 nop
 5303              	.L359:
 5304              	 .loc 3 1305 0 is_stmt 0 discriminator 1
 5305 000a 074B     	 ldr r3,.L360
 5306 000c D3F8C430 	 ldr r3,[r3,#196]
 5307 0010 03F00203 	 and r3,r3,#2
 5308 0014 002B     	 cmp r3,#0
 5309 0016 F8D1     	 bne .L359
1306:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1307:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Wait until HDCLR register in hibernate domain is ready to accept a write */
1308:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1309:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->HDCLR = (uint32_t)event;
 5310              	 .loc 3 1309 0 is_stmt 1
 5311 0018 044A     	 ldr r2,.L360+4
 5312 001a 7B68     	 ldr r3,[r7,#4]
 5313 001c 5360     	 str r3,[r2,#4]
1310:../Libraries/XMCLib/src/xmc4_scu.c **** }
 5314              	 .loc 3 1310 0
 5315 001e 0C37     	 adds r7,r7,#12
 5316              	.LCFI477:
 5317              	 .cfi_def_cfa_offset 4
 5318 0020 BD46     	 mov sp,r7
 5319              	.LCFI478:
 5320              	 .cfi_def_cfa_register 13
 5321              	 
 5322 0022 5DF8047B 	 ldr r7,[sp],#4
 5323              	.LCFI479:
 5324              	 .cfi_restore 7
 5325              	 .cfi_def_cfa_offset 0
 5326 0026 7047     	 bx lr
 5327              	.L361:
 5328              	 .align 2
 5329              	.L360:
 5330 0028 00400050 	 .word 1342193664
 5331 002c 00430050 	 .word 1342194432
 5332              	 .cfi_endproc
 5333              	.LFE255:
 5335              	 .section .text.XMC_SCU_HIB_TriggerEvent,"ax",%progbits
 5336              	 .align 2
 5337              	 .global XMC_SCU_HIB_TriggerEvent
 5338              	 .thumb
 5339              	 .thumb_func
 5341              	XMC_SCU_HIB_TriggerEvent:
 5342              	.LFB256:
1311:../Libraries/XMCLib/src/xmc4_scu.c **** 
1312:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_TriggerEvent(int32_t event)
1313:../Libraries/XMCLib/src/xmc4_scu.c **** {
 5343              	 .loc 3 1313 0
 5344              	 .cfi_startproc
 5345              	 
 5346              	 
 5347              	 
 5348 0000 80B4     	 push {r7}
 5349              	.LCFI480:
 5350              	 .cfi_def_cfa_offset 4
 5351              	 .cfi_offset 7,-4
 5352 0002 83B0     	 sub sp,sp,#12
 5353              	.LCFI481:
 5354              	 .cfi_def_cfa_offset 16
 5355 0004 00AF     	 add r7,sp,#0
 5356              	.LCFI482:
 5357              	 .cfi_def_cfa_register 7
 5358 0006 7860     	 str r0,[r7,#4]
1314:../Libraries/XMCLib/src/xmc4_scu.c ****   while ((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_HDSET_Msk)
 5359              	 .loc 3 1314 0
 5360 0008 00BF     	 nop
 5361              	.L363:
 5362              	 .loc 3 1314 0 is_stmt 0 discriminator 1
 5363 000a 074B     	 ldr r3,.L364
 5364 000c D3F8C430 	 ldr r3,[r3,#196]
 5365 0010 03F00403 	 and r3,r3,#4
 5366 0014 002B     	 cmp r3,#0
 5367 0016 F8D1     	 bne .L363
1315:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1316:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Wait until HDSET register in hibernate domain is ready to accept a write */
1317:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1318:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->HDSET = (uint32_t)event;
 5368              	 .loc 3 1318 0 is_stmt 1
 5369 0018 044A     	 ldr r2,.L364+4
 5370 001a 7B68     	 ldr r3,[r7,#4]
 5371 001c 9360     	 str r3,[r2,#8]
1319:../Libraries/XMCLib/src/xmc4_scu.c **** }
 5372              	 .loc 3 1319 0
 5373 001e 0C37     	 adds r7,r7,#12
 5374              	.LCFI483:
 5375              	 .cfi_def_cfa_offset 4
 5376 0020 BD46     	 mov sp,r7
 5377              	.LCFI484:
 5378              	 .cfi_def_cfa_register 13
 5379              	 
 5380 0022 5DF8047B 	 ldr r7,[sp],#4
 5381              	.LCFI485:
 5382              	 .cfi_restore 7
 5383              	 .cfi_def_cfa_offset 0
 5384 0026 7047     	 bx lr
 5385              	.L365:
 5386              	 .align 2
 5387              	.L364:
 5388 0028 00400050 	 .word 1342193664
 5389 002c 00430050 	 .word 1342194432
 5390              	 .cfi_endproc
 5391              	.LFE256:
 5393              	 .section .text.XMC_SCU_HIB_EnableEvent,"ax",%progbits
 5394              	 .align 2
 5395              	 .global XMC_SCU_HIB_EnableEvent
 5396              	 .thumb
 5397              	 .thumb_func
 5399              	XMC_SCU_HIB_EnableEvent:
 5400              	.LFB257:
1320:../Libraries/XMCLib/src/xmc4_scu.c **** 
1321:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_EnableEvent(int32_t event)
1322:../Libraries/XMCLib/src/xmc4_scu.c **** {
 5401              	 .loc 3 1322 0
 5402              	 .cfi_startproc
 5403              	 
 5404              	 
 5405              	 
 5406 0000 80B4     	 push {r7}
 5407              	.LCFI486:
 5408              	 .cfi_def_cfa_offset 4
 5409              	 .cfi_offset 7,-4
 5410 0002 83B0     	 sub sp,sp,#12
 5411              	.LCFI487:
 5412              	 .cfi_def_cfa_offset 16
 5413 0004 00AF     	 add r7,sp,#0
 5414              	.LCFI488:
 5415              	 .cfi_def_cfa_register 7
 5416 0006 7860     	 str r0,[r7,#4]
1323:../Libraries/XMCLib/src/xmc4_scu.c **** #if (defined(DOXYGEN) || (UC_SERIES == XMC44) || (UC_SERIES == XMC42) || (UC_SERIES == XMC41))
1324:../Libraries/XMCLib/src/xmc4_scu.c ****   event = ((event & XMC_SCU_HIB_EVENT_LPAC_VBAT_POSEDGE) << (SCU_HIBERNATE_HDCR_VBATHI_Pos - SCU_HI
 5417              	 .loc 3 1324 0
 5418 0008 7B68     	 ldr r3,[r7,#4]
 5419 000a 03F48073 	 and r3,r3,#256
 5420 000e 5B04     	 lsls r3,r3,#17
 5421 0010 1A46     	 mov r2,r3
 5422 0012 7B68     	 ldr r3,[r7,#4]
 5423 0014 23F48073 	 bic r3,r3,#256
 5424 0018 1343     	 orrs r3,r3,r2
 5425 001a 7B60     	 str r3,[r7,#4]
1325:../Libraries/XMCLib/src/xmc4_scu.c ****   event = ((event & XMC_SCU_HIB_EVENT_LPAC_VBAT_NEGEDGE) << (SCU_HIBERNATE_HDCR_VBATLO_Pos - SCU_HI
 5426              	 .loc 3 1325 0
 5427 001c 7B68     	 ldr r3,[r7,#4]
 5428 001e 03F40073 	 and r3,r3,#512
 5429 0022 DB03     	 lsls r3,r3,#15
 5430 0024 1A46     	 mov r2,r3
 5431 0026 7B68     	 ldr r3,[r7,#4]
 5432 0028 23F40073 	 bic r3,r3,#512
 5433 002c 1343     	 orrs r3,r3,r2
 5434 002e 7B60     	 str r3,[r7,#4]
1326:../Libraries/XMCLib/src/xmc4_scu.c ****   event = ((event & XMC_SCU_HIB_EVENT_LPAC_HIB_IO_0_POSEDGE) << (SCU_HIBERNATE_HDCR_AHIBIO0HI_Pos -
 5435              	 .loc 3 1326 0
 5436 0030 7B68     	 ldr r3,[r7,#4]
 5437 0032 03F48063 	 and r3,r3,#1024
 5438 0036 5B04     	 lsls r3,r3,#17
 5439 0038 1A46     	 mov r2,r3
 5440 003a 7B68     	 ldr r3,[r7,#4]
 5441 003c 23F48063 	 bic r3,r3,#1024
 5442 0040 1343     	 orrs r3,r3,r2
 5443 0042 7B60     	 str r3,[r7,#4]
1327:../Libraries/XMCLib/src/xmc4_scu.c ****   event = ((event & XMC_SCU_HIB_EVENT_LPAC_HIB_IO_0_NEGEDGE) << (SCU_HIBERNATE_HDCR_AHIBIO0LO_Pos -
 5444              	 .loc 3 1327 0
 5445 0044 7B68     	 ldr r3,[r7,#4]
 5446 0046 03F40063 	 and r3,r3,#2048
 5447 004a DB03     	 lsls r3,r3,#15
 5448 004c 1A46     	 mov r2,r3
 5449 004e 7B68     	 ldr r3,[r7,#4]
 5450 0050 23F40063 	 bic r3,r3,#2048
 5451 0054 1343     	 orrs r3,r3,r2
 5452 0056 7B60     	 str r3,[r7,#4]
1328:../Libraries/XMCLib/src/xmc4_scu.c **** #if (defined(DOXYGEN) || ((UC_SERIES == XMC44) && (UC_PACKAGE == LQFP100)))
1329:../Libraries/XMCLib/src/xmc4_scu.c ****   event = ((event & XMC_SCU_HIB_EVENT_LPAC_HIB_IO_1_POSEDGE) << (SCU_HIBERNATE_HDCR_AHIBIO1HI_Pos -
1330:../Libraries/XMCLib/src/xmc4_scu.c ****   event = ((event & XMC_SCU_HIB_EVENT_LPAC_HIB_IO_1_NEGEDGE) << (SCU_HIBERNATE_HDCR_AHIBIO1LO_Pos -
1331:../Libraries/XMCLib/src/xmc4_scu.c **** #endif
1332:../Libraries/XMCLib/src/xmc4_scu.c **** #endif
1333:../Libraries/XMCLib/src/xmc4_scu.c **** 
1334:../Libraries/XMCLib/src/xmc4_scu.c ****   while ((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_HDCR_Msk)
 5453              	 .loc 3 1334 0
 5454 0058 00BF     	 nop
 5455              	.L367:
 5456              	 .loc 3 1334 0 is_stmt 0 discriminator 1
 5457 005a 094B     	 ldr r3,.L368
 5458 005c D3F8C430 	 ldr r3,[r3,#196]
 5459 0060 03F00803 	 and r3,r3,#8
 5460 0064 002B     	 cmp r3,#0
 5461 0066 F8D1     	 bne .L367
1335:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1336:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Wait until HDCR register in hibernate domain is ready to accept a write */
1337:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1338:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->HDCR |= (uint32_t)event;
 5462              	 .loc 3 1338 0 is_stmt 1
 5463 0068 0649     	 ldr r1,.L368+4
 5464 006a 064B     	 ldr r3,.L368+4
 5465 006c DA68     	 ldr r2,[r3,#12]
 5466 006e 7B68     	 ldr r3,[r7,#4]
 5467 0070 1343     	 orrs r3,r3,r2
 5468 0072 CB60     	 str r3,[r1,#12]
1339:../Libraries/XMCLib/src/xmc4_scu.c **** }
 5469              	 .loc 3 1339 0
 5470 0074 0C37     	 adds r7,r7,#12
 5471              	.LCFI489:
 5472              	 .cfi_def_cfa_offset 4
 5473 0076 BD46     	 mov sp,r7
 5474              	.LCFI490:
 5475              	 .cfi_def_cfa_register 13
 5476              	 
 5477 0078 5DF8047B 	 ldr r7,[sp],#4
 5478              	.LCFI491:
 5479              	 .cfi_restore 7
 5480              	 .cfi_def_cfa_offset 0
 5481 007c 7047     	 bx lr
 5482              	.L369:
 5483 007e 00BF     	 .align 2
 5484              	.L368:
 5485 0080 00400050 	 .word 1342193664
 5486 0084 00430050 	 .word 1342194432
 5487              	 .cfi_endproc
 5488              	.LFE257:
 5490              	 .section .text.XMC_SCU_HIB_DisableEvent,"ax",%progbits
 5491              	 .align 2
 5492              	 .global XMC_SCU_HIB_DisableEvent
 5493              	 .thumb
 5494              	 .thumb_func
 5496              	XMC_SCU_HIB_DisableEvent:
 5497              	.LFB258:
1340:../Libraries/XMCLib/src/xmc4_scu.c **** 
1341:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_DisableEvent(int32_t event)
1342:../Libraries/XMCLib/src/xmc4_scu.c **** {
 5498              	 .loc 3 1342 0
 5499              	 .cfi_startproc
 5500              	 
 5501              	 
 5502              	 
 5503 0000 80B4     	 push {r7}
 5504              	.LCFI492:
 5505              	 .cfi_def_cfa_offset 4
 5506              	 .cfi_offset 7,-4
 5507 0002 83B0     	 sub sp,sp,#12
 5508              	.LCFI493:
 5509              	 .cfi_def_cfa_offset 16
 5510 0004 00AF     	 add r7,sp,#0
 5511              	.LCFI494:
 5512              	 .cfi_def_cfa_register 7
 5513 0006 7860     	 str r0,[r7,#4]
1343:../Libraries/XMCLib/src/xmc4_scu.c **** #if (defined(DOXYGEN) || (UC_SERIES == XMC44) || (UC_SERIES == XMC42) || (UC_SERIES == XMC41))
1344:../Libraries/XMCLib/src/xmc4_scu.c ****   event = ((event & XMC_SCU_HIB_EVENT_LPAC_VBAT_POSEDGE) << (SCU_HIBERNATE_HDCR_VBATHI_Pos - SCU_HI
 5514              	 .loc 3 1344 0
 5515 0008 7B68     	 ldr r3,[r7,#4]
 5516 000a 03F48073 	 and r3,r3,#256
 5517 000e 5B04     	 lsls r3,r3,#17
 5518 0010 1A46     	 mov r2,r3
 5519 0012 7B68     	 ldr r3,[r7,#4]
 5520 0014 23F48073 	 bic r3,r3,#256
 5521 0018 1343     	 orrs r3,r3,r2
 5522 001a 7B60     	 str r3,[r7,#4]
1345:../Libraries/XMCLib/src/xmc4_scu.c ****   event = ((event & XMC_SCU_HIB_EVENT_LPAC_VBAT_NEGEDGE) << (SCU_HIBERNATE_HDCR_VBATLO_Pos - SCU_HI
 5523              	 .loc 3 1345 0
 5524 001c 7B68     	 ldr r3,[r7,#4]
 5525 001e 03F40073 	 and r3,r3,#512
 5526 0022 DB03     	 lsls r3,r3,#15
 5527 0024 1A46     	 mov r2,r3
 5528 0026 7B68     	 ldr r3,[r7,#4]
 5529 0028 23F40073 	 bic r3,r3,#512
 5530 002c 1343     	 orrs r3,r3,r2
 5531 002e 7B60     	 str r3,[r7,#4]
1346:../Libraries/XMCLib/src/xmc4_scu.c ****   event = ((event & XMC_SCU_HIB_EVENT_LPAC_HIB_IO_0_POSEDGE) << (SCU_HIBERNATE_HDCR_AHIBIO0HI_Pos -
 5532              	 .loc 3 1346 0
 5533 0030 7B68     	 ldr r3,[r7,#4]
 5534 0032 03F48063 	 and r3,r3,#1024
 5535 0036 5B04     	 lsls r3,r3,#17
 5536 0038 1A46     	 mov r2,r3
 5537 003a 7B68     	 ldr r3,[r7,#4]
 5538 003c 23F48063 	 bic r3,r3,#1024
 5539 0040 1343     	 orrs r3,r3,r2
 5540 0042 7B60     	 str r3,[r7,#4]
1347:../Libraries/XMCLib/src/xmc4_scu.c ****   event = ((event & XMC_SCU_HIB_EVENT_LPAC_HIB_IO_0_NEGEDGE) << (SCU_HIBERNATE_HDCR_AHIBIO0LO_Pos -
 5541              	 .loc 3 1347 0
 5542 0044 7B68     	 ldr r3,[r7,#4]
 5543 0046 03F40063 	 and r3,r3,#2048
 5544 004a DB03     	 lsls r3,r3,#15
 5545 004c 1A46     	 mov r2,r3
 5546 004e 7B68     	 ldr r3,[r7,#4]
 5547 0050 23F40063 	 bic r3,r3,#2048
 5548 0054 1343     	 orrs r3,r3,r2
 5549 0056 7B60     	 str r3,[r7,#4]
1348:../Libraries/XMCLib/src/xmc4_scu.c **** #if (defined(DOXYGEN) || ((UC_SERIES == XMC44) && (UC_PACKAGE == LQFP100)))
1349:../Libraries/XMCLib/src/xmc4_scu.c ****   event = ((event & XMC_SCU_HIB_EVENT_LPAC_HIB_IO_1_POSEDGE) << (SCU_HIBERNATE_HDCR_AHIBIO1HI_Pos -
1350:../Libraries/XMCLib/src/xmc4_scu.c ****   event = ((event & XMC_SCU_HIB_EVENT_LPAC_HIB_IO_1_NEGEDGE) << (SCU_HIBERNATE_HDCR_AHIBIO1LO_Pos -
1351:../Libraries/XMCLib/src/xmc4_scu.c **** #endif
1352:../Libraries/XMCLib/src/xmc4_scu.c **** #endif
1353:../Libraries/XMCLib/src/xmc4_scu.c **** 
1354:../Libraries/XMCLib/src/xmc4_scu.c ****   while ((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_HDCR_Msk)
 5550              	 .loc 3 1354 0
 5551 0058 00BF     	 nop
 5552              	.L371:
 5553              	 .loc 3 1354 0 is_stmt 0 discriminator 1
 5554 005a 094B     	 ldr r3,.L372
 5555 005c D3F8C430 	 ldr r3,[r3,#196]
 5556 0060 03F00803 	 and r3,r3,#8
 5557 0064 002B     	 cmp r3,#0
 5558 0066 F8D1     	 bne .L371
1355:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1356:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Wait until HDCR register in hibernate domain is ready to accept a write */
1357:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1358:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->HDCR &= (uint32_t)~event;
 5559              	 .loc 3 1358 0 is_stmt 1
 5560 0068 0649     	 ldr r1,.L372+4
 5561 006a 064B     	 ldr r3,.L372+4
 5562 006c DB68     	 ldr r3,[r3,#12]
 5563 006e 7A68     	 ldr r2,[r7,#4]
 5564 0070 D243     	 mvns r2,r2
 5565 0072 1340     	 ands r3,r3,r2
 5566 0074 CB60     	 str r3,[r1,#12]
1359:../Libraries/XMCLib/src/xmc4_scu.c **** }
 5567              	 .loc 3 1359 0
 5568 0076 0C37     	 adds r7,r7,#12
 5569              	.LCFI495:
 5570              	 .cfi_def_cfa_offset 4
 5571 0078 BD46     	 mov sp,r7
 5572              	.LCFI496:
 5573              	 .cfi_def_cfa_register 13
 5574              	 
 5575 007a 5DF8047B 	 ldr r7,[sp],#4
 5576              	.LCFI497:
 5577              	 .cfi_restore 7
 5578              	 .cfi_def_cfa_offset 0
 5579 007e 7047     	 bx lr
 5580              	.L373:
 5581              	 .align 2
 5582              	.L372:
 5583 0080 00400050 	 .word 1342193664
 5584 0084 00430050 	 .word 1342194432
 5585              	 .cfi_endproc
 5586              	.LFE258:
 5588              	 .section .text.XMC_SCU_HIB_EnterHibernateState,"ax",%progbits
 5589              	 .align 2
 5590              	 .global XMC_SCU_HIB_EnterHibernateState
 5591              	 .thumb
 5592              	 .thumb_func
 5594              	XMC_SCU_HIB_EnterHibernateState:
 5595              	.LFB259:
1360:../Libraries/XMCLib/src/xmc4_scu.c **** 
1361:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_EnterHibernateState(void)
1362:../Libraries/XMCLib/src/xmc4_scu.c **** {
 5596              	 .loc 3 1362 0
 5597              	 .cfi_startproc
 5598              	 
 5599              	 
 5600              	 
 5601 0000 80B4     	 push {r7}
 5602              	.LCFI498:
 5603              	 .cfi_def_cfa_offset 4
 5604              	 .cfi_offset 7,-4
 5605 0002 00AF     	 add r7,sp,#0
 5606              	.LCFI499:
 5607              	 .cfi_def_cfa_register 7
1363:../Libraries/XMCLib/src/xmc4_scu.c ****   while ((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_HDCR_Msk)
 5608              	 .loc 3 1363 0
 5609 0004 00BF     	 nop
 5610              	.L375:
 5611              	 .loc 3 1363 0 is_stmt 0 discriminator 1
 5612 0006 084B     	 ldr r3,.L376
 5613 0008 D3F8C430 	 ldr r3,[r3,#196]
 5614 000c 03F00803 	 and r3,r3,#8
 5615 0010 002B     	 cmp r3,#0
 5616 0012 F8D1     	 bne .L375
1364:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1365:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Wait until HDCR register in hibernate domain is ready to accept a write */
1366:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1367:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->HDCR |= SCU_HIBERNATE_HDCR_HIB_Msk;
 5617              	 .loc 3 1367 0 is_stmt 1
 5618 0014 054A     	 ldr r2,.L376+4
 5619 0016 054B     	 ldr r3,.L376+4
 5620 0018 DB68     	 ldr r3,[r3,#12]
 5621 001a 43F01003 	 orr r3,r3,#16
 5622 001e D360     	 str r3,[r2,#12]
1368:../Libraries/XMCLib/src/xmc4_scu.c **** }
 5623              	 .loc 3 1368 0
 5624 0020 BD46     	 mov sp,r7
 5625              	.LCFI500:
 5626              	 .cfi_def_cfa_register 13
 5627              	 
 5628 0022 5DF8047B 	 ldr r7,[sp],#4
 5629              	.LCFI501:
 5630              	 .cfi_restore 7
 5631              	 .cfi_def_cfa_offset 0
 5632 0026 7047     	 bx lr
 5633              	.L377:
 5634              	 .align 2
 5635              	.L376:
 5636 0028 00400050 	 .word 1342193664
 5637 002c 00430050 	 .word 1342194432
 5638              	 .cfi_endproc
 5639              	.LFE259:
 5641              	 .section .text.XMC_SCU_HIB_EnterHibernateStateEx,"ax",%progbits
 5642              	 .align 2
 5643              	 .global XMC_SCU_HIB_EnterHibernateStateEx
 5644              	 .thumb
 5645              	 .thumb_func
 5647              	XMC_SCU_HIB_EnterHibernateStateEx:
 5648              	.LFB260:
1369:../Libraries/XMCLib/src/xmc4_scu.c **** 
1370:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_EnterHibernateStateEx(XMC_SCU_HIB_HIBERNATE_MODE_t mode)
1371:../Libraries/XMCLib/src/xmc4_scu.c **** {
 5649              	 .loc 3 1371 0
 5650              	 .cfi_startproc
 5651              	 
 5652              	 
 5653 0000 80B5     	 push {r7,lr}
 5654              	.LCFI502:
 5655              	 .cfi_def_cfa_offset 8
 5656              	 .cfi_offset 7,-8
 5657              	 .cfi_offset 14,-4
 5658 0002 82B0     	 sub sp,sp,#8
 5659              	.LCFI503:
 5660              	 .cfi_def_cfa_offset 16
 5661 0004 00AF     	 add r7,sp,#0
 5662              	.LCFI504:
 5663              	 .cfi_def_cfa_register 7
 5664 0006 0346     	 mov r3,r0
 5665 0008 FB71     	 strb r3,[r7,#7]
1372:../Libraries/XMCLib/src/xmc4_scu.c ****   if (mode == XMC_SCU_HIB_HIBERNATE_MODE_EXTERNAL)
 5666              	 .loc 3 1372 0
 5667 000a FB79     	 ldrb r3,[r7,#7]
 5668 000c 002B     	 cmp r3,#0
 5669 000e 01D1     	 bne .L379
1373:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1374:../Libraries/XMCLib/src/xmc4_scu.c ****     XMC_SCU_HIB_EnterHibernateState();
 5670              	 .loc 3 1374 0
 5671 0010 FFF7FEFF 	 bl XMC_SCU_HIB_EnterHibernateState
 5672              	.L379:
1375:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1376:../Libraries/XMCLib/src/xmc4_scu.c **** #if ((UC_SERIES == XMC44) || (UC_SERIES == XMC42) || (UC_SERIES == XMC41))
1377:../Libraries/XMCLib/src/xmc4_scu.c ****   if (mode == XMC_SCU_HIB_HIBERNATE_MODE_INTERNAL)
 5673              	 .loc 3 1377 0
 5674 0014 FB79     	 ldrb r3,[r7,#7]
 5675 0016 012B     	 cmp r3,#1
 5676 0018 0AD1     	 bne .L378
1378:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1379:../Libraries/XMCLib/src/xmc4_scu.c ****     while ((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_HINTSET_Msk)
 5677              	 .loc 3 1379 0
 5678 001a 00BF     	 nop
 5679              	.L381:
 5680              	 .loc 3 1379 0 is_stmt 0 discriminator 1
 5681 001c 064B     	 ldr r3,.L382
 5682 001e D3F8C430 	 ldr r3,[r3,#196]
 5683 0022 03F08073 	 and r3,r3,#16777216
 5684 0026 002B     	 cmp r3,#0
 5685 0028 F8D1     	 bne .L381
1380:../Libraries/XMCLib/src/xmc4_scu.c ****     {
1381:../Libraries/XMCLib/src/xmc4_scu.c ****       /* Wait until HDCR register in hibernate domain is ready to accept a write */
1382:../Libraries/XMCLib/src/xmc4_scu.c ****     }
1383:../Libraries/XMCLib/src/xmc4_scu.c ****     SCU_HIBERNATE->HINTSET = SCU_HIBERNATE_HINTSET_HIBNINT_Msk;
 5686              	 .loc 3 1383 0 is_stmt 1
 5687 002a 044B     	 ldr r3,.L382+4
 5688 002c 0122     	 movs r2,#1
 5689 002e 1A64     	 str r2,[r3,#64]
 5690              	.L378:
1384:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1385:../Libraries/XMCLib/src/xmc4_scu.c **** #endif
1386:../Libraries/XMCLib/src/xmc4_scu.c **** }
 5691              	 .loc 3 1386 0
 5692 0030 0837     	 adds r7,r7,#8
 5693              	.LCFI505:
 5694              	 .cfi_def_cfa_offset 8
 5695 0032 BD46     	 mov sp,r7
 5696              	.LCFI506:
 5697              	 .cfi_def_cfa_register 13
 5698              	 
 5699 0034 80BD     	 pop {r7,pc}
 5700              	.L383:
 5701 0036 00BF     	 .align 2
 5702              	.L382:
 5703 0038 00400050 	 .word 1342193664
 5704 003c 00430050 	 .word 1342194432
 5705              	 .cfi_endproc
 5706              	.LFE260:
 5708              	 .section .text.XMC_SCU_HIB_SetWakeupTriggerInput,"ax",%progbits
 5709              	 .align 2
 5710              	 .global XMC_SCU_HIB_SetWakeupTriggerInput
 5711              	 .thumb
 5712              	 .thumb_func
 5714              	XMC_SCU_HIB_SetWakeupTriggerInput:
 5715              	.LFB261:
1387:../Libraries/XMCLib/src/xmc4_scu.c **** 
1388:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_SetWakeupTriggerInput(XMC_SCU_HIB_IO_t pin)
1389:../Libraries/XMCLib/src/xmc4_scu.c **** {
 5716              	 .loc 3 1389 0
 5717              	 .cfi_startproc
 5718              	 
 5719              	 
 5720              	 
 5721 0000 80B4     	 push {r7}
 5722              	.LCFI507:
 5723              	 .cfi_def_cfa_offset 4
 5724              	 .cfi_offset 7,-4
 5725 0002 83B0     	 sub sp,sp,#12
 5726              	.LCFI508:
 5727              	 .cfi_def_cfa_offset 16
 5728 0004 00AF     	 add r7,sp,#0
 5729              	.LCFI509:
 5730              	 .cfi_def_cfa_register 7
 5731 0006 0346     	 mov r3,r0
 5732 0008 FB71     	 strb r3,[r7,#7]
1390:../Libraries/XMCLib/src/xmc4_scu.c ****   while ((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_HDCR_Msk)
 5733              	 .loc 3 1390 0
 5734 000a 00BF     	 nop
 5735              	.L385:
 5736              	 .loc 3 1390 0 is_stmt 0 discriminator 1
 5737 000c 0D4B     	 ldr r3,.L388
 5738 000e D3F8C430 	 ldr r3,[r3,#196]
 5739 0012 03F00803 	 and r3,r3,#8
 5740 0016 002B     	 cmp r3,#0
 5741 0018 F8D1     	 bne .L385
1391:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1392:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Wait until HDCR register in hibernate domain is ready to accept a write */
1393:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1394:../Libraries/XMCLib/src/xmc4_scu.c **** 
1395:../Libraries/XMCLib/src/xmc4_scu.c ****   if (pin == XMC_SCU_HIB_IO_0)
 5742              	 .loc 3 1395 0 is_stmt 1
 5743 001a FB79     	 ldrb r3,[r7,#7]
 5744 001c 002B     	 cmp r3,#0
 5745 001e 06D1     	 bne .L386
1396:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1397:../Libraries/XMCLib/src/xmc4_scu.c ****     SCU_HIBERNATE->HDCR |= SCU_HIBERNATE_HDCR_WKUPSEL_Msk;
 5746              	 .loc 3 1397 0
 5747 0020 094A     	 ldr r2,.L388+4
 5748 0022 094B     	 ldr r3,.L388+4
 5749 0024 DB68     	 ldr r3,[r3,#12]
 5750 0026 43F48073 	 orr r3,r3,#256
 5751 002a D360     	 str r3,[r2,#12]
 5752 002c 05E0     	 b .L384
 5753              	.L386:
1398:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1399:../Libraries/XMCLib/src/xmc4_scu.c ****   else
1400:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1401:../Libraries/XMCLib/src/xmc4_scu.c ****     SCU_HIBERNATE->HDCR &= ~SCU_HIBERNATE_HDCR_WKUPSEL_Msk;
 5754              	 .loc 3 1401 0
 5755 002e 064A     	 ldr r2,.L388+4
 5756 0030 054B     	 ldr r3,.L388+4
 5757 0032 DB68     	 ldr r3,[r3,#12]
 5758 0034 23F48073 	 bic r3,r3,#256
 5759 0038 D360     	 str r3,[r2,#12]
 5760              	.L384:
1402:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1403:../Libraries/XMCLib/src/xmc4_scu.c **** }
 5761              	 .loc 3 1403 0
 5762 003a 0C37     	 adds r7,r7,#12
 5763              	.LCFI510:
 5764              	 .cfi_def_cfa_offset 4
 5765 003c BD46     	 mov sp,r7
 5766              	.LCFI511:
 5767              	 .cfi_def_cfa_register 13
 5768              	 
 5769 003e 5DF8047B 	 ldr r7,[sp],#4
 5770              	.LCFI512:
 5771              	 .cfi_restore 7
 5772              	 .cfi_def_cfa_offset 0
 5773 0042 7047     	 bx lr
 5774              	.L389:
 5775              	 .align 2
 5776              	.L388:
 5777 0044 00400050 	 .word 1342193664
 5778 0048 00430050 	 .word 1342194432
 5779              	 .cfi_endproc
 5780              	.LFE261:
 5782              	 .section .text.XMC_SCU_HIB_SetPinMode,"ax",%progbits
 5783              	 .align 2
 5784              	 .global XMC_SCU_HIB_SetPinMode
 5785              	 .thumb
 5786              	 .thumb_func
 5788              	XMC_SCU_HIB_SetPinMode:
 5789              	.LFB262:
1404:../Libraries/XMCLib/src/xmc4_scu.c **** 
1405:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_SetPinMode(XMC_SCU_HIB_IO_t pin, XMC_SCU_HIB_PIN_MODE_t mode)
1406:../Libraries/XMCLib/src/xmc4_scu.c **** {
 5790              	 .loc 3 1406 0
 5791              	 .cfi_startproc
 5792              	 
 5793              	 
 5794              	 
 5795 0000 80B4     	 push {r7}
 5796              	.LCFI513:
 5797              	 .cfi_def_cfa_offset 4
 5798              	 .cfi_offset 7,-4
 5799 0002 83B0     	 sub sp,sp,#12
 5800              	.LCFI514:
 5801              	 .cfi_def_cfa_offset 16
 5802 0004 00AF     	 add r7,sp,#0
 5803              	.LCFI515:
 5804              	 .cfi_def_cfa_register 7
 5805 0006 0346     	 mov r3,r0
 5806 0008 3960     	 str r1,[r7]
 5807 000a FB71     	 strb r3,[r7,#7]
1407:../Libraries/XMCLib/src/xmc4_scu.c ****   while ((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_HDCR_Msk)
 5808              	 .loc 3 1407 0
 5809 000c 00BF     	 nop
 5810              	.L391:
 5811              	 .loc 3 1407 0 is_stmt 0 discriminator 1
 5812 000e 0F4B     	 ldr r3,.L392
 5813 0010 D3F8C430 	 ldr r3,[r3,#196]
 5814 0014 03F00803 	 and r3,r3,#8
 5815 0018 002B     	 cmp r3,#0
 5816 001a F8D1     	 bne .L391
1408:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1409:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Wait until HDCR register in hibernate domain is ready to accept a write */
1410:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1411:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->HDCR = (SCU_HIBERNATE->HDCR & ~(SCU_HIBERNATE_HDCR_HIBIO0SEL_Msk << (SCU_HIBERNATE
 5817              	 .loc 3 1411 0 is_stmt 1
 5818 001c 0C49     	 ldr r1,.L392+4
 5819 001e 0C4B     	 ldr r3,.L392+4
 5820 0020 DA68     	 ldr r2,[r3,#12]
 5821 0022 FB79     	 ldrb r3,[r7,#7]
 5822 0024 9B00     	 lsls r3,r3,#2
 5823 0026 1846     	 mov r0,r3
 5824 0028 4FF47023 	 mov r3,#983040
 5825 002c 8340     	 lsls r3,r3,r0
 5826 002e DB43     	 mvns r3,r3
 5827 0030 1A40     	 ands r2,r2,r3
1412:../Libraries/XMCLib/src/xmc4_scu.c ****                         (mode << (SCU_HIBERNATE_HDCR_HIBIOSEL_Size * pin));
 5828              	 .loc 3 1412 0
 5829 0032 FB79     	 ldrb r3,[r7,#7]
 5830 0034 9B00     	 lsls r3,r3,#2
1411:../Libraries/XMCLib/src/xmc4_scu.c ****                         (mode << (SCU_HIBERNATE_HDCR_HIBIOSEL_Size * pin));
 5831              	 .loc 3 1411 0
 5832 0036 1846     	 mov r0,r3
 5833              	 .loc 3 1412 0
 5834 0038 3B68     	 ldr r3,[r7]
 5835 003a 8340     	 lsls r3,r3,r0
1411:../Libraries/XMCLib/src/xmc4_scu.c ****                         (mode << (SCU_HIBERNATE_HDCR_HIBIOSEL_Size * pin));
 5836              	 .loc 3 1411 0
 5837 003c 1343     	 orrs r3,r3,r2
 5838 003e CB60     	 str r3,[r1,#12]
1413:../Libraries/XMCLib/src/xmc4_scu.c **** }
 5839              	 .loc 3 1413 0
 5840 0040 0C37     	 adds r7,r7,#12
 5841              	.LCFI516:
 5842              	 .cfi_def_cfa_offset 4
 5843 0042 BD46     	 mov sp,r7
 5844              	.LCFI517:
 5845              	 .cfi_def_cfa_register 13
 5846              	 
 5847 0044 5DF8047B 	 ldr r7,[sp],#4
 5848              	.LCFI518:
 5849              	 .cfi_restore 7
 5850              	 .cfi_def_cfa_offset 0
 5851 0048 7047     	 bx lr
 5852              	.L393:
 5853 004a 00BF     	 .align 2
 5854              	.L392:
 5855 004c 00400050 	 .word 1342193664
 5856 0050 00430050 	 .word 1342194432
 5857              	 .cfi_endproc
 5858              	.LFE262:
 5860              	 .section .text.XMC_SCU_HIB_SetPinOutputLevel,"ax",%progbits
 5861              	 .align 2
 5862              	 .global XMC_SCU_HIB_SetPinOutputLevel
 5863              	 .thumb
 5864              	 .thumb_func
 5866              	XMC_SCU_HIB_SetPinOutputLevel:
 5867              	.LFB263:
1414:../Libraries/XMCLib/src/xmc4_scu.c **** 
1415:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_SetPinOutputLevel(XMC_SCU_HIB_IO_t pin, XMC_SCU_HIB_IO_OUTPUT_LEVEL_t level)
1416:../Libraries/XMCLib/src/xmc4_scu.c **** {
 5868              	 .loc 3 1416 0
 5869              	 .cfi_startproc
 5870              	 
 5871              	 
 5872              	 
 5873 0000 80B4     	 push {r7}
 5874              	.LCFI519:
 5875              	 .cfi_def_cfa_offset 4
 5876              	 .cfi_offset 7,-4
 5877 0002 83B0     	 sub sp,sp,#12
 5878              	.LCFI520:
 5879              	 .cfi_def_cfa_offset 16
 5880 0004 00AF     	 add r7,sp,#0
 5881              	.LCFI521:
 5882              	 .cfi_def_cfa_register 7
 5883 0006 0346     	 mov r3,r0
 5884 0008 0A46     	 mov r2,r1
 5885 000a FB71     	 strb r3,[r7,#7]
 5886 000c 1346     	 mov r3,r2
 5887 000e BB80     	 strh r3,[r7,#4]
1417:../Libraries/XMCLib/src/xmc4_scu.c ****   while ((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_HDCR_Msk)
 5888              	 .loc 3 1417 0
 5889 0010 00BF     	 nop
 5890              	.L395:
 5891              	 .loc 3 1417 0 is_stmt 0 discriminator 1
 5892 0012 0E4B     	 ldr r3,.L396
 5893 0014 D3F8C430 	 ldr r3,[r3,#196]
 5894 0018 03F00803 	 and r3,r3,#8
 5895 001c 002B     	 cmp r3,#0
 5896 001e F8D1     	 bne .L395
1418:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1419:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Wait until HDCR register in hibernate domain is ready to accept a write */
1420:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1421:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->HDCR = (SCU_HIBERNATE->HDCR & ~(SCU_HIBERNATE_HDCR_HIBIO0POL_Msk << pin)) |
 5897              	 .loc 3 1421 0 is_stmt 1
 5898 0020 0B48     	 ldr r0,.L396+4
 5899 0022 0B4B     	 ldr r3,.L396+4
 5900 0024 DA68     	 ldr r2,[r3,#12]
 5901 0026 FB79     	 ldrb r3,[r7,#7]
 5902 0028 4FF48051 	 mov r1,#4096
 5903 002c 01FA03F3 	 lsl r3,r1,r3
 5904 0030 DB43     	 mvns r3,r3
 5905 0032 1340     	 ands r3,r3,r2
1422:../Libraries/XMCLib/src/xmc4_scu.c ****                         (level << pin);
 5906              	 .loc 3 1422 0
 5907 0034 B988     	 ldrh r1,[r7,#4]
 5908 0036 FA79     	 ldrb r2,[r7,#7]
 5909 0038 01FA02F2 	 lsl r2,r1,r2
1421:../Libraries/XMCLib/src/xmc4_scu.c ****                         (level << pin);
 5910              	 .loc 3 1421 0
 5911 003c 1343     	 orrs r3,r3,r2
 5912 003e C360     	 str r3,[r0,#12]
1423:../Libraries/XMCLib/src/xmc4_scu.c **** }
 5913              	 .loc 3 1423 0
 5914 0040 0C37     	 adds r7,r7,#12
 5915              	.LCFI522:
 5916              	 .cfi_def_cfa_offset 4
 5917 0042 BD46     	 mov sp,r7
 5918              	.LCFI523:
 5919              	 .cfi_def_cfa_register 13
 5920              	 
 5921 0044 5DF8047B 	 ldr r7,[sp],#4
 5922              	.LCFI524:
 5923              	 .cfi_restore 7
 5924              	 .cfi_def_cfa_offset 0
 5925 0048 7047     	 bx lr
 5926              	.L397:
 5927 004a 00BF     	 .align 2
 5928              	.L396:
 5929 004c 00400050 	 .word 1342193664
 5930 0050 00430050 	 .word 1342194432
 5931              	 .cfi_endproc
 5932              	.LFE263:
 5934              	 .section .text.XMC_SCU_HIB_SetInput0,"ax",%progbits
 5935              	 .align 2
 5936              	 .global XMC_SCU_HIB_SetInput0
 5937              	 .thumb
 5938              	 .thumb_func
 5940              	XMC_SCU_HIB_SetInput0:
 5941              	.LFB264:
1424:../Libraries/XMCLib/src/xmc4_scu.c **** 
1425:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_SetInput0(XMC_SCU_HIB_IO_t pin)
1426:../Libraries/XMCLib/src/xmc4_scu.c **** {
 5942              	 .loc 3 1426 0
 5943              	 .cfi_startproc
 5944              	 
 5945              	 
 5946              	 
 5947 0000 80B4     	 push {r7}
 5948              	.LCFI525:
 5949              	 .cfi_def_cfa_offset 4
 5950              	 .cfi_offset 7,-4
 5951 0002 83B0     	 sub sp,sp,#12
 5952              	.LCFI526:
 5953              	 .cfi_def_cfa_offset 16
 5954 0004 00AF     	 add r7,sp,#0
 5955              	.LCFI527:
 5956              	 .cfi_def_cfa_register 7
 5957 0006 0346     	 mov r3,r0
 5958 0008 FB71     	 strb r3,[r7,#7]
1427:../Libraries/XMCLib/src/xmc4_scu.c ****   while ((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_HDCR_Msk)
 5959              	 .loc 3 1427 0
 5960 000a 00BF     	 nop
 5961              	.L399:
 5962              	 .loc 3 1427 0 is_stmt 0 discriminator 1
 5963 000c 0D4B     	 ldr r3,.L402
 5964 000e D3F8C430 	 ldr r3,[r3,#196]
 5965 0012 03F00803 	 and r3,r3,#8
 5966 0016 002B     	 cmp r3,#0
 5967 0018 F8D1     	 bne .L399
1428:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1429:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Wait until HDCR register in hibernate domain is ready to accept a write */
1430:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1431:../Libraries/XMCLib/src/xmc4_scu.c **** 
1432:../Libraries/XMCLib/src/xmc4_scu.c ****   if (pin == XMC_SCU_HIB_IO_0)
 5968              	 .loc 3 1432 0 is_stmt 1
 5969 001a FB79     	 ldrb r3,[r7,#7]
 5970 001c 002B     	 cmp r3,#0
 5971 001e 06D1     	 bne .L400
1433:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1434:../Libraries/XMCLib/src/xmc4_scu.c ****     SCU_HIBERNATE->HDCR |= SCU_HIBERNATE_HDCR_GPI0SEL_Msk;
 5972              	 .loc 3 1434 0
 5973 0020 094A     	 ldr r2,.L402+4
 5974 0022 094B     	 ldr r3,.L402+4
 5975 0024 DB68     	 ldr r3,[r3,#12]
 5976 0026 43F48063 	 orr r3,r3,#1024
 5977 002a D360     	 str r3,[r2,#12]
 5978 002c 05E0     	 b .L398
 5979              	.L400:
1435:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1436:../Libraries/XMCLib/src/xmc4_scu.c ****   else
1437:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1438:../Libraries/XMCLib/src/xmc4_scu.c ****     SCU_HIBERNATE->HDCR &= ~SCU_HIBERNATE_HDCR_GPI0SEL_Msk;
 5980              	 .loc 3 1438 0
 5981 002e 064A     	 ldr r2,.L402+4
 5982 0030 054B     	 ldr r3,.L402+4
 5983 0032 DB68     	 ldr r3,[r3,#12]
 5984 0034 23F48063 	 bic r3,r3,#1024
 5985 0038 D360     	 str r3,[r2,#12]
 5986              	.L398:
1439:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1440:../Libraries/XMCLib/src/xmc4_scu.c **** }
 5987              	 .loc 3 1440 0
 5988 003a 0C37     	 adds r7,r7,#12
 5989              	.LCFI528:
 5990              	 .cfi_def_cfa_offset 4
 5991 003c BD46     	 mov sp,r7
 5992              	.LCFI529:
 5993              	 .cfi_def_cfa_register 13
 5994              	 
 5995 003e 5DF8047B 	 ldr r7,[sp],#4
 5996              	.LCFI530:
 5997              	 .cfi_restore 7
 5998              	 .cfi_def_cfa_offset 0
 5999 0042 7047     	 bx lr
 6000              	.L403:
 6001              	 .align 2
 6002              	.L402:
 6003 0044 00400050 	 .word 1342193664
 6004 0048 00430050 	 .word 1342194432
 6005              	 .cfi_endproc
 6006              	.LFE264:
 6008              	 .section .text.XMC_SCU_HIB_SetSR0Input,"ax",%progbits
 6009              	 .align 2
 6010              	 .global XMC_SCU_HIB_SetSR0Input
 6011              	 .thumb
 6012              	 .thumb_func
 6014              	XMC_SCU_HIB_SetSR0Input:
 6015              	.LFB265:
1441:../Libraries/XMCLib/src/xmc4_scu.c **** 
1442:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_SetSR0Input(XMC_SCU_HIB_SR0_INPUT_t input)
1443:../Libraries/XMCLib/src/xmc4_scu.c **** {
 6016              	 .loc 3 1443 0
 6017              	 .cfi_startproc
 6018              	 
 6019              	 
 6020              	 
 6021 0000 80B4     	 push {r7}
 6022              	.LCFI531:
 6023              	 .cfi_def_cfa_offset 4
 6024              	 .cfi_offset 7,-4
 6025 0002 83B0     	 sub sp,sp,#12
 6026              	.LCFI532:
 6027              	 .cfi_def_cfa_offset 16
 6028 0004 00AF     	 add r7,sp,#0
 6029              	.LCFI533:
 6030              	 .cfi_def_cfa_register 7
 6031 0006 0346     	 mov r3,r0
 6032 0008 FB80     	 strh r3,[r7,#6]
1444:../Libraries/XMCLib/src/xmc4_scu.c ****   while ((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_HDCR_Msk)
 6033              	 .loc 3 1444 0
 6034 000a 00BF     	 nop
 6035              	.L405:
 6036              	 .loc 3 1444 0 is_stmt 0 discriminator 1
 6037 000c 094B     	 ldr r3,.L406
 6038 000e D3F8C430 	 ldr r3,[r3,#196]
 6039 0012 03F00803 	 and r3,r3,#8
 6040 0016 002B     	 cmp r3,#0
 6041 0018 F8D1     	 bne .L405
1445:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1446:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Wait until HDCR register in hibernate domain is ready to accept a write */
1447:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1448:../Libraries/XMCLib/src/xmc4_scu.c **** #if ((UC_SERIES == XMC44) || (UC_SERIES == XMC42) || (UC_SERIES == XMC41))
1449:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->HDCR = (SCU_HIBERNATE->HDCR & (uint32_t)~(SCU_HIBERNATE_HDCR_GPI0SEL_Msk | SCU_HIB
 6042              	 .loc 3 1449 0 is_stmt 1
 6043 001a 0749     	 ldr r1,.L406+4
 6044 001c 064B     	 ldr r3,.L406+4
 6045 001e DB68     	 ldr r3,[r3,#12]
 6046 0020 23F48842 	 bic r2,r3,#17408
 6047 0024 FB88     	 ldrh r3,[r7,#6]
 6048 0026 1343     	 orrs r3,r3,r2
 6049 0028 CB60     	 str r3,[r1,#12]
1450:../Libraries/XMCLib/src/xmc4_scu.c **** #else
1451:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->HDCR = (SCU_HIBERNATE->HDCR & (uint32_t)~(SCU_HIBERNATE_HDCR_GPI0SEL_Msk)) |
1452:../Libraries/XMCLib/src/xmc4_scu.c **** #endif
1453:../Libraries/XMCLib/src/xmc4_scu.c ****                         input;
1454:../Libraries/XMCLib/src/xmc4_scu.c **** }
 6050              	 .loc 3 1454 0
 6051 002a 0C37     	 adds r7,r7,#12
 6052              	.LCFI534:
 6053              	 .cfi_def_cfa_offset 4
 6054 002c BD46     	 mov sp,r7
 6055              	.LCFI535:
 6056              	 .cfi_def_cfa_register 13
 6057              	 
 6058 002e 5DF8047B 	 ldr r7,[sp],#4
 6059              	.LCFI536:
 6060              	 .cfi_restore 7
 6061              	 .cfi_def_cfa_offset 0
 6062 0032 7047     	 bx lr
 6063              	.L407:
 6064              	 .align 2
 6065              	.L406:
 6066 0034 00400050 	 .word 1342193664
 6067 0038 00430050 	 .word 1342194432
 6068              	 .cfi_endproc
 6069              	.LFE265:
 6071              	 .section .text.XMC_SCU_HIB_LPAC_SetInput,"ax",%progbits
 6072              	 .align 2
 6073              	 .global XMC_SCU_HIB_LPAC_SetInput
 6074              	 .thumb
 6075              	 .thumb_func
 6077              	XMC_SCU_HIB_LPAC_SetInput:
 6078              	.LFB266:
1455:../Libraries/XMCLib/src/xmc4_scu.c **** 
1456:../Libraries/XMCLib/src/xmc4_scu.c **** #if ((UC_SERIES == XMC44) || (UC_SERIES == XMC42) || (UC_SERIES == XMC41))
1457:../Libraries/XMCLib/src/xmc4_scu.c **** 
1458:../Libraries/XMCLib/src/xmc4_scu.c **** #if ((UC_SERIES == XMC44) && (UC_PACKAGE == LQFP100))
1459:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_SetSR1Input(XMC_SCU_HIB_SR1_INPUT_t input)
1460:../Libraries/XMCLib/src/xmc4_scu.c **** {
1461:../Libraries/XMCLib/src/xmc4_scu.c ****   while ((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_HDCR_Msk)
1462:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1463:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Wait until HDCR register in hibernate domain is ready to accept a write */
1464:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1465:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->HDCR = (SCU_HIBERNATE->HDCR & (uint32_t)~(SCU_HIBERNATE_HDCR_GPI1SEL_Msk | SCU_HIB
1466:../Libraries/XMCLib/src/xmc4_scu.c ****                         input;
1467:../Libraries/XMCLib/src/xmc4_scu.c **** }
1468:../Libraries/XMCLib/src/xmc4_scu.c **** #endif
1469:../Libraries/XMCLib/src/xmc4_scu.c **** 
1470:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_LPAC_SetInput(XMC_SCU_HIB_LPAC_INPUT_t input)
1471:../Libraries/XMCLib/src/xmc4_scu.c **** {
 6079              	 .loc 3 1471 0
 6080              	 .cfi_startproc
 6081              	 
 6082              	 
 6083              	 
 6084 0000 80B4     	 push {r7}
 6085              	.LCFI537:
 6086              	 .cfi_def_cfa_offset 4
 6087              	 .cfi_offset 7,-4
 6088 0002 83B0     	 sub sp,sp,#12
 6089              	.LCFI538:
 6090              	 .cfi_def_cfa_offset 16
 6091 0004 00AF     	 add r7,sp,#0
 6092              	.LCFI539:
 6093              	 .cfi_def_cfa_register 7
 6094 0006 0346     	 mov r3,r0
 6095 0008 FB71     	 strb r3,[r7,#7]
1472:../Libraries/XMCLib/src/xmc4_scu.c ****   while ((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_LPACCONF_Msk)
 6096              	 .loc 3 1472 0
 6097 000a 00BF     	 nop
 6098              	.L409:
 6099              	 .loc 3 1472 0 is_stmt 0 discriminator 1
 6100 000c 094B     	 ldr r3,.L410
 6101 000e D3F8C430 	 ldr r3,[r3,#196]
 6102 0012 03F48033 	 and r3,r3,#65536
 6103 0016 002B     	 cmp r3,#0
 6104 0018 F8D1     	 bne .L409
1473:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1474:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Wait until HDCR register in hibernate domain is ready to accept a write */
1475:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1476:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->LPACCONF = (SCU_HIBERNATE->LPACCONF &  (uint32_t)~SCU_HIBERNATE_LPACCONF_CMPEN_Msk
 6105              	 .loc 3 1476 0 is_stmt 1
 6106 001a 0749     	 ldr r1,.L410+4
 6107 001c 064B     	 ldr r3,.L410+4
 6108 001e 1B6A     	 ldr r3,[r3,#32]
 6109 0020 23F00702 	 bic r2,r3,#7
 6110 0024 FB79     	 ldrb r3,[r7,#7]
 6111 0026 1343     	 orrs r3,r3,r2
 6112 0028 0B62     	 str r3,[r1,#32]
1477:../Libraries/XMCLib/src/xmc4_scu.c ****                             input;
1478:../Libraries/XMCLib/src/xmc4_scu.c **** }
 6113              	 .loc 3 1478 0
 6114 002a 0C37     	 adds r7,r7,#12
 6115              	.LCFI540:
 6116              	 .cfi_def_cfa_offset 4
 6117 002c BD46     	 mov sp,r7
 6118              	.LCFI541:
 6119              	 .cfi_def_cfa_register 13
 6120              	 
 6121 002e 5DF8047B 	 ldr r7,[sp],#4
 6122              	.LCFI542:
 6123              	 .cfi_restore 7
 6124              	 .cfi_def_cfa_offset 0
 6125 0032 7047     	 bx lr
 6126              	.L411:
 6127              	 .align 2
 6128              	.L410:
 6129 0034 00400050 	 .word 1342193664
 6130 0038 00430050 	 .word 1342194432
 6131              	 .cfi_endproc
 6132              	.LFE266:
 6134              	 .section .text.XMC_SCU_HIB_LPAC_SetTrigger,"ax",%progbits
 6135              	 .align 2
 6136              	 .global XMC_SCU_HIB_LPAC_SetTrigger
 6137              	 .thumb
 6138              	 .thumb_func
 6140              	XMC_SCU_HIB_LPAC_SetTrigger:
 6141              	.LFB267:
1479:../Libraries/XMCLib/src/xmc4_scu.c **** 
1480:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_LPAC_SetTrigger(XMC_SCU_HIB_LPAC_TRIGGER_t trigger)
1481:../Libraries/XMCLib/src/xmc4_scu.c **** {
 6142              	 .loc 3 1481 0
 6143              	 .cfi_startproc
 6144              	 
 6145              	 
 6146              	 
 6147 0000 80B4     	 push {r7}
 6148              	.LCFI543:
 6149              	 .cfi_def_cfa_offset 4
 6150              	 .cfi_offset 7,-4
 6151 0002 83B0     	 sub sp,sp,#12
 6152              	.LCFI544:
 6153              	 .cfi_def_cfa_offset 16
 6154 0004 00AF     	 add r7,sp,#0
 6155              	.LCFI545:
 6156              	 .cfi_def_cfa_register 7
 6157 0006 0346     	 mov r3,r0
 6158 0008 FB71     	 strb r3,[r7,#7]
1482:../Libraries/XMCLib/src/xmc4_scu.c ****   while ((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_LPACCONF_Msk)
 6159              	 .loc 3 1482 0
 6160 000a 00BF     	 nop
 6161              	.L413:
 6162              	 .loc 3 1482 0 is_stmt 0 discriminator 1
 6163 000c 094B     	 ldr r3,.L414
 6164 000e D3F8C430 	 ldr r3,[r3,#196]
 6165 0012 03F48033 	 and r3,r3,#65536
 6166 0016 002B     	 cmp r3,#0
 6167 0018 F8D1     	 bne .L413
1483:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1484:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Wait until HDCR register in hibernate domain is ready to accept a write */
1485:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1486:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->LPACCONF = (SCU_HIBERNATE->LPACCONF &  (uint32_t)~SCU_HIBERNATE_LPACCONF_TRIGSEL_M
 6168              	 .loc 3 1486 0 is_stmt 1
 6169 001a 0749     	 ldr r1,.L414+4
 6170 001c 064B     	 ldr r3,.L414+4
 6171 001e 1B6A     	 ldr r3,[r3,#32]
 6172 0020 23F07002 	 bic r2,r3,#112
 6173 0024 FB79     	 ldrb r3,[r7,#7]
 6174 0026 1343     	 orrs r3,r3,r2
 6175 0028 0B62     	 str r3,[r1,#32]
1487:../Libraries/XMCLib/src/xmc4_scu.c ****                             trigger;
1488:../Libraries/XMCLib/src/xmc4_scu.c **** }
 6176              	 .loc 3 1488 0
 6177 002a 0C37     	 adds r7,r7,#12
 6178              	.LCFI546:
 6179              	 .cfi_def_cfa_offset 4
 6180 002c BD46     	 mov sp,r7
 6181              	.LCFI547:
 6182              	 .cfi_def_cfa_register 13
 6183              	 
 6184 002e 5DF8047B 	 ldr r7,[sp],#4
 6185              	.LCFI548:
 6186              	 .cfi_restore 7
 6187              	 .cfi_def_cfa_offset 0
 6188 0032 7047     	 bx lr
 6189              	.L415:
 6190              	 .align 2
 6191              	.L414:
 6192 0034 00400050 	 .word 1342193664
 6193 0038 00430050 	 .word 1342194432
 6194              	 .cfi_endproc
 6195              	.LFE267:
 6197              	 .section .text.XMC_SCU_HIB_LPAC_SetTiming,"ax",%progbits
 6198              	 .align 2
 6199              	 .global XMC_SCU_HIB_LPAC_SetTiming
 6200              	 .thumb
 6201              	 .thumb_func
 6203              	XMC_SCU_HIB_LPAC_SetTiming:
 6204              	.LFB268:
1489:../Libraries/XMCLib/src/xmc4_scu.c **** 
1490:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_LPAC_SetTiming(bool enable_delay, uint16_t interval_count, uint8_t settle_count)
1491:../Libraries/XMCLib/src/xmc4_scu.c **** {
 6205              	 .loc 3 1491 0
 6206              	 .cfi_startproc
 6207              	 
 6208              	 
 6209              	 
 6210 0000 80B4     	 push {r7}
 6211              	.LCFI549:
 6212              	 .cfi_def_cfa_offset 4
 6213              	 .cfi_offset 7,-4
 6214 0002 85B0     	 sub sp,sp,#20
 6215              	.LCFI550:
 6216              	 .cfi_def_cfa_offset 24
 6217 0004 00AF     	 add r7,sp,#0
 6218              	.LCFI551:
 6219              	 .cfi_def_cfa_register 7
 6220 0006 0346     	 mov r3,r0
 6221 0008 FB71     	 strb r3,[r7,#7]
 6222 000a 0B46     	 mov r3,r1
 6223 000c BB80     	 strh r3,[r7,#4]
 6224 000e 1346     	 mov r3,r2
 6225 0010 BB71     	 strb r3,[r7,#6]
1492:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t config = 0;
 6226              	 .loc 3 1492 0
 6227 0012 0023     	 movs r3,#0
 6228 0014 FB60     	 str r3,[r7,#12]
1493:../Libraries/XMCLib/src/xmc4_scu.c **** 
1494:../Libraries/XMCLib/src/xmc4_scu.c ****   if (enable_delay)
 6229              	 .loc 3 1494 0
 6230 0016 FB79     	 ldrb r3,[r7,#7]
 6231 0018 002B     	 cmp r3,#0
 6232 001a 02D0     	 beq .L417
1495:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1496:../Libraries/XMCLib/src/xmc4_scu.c ****     config = SCU_HIBERNATE_LPACCONF_CONVDEL_Msk;
 6233              	 .loc 3 1496 0
 6234 001c 4FF48053 	 mov r3,#4096
 6235 0020 FB60     	 str r3,[r7,#12]
 6236              	.L417:
1497:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1498:../Libraries/XMCLib/src/xmc4_scu.c **** 
1499:../Libraries/XMCLib/src/xmc4_scu.c ****   config |= interval_count << SCU_HIBERNATE_LPACCONF_INTERVCNT_Pos;
 6237              	 .loc 3 1499 0
 6238 0022 BB88     	 ldrh r3,[r7,#4]
 6239 0024 1B04     	 lsls r3,r3,#16
 6240 0026 1A46     	 mov r2,r3
 6241 0028 FB68     	 ldr r3,[r7,#12]
 6242 002a 1343     	 orrs r3,r3,r2
 6243 002c FB60     	 str r3,[r7,#12]
1500:../Libraries/XMCLib/src/xmc4_scu.c ****   config |= settle_count << SCU_HIBERNATE_LPACCONF_SETTLECNT_Pos;
 6244              	 .loc 3 1500 0
 6245 002e BB79     	 ldrb r3,[r7,#6]
 6246 0030 1B07     	 lsls r3,r3,#28
 6247 0032 1A46     	 mov r2,r3
 6248 0034 FB68     	 ldr r3,[r7,#12]
 6249 0036 1343     	 orrs r3,r3,r2
 6250 0038 FB60     	 str r3,[r7,#12]
1501:../Libraries/XMCLib/src/xmc4_scu.c **** 
1502:../Libraries/XMCLib/src/xmc4_scu.c ****   while ((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_LPACCONF_Msk)
 6251              	 .loc 3 1502 0
 6252 003a 00BF     	 nop
 6253              	.L418:
 6254              	 .loc 3 1502 0 is_stmt 0 discriminator 1
 6255 003c 0A4B     	 ldr r3,.L419
 6256 003e D3F8C430 	 ldr r3,[r3,#196]
 6257 0042 03F48033 	 and r3,r3,#65536
 6258 0046 002B     	 cmp r3,#0
 6259 0048 F8D1     	 bne .L418
1503:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1504:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Wait until HDCR register in hibernate domain is ready to accept a write */
1505:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1506:../Libraries/XMCLib/src/xmc4_scu.c **** 
1507:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->LPACCONF = (SCU_HIBERNATE->LPACCONF &  (uint32_t)~(SCU_HIBERNATE_LPACCONF_CONVDEL_
 6260              	 .loc 3 1507 0 is_stmt 1
 6261 004a 0849     	 ldr r1,.L419+4
 6262 004c 074B     	 ldr r3,.L419+4
 6263 004e 1A6A     	 ldr r2,[r3,#32]
 6264 0050 4EF6FF73 	 movw r3,#61439
 6265 0054 1340     	 ands r3,r3,r2
1508:../Libraries/XMCLib/src/xmc4_scu.c ****                              SCU_HIBERNATE_LPACCONF_INTERVCNT_Msk |
1509:../Libraries/XMCLib/src/xmc4_scu.c ****                              SCU_HIBERNATE_LPACCONF_SETTLECNT_Msk)) |
 6266              	 .loc 3 1509 0
 6267 0056 FA68     	 ldr r2,[r7,#12]
 6268 0058 1343     	 orrs r3,r3,r2
1507:../Libraries/XMCLib/src/xmc4_scu.c ****                              SCU_HIBERNATE_LPACCONF_INTERVCNT_Msk |
 6269              	 .loc 3 1507 0
 6270 005a 0B62     	 str r3,[r1,#32]
1510:../Libraries/XMCLib/src/xmc4_scu.c ****                             config;
1511:../Libraries/XMCLib/src/xmc4_scu.c **** 
1512:../Libraries/XMCLib/src/xmc4_scu.c **** }
 6271              	 .loc 3 1512 0
 6272 005c 1437     	 adds r7,r7,#20
 6273              	.LCFI552:
 6274              	 .cfi_def_cfa_offset 4
 6275 005e BD46     	 mov sp,r7
 6276              	.LCFI553:
 6277              	 .cfi_def_cfa_register 13
 6278              	 
 6279 0060 5DF8047B 	 ldr r7,[sp],#4
 6280              	.LCFI554:
 6281              	 .cfi_restore 7
 6282              	 .cfi_def_cfa_offset 0
 6283 0064 7047     	 bx lr
 6284              	.L420:
 6285 0066 00BF     	 .align 2
 6286              	.L419:
 6287 0068 00400050 	 .word 1342193664
 6288 006c 00430050 	 .word 1342194432
 6289              	 .cfi_endproc
 6290              	.LFE268:
 6292              	 .section .text.XMC_SCU_HIB_LPAC_SetVBATThresholds,"ax",%progbits
 6293              	 .align 2
 6294              	 .global XMC_SCU_HIB_LPAC_SetVBATThresholds
 6295              	 .thumb
 6296              	 .thumb_func
 6298              	XMC_SCU_HIB_LPAC_SetVBATThresholds:
 6299              	.LFB269:
1513:../Libraries/XMCLib/src/xmc4_scu.c **** 
1514:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_LPAC_SetVBATThresholds(uint8_t lower, uint8_t upper)
1515:../Libraries/XMCLib/src/xmc4_scu.c **** {
 6300              	 .loc 3 1515 0
 6301              	 .cfi_startproc
 6302              	 
 6303              	 
 6304              	 
 6305 0000 80B4     	 push {r7}
 6306              	.LCFI555:
 6307              	 .cfi_def_cfa_offset 4
 6308              	 .cfi_offset 7,-4
 6309 0002 83B0     	 sub sp,sp,#12
 6310              	.LCFI556:
 6311              	 .cfi_def_cfa_offset 16
 6312 0004 00AF     	 add r7,sp,#0
 6313              	.LCFI557:
 6314              	 .cfi_def_cfa_register 7
 6315 0006 0346     	 mov r3,r0
 6316 0008 0A46     	 mov r2,r1
 6317 000a FB71     	 strb r3,[r7,#7]
 6318 000c 1346     	 mov r3,r2
 6319 000e BB71     	 strb r3,[r7,#6]
1516:../Libraries/XMCLib/src/xmc4_scu.c **** 
1517:../Libraries/XMCLib/src/xmc4_scu.c ****   while ((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_LPACTH0_Msk)
 6320              	 .loc 3 1517 0
 6321 0010 00BF     	 nop
 6322              	.L422:
 6323              	 .loc 3 1517 0 is_stmt 0 discriminator 1
 6324 0012 094B     	 ldr r3,.L423
 6325 0014 D3F8C430 	 ldr r3,[r3,#196]
 6326 0018 03F40033 	 and r3,r3,#131072
 6327 001c 002B     	 cmp r3,#0
 6328 001e F8D1     	 bne .L422
1518:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1519:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Wait until HDCR register in hibernate domain is ready to accept a write */
1520:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1521:../Libraries/XMCLib/src/xmc4_scu.c **** 
1522:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->LPACTH0 = (lower << SCU_HIBERNATE_LPACTH0_VBATLO_Pos) | (upper << SCU_HIBERNATE_LP
 6329              	 .loc 3 1522 0 is_stmt 1
 6330 0020 0649     	 ldr r1,.L423+4
 6331 0022 FA79     	 ldrb r2,[r7,#7]
 6332 0024 BB79     	 ldrb r3,[r7,#6]
 6333 0026 1B02     	 lsls r3,r3,#8
 6334 0028 1343     	 orrs r3,r3,r2
 6335 002a 4B62     	 str r3,[r1,#36]
1523:../Libraries/XMCLib/src/xmc4_scu.c **** 
1524:../Libraries/XMCLib/src/xmc4_scu.c **** 
1525:../Libraries/XMCLib/src/xmc4_scu.c **** 
1526:../Libraries/XMCLib/src/xmc4_scu.c **** }
 6336              	 .loc 3 1526 0
 6337 002c 0C37     	 adds r7,r7,#12
 6338              	.LCFI558:
 6339              	 .cfi_def_cfa_offset 4
 6340 002e BD46     	 mov sp,r7
 6341              	.LCFI559:
 6342              	 .cfi_def_cfa_register 13
 6343              	 
 6344 0030 5DF8047B 	 ldr r7,[sp],#4
 6345              	.LCFI560:
 6346              	 .cfi_restore 7
 6347              	 .cfi_def_cfa_offset 0
 6348 0034 7047     	 bx lr
 6349              	.L424:
 6350 0036 00BF     	 .align 2
 6351              	.L423:
 6352 0038 00400050 	 .word 1342193664
 6353 003c 00430050 	 .word 1342194432
 6354              	 .cfi_endproc
 6355              	.LFE269:
 6357              	 .section .text.XMC_SCU_HIB_LPAC_SetHIBIO0Thresholds,"ax",%progbits
 6358              	 .align 2
 6359              	 .global XMC_SCU_HIB_LPAC_SetHIBIO0Thresholds
 6360              	 .thumb
 6361              	 .thumb_func
 6363              	XMC_SCU_HIB_LPAC_SetHIBIO0Thresholds:
 6364              	.LFB270:
1527:../Libraries/XMCLib/src/xmc4_scu.c **** 
1528:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_LPAC_SetHIBIO0Thresholds(uint8_t lower, uint8_t upper)
1529:../Libraries/XMCLib/src/xmc4_scu.c **** {
 6365              	 .loc 3 1529 0
 6366              	 .cfi_startproc
 6367              	 
 6368              	 
 6369              	 
 6370 0000 80B4     	 push {r7}
 6371              	.LCFI561:
 6372              	 .cfi_def_cfa_offset 4
 6373              	 .cfi_offset 7,-4
 6374 0002 83B0     	 sub sp,sp,#12
 6375              	.LCFI562:
 6376              	 .cfi_def_cfa_offset 16
 6377 0004 00AF     	 add r7,sp,#0
 6378              	.LCFI563:
 6379              	 .cfi_def_cfa_register 7
 6380 0006 0346     	 mov r3,r0
 6381 0008 0A46     	 mov r2,r1
 6382 000a FB71     	 strb r3,[r7,#7]
 6383 000c 1346     	 mov r3,r2
 6384 000e BB71     	 strb r3,[r7,#6]
1530:../Libraries/XMCLib/src/xmc4_scu.c **** 
1531:../Libraries/XMCLib/src/xmc4_scu.c ****   while ((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_LPACTH1_Msk)
 6385              	 .loc 3 1531 0
 6386 0010 00BF     	 nop
 6387              	.L426:
 6388              	 .loc 3 1531 0 is_stmt 0 discriminator 1
 6389 0012 0C4B     	 ldr r3,.L427
 6390 0014 D3F8C430 	 ldr r3,[r3,#196]
 6391 0018 03F48023 	 and r3,r3,#262144
 6392 001c 002B     	 cmp r3,#0
 6393 001e F8D1     	 bne .L426
1532:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1533:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Wait until HDCR register in hibernate domain is ready to accept a write */
1534:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1535:../Libraries/XMCLib/src/xmc4_scu.c **** 
1536:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->LPACTH1 = (SCU_HIBERNATE->LPACTH1 & (uint32_t)~(SCU_HIBERNATE_LPACTH1_AHIBIO0LO_Ms
 6394              	 .loc 3 1536 0 is_stmt 1
 6395 0020 0949     	 ldr r1,.L427+4
 6396 0022 094B     	 ldr r3,.L427+4
 6397 0024 9B6A     	 ldr r3,[r3,#40]
 6398 0026 23F47C53 	 bic r3,r3,#16128
 6399 002a 23F03F03 	 bic r3,r3,#63
 6400 002e FA79     	 ldrb r2,[r7,#7]
 6401 0030 1343     	 orrs r3,r3,r2
1537:../Libraries/XMCLib/src/xmc4_scu.c ****                            (lower << SCU_HIBERNATE_LPACTH1_AHIBIO0LO_Pos) |
1538:../Libraries/XMCLib/src/xmc4_scu.c ****                            (upper << SCU_HIBERNATE_LPACTH1_AHIBIO0HI_Pos);
 6402              	 .loc 3 1538 0
 6403 0032 BA79     	 ldrb r2,[r7,#6]
 6404 0034 1202     	 lsls r2,r2,#8
1537:../Libraries/XMCLib/src/xmc4_scu.c ****                            (lower << SCU_HIBERNATE_LPACTH1_AHIBIO0LO_Pos) |
 6405              	 .loc 3 1537 0
 6406 0036 1343     	 orrs r3,r3,r2
1536:../Libraries/XMCLib/src/xmc4_scu.c ****                            (lower << SCU_HIBERNATE_LPACTH1_AHIBIO0LO_Pos) |
 6407              	 .loc 3 1536 0
 6408 0038 8B62     	 str r3,[r1,#40]
1539:../Libraries/XMCLib/src/xmc4_scu.c **** 
1540:../Libraries/XMCLib/src/xmc4_scu.c **** }
 6409              	 .loc 3 1540 0
 6410 003a 0C37     	 adds r7,r7,#12
 6411              	.LCFI564:
 6412              	 .cfi_def_cfa_offset 4
 6413 003c BD46     	 mov sp,r7
 6414              	.LCFI565:
 6415              	 .cfi_def_cfa_register 13
 6416              	 
 6417 003e 5DF8047B 	 ldr r7,[sp],#4
 6418              	.LCFI566:
 6419              	 .cfi_restore 7
 6420              	 .cfi_def_cfa_offset 0
 6421 0042 7047     	 bx lr
 6422              	.L428:
 6423              	 .align 2
 6424              	.L427:
 6425 0044 00400050 	 .word 1342193664
 6426 0048 00430050 	 .word 1342194432
 6427              	 .cfi_endproc
 6428              	.LFE270:
 6430              	 .section .text.XMC_SCU_HIB_LPAC_GetStatus,"ax",%progbits
 6431              	 .align 2
 6432              	 .global XMC_SCU_HIB_LPAC_GetStatus
 6433              	 .thumb
 6434              	 .thumb_func
 6436              	XMC_SCU_HIB_LPAC_GetStatus:
 6437              	.LFB271:
1541:../Libraries/XMCLib/src/xmc4_scu.c **** #if ((UC_SERIES == XMC44) && (UC_PACKAGE == LQFP100))
1542:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_LPAC_SetHIBIO1Thresholds(uint8_t lower, uint8_t upper)
1543:../Libraries/XMCLib/src/xmc4_scu.c **** {
1544:../Libraries/XMCLib/src/xmc4_scu.c **** 
1545:../Libraries/XMCLib/src/xmc4_scu.c ****   while ((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_LPACTH1_Msk)
1546:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1547:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Wait until HDCR register in hibernate domain is ready to accept a write */
1548:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1549:../Libraries/XMCLib/src/xmc4_scu.c **** 
1550:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->LPACTH1 = (SCU_HIBERNATE->LPACTH1 & (uint32_t)~(SCU_HIBERNATE_LPACTH1_AHIBIO1LO_Ms
1551:../Libraries/XMCLib/src/xmc4_scu.c ****                            (lower << SCU_HIBERNATE_LPACTH1_AHIBIO1LO_Pos) |
1552:../Libraries/XMCLib/src/xmc4_scu.c ****                            (upper << SCU_HIBERNATE_LPACTH1_AHIBIO1HI_Pos);
1553:../Libraries/XMCLib/src/xmc4_scu.c **** 
1554:../Libraries/XMCLib/src/xmc4_scu.c **** }
1555:../Libraries/XMCLib/src/xmc4_scu.c **** #endif
1556:../Libraries/XMCLib/src/xmc4_scu.c **** int32_t XMC_SCU_HIB_LPAC_GetStatus(void)
1557:../Libraries/XMCLib/src/xmc4_scu.c **** {
 6438              	 .loc 3 1557 0
 6439              	 .cfi_startproc
 6440              	 
 6441              	 
 6442              	 
 6443 0000 80B4     	 push {r7}
 6444              	.LCFI567:
 6445              	 .cfi_def_cfa_offset 4
 6446              	 .cfi_offset 7,-4
 6447 0002 00AF     	 add r7,sp,#0
 6448              	.LCFI568:
 6449              	 .cfi_def_cfa_register 7
1558:../Libraries/XMCLib/src/xmc4_scu.c ****   return SCU_HIBERNATE->LPACST;
 6450              	 .loc 3 1558 0
 6451 0004 034B     	 ldr r3,.L431
 6452 0006 DB6A     	 ldr r3,[r3,#44]
1559:../Libraries/XMCLib/src/xmc4_scu.c **** }
 6453              	 .loc 3 1559 0
 6454 0008 1846     	 mov r0,r3
 6455 000a BD46     	 mov sp,r7
 6456              	.LCFI569:
 6457              	 .cfi_def_cfa_register 13
 6458              	 
 6459 000c 5DF8047B 	 ldr r7,[sp],#4
 6460              	.LCFI570:
 6461              	 .cfi_restore 7
 6462              	 .cfi_def_cfa_offset 0
 6463 0010 7047     	 bx lr
 6464              	.L432:
 6465 0012 00BF     	 .align 2
 6466              	.L431:
 6467 0014 00430050 	 .word 1342194432
 6468              	 .cfi_endproc
 6469              	.LFE271:
 6471              	 .section .text.XMC_SCU_HIB_LPAC_ClearStatus,"ax",%progbits
 6472              	 .align 2
 6473              	 .global XMC_SCU_HIB_LPAC_ClearStatus
 6474              	 .thumb
 6475              	 .thumb_func
 6477              	XMC_SCU_HIB_LPAC_ClearStatus:
 6478              	.LFB272:
1560:../Libraries/XMCLib/src/xmc4_scu.c **** 
1561:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_LPAC_ClearStatus(int32_t status)
1562:../Libraries/XMCLib/src/xmc4_scu.c **** {
 6479              	 .loc 3 1562 0
 6480              	 .cfi_startproc
 6481              	 
 6482              	 
 6483              	 
 6484 0000 80B4     	 push {r7}
 6485              	.LCFI571:
 6486              	 .cfi_def_cfa_offset 4
 6487              	 .cfi_offset 7,-4
 6488 0002 83B0     	 sub sp,sp,#12
 6489              	.LCFI572:
 6490              	 .cfi_def_cfa_offset 16
 6491 0004 00AF     	 add r7,sp,#0
 6492              	.LCFI573:
 6493              	 .cfi_def_cfa_register 7
 6494 0006 7860     	 str r0,[r7,#4]
1563:../Libraries/XMCLib/src/xmc4_scu.c ****   while ((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_LPACCLR_Msk)
 6495              	 .loc 3 1563 0
 6496 0008 00BF     	 nop
 6497              	.L434:
 6498              	 .loc 3 1563 0 is_stmt 0 discriminator 1
 6499 000a 074B     	 ldr r3,.L435
 6500 000c D3F8C430 	 ldr r3,[r3,#196]
 6501 0010 03F48013 	 and r3,r3,#1048576
 6502 0014 002B     	 cmp r3,#0
 6503 0016 F8D1     	 bne .L434
1564:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1565:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Wait until LPACCLR register in hibernate domain is ready to accept a write */
1566:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1567:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->LPACCLR = status;;
 6504              	 .loc 3 1567 0 is_stmt 1
 6505 0018 044A     	 ldr r2,.L435+4
 6506 001a 7B68     	 ldr r3,[r7,#4]
 6507 001c 1363     	 str r3,[r2,#48]
1568:../Libraries/XMCLib/src/xmc4_scu.c **** }
 6508              	 .loc 3 1568 0
 6509 001e 0C37     	 adds r7,r7,#12
 6510              	.LCFI574:
 6511              	 .cfi_def_cfa_offset 4
 6512 0020 BD46     	 mov sp,r7
 6513              	.LCFI575:
 6514              	 .cfi_def_cfa_register 13
 6515              	 
 6516 0022 5DF8047B 	 ldr r7,[sp],#4
 6517              	.LCFI576:
 6518              	 .cfi_restore 7
 6519              	 .cfi_def_cfa_offset 0
 6520 0026 7047     	 bx lr
 6521              	.L436:
 6522              	 .align 2
 6523              	.L435:
 6524 0028 00400050 	 .word 1342193664
 6525 002c 00430050 	 .word 1342194432
 6526              	 .cfi_endproc
 6527              	.LFE272:
 6529              	 .section .text.XMC_SCU_HIB_LPAC_TriggerCompare,"ax",%progbits
 6530              	 .align 2
 6531              	 .global XMC_SCU_HIB_LPAC_TriggerCompare
 6532              	 .thumb
 6533              	 .thumb_func
 6535              	XMC_SCU_HIB_LPAC_TriggerCompare:
 6536              	.LFB273:
1569:../Libraries/XMCLib/src/xmc4_scu.c **** 
1570:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_LPAC_TriggerCompare(XMC_SCU_HIB_LPAC_INPUT_t input)
1571:../Libraries/XMCLib/src/xmc4_scu.c **** {
 6537              	 .loc 3 1571 0
 6538              	 .cfi_startproc
 6539              	 
 6540              	 
 6541              	 
 6542 0000 80B4     	 push {r7}
 6543              	.LCFI577:
 6544              	 .cfi_def_cfa_offset 4
 6545              	 .cfi_offset 7,-4
 6546 0002 83B0     	 sub sp,sp,#12
 6547              	.LCFI578:
 6548              	 .cfi_def_cfa_offset 16
 6549 0004 00AF     	 add r7,sp,#0
 6550              	.LCFI579:
 6551              	 .cfi_def_cfa_register 7
 6552 0006 0346     	 mov r3,r0
 6553 0008 FB71     	 strb r3,[r7,#7]
1572:../Libraries/XMCLib/src/xmc4_scu.c ****   while ((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_LPACSET_Msk)
 6554              	 .loc 3 1572 0
 6555 000a 00BF     	 nop
 6556              	.L438:
 6557              	 .loc 3 1572 0 is_stmt 0 discriminator 1
 6558 000c 074B     	 ldr r3,.L439
 6559 000e D3F8C430 	 ldr r3,[r3,#196]
 6560 0012 03F40013 	 and r3,r3,#2097152
 6561 0016 002B     	 cmp r3,#0
 6562 0018 F8D1     	 bne .L438
1573:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1574:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Wait until LPACSET register in hibernate domain is ready to accept a write */
1575:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1576:../Libraries/XMCLib/src/xmc4_scu.c **** 
1577:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->LPACSET = input;
 6563              	 .loc 3 1577 0 is_stmt 1
 6564 001a 054A     	 ldr r2,.L439+4
 6565 001c FB79     	 ldrb r3,[r7,#7]
 6566 001e 5363     	 str r3,[r2,#52]
1578:../Libraries/XMCLib/src/xmc4_scu.c **** }
 6567              	 .loc 3 1578 0
 6568 0020 0C37     	 adds r7,r7,#12
 6569              	.LCFI580:
 6570              	 .cfi_def_cfa_offset 4
 6571 0022 BD46     	 mov sp,r7
 6572              	.LCFI581:
 6573              	 .cfi_def_cfa_register 13
 6574              	 
 6575 0024 5DF8047B 	 ldr r7,[sp],#4
 6576              	.LCFI582:
 6577              	 .cfi_restore 7
 6578              	 .cfi_def_cfa_offset 0
 6579 0028 7047     	 bx lr
 6580              	.L440:
 6581 002a 00BF     	 .align 2
 6582              	.L439:
 6583 002c 00400050 	 .word 1342193664
 6584 0030 00430050 	 .word 1342194432
 6585              	 .cfi_endproc
 6586              	.LFE273:
 6588              	 .section .text.XMC_SCU_CLOCK_IsLowPowerOscillatorStable,"ax",%progbits
 6589              	 .align 2
 6590              	 .global XMC_SCU_CLOCK_IsLowPowerOscillatorStable
 6591              	 .thumb
 6592              	 .thumb_func
 6594              	XMC_SCU_CLOCK_IsLowPowerOscillatorStable:
 6595              	.LFB274:
1579:../Libraries/XMCLib/src/xmc4_scu.c **** 
1580:../Libraries/XMCLib/src/xmc4_scu.c **** #endif
1581:../Libraries/XMCLib/src/xmc4_scu.c **** 
1582:../Libraries/XMCLib/src/xmc4_scu.c **** bool XMC_SCU_CLOCK_IsLowPowerOscillatorStable(void)
1583:../Libraries/XMCLib/src/xmc4_scu.c **** {
 6596              	 .loc 3 1583 0
 6597              	 .cfi_startproc
 6598              	 
 6599              	 
 6600              	 
 6601 0000 80B4     	 push {r7}
 6602              	.LCFI583:
 6603              	 .cfi_def_cfa_offset 4
 6604              	 .cfi_offset 7,-4
 6605 0002 00AF     	 add r7,sp,#0
 6606              	.LCFI584:
 6607              	 .cfi_def_cfa_register 7
1584:../Libraries/XMCLib/src/xmc4_scu.c ****   return ((SCU_HIBERNATE->HDSTAT & SCU_HIBERNATE_HDSTAT_ULPWDG_Msk) == 0UL);
 6608              	 .loc 3 1584 0
 6609 0004 064B     	 ldr r3,.L443
 6610 0006 1B68     	 ldr r3,[r3]
 6611 0008 03F00803 	 and r3,r3,#8
 6612 000c 002B     	 cmp r3,#0
 6613 000e 0CBF     	 ite eq
 6614 0010 0123     	 moveq r3,#1
 6615 0012 0023     	 movne r3,#0
 6616 0014 DBB2     	 uxtb r3,r3
1585:../Libraries/XMCLib/src/xmc4_scu.c **** }
 6617              	 .loc 3 1585 0
 6618 0016 1846     	 mov r0,r3
 6619 0018 BD46     	 mov sp,r7
 6620              	.LCFI585:
 6621              	 .cfi_def_cfa_register 13
 6622              	 
 6623 001a 5DF8047B 	 ldr r7,[sp],#4
 6624              	.LCFI586:
 6625              	 .cfi_restore 7
 6626              	 .cfi_def_cfa_offset 0
 6627 001e 7047     	 bx lr
 6628              	.L444:
 6629              	 .align 2
 6630              	.L443:
 6631 0020 00430050 	 .word 1342194432
 6632              	 .cfi_endproc
 6633              	.LFE274:
 6635              	 .section .text.XMC_SCU_CLOCK_EnableLowPowerOscillator,"ax",%progbits
 6636              	 .align 2
 6637              	 .global XMC_SCU_CLOCK_EnableLowPowerOscillator
 6638              	 .thumb
 6639              	 .thumb_func
 6641              	XMC_SCU_CLOCK_EnableLowPowerOscillator:
 6642              	.LFB275:
1586:../Libraries/XMCLib/src/xmc4_scu.c **** 
1587:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to configure the 32khz Ultra Low Power oscillator */
1588:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_EnableLowPowerOscillator(void)
1589:../Libraries/XMCLib/src/xmc4_scu.c **** {
 6643              	 .loc 3 1589 0
 6644              	 .cfi_startproc
 6645              	 
 6646              	 
 6647 0000 80B5     	 push {r7,lr}
 6648              	.LCFI587:
 6649              	 .cfi_def_cfa_offset 8
 6650              	 .cfi_offset 7,-8
 6651              	 .cfi_offset 14,-4
 6652 0002 00AF     	 add r7,sp,#0
 6653              	.LCFI588:
 6654              	 .cfi_def_cfa_register 7
1590:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Enable OSC_ULP */
1591:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_SCU_INTERRUPT_ClearEventStatus(XMC_SCU_INTERRUPT_EVENT_OSCULCTRL_UPDATED);
 6655              	 .loc 3 1591 0
 6656 0004 4FF40000 	 mov r0,#8388608
 6657 0008 FFF7FEFF 	 bl XMC_SCU_INTERRUPT_ClearEventStatus
1592:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->OSCULCTRL &= ~SCU_HIBERNATE_OSCULCTRL_MODE_Msk;
 6658              	 .loc 3 1592 0
 6659 000c 174A     	 ldr r2,.L449
 6660 000e 174B     	 ldr r3,.L449
 6661 0010 DB69     	 ldr r3,[r3,#28]
 6662 0012 23F03003 	 bic r3,r3,#48
 6663 0016 D361     	 str r3,[r2,#28]
1593:../Libraries/XMCLib/src/xmc4_scu.c ****   while ((XMC_SCU_INTERUPT_GetEventStatus() & XMC_SCU_INTERRUPT_EVENT_OSCULCTRL_UPDATED) == 0);
 6664              	 .loc 3 1593 0
 6665 0018 00BF     	 nop
 6666              	.L446:
 6667              	 .loc 3 1593 0 is_stmt 0 discriminator 1
 6668 001a FFF7FEFF 	 bl XMC_SCU_INTERUPT_GetEventStatus
 6669 001e 0346     	 mov r3,r0
 6670 0020 03F40003 	 and r3,r3,#8388608
 6671 0024 002B     	 cmp r3,#0
 6672 0026 F8D0     	 beq .L446
1594:../Libraries/XMCLib/src/xmc4_scu.c **** 
1595:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Clear ULP WDG status */
1596:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_SCU_INTERRUPT_ClearEventStatus(XMC_SCU_INTERRUPT_EVENT_HDCLR_UPDATED);
 6673              	 .loc 3 1596 0 is_stmt 1
 6674 0028 4FF40030 	 mov r0,#131072
 6675 002c FFF7FEFF 	 bl XMC_SCU_INTERRUPT_ClearEventStatus
1597:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->HDCLR = (uint32_t)SCU_HIBERNATE_HDCLR_ULPWDG_Msk;
 6676              	 .loc 3 1597 0
 6677 0030 0E4B     	 ldr r3,.L449
 6678 0032 0822     	 movs r2,#8
 6679 0034 5A60     	 str r2,[r3,#4]
1598:../Libraries/XMCLib/src/xmc4_scu.c ****   while ((XMC_SCU_INTERUPT_GetEventStatus() & XMC_SCU_INTERRUPT_EVENT_HDCLR_UPDATED) == 0);
 6680              	 .loc 3 1598 0
 6681 0036 00BF     	 nop
 6682              	.L447:
 6683              	 .loc 3 1598 0 is_stmt 0 discriminator 1
 6684 0038 FFF7FEFF 	 bl XMC_SCU_INTERUPT_GetEventStatus
 6685 003c 0346     	 mov r3,r0
 6686 003e 03F40033 	 and r3,r3,#131072
 6687 0042 002B     	 cmp r3,#0
 6688 0044 F8D0     	 beq .L447
1599:../Libraries/XMCLib/src/xmc4_scu.c **** 
1600:../Libraries/XMCLib/src/xmc4_scu.c ****   /* Enable ULP WDG */
1601:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_SCU_INTERRUPT_ClearEventStatus(XMC_SCU_INTERRUPT_EVENT_HDCR_UPDATED);
 6689              	 .loc 3 1601 0 is_stmt 1
 6690 0046 4FF40020 	 mov r0,#524288
 6691 004a FFF7FEFF 	 bl XMC_SCU_INTERRUPT_ClearEventStatus
1602:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->HDCR |= (uint32_t)SCU_HIBERNATE_HDCR_ULPWDGEN_Msk;
 6692              	 .loc 3 1602 0
 6693 004e 074A     	 ldr r2,.L449
 6694 0050 064B     	 ldr r3,.L449
 6695 0052 DB68     	 ldr r3,[r3,#12]
 6696 0054 43F00803 	 orr r3,r3,#8
 6697 0058 D360     	 str r3,[r2,#12]
1603:../Libraries/XMCLib/src/xmc4_scu.c ****   while ((XMC_SCU_INTERUPT_GetEventStatus() & XMC_SCU_INTERRUPT_EVENT_HDCR_UPDATED) == 0);
 6698              	 .loc 3 1603 0
 6699 005a 00BF     	 nop
 6700              	.L448:
 6701              	 .loc 3 1603 0 is_stmt 0 discriminator 1
 6702 005c FFF7FEFF 	 bl XMC_SCU_INTERUPT_GetEventStatus
 6703 0060 0346     	 mov r3,r0
 6704 0062 03F40023 	 and r3,r3,#524288
 6705 0066 002B     	 cmp r3,#0
 6706 0068 F8D0     	 beq .L448
1604:../Libraries/XMCLib/src/xmc4_scu.c **** }
 6707              	 .loc 3 1604 0 is_stmt 1
 6708 006a 80BD     	 pop {r7,pc}
 6709              	.L450:
 6710              	 .align 2
 6711              	.L449:
 6712 006c 00430050 	 .word 1342194432
 6713              	 .cfi_endproc
 6714              	.LFE275:
 6716              	 .section .text.XMC_SCU_CLOCK_DisableLowPowerOscillator,"ax",%progbits
 6717              	 .align 2
 6718              	 .global XMC_SCU_CLOCK_DisableLowPowerOscillator
 6719              	 .thumb
 6720              	 .thumb_func
 6722              	XMC_SCU_CLOCK_DisableLowPowerOscillator:
 6723              	.LFB276:
1605:../Libraries/XMCLib/src/xmc4_scu.c **** 
1606:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to configure the 32khz Ultra Low Power oscillator */
1607:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_DisableLowPowerOscillator(void)
1608:../Libraries/XMCLib/src/xmc4_scu.c **** {
 6724              	 .loc 3 1608 0
 6725              	 .cfi_startproc
 6726              	 
 6727              	 
 6728              	 
 6729 0000 80B4     	 push {r7}
 6730              	.LCFI589:
 6731              	 .cfi_def_cfa_offset 4
 6732              	 .cfi_offset 7,-4
 6733 0002 00AF     	 add r7,sp,#0
 6734              	.LCFI590:
 6735              	 .cfi_def_cfa_register 7
1609:../Libraries/XMCLib/src/xmc4_scu.c ****   while ((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_OSCULCTRL_Msk)
 6736              	 .loc 3 1609 0
 6737 0004 00BF     	 nop
 6738              	.L452:
 6739              	 .loc 3 1609 0 is_stmt 0 discriminator 1
 6740 0006 084B     	 ldr r3,.L453
 6741 0008 D3F8C430 	 ldr r3,[r3,#196]
 6742 000c 03F08003 	 and r3,r3,#128
 6743 0010 002B     	 cmp r3,#0
 6744 0012 F8D1     	 bne .L452
1610:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1611:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Wait until OSCULCTRL register in hibernate domain is ready to accept a write */
1612:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1613:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->OSCULCTRL |= (uint32_t)SCU_HIBERNATE_OSCULCTRL_MODE_Msk;
 6745              	 .loc 3 1613 0 is_stmt 1
 6746 0014 054A     	 ldr r2,.L453+4
 6747 0016 054B     	 ldr r3,.L453+4
 6748 0018 DB69     	 ldr r3,[r3,#28]
 6749 001a 43F03003 	 orr r3,r3,#48
 6750 001e D361     	 str r3,[r2,#28]
1614:../Libraries/XMCLib/src/xmc4_scu.c **** }
 6751              	 .loc 3 1614 0
 6752 0020 BD46     	 mov sp,r7
 6753              	.LCFI591:
 6754              	 .cfi_def_cfa_register 13
 6755              	 
 6756 0022 5DF8047B 	 ldr r7,[sp],#4
 6757              	.LCFI592:
 6758              	 .cfi_restore 7
 6759              	 .cfi_def_cfa_offset 0
 6760 0026 7047     	 bx lr
 6761              	.L454:
 6762              	 .align 2
 6763              	.L453:
 6764 0028 00400050 	 .word 1342193664
 6765 002c 00430050 	 .word 1342194432
 6766              	 .cfi_endproc
 6767              	.LFE276:
 6769              	 .section .text.XMC_SCU_CLOCK_EnableLowPowerOscillatorGeneralPurposeInput,"ax",%progbits
 6770              	 .align 2
 6771              	 .global XMC_SCU_CLOCK_EnableLowPowerOscillatorGeneralPurposeInput
 6772              	 .thumb
 6773              	 .thumb_func
 6775              	XMC_SCU_CLOCK_EnableLowPowerOscillatorGeneralPurposeInput:
 6776              	.LFB277:
1615:../Libraries/XMCLib/src/xmc4_scu.c **** 
1616:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_EnableLowPowerOscillatorGeneralPurposeInput(void)
1617:../Libraries/XMCLib/src/xmc4_scu.c **** {
 6777              	 .loc 3 1617 0
 6778              	 .cfi_startproc
 6779              	 
 6780              	 
 6781              	 
 6782 0000 80B4     	 push {r7}
 6783              	.LCFI593:
 6784              	 .cfi_def_cfa_offset 4
 6785              	 .cfi_offset 7,-4
 6786 0002 00AF     	 add r7,sp,#0
 6787              	.LCFI594:
 6788              	 .cfi_def_cfa_register 7
1618:../Libraries/XMCLib/src/xmc4_scu.c ****   while ((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_OSCULCTRL_Msk)
 6789              	 .loc 3 1618 0
 6790 0004 00BF     	 nop
 6791              	.L456:
 6792              	 .loc 3 1618 0 is_stmt 0 discriminator 1
 6793 0006 084B     	 ldr r3,.L457
 6794 0008 D3F8C430 	 ldr r3,[r3,#196]
 6795 000c 03F08003 	 and r3,r3,#128
 6796 0010 002B     	 cmp r3,#0
 6797 0012 F8D1     	 bne .L456
1619:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1620:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Wait until OSCULCTRL register in hibernate domain is ready to accept a write */
1621:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1622:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->OSCULCTRL |= SCU_HIBERNATE_OSCULCTRL_X1DEN_Msk | SCU_HIBERNATE_OSCULCTRL_MODE_Msk;
 6798              	 .loc 3 1622 0 is_stmt 1
 6799 0014 054A     	 ldr r2,.L457+4
 6800 0016 054B     	 ldr r3,.L457+4
 6801 0018 DB69     	 ldr r3,[r3,#28]
 6802 001a 43F03103 	 orr r3,r3,#49
 6803 001e D361     	 str r3,[r2,#28]
1623:../Libraries/XMCLib/src/xmc4_scu.c **** }
 6804              	 .loc 3 1623 0
 6805 0020 BD46     	 mov sp,r7
 6806              	.LCFI595:
 6807              	 .cfi_def_cfa_register 13
 6808              	 
 6809 0022 5DF8047B 	 ldr r7,[sp],#4
 6810              	.LCFI596:
 6811              	 .cfi_restore 7
 6812              	 .cfi_def_cfa_offset 0
 6813 0026 7047     	 bx lr
 6814              	.L458:
 6815              	 .align 2
 6816              	.L457:
 6817 0028 00400050 	 .word 1342193664
 6818 002c 00430050 	 .word 1342194432
 6819              	 .cfi_endproc
 6820              	.LFE277:
 6822              	 .section .text.XMC_SCU_CLOCK_DisableLowPowerOscillatorGeneralPurposeInput,"ax",%progbits
 6823              	 .align 2
 6824              	 .global XMC_SCU_CLOCK_DisableLowPowerOscillatorGeneralPurposeInput
 6825              	 .thumb
 6826              	 .thumb_func
 6828              	XMC_SCU_CLOCK_DisableLowPowerOscillatorGeneralPurposeInput:
 6829              	.LFB278:
1624:../Libraries/XMCLib/src/xmc4_scu.c **** 
1625:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_DisableLowPowerOscillatorGeneralPurposeInput(void)
1626:../Libraries/XMCLib/src/xmc4_scu.c **** {
 6830              	 .loc 3 1626 0
 6831              	 .cfi_startproc
 6832              	 
 6833              	 
 6834              	 
 6835 0000 80B4     	 push {r7}
 6836              	.LCFI597:
 6837              	 .cfi_def_cfa_offset 4
 6838              	 .cfi_offset 7,-4
 6839 0002 00AF     	 add r7,sp,#0
 6840              	.LCFI598:
 6841              	 .cfi_def_cfa_register 7
1627:../Libraries/XMCLib/src/xmc4_scu.c ****   while ((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_OSCULCTRL_Msk)
 6842              	 .loc 3 1627 0
 6843 0004 00BF     	 nop
 6844              	.L460:
 6845              	 .loc 3 1627 0 is_stmt 0 discriminator 1
 6846 0006 094B     	 ldr r3,.L461
 6847 0008 D3F8C430 	 ldr r3,[r3,#196]
 6848 000c 03F08003 	 and r3,r3,#128
 6849 0010 002B     	 cmp r3,#0
 6850 0012 F8D1     	 bne .L460
1628:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1629:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Wait until OSCULCTRL register in hibernate domain is ready to accept a write */
1630:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1631:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->OSCULCTRL = (SCU_HIBERNATE->OSCULCTRL & ~(uint32_t)(SCU_HIBERNATE_OSCULCTRL_X1DEN_
 6851              	 .loc 3 1631 0 is_stmt 1
 6852 0014 064A     	 ldr r2,.L461+4
 6853 0016 064B     	 ldr r3,.L461+4
 6854 0018 DB69     	 ldr r3,[r3,#28]
 6855 001a 23F03103 	 bic r3,r3,#49
 6856 001e 43F02003 	 orr r3,r3,#32
 6857 0022 D361     	 str r3,[r2,#28]
1632:../Libraries/XMCLib/src/xmc4_scu.c ****                              (SCU_HIBERNATE_OSCULCTRL_MODE_OSC_POWER_DOWN << SCU_HIBERNATE_OSCULCTR
1633:../Libraries/XMCLib/src/xmc4_scu.c **** }
 6858              	 .loc 3 1633 0
 6859 0024 BD46     	 mov sp,r7
 6860              	.LCFI599:
 6861              	 .cfi_def_cfa_register 13
 6862              	 
 6863 0026 5DF8047B 	 ldr r7,[sp],#4
 6864              	.LCFI600:
 6865              	 .cfi_restore 7
 6866              	 .cfi_def_cfa_offset 0
 6867 002a 7047     	 bx lr
 6868              	.L462:
 6869              	 .align 2
 6870              	.L461:
 6871 002c 00400050 	 .word 1342193664
 6872 0030 00430050 	 .word 1342194432
 6873              	 .cfi_endproc
 6874              	.LFE278:
 6876              	 .section .text.XMC_SCU_CLOCK_GetLowPowerOscillatorGeneralPurposeInputStatus,"ax",%progbits
 6877              	 .align 2
 6878              	 .global XMC_SCU_CLOCK_GetLowPowerOscillatorGeneralPurposeInputStatus
 6879              	 .thumb
 6880              	 .thumb_func
 6882              	XMC_SCU_CLOCK_GetLowPowerOscillatorGeneralPurposeInputStatus:
 6883              	.LFB279:
1634:../Libraries/XMCLib/src/xmc4_scu.c **** 
1635:../Libraries/XMCLib/src/xmc4_scu.c **** uint32_t XMC_SCU_CLOCK_GetLowPowerOscillatorGeneralPurposeInputStatus(void)
1636:../Libraries/XMCLib/src/xmc4_scu.c **** {
 6884              	 .loc 3 1636 0
 6885              	 .cfi_startproc
 6886              	 
 6887              	 
 6888              	 
 6889 0000 80B4     	 push {r7}
 6890              	.LCFI601:
 6891              	 .cfi_def_cfa_offset 4
 6892              	 .cfi_offset 7,-4
 6893 0002 00AF     	 add r7,sp,#0
 6894              	.LCFI602:
 6895              	 .cfi_def_cfa_register 7
1637:../Libraries/XMCLib/src/xmc4_scu.c ****   return (SCU_HIBERNATE->OSCULSTAT & SCU_HIBERNATE_OSCULSTAT_X1D_Msk);
 6896              	 .loc 3 1637 0
 6897 0004 044B     	 ldr r3,.L465
 6898 0006 9B69     	 ldr r3,[r3,#24]
 6899 0008 03F00103 	 and r3,r3,#1
1638:../Libraries/XMCLib/src/xmc4_scu.c **** }
 6900              	 .loc 3 1638 0
 6901 000c 1846     	 mov r0,r3
 6902 000e BD46     	 mov sp,r7
 6903              	.LCFI603:
 6904              	 .cfi_def_cfa_register 13
 6905              	 
 6906 0010 5DF8047B 	 ldr r7,[sp],#4
 6907              	.LCFI604:
 6908              	 .cfi_restore 7
 6909              	 .cfi_def_cfa_offset 0
 6910 0014 7047     	 bx lr
 6911              	.L466:
 6912 0016 00BF     	 .align 2
 6913              	.L465:
 6914 0018 00430050 	 .word 1342194432
 6915              	 .cfi_endproc
 6916              	.LFE279:
 6918              	 .section .text.XMC_SCU_CLOCK_EnableHighPerformanceOscillator,"ax",%progbits
 6919              	 .align 2
 6920              	 .global XMC_SCU_CLOCK_EnableHighPerformanceOscillator
 6921              	 .thumb
 6922              	 .thumb_func
 6924              	XMC_SCU_CLOCK_EnableHighPerformanceOscillator:
 6925              	.LFB280:
1639:../Libraries/XMCLib/src/xmc4_scu.c **** 
1640:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to enable High Precision High Speed oscillator */
1641:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_EnableHighPerformanceOscillator(void)
1642:../Libraries/XMCLib/src/xmc4_scu.c **** {
 6926              	 .loc 3 1642 0
 6927              	 .cfi_startproc
 6928              	 
 6929              	 
 6930 0000 B0B5     	 push {r4,r5,r7,lr}
 6931              	.LCFI605:
 6932              	 .cfi_def_cfa_offset 16
 6933              	 .cfi_offset 4,-16
 6934              	 .cfi_offset 5,-12
 6935              	 .cfi_offset 7,-8
 6936              	 .cfi_offset 14,-4
 6937 0002 00AF     	 add r7,sp,#0
 6938              	.LCFI606:
 6939              	 .cfi_def_cfa_register 7
1643:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_PLL->PLLCON0 &= (uint32_t)~SCU_PLL_PLLCON0_PLLPWD_Msk;
 6940              	 .loc 3 1643 0
 6941 0004 0F4A     	 ldr r2,.L468
 6942 0006 0F4B     	 ldr r3,.L468
 6943 0008 5B68     	 ldr r3,[r3,#4]
 6944 000a 23F48033 	 bic r3,r3,#65536
 6945 000e 5360     	 str r3,[r2,#4]
1644:../Libraries/XMCLib/src/xmc4_scu.c **** 
1645:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_OSC->OSCHPCTRL = (uint32_t)((SCU_OSC->OSCHPCTRL & ~(SCU_OSC_OSCHPCTRL_MODE_Msk | SCU_OSC_OSCH
 6946              	 .loc 3 1645 0
 6947 0010 0D4D     	 ldr r5,.L468+4
 6948 0012 0D4B     	 ldr r3,.L468+4
 6949 0014 5B68     	 ldr r3,[r3,#4]
 6950 0016 23F47024 	 bic r4,r3,#983040
 6951 001a 24F03004 	 bic r4,r4,#48
1646:../Libraries/XMCLib/src/xmc4_scu.c ****                                   (((OSCHP_GetFrequency() / FOSCREF) - 1UL) << SCU_OSC_OSCHPCTRL_OS
 6952              	 .loc 3 1646 0
 6953 001e FFF7FEFF 	 bl OSCHP_GetFrequency
 6954 0022 0246     	 mov r2,r0
 6955 0024 094B     	 ldr r3,.L468+8
 6956 0026 A3FB0223 	 umull r2,r3,r3,r2
 6957 002a 1B0D     	 lsrs r3,r3,#20
 6958 002c 013B     	 subs r3,r3,#1
 6959 002e 1B04     	 lsls r3,r3,#16
1645:../Libraries/XMCLib/src/xmc4_scu.c ****                                   (((OSCHP_GetFrequency() / FOSCREF) - 1UL) << SCU_OSC_OSCHPCTRL_OS
 6960              	 .loc 3 1645 0
 6961 0030 2343     	 orrs r3,r3,r4
 6962 0032 6B60     	 str r3,[r5,#4]
1647:../Libraries/XMCLib/src/xmc4_scu.c **** 
1648:../Libraries/XMCLib/src/xmc4_scu.c ****   /* restart OSC Watchdog */
1649:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_PLL->PLLCON0 &= (uint32_t)~SCU_PLL_PLLCON0_OSCRES_Msk;
 6963              	 .loc 3 1649 0
 6964 0034 034A     	 ldr r2,.L468
 6965 0036 034B     	 ldr r3,.L468
 6966 0038 5B68     	 ldr r3,[r3,#4]
 6967 003a 23F40033 	 bic r3,r3,#131072
 6968 003e 5360     	 str r3,[r2,#4]
1650:../Libraries/XMCLib/src/xmc4_scu.c **** }
 6969              	 .loc 3 1650 0
 6970 0040 B0BD     	 pop {r4,r5,r7,pc}
 6971              	.L469:
 6972 0042 00BF     	 .align 2
 6973              	.L468:
 6974 0044 10470050 	 .word 1342195472
 6975 0048 00470050 	 .word 1342195456
 6976 004c 6BCA5F6B 	 .word 1801439851
 6977              	 .cfi_endproc
 6978              	.LFE280:
 6980              	 .section .text.XMC_SCU_CLOCK_IsHighPerformanceOscillatorStable,"ax",%progbits
 6981              	 .align 2
 6982              	 .global XMC_SCU_CLOCK_IsHighPerformanceOscillatorStable
 6983              	 .thumb
 6984              	 .thumb_func
 6986              	XMC_SCU_CLOCK_IsHighPerformanceOscillatorStable:
 6987              	.LFB281:
1651:../Libraries/XMCLib/src/xmc4_scu.c **** 
1652:../Libraries/XMCLib/src/xmc4_scu.c **** bool XMC_SCU_CLOCK_IsHighPerformanceOscillatorStable(void)
1653:../Libraries/XMCLib/src/xmc4_scu.c **** {
 6988              	 .loc 3 1653 0
 6989              	 .cfi_startproc
 6990              	 
 6991              	 
 6992              	 
 6993 0000 80B4     	 push {r7}
 6994              	.LCFI607:
 6995              	 .cfi_def_cfa_offset 4
 6996              	 .cfi_offset 7,-4
 6997 0002 00AF     	 add r7,sp,#0
 6998              	.LCFI608:
 6999              	 .cfi_def_cfa_register 7
1654:../Libraries/XMCLib/src/xmc4_scu.c ****   return ((SCU_PLL->PLLSTAT & XMC_SCU_PLL_PLLSTAT_OSC_USABLE) == XMC_SCU_PLL_PLLSTAT_OSC_USABLE);
 7000              	 .loc 3 1654 0
 7001 0004 074B     	 ldr r3,.L472
 7002 0006 1B68     	 ldr r3,[r3]
 7003 0008 03F46073 	 and r3,r3,#896
 7004 000c B3F5607F 	 cmp r3,#896
 7005 0010 0CBF     	 ite eq
 7006 0012 0123     	 moveq r3,#1
 7007 0014 0023     	 movne r3,#0
 7008 0016 DBB2     	 uxtb r3,r3
1655:../Libraries/XMCLib/src/xmc4_scu.c **** }
 7009              	 .loc 3 1655 0
 7010 0018 1846     	 mov r0,r3
 7011 001a BD46     	 mov sp,r7
 7012              	.LCFI609:
 7013              	 .cfi_def_cfa_register 13
 7014              	 
 7015 001c 5DF8047B 	 ldr r7,[sp],#4
 7016              	.LCFI610:
 7017              	 .cfi_restore 7
 7018              	 .cfi_def_cfa_offset 0
 7019 0020 7047     	 bx lr
 7020              	.L473:
 7021 0022 00BF     	 .align 2
 7022              	.L472:
 7023 0024 10470050 	 .word 1342195472
 7024              	 .cfi_endproc
 7025              	.LFE281:
 7027              	 .section .text.XMC_SCU_CLOCK_DisableHighPerformanceOscillator,"ax",%progbits
 7028              	 .align 2
 7029              	 .global XMC_SCU_CLOCK_DisableHighPerformanceOscillator
 7030              	 .thumb
 7031              	 .thumb_func
 7033              	XMC_SCU_CLOCK_DisableHighPerformanceOscillator:
 7034              	.LFB282:
1656:../Libraries/XMCLib/src/xmc4_scu.c **** 
1657:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to disable High Precision High Speed oscillator */
1658:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_DisableHighPerformanceOscillator(void)
1659:../Libraries/XMCLib/src/xmc4_scu.c **** {
 7035              	 .loc 3 1659 0
 7036              	 .cfi_startproc
 7037              	 
 7038              	 
 7039              	 
 7040 0000 80B4     	 push {r7}
 7041              	.LCFI611:
 7042              	 .cfi_def_cfa_offset 4
 7043              	 .cfi_offset 7,-4
 7044 0002 00AF     	 add r7,sp,#0
 7045              	.LCFI612:
 7046              	 .cfi_def_cfa_register 7
1660:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_OSC->OSCHPCTRL |= (uint32_t)SCU_OSC_OSCHPCTRL_MODE_Msk;
 7047              	 .loc 3 1660 0
 7048 0004 044A     	 ldr r2,.L475
 7049 0006 044B     	 ldr r3,.L475
 7050 0008 5B68     	 ldr r3,[r3,#4]
 7051 000a 43F03003 	 orr r3,r3,#48
 7052 000e 5360     	 str r3,[r2,#4]
1661:../Libraries/XMCLib/src/xmc4_scu.c **** }
 7053              	 .loc 3 1661 0
 7054 0010 BD46     	 mov sp,r7
 7055              	.LCFI613:
 7056              	 .cfi_def_cfa_register 13
 7057              	 
 7058 0012 5DF8047B 	 ldr r7,[sp],#4
 7059              	.LCFI614:
 7060              	 .cfi_restore 7
 7061              	 .cfi_def_cfa_offset 0
 7062 0016 7047     	 bx lr
 7063              	.L476:
 7064              	 .align 2
 7065              	.L475:
 7066 0018 00470050 	 .word 1342195456
 7067              	 .cfi_endproc
 7068              	.LFE282:
 7070              	 .section .text.XMC_SCU_CLOCK_EnableHighPerformanceOscillatorGeneralPurposeInput,"ax",%progbits
 7071              	 .align 2
 7072              	 .global XMC_SCU_CLOCK_EnableHighPerformanceOscillatorGeneralPurposeInput
 7073              	 .thumb
 7074              	 .thumb_func
 7076              	XMC_SCU_CLOCK_EnableHighPerformanceOscillatorGeneralPurposeInput:
 7077              	.LFB283:
1662:../Libraries/XMCLib/src/xmc4_scu.c **** 
1663:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_EnableHighPerformanceOscillatorGeneralPurposeInput(void)
1664:../Libraries/XMCLib/src/xmc4_scu.c **** {
 7078              	 .loc 3 1664 0
 7079              	 .cfi_startproc
 7080              	 
 7081              	 
 7082              	 
 7083 0000 80B4     	 push {r7}
 7084              	.LCFI615:
 7085              	 .cfi_def_cfa_offset 4
 7086              	 .cfi_offset 7,-4
 7087 0002 00AF     	 add r7,sp,#0
 7088              	.LCFI616:
 7089              	 .cfi_def_cfa_register 7
1665:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_OSC->OSCHPCTRL |= SCU_OSC_OSCHPCTRL_X1DEN_Msk;
 7090              	 .loc 3 1665 0
 7091 0004 044A     	 ldr r2,.L478
 7092 0006 044B     	 ldr r3,.L478
 7093 0008 5B68     	 ldr r3,[r3,#4]
 7094 000a 43F00103 	 orr r3,r3,#1
 7095 000e 5360     	 str r3,[r2,#4]
1666:../Libraries/XMCLib/src/xmc4_scu.c **** }
 7096              	 .loc 3 1666 0
 7097 0010 BD46     	 mov sp,r7
 7098              	.LCFI617:
 7099              	 .cfi_def_cfa_register 13
 7100              	 
 7101 0012 5DF8047B 	 ldr r7,[sp],#4
 7102              	.LCFI618:
 7103              	 .cfi_restore 7
 7104              	 .cfi_def_cfa_offset 0
 7105 0016 7047     	 bx lr
 7106              	.L479:
 7107              	 .align 2
 7108              	.L478:
 7109 0018 00470050 	 .word 1342195456
 7110              	 .cfi_endproc
 7111              	.LFE283:
 7113              	 .section .text.XMC_SCU_CLOCK_DisableHighPerformanceOscillatorGeneralPurposeInput,"ax",%progbits
 7114              	 .align 2
 7115              	 .global XMC_SCU_CLOCK_DisableHighPerformanceOscillatorGeneralPurposeInput
 7116              	 .thumb
 7117              	 .thumb_func
 7119              	XMC_SCU_CLOCK_DisableHighPerformanceOscillatorGeneralPurposeInput:
 7120              	.LFB284:
1667:../Libraries/XMCLib/src/xmc4_scu.c **** 
1668:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_DisableHighPerformanceOscillatorGeneralPurposeInput(void)
1669:../Libraries/XMCLib/src/xmc4_scu.c **** {
 7121              	 .loc 3 1669 0
 7122              	 .cfi_startproc
 7123              	 
 7124              	 
 7125              	 
 7126 0000 80B4     	 push {r7}
 7127              	.LCFI619:
 7128              	 .cfi_def_cfa_offset 4
 7129              	 .cfi_offset 7,-4
 7130 0002 00AF     	 add r7,sp,#0
 7131              	.LCFI620:
 7132              	 .cfi_def_cfa_register 7
1670:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_OSC->OSCHPCTRL &= ~SCU_OSC_OSCHPCTRL_X1DEN_Msk;
 7133              	 .loc 3 1670 0
 7134 0004 044A     	 ldr r2,.L481
 7135 0006 044B     	 ldr r3,.L481
 7136 0008 5B68     	 ldr r3,[r3,#4]
 7137 000a 23F00103 	 bic r3,r3,#1
 7138 000e 5360     	 str r3,[r2,#4]
1671:../Libraries/XMCLib/src/xmc4_scu.c **** }
 7139              	 .loc 3 1671 0
 7140 0010 BD46     	 mov sp,r7
 7141              	.LCFI621:
 7142              	 .cfi_def_cfa_register 13
 7143              	 
 7144 0012 5DF8047B 	 ldr r7,[sp],#4
 7145              	.LCFI622:
 7146              	 .cfi_restore 7
 7147              	 .cfi_def_cfa_offset 0
 7148 0016 7047     	 bx lr
 7149              	.L482:
 7150              	 .align 2
 7151              	.L481:
 7152 0018 00470050 	 .word 1342195456
 7153              	 .cfi_endproc
 7154              	.LFE284:
 7156              	 .section .text.XMC_SCU_CLOCK_GetHighPerformanceOscillatorGeneralPurposeInputStatus,"ax",%progbits
 7157              	 .align 2
 7158              	 .global XMC_SCU_CLOCK_GetHighPerformanceOscillatorGeneralPurposeInputStatus
 7159              	 .thumb
 7160              	 .thumb_func
 7162              	XMC_SCU_CLOCK_GetHighPerformanceOscillatorGeneralPurposeInputStatus:
 7163              	.LFB285:
1672:../Libraries/XMCLib/src/xmc4_scu.c **** 
1673:../Libraries/XMCLib/src/xmc4_scu.c **** uint32_t XMC_SCU_CLOCK_GetHighPerformanceOscillatorGeneralPurposeInputStatus(void)
1674:../Libraries/XMCLib/src/xmc4_scu.c **** {
 7164              	 .loc 3 1674 0
 7165              	 .cfi_startproc
 7166              	 
 7167              	 
 7168              	 
 7169 0000 80B4     	 push {r7}
 7170              	.LCFI623:
 7171              	 .cfi_def_cfa_offset 4
 7172              	 .cfi_offset 7,-4
 7173 0002 00AF     	 add r7,sp,#0
 7174              	.LCFI624:
 7175              	 .cfi_def_cfa_register 7
1675:../Libraries/XMCLib/src/xmc4_scu.c ****   return (SCU_OSC->OSCHPSTAT & SCU_OSC_OSCHPSTAT_X1D_Msk);
 7176              	 .loc 3 1675 0
 7177 0004 044B     	 ldr r3,.L485
 7178 0006 1B68     	 ldr r3,[r3]
 7179 0008 03F00103 	 and r3,r3,#1
1676:../Libraries/XMCLib/src/xmc4_scu.c **** }
 7180              	 .loc 3 1676 0
 7181 000c 1846     	 mov r0,r3
 7182 000e BD46     	 mov sp,r7
 7183              	.LCFI625:
 7184              	 .cfi_def_cfa_register 13
 7185              	 
 7186 0010 5DF8047B 	 ldr r7,[sp],#4
 7187              	.LCFI626:
 7188              	 .cfi_restore 7
 7189              	 .cfi_def_cfa_offset 0
 7190 0014 7047     	 bx lr
 7191              	.L486:
 7192 0016 00BF     	 .align 2
 7193              	.L485:
 7194 0018 00470050 	 .word 1342195456
 7195              	 .cfi_endproc
 7196              	.LFE285:
 7198              	 .section .text.XMC_SCU_CLOCK_EnableSystemPll,"ax",%progbits
 7199              	 .align 2
 7200              	 .global XMC_SCU_CLOCK_EnableSystemPll
 7201              	 .thumb
 7202              	 .thumb_func
 7204              	XMC_SCU_CLOCK_EnableSystemPll:
 7205              	.LFB286:
1677:../Libraries/XMCLib/src/xmc4_scu.c **** 
1678:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to enable main PLL */
1679:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_EnableSystemPll(void)
1680:../Libraries/XMCLib/src/xmc4_scu.c **** {
 7206              	 .loc 3 1680 0
 7207              	 .cfi_startproc
 7208              	 
 7209              	 
 7210              	 
 7211 0000 80B4     	 push {r7}
 7212              	.LCFI627:
 7213              	 .cfi_def_cfa_offset 4
 7214              	 .cfi_offset 7,-4
 7215 0002 00AF     	 add r7,sp,#0
 7216              	.LCFI628:
 7217              	 .cfi_def_cfa_register 7
1681:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_PLL->PLLCON0 &= (uint32_t)~(SCU_PLL_PLLCON0_VCOPWD_Msk | SCU_PLL_PLLCON0_PLLPWD_Msk);
 7218              	 .loc 3 1681 0
 7219 0004 054A     	 ldr r2,.L488
 7220 0006 054B     	 ldr r3,.L488
 7221 0008 5B68     	 ldr r3,[r3,#4]
 7222 000a 23F48033 	 bic r3,r3,#65536
 7223 000e 23F00203 	 bic r3,r3,#2
 7224 0012 5360     	 str r3,[r2,#4]
1682:../Libraries/XMCLib/src/xmc4_scu.c **** }
 7225              	 .loc 3 1682 0
 7226 0014 BD46     	 mov sp,r7
 7227              	.LCFI629:
 7228              	 .cfi_def_cfa_register 13
 7229              	 
 7230 0016 5DF8047B 	 ldr r7,[sp],#4
 7231              	.LCFI630:
 7232              	 .cfi_restore 7
 7233              	 .cfi_def_cfa_offset 0
 7234 001a 7047     	 bx lr
 7235              	.L489:
 7236              	 .align 2
 7237              	.L488:
 7238 001c 10470050 	 .word 1342195472
 7239              	 .cfi_endproc
 7240              	.LFE286:
 7242              	 .section .text.XMC_SCU_CLOCK_DisableSystemPll,"ax",%progbits
 7243              	 .align 2
 7244              	 .global XMC_SCU_CLOCK_DisableSystemPll
 7245              	 .thumb
 7246              	 .thumb_func
 7248              	XMC_SCU_CLOCK_DisableSystemPll:
 7249              	.LFB287:
1683:../Libraries/XMCLib/src/xmc4_scu.c **** 
1684:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to disable main PLL */
1685:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_DisableSystemPll(void)
1686:../Libraries/XMCLib/src/xmc4_scu.c **** {
 7250              	 .loc 3 1686 0
 7251              	 .cfi_startproc
 7252              	 
 7253              	 
 7254              	 
 7255 0000 80B4     	 push {r7}
 7256              	.LCFI631:
 7257              	 .cfi_def_cfa_offset 4
 7258              	 .cfi_offset 7,-4
 7259 0002 00AF     	 add r7,sp,#0
 7260              	.LCFI632:
 7261              	 .cfi_def_cfa_register 7
1687:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_PLL->PLLCON0 |= (uint32_t)(SCU_PLL_PLLCON0_VCOPWD_Msk | SCU_PLL_PLLCON0_PLLPWD_Msk);
 7262              	 .loc 3 1687 0
 7263 0004 054A     	 ldr r2,.L491
 7264 0006 054B     	 ldr r3,.L491
 7265 0008 5B68     	 ldr r3,[r3,#4]
 7266 000a 43F48033 	 orr r3,r3,#65536
 7267 000e 43F00203 	 orr r3,r3,#2
 7268 0012 5360     	 str r3,[r2,#4]
1688:../Libraries/XMCLib/src/xmc4_scu.c **** }
 7269              	 .loc 3 1688 0
 7270 0014 BD46     	 mov sp,r7
 7271              	.LCFI633:
 7272              	 .cfi_def_cfa_register 13
 7273              	 
 7274 0016 5DF8047B 	 ldr r7,[sp],#4
 7275              	.LCFI634:
 7276              	 .cfi_restore 7
 7277              	 .cfi_def_cfa_offset 0
 7278 001a 7047     	 bx lr
 7279              	.L492:
 7280              	 .align 2
 7281              	.L491:
 7282 001c 10470050 	 .word 1342195472
 7283              	 .cfi_endproc
 7284              	.LFE287:
 7286              	 .section .text.XMC_SCU_CLOCK_StartSystemPll,"ax",%progbits
 7287              	 .align 2
 7288              	 .global XMC_SCU_CLOCK_StartSystemPll
 7289              	 .thumb
 7290              	 .thumb_func
 7292              	XMC_SCU_CLOCK_StartSystemPll:
 7293              	.LFB288:
1689:../Libraries/XMCLib/src/xmc4_scu.c **** 
1690:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to configure main PLL */
1691:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_StartSystemPll(XMC_SCU_CLOCK_SYSPLLCLKSRC_t source,
1692:../Libraries/XMCLib/src/xmc4_scu.c ****                                   XMC_SCU_CLOCK_SYSPLL_MODE_t mode,
1693:../Libraries/XMCLib/src/xmc4_scu.c ****                                   uint32_t pdiv,
1694:../Libraries/XMCLib/src/xmc4_scu.c ****                                   uint32_t ndiv,
1695:../Libraries/XMCLib/src/xmc4_scu.c ****                                   uint32_t kdiv)
1696:../Libraries/XMCLib/src/xmc4_scu.c **** {
 7294              	 .loc 3 1696 0
 7295              	 .cfi_startproc
 7296              	 
 7297              	 
 7298 0000 80B5     	 push {r7,lr}
 7299              	.LCFI635:
 7300              	 .cfi_def_cfa_offset 8
 7301              	 .cfi_offset 7,-8
 7302              	 .cfi_offset 14,-4
 7303 0002 86B0     	 sub sp,sp,#24
 7304              	.LCFI636:
 7305              	 .cfi_def_cfa_offset 32
 7306 0004 00AF     	 add r7,sp,#0
 7307              	.LCFI637:
 7308              	 .cfi_def_cfa_register 7
 7309 0006 BA60     	 str r2,[r7,#8]
 7310 0008 7B60     	 str r3,[r7,#4]
 7311 000a 0346     	 mov r3,r0
 7312 000c FB81     	 strh r3,[r7,#14]
 7313 000e 0B46     	 mov r3,r1
 7314 0010 7B73     	 strb r3,[r7,#13]
1697:../Libraries/XMCLib/src/xmc4_scu.c **** 
1698:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t vco_frequency; /* Q10.22, max VCO frequency = 520MHz */
1699:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t kdiv_temp;
1700:../Libraries/XMCLib/src/xmc4_scu.c **** 
1701:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_SCU_CLOCK_SetSystemPllClockSource(source);
 7315              	 .loc 3 1701 0
 7316 0012 FB89     	 ldrh r3,[r7,#14]
 7317 0014 1846     	 mov r0,r3
 7318 0016 FFF7FEFF 	 bl XMC_SCU_CLOCK_SetSystemPllClockSource
1702:../Libraries/XMCLib/src/xmc4_scu.c **** 
1703:../Libraries/XMCLib/src/xmc4_scu.c ****   if (mode == XMC_SCU_CLOCK_SYSPLL_MODE_NORMAL)
 7319              	 .loc 3 1703 0
 7320 001a 7B7B     	 ldrb r3,[r7,#13]
 7321 001c 012B     	 cmp r3,#1
 7322 001e 40F08B80 	 bne .L494
1704:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1705:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Calculate initial step to be close to fOFI */
1706:../Libraries/XMCLib/src/xmc4_scu.c ****     if (source == XMC_SCU_CLOCK_SYSPLLCLKSRC_OSCHP)
 7323              	 .loc 3 1706 0
 7324 0022 FB89     	 ldrh r3,[r7,#14]
 7325 0024 002B     	 cmp r3,#0
 7326 0026 09D1     	 bne .L495
1707:../Libraries/XMCLib/src/xmc4_scu.c ****     {
1708:../Libraries/XMCLib/src/xmc4_scu.c ****       vco_frequency = (OSCHP_GetFrequency() / 1000000U) << 22;
 7327              	 .loc 3 1708 0
 7328 0028 FFF7FEFF 	 bl OSCHP_GetFrequency
 7329 002c 0246     	 mov r2,r0
 7330 002e 544B     	 ldr r3,.L505
 7331 0030 A3FB0223 	 umull r2,r3,r3,r2
 7332 0034 9B0C     	 lsrs r3,r3,#18
 7333 0036 9B05     	 lsls r3,r3,#22
 7334 0038 7B61     	 str r3,[r7,#20]
 7335 003a 02E0     	 b .L496
 7336              	.L495:
1709:../Libraries/XMCLib/src/xmc4_scu.c ****     }
1710:../Libraries/XMCLib/src/xmc4_scu.c ****     else
1711:../Libraries/XMCLib/src/xmc4_scu.c ****     {
1712:../Libraries/XMCLib/src/xmc4_scu.c ****       vco_frequency = (OFI_FREQUENCY / 1000000U) << 22;
 7337              	 .loc 3 1712 0
 7338 003c 4FF0C063 	 mov r3,#100663296
 7339 0040 7B61     	 str r3,[r7,#20]
 7340              	.L496:
1713:../Libraries/XMCLib/src/xmc4_scu.c ****     }
1714:../Libraries/XMCLib/src/xmc4_scu.c ****     vco_frequency = ((vco_frequency * ndiv) / pdiv);
 7341              	 .loc 3 1714 0
 7342 0042 7B69     	 ldr r3,[r7,#20]
 7343 0044 7A68     	 ldr r2,[r7,#4]
 7344 0046 02FB03F2 	 mul r2,r2,r3
 7345 004a BB68     	 ldr r3,[r7,#8]
 7346 004c B2FBF3F3 	 udiv r3,r2,r3
 7347 0050 7B61     	 str r3,[r7,#20]
1715:../Libraries/XMCLib/src/xmc4_scu.c ****     kdiv_temp = (vco_frequency / (OFI_FREQUENCY / 1000000U)) >> 22;
 7348              	 .loc 3 1715 0
 7349 0052 7B69     	 ldr r3,[r7,#20]
 7350 0054 4B4A     	 ldr r2,.L505+4
 7351 0056 A2FB0323 	 umull r2,r3,r2,r3
 7352 005a 1B09     	 lsrs r3,r3,#4
 7353 005c 9B0D     	 lsrs r3,r3,#22
 7354 005e 3B61     	 str r3,[r7,#16]
1716:../Libraries/XMCLib/src/xmc4_scu.c **** 
1717:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Switch to prescaler mode */
1718:../Libraries/XMCLib/src/xmc4_scu.c ****     SCU_PLL->PLLCON0 |= (uint32_t)SCU_PLL_PLLCON0_VCOBYP_Msk;
 7355              	 .loc 3 1718 0
 7356 0060 494A     	 ldr r2,.L505+8
 7357 0062 494B     	 ldr r3,.L505+8
 7358 0064 5B68     	 ldr r3,[r3,#4]
 7359 0066 43F00103 	 orr r3,r3,#1
 7360 006a 5360     	 str r3,[r2,#4]
1719:../Libraries/XMCLib/src/xmc4_scu.c ****     while ((SCU_PLL->PLLSTAT & SCU_PLL_PLLSTAT_VCOBYST_Msk) == 0U)
 7361              	 .loc 3 1719 0
 7362 006c 00BF     	 nop
 7363              	.L497:
 7364              	 .loc 3 1719 0 is_stmt 0 discriminator 1
 7365 006e 464B     	 ldr r3,.L505+8
 7366 0070 1B68     	 ldr r3,[r3]
 7367 0072 03F00103 	 and r3,r3,#1
 7368 0076 002B     	 cmp r3,#0
 7369 0078 F9D0     	 beq .L497
1720:../Libraries/XMCLib/src/xmc4_scu.c ****     {
1721:../Libraries/XMCLib/src/xmc4_scu.c ****       /* wait for prescaler mode */
1722:../Libraries/XMCLib/src/xmc4_scu.c ****     }
1723:../Libraries/XMCLib/src/xmc4_scu.c **** 
1724:../Libraries/XMCLib/src/xmc4_scu.c ****     /* disconnect Oscillator from PLL */
1725:../Libraries/XMCLib/src/xmc4_scu.c ****     SCU_PLL->PLLCON0 |= (uint32_t)SCU_PLL_PLLCON0_FINDIS_Msk;
 7370              	 .loc 3 1725 0 is_stmt 1
 7371 007a 434A     	 ldr r2,.L505+8
 7372 007c 424B     	 ldr r3,.L505+8
 7373 007e 5B68     	 ldr r3,[r3,#4]
 7374 0080 43F01003 	 orr r3,r3,#16
 7375 0084 5360     	 str r3,[r2,#4]
1726:../Libraries/XMCLib/src/xmc4_scu.c **** 
1727:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Setup divider settings for main PLL */
1728:../Libraries/XMCLib/src/xmc4_scu.c ****     SCU_PLL->PLLCON1 = (uint32_t)((SCU_PLL->PLLCON1 & ~(SCU_PLL_PLLCON1_NDIV_Msk | SCU_PLL_PLLCON1_
 7376              	 .loc 3 1728 0
 7377 0086 4049     	 ldr r1,.L505+8
 7378 0088 3F4B     	 ldr r3,.L505+8
 7379 008a 9A68     	 ldr r2,[r3,#8]
 7380 008c 3F4B     	 ldr r3,.L505+12
 7381 008e 1340     	 ands r3,r3,r2
1729:../Libraries/XMCLib/src/xmc4_scu.c ****                                    SCU_PLL_PLLCON1_PDIV_Msk)) | ((ndiv - 1UL) << SCU_PLL_PLLCON1_ND
 7382              	 .loc 3 1729 0
 7383 0090 7A68     	 ldr r2,[r7,#4]
 7384 0092 013A     	 subs r2,r2,#1
 7385 0094 1202     	 lsls r2,r2,#8
 7386 0096 1A43     	 orrs r2,r2,r3
1730:../Libraries/XMCLib/src/xmc4_scu.c ****                                   ((kdiv_temp - 1UL) << SCU_PLL_PLLCON1_K2DIV_Pos) |
 7387              	 .loc 3 1730 0
 7388 0098 3B69     	 ldr r3,[r7,#16]
 7389 009a 013B     	 subs r3,r3,#1
 7390 009c 1B04     	 lsls r3,r3,#16
1729:../Libraries/XMCLib/src/xmc4_scu.c ****                                    SCU_PLL_PLLCON1_PDIV_Msk)) | ((ndiv - 1UL) << SCU_PLL_PLLCON1_ND
 7391              	 .loc 3 1729 0
 7392 009e 1A43     	 orrs r2,r2,r3
1731:../Libraries/XMCLib/src/xmc4_scu.c ****                                   ((pdiv - 1UL) << SCU_PLL_PLLCON1_PDIV_Pos));
 7393              	 .loc 3 1731 0
 7394 00a0 BB68     	 ldr r3,[r7,#8]
 7395 00a2 013B     	 subs r3,r3,#1
 7396 00a4 1B06     	 lsls r3,r3,#24
1728:../Libraries/XMCLib/src/xmc4_scu.c ****                                    SCU_PLL_PLLCON1_PDIV_Msk)) | ((ndiv - 1UL) << SCU_PLL_PLLCON1_ND
 7397              	 .loc 3 1728 0
 7398 00a6 1343     	 orrs r3,r3,r2
 7399 00a8 8B60     	 str r3,[r1,#8]
1732:../Libraries/XMCLib/src/xmc4_scu.c **** 
1733:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Set OSCDISCDIS, OSC clock remains connected to the VCO in case of loss of lock */
1734:../Libraries/XMCLib/src/xmc4_scu.c ****     SCU_PLL->PLLCON0 |= (uint32_t)SCU_PLL_PLLCON0_OSCDISCDIS_Msk;
 7400              	 .loc 3 1734 0
 7401 00aa 374A     	 ldr r2,.L505+8
 7402 00ac 364B     	 ldr r3,.L505+8
 7403 00ae 5B68     	 ldr r3,[r3,#4]
 7404 00b0 43F04003 	 orr r3,r3,#64
 7405 00b4 5360     	 str r3,[r2,#4]
1735:../Libraries/XMCLib/src/xmc4_scu.c **** 
1736:../Libraries/XMCLib/src/xmc4_scu.c ****     /* connect Oscillator to PLL */
1737:../Libraries/XMCLib/src/xmc4_scu.c ****     SCU_PLL->PLLCON0 &= (uint32_t)~SCU_PLL_PLLCON0_FINDIS_Msk;
 7406              	 .loc 3 1737 0
 7407 00b6 344A     	 ldr r2,.L505+8
 7408 00b8 334B     	 ldr r3,.L505+8
 7409 00ba 5B68     	 ldr r3,[r3,#4]
 7410 00bc 23F01003 	 bic r3,r3,#16
 7411 00c0 5360     	 str r3,[r2,#4]
1738:../Libraries/XMCLib/src/xmc4_scu.c **** 
1739:../Libraries/XMCLib/src/xmc4_scu.c ****     /* restart PLL Lock detection */
1740:../Libraries/XMCLib/src/xmc4_scu.c ****     SCU_PLL->PLLCON0 |= (uint32_t)SCU_PLL_PLLCON0_RESLD_Msk;
 7412              	 .loc 3 1740 0
 7413 00c2 314A     	 ldr r2,.L505+8
 7414 00c4 304B     	 ldr r3,.L505+8
 7415 00c6 5B68     	 ldr r3,[r3,#4]
 7416 00c8 43F48023 	 orr r3,r3,#262144
 7417 00cc 5360     	 str r3,[r2,#4]
1741:../Libraries/XMCLib/src/xmc4_scu.c ****     while ((SCU_PLL->PLLSTAT & SCU_PLL_PLLSTAT_VCOLOCK_Msk) == 0U)
 7418              	 .loc 3 1741 0
 7419 00ce 00BF     	 nop
 7420              	.L498:
 7421              	 .loc 3 1741 0 is_stmt 0 discriminator 1
 7422 00d0 2D4B     	 ldr r3,.L505+8
 7423 00d2 1B68     	 ldr r3,[r3]
 7424 00d4 03F00403 	 and r3,r3,#4
 7425 00d8 002B     	 cmp r3,#0
 7426 00da F9D0     	 beq .L498
1742:../Libraries/XMCLib/src/xmc4_scu.c ****     {
1743:../Libraries/XMCLib/src/xmc4_scu.c ****       /* wait for PLL Lock */
1744:../Libraries/XMCLib/src/xmc4_scu.c ****     }
1745:../Libraries/XMCLib/src/xmc4_scu.c **** 
1746:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Switch to normal mode */
1747:../Libraries/XMCLib/src/xmc4_scu.c ****     SCU_PLL->PLLCON0 &= (uint32_t)~SCU_PLL_PLLCON0_VCOBYP_Msk;
 7427              	 .loc 3 1747 0 is_stmt 1
 7428 00dc 2A4A     	 ldr r2,.L505+8
 7429 00de 2A4B     	 ldr r3,.L505+8
 7430 00e0 5B68     	 ldr r3,[r3,#4]
 7431 00e2 23F00103 	 bic r3,r3,#1
 7432 00e6 5360     	 str r3,[r2,#4]
1748:../Libraries/XMCLib/src/xmc4_scu.c ****     while ((SCU_PLL->PLLSTAT & SCU_PLL_PLLSTAT_VCOBYST_Msk) != 0U)
 7433              	 .loc 3 1748 0
 7434 00e8 00BF     	 nop
 7435              	.L499:
 7436              	 .loc 3 1748 0 is_stmt 0 discriminator 1
 7437 00ea 274B     	 ldr r3,.L505+8
 7438 00ec 1B68     	 ldr r3,[r3]
 7439 00ee 03F00103 	 and r3,r3,#1
 7440 00f2 002B     	 cmp r3,#0
 7441 00f4 F9D1     	 bne .L499
1749:../Libraries/XMCLib/src/xmc4_scu.c ****     {
1750:../Libraries/XMCLib/src/xmc4_scu.c ****       /* wait for normal mode */
1751:../Libraries/XMCLib/src/xmc4_scu.c ****     }
1752:../Libraries/XMCLib/src/xmc4_scu.c **** 
1753:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Ramp up PLL frequency in steps */
1754:../Libraries/XMCLib/src/xmc4_scu.c ****     kdiv_temp = (vco_frequency / 60UL) >> 22;
 7442              	 .loc 3 1754 0 is_stmt 1
 7443 00f6 7B69     	 ldr r3,[r7,#20]
 7444 00f8 254A     	 ldr r2,.L505+16
 7445 00fa A2FB0323 	 umull r2,r3,r2,r3
 7446 00fe 5B09     	 lsrs r3,r3,#5
 7447 0100 9B0D     	 lsrs r3,r3,#22
 7448 0102 3B61     	 str r3,[r7,#16]
1755:../Libraries/XMCLib/src/xmc4_scu.c ****     if (kdiv < kdiv_temp)
 7449              	 .loc 3 1755 0
 7450 0104 3A6A     	 ldr r2,[r7,#32]
 7451 0106 3B69     	 ldr r3,[r7,#16]
 7452 0108 9A42     	 cmp r2,r3
 7453 010a 02D2     	 bcs .L500
1756:../Libraries/XMCLib/src/xmc4_scu.c ****     {
1757:../Libraries/XMCLib/src/xmc4_scu.c ****       XMC_SCU_CLOCK_StepSystemPllFrequency(kdiv_temp);
 7454              	 .loc 3 1757 0
 7455 010c 3869     	 ldr r0,[r7,#16]
 7456 010e FFF7FEFF 	 bl XMC_SCU_CLOCK_StepSystemPllFrequency
 7457              	.L500:
1758:../Libraries/XMCLib/src/xmc4_scu.c ****     }
1759:../Libraries/XMCLib/src/xmc4_scu.c **** 
1760:../Libraries/XMCLib/src/xmc4_scu.c ****     kdiv_temp = (vco_frequency / 90UL) >> 22;
 7458              	 .loc 3 1760 0
 7459 0112 7B69     	 ldr r3,[r7,#20]
 7460 0114 5B08     	 lsrs r3,r3,#1
 7461 0116 1F4A     	 ldr r2,.L505+20
 7462 0118 A2FB0323 	 umull r2,r3,r2,r3
 7463 011c 5B09     	 lsrs r3,r3,#5
 7464 011e 9B0D     	 lsrs r3,r3,#22
 7465 0120 3B61     	 str r3,[r7,#16]
1761:../Libraries/XMCLib/src/xmc4_scu.c ****     if (kdiv < kdiv_temp)
 7466              	 .loc 3 1761 0
 7467 0122 3A6A     	 ldr r2,[r7,#32]
 7468 0124 3B69     	 ldr r3,[r7,#16]
 7469 0126 9A42     	 cmp r2,r3
 7470 0128 02D2     	 bcs .L501
1762:../Libraries/XMCLib/src/xmc4_scu.c ****     {
1763:../Libraries/XMCLib/src/xmc4_scu.c ****       XMC_SCU_CLOCK_StepSystemPllFrequency(kdiv_temp);
 7471              	 .loc 3 1763 0
 7472 012a 3869     	 ldr r0,[r7,#16]
 7473 012c FFF7FEFF 	 bl XMC_SCU_CLOCK_StepSystemPllFrequency
 7474              	.L501:
1764:../Libraries/XMCLib/src/xmc4_scu.c ****     }
1765:../Libraries/XMCLib/src/xmc4_scu.c **** 
1766:../Libraries/XMCLib/src/xmc4_scu.c ****     XMC_SCU_CLOCK_StepSystemPllFrequency(kdiv);
 7475              	 .loc 3 1766 0
 7476 0130 386A     	 ldr r0,[r7,#32]
 7477 0132 FFF7FEFF 	 bl XMC_SCU_CLOCK_StepSystemPllFrequency
 7478 0136 1CE0     	 b .L502
 7479              	.L494:
1767:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1768:../Libraries/XMCLib/src/xmc4_scu.c ****   else
1769:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1770:../Libraries/XMCLib/src/xmc4_scu.c ****     SCU_PLL->PLLCON1 = (uint32_t)((SCU_PLL->PLLCON1 & ~SCU_PLL_PLLCON1_K1DIV_Msk) |
 7480              	 .loc 3 1770 0
 7481 0138 1349     	 ldr r1,.L505+8
 7482 013a 134B     	 ldr r3,.L505+8
 7483 013c 9B68     	 ldr r3,[r3,#8]
 7484 013e 23F07F02 	 bic r2,r3,#127
1771:../Libraries/XMCLib/src/xmc4_scu.c ****                                   ((kdiv - 1UL) << SCU_PLL_PLLCON1_K1DIV_Pos));
 7485              	 .loc 3 1771 0
 7486 0142 3B6A     	 ldr r3,[r7,#32]
 7487 0144 013B     	 subs r3,r3,#1
1770:../Libraries/XMCLib/src/xmc4_scu.c ****                                   ((kdiv - 1UL) << SCU_PLL_PLLCON1_K1DIV_Pos));
 7488              	 .loc 3 1770 0
 7489 0146 1343     	 orrs r3,r3,r2
 7490 0148 8B60     	 str r3,[r1,#8]
1772:../Libraries/XMCLib/src/xmc4_scu.c **** 
1773:../Libraries/XMCLib/src/xmc4_scu.c ****     while ((SCU_PLL->PLLSTAT & SCU_PLL_PLLSTAT_K1RDY_Msk) == 0U)
 7491              	 .loc 3 1773 0
 7492 014a 00BF     	 nop
 7493              	.L503:
 7494              	 .loc 3 1773 0 is_stmt 0 discriminator 1
 7495 014c 0E4B     	 ldr r3,.L505+8
 7496 014e 1B68     	 ldr r3,[r3]
 7497 0150 03F01003 	 and r3,r3,#16
 7498 0154 002B     	 cmp r3,#0
 7499 0156 F9D0     	 beq .L503
1774:../Libraries/XMCLib/src/xmc4_scu.c ****     {
1775:../Libraries/XMCLib/src/xmc4_scu.c ****       /* wait until K1-divider operates on the configured value  */
1776:../Libraries/XMCLib/src/xmc4_scu.c ****     }
1777:../Libraries/XMCLib/src/xmc4_scu.c **** 
1778:../Libraries/XMCLib/src/xmc4_scu.c ****     /* Switch to prescaler mode */
1779:../Libraries/XMCLib/src/xmc4_scu.c ****     SCU_PLL->PLLCON0 |= (uint32_t)SCU_PLL_PLLCON0_VCOBYP_Msk;
 7500              	 .loc 3 1779 0 is_stmt 1
 7501 0158 0B4A     	 ldr r2,.L505+8
 7502 015a 0B4B     	 ldr r3,.L505+8
 7503 015c 5B68     	 ldr r3,[r3,#4]
 7504 015e 43F00103 	 orr r3,r3,#1
 7505 0162 5360     	 str r3,[r2,#4]
1780:../Libraries/XMCLib/src/xmc4_scu.c **** 
1781:../Libraries/XMCLib/src/xmc4_scu.c ****     while ((SCU_PLL->PLLSTAT & SCU_PLL_PLLSTAT_VCOBYST_Msk) == 0U)
 7506              	 .loc 3 1781 0
 7507 0164 00BF     	 nop
 7508              	.L504:
 7509              	 .loc 3 1781 0 is_stmt 0 discriminator 1
 7510 0166 084B     	 ldr r3,.L505+8
 7511 0168 1B68     	 ldr r3,[r3]
 7512 016a 03F00103 	 and r3,r3,#1
 7513 016e 002B     	 cmp r3,#0
 7514 0170 F9D0     	 beq .L504
 7515              	.L502:
1782:../Libraries/XMCLib/src/xmc4_scu.c ****     {
1783:../Libraries/XMCLib/src/xmc4_scu.c ****       /* wait for prescaler mode */
1784:../Libraries/XMCLib/src/xmc4_scu.c ****     }
1785:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1786:../Libraries/XMCLib/src/xmc4_scu.c **** 
1787:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_TRAP->TRAPCLR = SCU_TRAP_TRAPCLR_SOSCWDGT_Msk | SCU_TRAP_TRAPCLR_SVCOLCKT_Msk;
 7516              	 .loc 3 1787 0 is_stmt 1
 7517 0172 094B     	 ldr r3,.L505+24
 7518 0174 0522     	 movs r2,#5
 7519 0176 DA60     	 str r2,[r3,#12]
1788:../Libraries/XMCLib/src/xmc4_scu.c **** }
 7520              	 .loc 3 1788 0
 7521 0178 1837     	 adds r7,r7,#24
 7522              	.LCFI638:
 7523              	 .cfi_def_cfa_offset 8
 7524 017a BD46     	 mov sp,r7
 7525              	.LCFI639:
 7526              	 .cfi_def_cfa_register 13
 7527              	 
 7528 017c 80BD     	 pop {r7,pc}
 7529              	.L506:
 7530 017e 00BF     	 .align 2
 7531              	.L505:
 7532 0180 83DE1B43 	 .word 1125899907
 7533 0184 ABAAAAAA 	 .word -1431655765
 7534 0188 10470050 	 .word 1342195472
 7535 018c FF8080F0 	 .word -260013825
 7536 0190 89888888 	 .word -2004318071
 7537 0194 B7600BB6 	 .word -1240768329
 7538 0198 60410050 	 .word 1342194016
 7539              	 .cfi_endproc
 7540              	.LFE288:
 7542              	 .section .text.XMC_SCU_CLOCK_StopSystemPll,"ax",%progbits
 7543              	 .align 2
 7544              	 .global XMC_SCU_CLOCK_StopSystemPll
 7545              	 .thumb
 7546              	 .thumb_func
 7548              	XMC_SCU_CLOCK_StopSystemPll:
 7549              	.LFB289:
1789:../Libraries/XMCLib/src/xmc4_scu.c **** 
1790:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to stop main PLL operation */
1791:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_StopSystemPll(void)
1792:../Libraries/XMCLib/src/xmc4_scu.c **** {
 7550              	 .loc 3 1792 0
 7551              	 .cfi_startproc
 7552              	 
 7553              	 
 7554              	 
 7555 0000 80B4     	 push {r7}
 7556              	.LCFI640:
 7557              	 .cfi_def_cfa_offset 4
 7558              	 .cfi_offset 7,-4
 7559 0002 00AF     	 add r7,sp,#0
 7560              	.LCFI641:
 7561              	 .cfi_def_cfa_register 7
1793:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_PLL->PLLCON0 |= (uint32_t)SCU_PLL_PLLCON0_PLLPWD_Msk;
 7562              	 .loc 3 1793 0
 7563 0004 044A     	 ldr r2,.L508
 7564 0006 044B     	 ldr r3,.L508
 7565 0008 5B68     	 ldr r3,[r3,#4]
 7566 000a 43F48033 	 orr r3,r3,#65536
 7567 000e 5360     	 str r3,[r2,#4]
1794:../Libraries/XMCLib/src/xmc4_scu.c **** }
 7568              	 .loc 3 1794 0
 7569 0010 BD46     	 mov sp,r7
 7570              	.LCFI642:
 7571              	 .cfi_def_cfa_register 13
 7572              	 
 7573 0012 5DF8047B 	 ldr r7,[sp],#4
 7574              	.LCFI643:
 7575              	 .cfi_restore 7
 7576              	 .cfi_def_cfa_offset 0
 7577 0016 7047     	 bx lr
 7578              	.L509:
 7579              	 .align 2
 7580              	.L508:
 7581 0018 10470050 	 .word 1342195472
 7582              	 .cfi_endproc
 7583              	.LFE289:
 7585              	 .section .text.XMC_SCU_CLOCK_StepSystemPllFrequency,"ax",%progbits
 7586              	 .align 2
 7587              	 .global XMC_SCU_CLOCK_StepSystemPllFrequency
 7588              	 .thumb
 7589              	 .thumb_func
 7591              	XMC_SCU_CLOCK_StepSystemPllFrequency:
 7592              	.LFB290:
1795:../Libraries/XMCLib/src/xmc4_scu.c **** 
1796:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to step up/down the main PLL frequency */
1797:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_StepSystemPllFrequency(uint32_t kdiv)
1798:../Libraries/XMCLib/src/xmc4_scu.c **** {
 7593              	 .loc 3 1798 0
 7594              	 .cfi_startproc
 7595              	 
 7596              	 
 7597 0000 80B5     	 push {r7,lr}
 7598              	.LCFI644:
 7599              	 .cfi_def_cfa_offset 8
 7600              	 .cfi_offset 7,-8
 7601              	 .cfi_offset 14,-4
 7602 0002 82B0     	 sub sp,sp,#8
 7603              	.LCFI645:
 7604              	 .cfi_def_cfa_offset 16
 7605 0004 00AF     	 add r7,sp,#0
 7606              	.LCFI646:
 7607              	 .cfi_def_cfa_register 7
 7608 0006 7860     	 str r0,[r7,#4]
1799:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_PLL->PLLCON1 = (uint32_t)((SCU_PLL->PLLCON1 & ~SCU_PLL_PLLCON1_K2DIV_Msk) |
 7609              	 .loc 3 1799 0
 7610 0008 0B49     	 ldr r1,.L512
 7611 000a 0B4B     	 ldr r3,.L512
 7612 000c 9B68     	 ldr r3,[r3,#8]
 7613 000e 23F4FE02 	 bic r2,r3,#8323072
1800:../Libraries/XMCLib/src/xmc4_scu.c ****                                 ((kdiv - 1UL) << SCU_PLL_PLLCON1_K2DIV_Pos));
 7614              	 .loc 3 1800 0
 7615 0012 7B68     	 ldr r3,[r7,#4]
 7616 0014 013B     	 subs r3,r3,#1
 7617 0016 1B04     	 lsls r3,r3,#16
1799:../Libraries/XMCLib/src/xmc4_scu.c ****   SCU_PLL->PLLCON1 = (uint32_t)((SCU_PLL->PLLCON1 & ~SCU_PLL_PLLCON1_K2DIV_Msk) |
 7618              	 .loc 3 1799 0
 7619 0018 1343     	 orrs r3,r3,r2
 7620 001a 8B60     	 str r3,[r1,#8]
1801:../Libraries/XMCLib/src/xmc4_scu.c **** 
1802:../Libraries/XMCLib/src/xmc4_scu.c ****   while ((SCU_PLL->PLLSTAT & SCU_PLL_PLLSTAT_K2RDY_Msk) == 0U)
 7621              	 .loc 3 1802 0
 7622 001c 00BF     	 nop
 7623              	.L511:
 7624              	 .loc 3 1802 0 is_stmt 0 discriminator 1
 7625 001e 064B     	 ldr r3,.L512
 7626 0020 1B68     	 ldr r3,[r3]
 7627 0022 03F02003 	 and r3,r3,#32
 7628 0026 002B     	 cmp r3,#0
 7629 0028 F9D0     	 beq .L511
1803:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1804:../Libraries/XMCLib/src/xmc4_scu.c ****     /* wait until K2-divider operates on the configured value  */
1805:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1806:../Libraries/XMCLib/src/xmc4_scu.c **** 
1807:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_SCU_lDelay(50U);
 7630              	 .loc 3 1807 0 is_stmt 1
 7631 002a 3220     	 movs r0,#50
 7632 002c FFF7FEFF 	 bl XMC_SCU_lDelay
1808:../Libraries/XMCLib/src/xmc4_scu.c **** }
 7633              	 .loc 3 1808 0
 7634 0030 0837     	 adds r7,r7,#8
 7635              	.LCFI647:
 7636              	 .cfi_def_cfa_offset 8
 7637 0032 BD46     	 mov sp,r7
 7638              	.LCFI648:
 7639              	 .cfi_def_cfa_register 13
 7640              	 
 7641 0034 80BD     	 pop {r7,pc}
 7642              	.L513:
 7643 0036 00BF     	 .align 2
 7644              	.L512:
 7645 0038 10470050 	 .word 1342195472
 7646              	 .cfi_endproc
 7647              	.LFE290:
 7649              	 .section .text.XMC_SCU_CLOCK_IsSystemPllLocked,"ax",%progbits
 7650              	 .align 2
 7651              	 .global XMC_SCU_CLOCK_IsSystemPllLocked
 7652              	 .thumb
 7653              	 .thumb_func
 7655              	XMC_SCU_CLOCK_IsSystemPllLocked:
 7656              	.LFB291:
1809:../Libraries/XMCLib/src/xmc4_scu.c **** 
1810:../Libraries/XMCLib/src/xmc4_scu.c **** /* API to check main PLL is locked or not */
1811:../Libraries/XMCLib/src/xmc4_scu.c **** bool XMC_SCU_CLOCK_IsSystemPllLocked(void)
1812:../Libraries/XMCLib/src/xmc4_scu.c **** {
 7657              	 .loc 3 1812 0
 7658              	 .cfi_startproc
 7659              	 
 7660              	 
 7661              	 
 7662 0000 80B4     	 push {r7}
 7663              	.LCFI649:
 7664              	 .cfi_def_cfa_offset 4
 7665              	 .cfi_offset 7,-4
 7666 0002 00AF     	 add r7,sp,#0
 7667              	.LCFI650:
 7668              	 .cfi_def_cfa_register 7
1813:../Libraries/XMCLib/src/xmc4_scu.c ****   return (bool)((SCU_PLL->PLLSTAT & SCU_PLL_PLLSTAT_VCOLOCK_Msk) != 0UL);
 7669              	 .loc 3 1813 0
 7670 0004 064B     	 ldr r3,.L516
 7671 0006 1B68     	 ldr r3,[r3]
 7672 0008 03F00403 	 and r3,r3,#4
 7673 000c 002B     	 cmp r3,#0
 7674 000e 14BF     	 ite ne
 7675 0010 0123     	 movne r3,#1
 7676 0012 0023     	 moveq r3,#0
 7677 0014 DBB2     	 uxtb r3,r3
1814:../Libraries/XMCLib/src/xmc4_scu.c **** }
 7678              	 .loc 3 1814 0
 7679 0016 1846     	 mov r0,r3
 7680 0018 BD46     	 mov sp,r7
 7681              	.LCFI651:
 7682              	 .cfi_def_cfa_register 13
 7683              	 
 7684 001a 5DF8047B 	 ldr r7,[sp],#4
 7685              	.LCFI652:
 7686              	 .cfi_restore 7
 7687              	 .cfi_def_cfa_offset 0
 7688 001e 7047     	 bx lr
 7689              	.L517:
 7690              	 .align 2
 7691              	.L516:
 7692 0020 10470050 	 .word 1342195472
 7693              	 .cfi_endproc
 7694              	.LFE291:
 7696              	 .section .text.XMC_SCU_INTERRUPT_SetEventHandler,"ax",%progbits
 7697              	 .align 2
 7698              	 .global XMC_SCU_INTERRUPT_SetEventHandler
 7699              	 .thumb
 7700              	 .thumb_func
 7702              	XMC_SCU_INTERRUPT_SetEventHandler:
 7703              	.LFB292:
1815:../Libraries/XMCLib/src/xmc4_scu.c **** 
1816:../Libraries/XMCLib/src/xmc4_scu.c **** /*
1817:../Libraries/XMCLib/src/xmc4_scu.c ****  * API to assign the event handler function to be executed on occurrence of the selected event.
1818:../Libraries/XMCLib/src/xmc4_scu.c ****  */
1819:../Libraries/XMCLib/src/xmc4_scu.c **** XMC_SCU_STATUS_t XMC_SCU_INTERRUPT_SetEventHandler(const XMC_SCU_INTERRUPT_EVENT_t event,
1820:../Libraries/XMCLib/src/xmc4_scu.c ****     const XMC_SCU_INTERRUPT_EVENT_HANDLER_t handler)
1821:../Libraries/XMCLib/src/xmc4_scu.c **** {
 7704              	 .loc 3 1821 0
 7705              	 .cfi_startproc
 7706              	 
 7707              	 
 7708              	 
 7709 0000 80B4     	 push {r7}
 7710              	.LCFI653:
 7711              	 .cfi_def_cfa_offset 4
 7712              	 .cfi_offset 7,-4
 7713 0002 85B0     	 sub sp,sp,#20
 7714              	.LCFI654:
 7715              	 .cfi_def_cfa_offset 24
 7716 0004 00AF     	 add r7,sp,#0
 7717              	.LCFI655:
 7718              	 .cfi_def_cfa_register 7
 7719 0006 7860     	 str r0,[r7,#4]
 7720 0008 3960     	 str r1,[r7]
1822:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t index;
1823:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_SCU_STATUS_t status;
1824:../Libraries/XMCLib/src/xmc4_scu.c **** 
1825:../Libraries/XMCLib/src/xmc4_scu.c ****   index = 0U;
 7721              	 .loc 3 1825 0
 7722 000a 0023     	 movs r3,#0
 7723 000c FB60     	 str r3,[r7,#12]
1826:../Libraries/XMCLib/src/xmc4_scu.c ****   while (((event & ((XMC_SCU_INTERRUPT_EVENT_t)1 << index)) == 0U) && (index < XMC_SCU_INTERRUPT_EV
 7724              	 .loc 3 1826 0
 7725 000e 02E0     	 b .L519
 7726              	.L521:
1827:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1828:../Libraries/XMCLib/src/xmc4_scu.c ****     index++;
 7727              	 .loc 3 1828 0
 7728 0010 FB68     	 ldr r3,[r7,#12]
 7729 0012 0133     	 adds r3,r3,#1
 7730 0014 FB60     	 str r3,[r7,#12]
 7731              	.L519:
1826:../Libraries/XMCLib/src/xmc4_scu.c ****   while (((event & ((XMC_SCU_INTERRUPT_EVENT_t)1 << index)) == 0U) && (index < XMC_SCU_INTERRUPT_EV
 7732              	 .loc 3 1826 0
 7733 0016 FB68     	 ldr r3,[r7,#12]
 7734 0018 7A68     	 ldr r2,[r7,#4]
 7735 001a 22FA03F3 	 lsr r3,r2,r3
 7736 001e 03F00103 	 and r3,r3,#1
 7737 0022 002B     	 cmp r3,#0
 7738 0024 02D1     	 bne .L520
1826:../Libraries/XMCLib/src/xmc4_scu.c ****   while (((event & ((XMC_SCU_INTERRUPT_EVENT_t)1 << index)) == 0U) && (index < XMC_SCU_INTERRUPT_EV
 7739              	 .loc 3 1826 0 is_stmt 0 discriminator 1
 7740 0026 FB68     	 ldr r3,[r7,#12]
 7741 0028 1F2B     	 cmp r3,#31
 7742 002a F1D9     	 bls .L521
 7743              	.L520:
1829:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1830:../Libraries/XMCLib/src/xmc4_scu.c **** 
1831:../Libraries/XMCLib/src/xmc4_scu.c ****   if (index == XMC_SCU_INTERRUPT_EVENT_MAX)
 7744              	 .loc 3 1831 0 is_stmt 1
 7745 002c FB68     	 ldr r3,[r7,#12]
 7746 002e 202B     	 cmp r3,#32
 7747 0030 02D1     	 bne .L522
1832:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1833:../Libraries/XMCLib/src/xmc4_scu.c ****     status = XMC_SCU_STATUS_ERROR;
 7748              	 .loc 3 1833 0
 7749 0032 0123     	 movs r3,#1
 7750 0034 FB72     	 strb r3,[r7,#11]
 7751 0036 06E0     	 b .L523
 7752              	.L522:
1834:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1835:../Libraries/XMCLib/src/xmc4_scu.c ****   else
1836:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1837:../Libraries/XMCLib/src/xmc4_scu.c ****     event_handler_list[index] = handler;
 7753              	 .loc 3 1837 0
 7754 0038 0649     	 ldr r1,.L525
 7755 003a FB68     	 ldr r3,[r7,#12]
 7756 003c 3A68     	 ldr r2,[r7]
 7757 003e 41F82320 	 str r2,[r1,r3,lsl#2]
1838:../Libraries/XMCLib/src/xmc4_scu.c ****     status = XMC_SCU_STATUS_OK;
 7758              	 .loc 3 1838 0
 7759 0042 0023     	 movs r3,#0
 7760 0044 FB72     	 strb r3,[r7,#11]
 7761              	.L523:
1839:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1840:../Libraries/XMCLib/src/xmc4_scu.c **** 
1841:../Libraries/XMCLib/src/xmc4_scu.c ****   return (status);
 7762              	 .loc 3 1841 0
 7763 0046 FB7A     	 ldrb r3,[r7,#11]
1842:../Libraries/XMCLib/src/xmc4_scu.c **** }
 7764              	 .loc 3 1842 0
 7765 0048 1846     	 mov r0,r3
 7766 004a 1437     	 adds r7,r7,#20
 7767              	.LCFI656:
 7768              	 .cfi_def_cfa_offset 4
 7769 004c BD46     	 mov sp,r7
 7770              	.LCFI657:
 7771              	 .cfi_def_cfa_register 13
 7772              	 
 7773 004e 5DF8047B 	 ldr r7,[sp],#4
 7774              	.LCFI658:
 7775              	 .cfi_restore 7
 7776              	 .cfi_def_cfa_offset 0
 7777 0052 7047     	 bx lr
 7778              	.L526:
 7779              	 .align 2
 7780              	.L525:
 7781 0054 00000000 	 .word event_handler_list
 7782              	 .cfi_endproc
 7783              	.LFE292:
 7785              	 .section .text.XMC_SCU_IRQHandler,"ax",%progbits
 7786              	 .align 2
 7787              	 .global XMC_SCU_IRQHandler
 7788              	 .thumb
 7789              	 .thumb_func
 7791              	XMC_SCU_IRQHandler:
 7792              	.LFB293:
1843:../Libraries/XMCLib/src/xmc4_scu.c **** 
1844:../Libraries/XMCLib/src/xmc4_scu.c **** /*
1845:../Libraries/XMCLib/src/xmc4_scu.c ****  * API to execute callback functions for multiple events.
1846:../Libraries/XMCLib/src/xmc4_scu.c ****  */
1847:../Libraries/XMCLib/src/xmc4_scu.c **** void XMC_SCU_IRQHandler(uint32_t sr_num)
1848:../Libraries/XMCLib/src/xmc4_scu.c **** {
 7793              	 .loc 3 1848 0
 7794              	 .cfi_startproc
 7795              	 
 7796              	 
 7797 0000 80B5     	 push {r7,lr}
 7798              	.LCFI659:
 7799              	 .cfi_def_cfa_offset 8
 7800              	 .cfi_offset 7,-8
 7801              	 .cfi_offset 14,-4
 7802 0002 86B0     	 sub sp,sp,#24
 7803              	.LCFI660:
 7804              	 .cfi_def_cfa_offset 32
 7805 0004 00AF     	 add r7,sp,#0
 7806              	.LCFI661:
 7807              	 .cfi_def_cfa_register 7
 7808 0006 7860     	 str r0,[r7,#4]
1849:../Libraries/XMCLib/src/xmc4_scu.c ****   uint32_t index;
1850:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_SCU_INTERRUPT_EVENT_t event;
1851:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_SCU_INTERRUPT_EVENT_HANDLER_t event_handler;
1852:../Libraries/XMCLib/src/xmc4_scu.c **** 
1853:../Libraries/XMCLib/src/xmc4_scu.c ****   XMC_UNUSED_ARG(sr_num);
1854:../Libraries/XMCLib/src/xmc4_scu.c **** 
1855:../Libraries/XMCLib/src/xmc4_scu.c ****   index = 0U;
 7809              	 .loc 3 1855 0
 7810 0008 0023     	 movs r3,#0
 7811 000a 7B61     	 str r3,[r7,#20]
1856:../Libraries/XMCLib/src/xmc4_scu.c ****   event = XMC_SCU_INTERUPT_GetEventStatus();
 7812              	 .loc 3 1856 0
 7813 000c FFF7FEFF 	 bl XMC_SCU_INTERUPT_GetEventStatus
 7814 0010 3861     	 str r0,[r7,#16]
1857:../Libraries/XMCLib/src/xmc4_scu.c ****   while (index < XMC_SCU_INTERRUPT_EVENT_MAX)
 7815              	 .loc 3 1857 0
 7816 0012 1CE0     	 b .L528
 7817              	.L532:
1858:../Libraries/XMCLib/src/xmc4_scu.c ****   {
1859:../Libraries/XMCLib/src/xmc4_scu.c ****     if ((event & ((XMC_SCU_INTERRUPT_EVENT_t)1 << index)) != 0U)
 7818              	 .loc 3 1859 0
 7819 0014 7B69     	 ldr r3,[r7,#20]
 7820 0016 3A69     	 ldr r2,[r7,#16]
 7821 0018 22FA03F3 	 lsr r3,r2,r3
 7822 001c 03F00103 	 and r3,r3,#1
 7823 0020 002B     	 cmp r3,#0
 7824 0022 11D0     	 beq .L529
1860:../Libraries/XMCLib/src/xmc4_scu.c ****     {
1861:../Libraries/XMCLib/src/xmc4_scu.c ****       event_handler = event_handler_list[index];
 7825              	 .loc 3 1861 0
 7826 0024 0D4A     	 ldr r2,.L533
 7827 0026 7B69     	 ldr r3,[r7,#20]
 7828 0028 52F82330 	 ldr r3,[r2,r3,lsl#2]
 7829 002c FB60     	 str r3,[r7,#12]
1862:../Libraries/XMCLib/src/xmc4_scu.c ****       if (event_handler != NULL)
 7830              	 .loc 3 1862 0
 7831 002e FB68     	 ldr r3,[r7,#12]
 7832 0030 002B     	 cmp r3,#0
 7833 0032 01D0     	 beq .L530
1863:../Libraries/XMCLib/src/xmc4_scu.c ****       {
1864:../Libraries/XMCLib/src/xmc4_scu.c ****         (event_handler)();
 7834              	 .loc 3 1864 0
 7835 0034 FB68     	 ldr r3,[r7,#12]
 7836 0036 9847     	 blx r3
 7837              	.L530:
1865:../Libraries/XMCLib/src/xmc4_scu.c ****       }
1866:../Libraries/XMCLib/src/xmc4_scu.c **** 
1867:../Libraries/XMCLib/src/xmc4_scu.c ****       XMC_SCU_INTERRUPT_ClearEventStatus((uint32_t)(1UL << index));
 7838              	 .loc 3 1867 0
 7839 0038 7B69     	 ldr r3,[r7,#20]
 7840 003a 0122     	 movs r2,#1
 7841 003c 02FA03F3 	 lsl r3,r2,r3
 7842 0040 1846     	 mov r0,r3
 7843 0042 FFF7FEFF 	 bl XMC_SCU_INTERRUPT_ClearEventStatus
1868:../Libraries/XMCLib/src/xmc4_scu.c **** 
1869:../Libraries/XMCLib/src/xmc4_scu.c ****       break;
 7844              	 .loc 3 1869 0
 7845 0046 05E0     	 b .L527
 7846              	.L529:
1870:../Libraries/XMCLib/src/xmc4_scu.c ****     }
1871:../Libraries/XMCLib/src/xmc4_scu.c ****     index++;
 7847              	 .loc 3 1871 0
 7848 0048 7B69     	 ldr r3,[r7,#20]
 7849 004a 0133     	 adds r3,r3,#1
 7850 004c 7B61     	 str r3,[r7,#20]
 7851              	.L528:
1857:../Libraries/XMCLib/src/xmc4_scu.c ****   {
 7852              	 .loc 3 1857 0
 7853 004e 7B69     	 ldr r3,[r7,#20]
 7854 0050 1F2B     	 cmp r3,#31
 7855 0052 DFD9     	 bls .L532
 7856              	.L527:
1872:../Libraries/XMCLib/src/xmc4_scu.c ****   }
1873:../Libraries/XMCLib/src/xmc4_scu.c **** }
 7857              	 .loc 3 1873 0
 7858 0054 1837     	 adds r7,r7,#24
 7859              	.LCFI662:
 7860              	 .cfi_def_cfa_offset 8
 7861 0056 BD46     	 mov sp,r7
 7862              	.LCFI663:
 7863              	 .cfi_def_cfa_register 13
 7864              	 
 7865 0058 80BD     	 pop {r7,pc}
 7866              	.L534:
 7867 005a 00BF     	 .align 2
 7868              	.L533:
 7869 005c 00000000 	 .word event_handler_list
 7870              	 .cfi_endproc
 7871              	.LFE293:
 7873              	 .text
 7874              	.Letext0:
 7875              	 .file 4 "c:\\dave_4-4-2_64bit_2018-02-23\\dave_4-4-2_64bit_2018-02-23\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 7876              	 .file 5 "c:\\dave_4-4-2_64bit_2018-02-23\\dave_4-4-2_64bit_2018-02-23\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 7877              	 .file 6 "C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/CMSIS/Infineon/XMC4200_series/Include/XMC4200.h"
 7878              	 .file 7 "C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/CMSIS/Include/cmsis_gcc.h"
 7879              	 .file 8 "C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/CMSIS/Include/core_cm4.h"
 7880              	 .file 9 "C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/CMSIS/Infineon/XMC4200_series/Include/system_XMC4200.h"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc4_scu.c
    {standard input}:20     .text.XMC_SCU_CLOCK_GetUsbClockSource:00000000 $t
    {standard input}:24     .text.XMC_SCU_CLOCK_GetUsbClockSource:00000000 XMC_SCU_CLOCK_GetUsbClockSource
    {standard input}:57     .text.XMC_SCU_CLOCK_GetUsbClockSource:00000018 $d
    {standard input}:62     .text.XMC_SCU_CLOCK_GetWdtClockSource:00000000 $t
    {standard input}:66     .text.XMC_SCU_CLOCK_GetWdtClockSource:00000000 XMC_SCU_CLOCK_GetWdtClockSource
    {standard input}:98     .text.XMC_SCU_CLOCK_GetWdtClockSource:00000018 $d
    {standard input}:103    .text.XMC_SCU_CLOCK_GetExternalOutputClockSource:00000000 $t
    {standard input}:107    .text.XMC_SCU_CLOCK_GetExternalOutputClockSource:00000000 XMC_SCU_CLOCK_GetExternalOutputClockSource
    {standard input}:141    .text.XMC_SCU_CLOCK_GetExternalOutputClockSource:0000001c $d
    {standard input}:146    .text.XMC_SCU_CLOCK_GetSystemClockFrequency:00000000 $t
    {standard input}:150    .text.XMC_SCU_CLOCK_GetSystemClockFrequency:00000000 XMC_SCU_CLOCK_GetSystemClockFrequency
    {standard input}:185    .text.XMC_SCU_CLOCK_GetSystemClockFrequency:00000020 $d
    {standard input}:191    .text.XMC_SCU_CLOCK_GetCpuClockFrequency:00000000 $t
    {standard input}:195    .text.XMC_SCU_CLOCK_GetCpuClockFrequency:00000000 XMC_SCU_CLOCK_GetCpuClockFrequency
    {standard input}:227    .text.XMC_SCU_CLOCK_GetCpuClockFrequency:00000014 $d
    {standard input}:232    .text.XMC_SCU_GetMirrorStatus:00000000 $t
    {standard input}:236    .text.XMC_SCU_GetMirrorStatus:00000000 XMC_SCU_GetMirrorStatus
    {standard input}:267    .text.XMC_SCU_GetMirrorStatus:00000014 $d
    {standard input}:272    .bss.event_handler_list:00000000 $d
    {standard input}:275    .bss.event_handler_list:00000000 event_handler_list
    {standard input}:278    .text.XMC_SCU_lDelay:00000000 $t
    {standard input}:282    .text.XMC_SCU_lDelay:00000000 XMC_SCU_lDelay
    {standard input}:344    .text.XMC_SCU_lDelay:0000003c $d
    {standard input}:350    .text.XMC_SCU_INTERRUPT_EnableEvent:00000000 $t
    {standard input}:355    .text.XMC_SCU_INTERRUPT_EnableEvent:00000000 XMC_SCU_INTERRUPT_EnableEvent
    {standard input}:396    .text.XMC_SCU_INTERRUPT_EnableEvent:00000020 $d
    {standard input}:401    .text.XMC_SCU_INTERRUPT_DisableEvent:00000000 $t
    {standard input}:406    .text.XMC_SCU_INTERRUPT_DisableEvent:00000000 XMC_SCU_INTERRUPT_DisableEvent
    {standard input}:448    .text.XMC_SCU_INTERRUPT_DisableEvent:00000020 $d
    {standard input}:453    .text.XMC_SCU_INTERRUPT_TriggerEvent:00000000 $t
    {standard input}:458    .text.XMC_SCU_INTERRUPT_TriggerEvent:00000000 XMC_SCU_INTERRUPT_TriggerEvent
    {standard input}:499    .text.XMC_SCU_INTERRUPT_TriggerEvent:00000020 $d
    {standard input}:504    .text.XMC_SCU_INTERUPT_GetEventStatus:00000000 $t
    {standard input}:509    .text.XMC_SCU_INTERUPT_GetEventStatus:00000000 XMC_SCU_INTERUPT_GetEventStatus
    {standard input}:540    .text.XMC_SCU_INTERUPT_GetEventStatus:00000014 $d
    {standard input}:545    .text.XMC_SCU_INTERRUPT_ClearEventStatus:00000000 $t
    {standard input}:550    .text.XMC_SCU_INTERRUPT_ClearEventStatus:00000000 XMC_SCU_INTERRUPT_ClearEventStatus
    {standard input}:588    .text.XMC_SCU_INTERRUPT_ClearEventStatus:00000018 $d
    {standard input}:593    .text.XMC_SCU_GetBootMode:00000000 $t
    {standard input}:598    .text.XMC_SCU_GetBootMode:00000000 XMC_SCU_GetBootMode
    {standard input}:630    .text.XMC_SCU_GetBootMode:00000018 $d
    {standard input}:635    .text.XMC_SCU_SetBootMode:00000000 $t
    {standard input}:640    .text.XMC_SCU_SetBootMode:00000000 XMC_SCU_SetBootMode
    {standard input}:679    .text.XMC_SCU_SetBootMode:0000001c $d
    {standard input}:684    .text.XMC_SCU_ReadGPR:00000000 $t
    {standard input}:689    .text.XMC_SCU_ReadGPR:00000000 XMC_SCU_ReadGPR
    {standard input}:731    .text.XMC_SCU_ReadGPR:00000020 $d
    {standard input}:736    .text.XMC_SCU_WriteGPR:00000000 $t
    {standard input}:741    .text.XMC_SCU_WriteGPR:00000000 XMC_SCU_WriteGPR
    {standard input}:784    .text.XMC_SCU_WriteGPR:00000024 $d
    {standard input}:789    .text.XMC_SCU_EnableOutOfRangeComparator:00000000 $t
    {standard input}:794    .text.XMC_SCU_EnableOutOfRangeComparator:00000000 XMC_SCU_EnableOutOfRangeComparator
    {standard input}:842    .text.XMC_SCU_EnableOutOfRangeComparator:00000034 $d
    {standard input}:847    .text.XMC_SCU_DisableOutOfRangeComparator:00000000 $t
    {standard input}:852    .text.XMC_SCU_DisableOutOfRangeComparator:00000000 XMC_SCU_DisableOutOfRangeComparator
    {standard input}:901    .text.XMC_SCU_DisableOutOfRangeComparator:00000034 $d
    {standard input}:906    .text.XMC_SCU_CalibrateTemperatureSensor:00000000 $t
    {standard input}:911    .text.XMC_SCU_CalibrateTemperatureSensor:00000000 XMC_SCU_CalibrateTemperatureSensor
    {standard input}:959    .text.XMC_SCU_CalibrateTemperatureSensor:00000028 $d
    {standard input}:964    .text.XMC_SCU_EnableTemperatureSensor:00000000 $t
    {standard input}:969    .text.XMC_SCU_EnableTemperatureSensor:00000000 XMC_SCU_EnableTemperatureSensor
    {standard input}:1002   .text.XMC_SCU_EnableTemperatureSensor:0000001c $d
    {standard input}:1007   .text.XMC_SCU_DisableTemperatureSensor:00000000 $t
    {standard input}:1012   .text.XMC_SCU_DisableTemperatureSensor:00000000 XMC_SCU_DisableTemperatureSensor
    {standard input}:1045   .text.XMC_SCU_DisableTemperatureSensor:0000001c $d
    {standard input}:1050   .text.XMC_SCU_IsTemperatureSensorEnabled:00000000 $t
    {standard input}:1055   .text.XMC_SCU_IsTemperatureSensorEnabled:00000000 XMC_SCU_IsTemperatureSensorEnabled
    {standard input}:1092   .text.XMC_SCU_IsTemperatureSensorEnabled:00000024 $d
    {standard input}:1097   .text.XMC_SCU_IsTemperatureSensorReady:00000000 $t
    {standard input}:1102   .text.XMC_SCU_IsTemperatureSensorReady:00000000 XMC_SCU_IsTemperatureSensorReady
    {standard input}:1139   .text.XMC_SCU_IsTemperatureSensorReady:00000024 $d
    {standard input}:1144   .text.XMC_SCU_StartTemperatureMeasurement:00000000 $t
    {standard input}:1149   .text.XMC_SCU_StartTemperatureMeasurement:00000000 XMC_SCU_StartTemperatureMeasurement
    {standard input}:1280   .text.XMC_SCU_IsTemperatureSensorBusy:00000000 XMC_SCU_IsTemperatureSensorBusy
    {standard input}:1210   .text.XMC_SCU_StartTemperatureMeasurement:00000048 $d
    {standard input}:1215   .text.XMC_SCU_GetTemperatureMeasurement:00000000 $t
    {standard input}:1220   .text.XMC_SCU_GetTemperatureMeasurement:00000000 XMC_SCU_GetTemperatureMeasurement
    {standard input}:1270   .text.XMC_SCU_GetTemperatureMeasurement:00000034 $d
    {standard input}:1275   .text.XMC_SCU_IsTemperatureSensorBusy:00000000 $t
    {standard input}:1317   .text.XMC_SCU_IsTemperatureSensorBusy:00000024 $d
    {standard input}:1322   .text.XMC_SCU_HighTemperature:00000000 $t
    {standard input}:1327   .text.XMC_SCU_HighTemperature:00000000 XMC_SCU_HighTemperature
    {standard input}:1404   .text.XMC_SCU_HighTemperature:00000054 $d
    {standard input}:1409   .text.XMC_SCU_SetRawTempLimits:00000000 $t
    {standard input}:1414   .text.XMC_SCU_SetRawTempLimits:00000000 XMC_SCU_SetRawTempLimits
    {standard input}:1473   .text.XMC_SCU_SetRawTempLimits:00000050 $d
    {standard input}:1478   .text.XMC_SCU_LowTemperature:00000000 $t
    {standard input}:1483   .text.XMC_SCU_LowTemperature:00000000 XMC_SCU_LowTemperature
    {standard input}:1560   .text.XMC_SCU_LowTemperature:00000054 $d
    {standard input}:1565   .text.XMC_SCU_WriteToRetentionMemory:00000000 $t
    {standard input}:1570   .text.XMC_SCU_WriteToRetentionMemory:00000000 XMC_SCU_WriteToRetentionMemory
    {standard input}:1631   .text.XMC_SCU_WriteToRetentionMemory:00000048 $d
    {standard input}:1636   .text.XMC_SCU_ReadFromRetentionMemory:00000000 $t
    {standard input}:1641   .text.XMC_SCU_ReadFromRetentionMemory:00000000 XMC_SCU_ReadFromRetentionMemory
    {standard input}:1701   .text.XMC_SCU_ReadFromRetentionMemory:00000044 $d
    {standard input}:1706   .text.XMC_SCU_CLOCK_Init:00000000 $t
    {standard input}:1711   .text.XMC_SCU_CLOCK_Init:00000000 XMC_SCU_CLOCK_Init
    {standard input}:3290   .text.XMC_SCU_CLOCK_SetSystemClockSource:00000000 XMC_SCU_CLOCK_SetSystemClockSource
    {standard input}:4991   .text.XMC_SCU_HIB_EnableHibernateDomain:00000000 XMC_SCU_HIB_EnableHibernateDomain
    {standard input}:6641   .text.XMC_SCU_CLOCK_EnableLowPowerOscillator:00000000 XMC_SCU_CLOCK_EnableLowPowerOscillator
    {standard input}:6594   .text.XMC_SCU_CLOCK_IsLowPowerOscillatorStable:00000000 XMC_SCU_CLOCK_IsLowPowerOscillatorStable
    {standard input}:3632   .text.XMC_SCU_HIB_SetStandbyClockSource:00000000 XMC_SCU_HIB_SetStandbyClockSource
    {standard input}:4792   .text.XMC_SCU_CLOCK_SetBackupClockCalibrationMode:00000000 XMC_SCU_CLOCK_SetBackupClockCalibrationMode
    {standard input}:3697   .text.XMC_SCU_CLOCK_SetSystemClockDivider:00000000 XMC_SCU_CLOCK_SetSystemClockDivider
    {standard input}:3807   .text.XMC_SCU_CLOCK_SetCpuClockDivider:00000000 XMC_SCU_CLOCK_SetCpuClockDivider
    {standard input}:3752   .text.XMC_SCU_CLOCK_SetCcuClockDivider:00000000 XMC_SCU_CLOCK_SetCcuClockDivider
    {standard input}:3862   .text.XMC_SCU_CLOCK_SetPeripheralClockDivider:00000000 XMC_SCU_CLOCK_SetPeripheralClockDivider
    {standard input}:6924   .text.XMC_SCU_CLOCK_EnableHighPerformanceOscillator:00000000 XMC_SCU_CLOCK_EnableHighPerformanceOscillator
    {standard input}:6986   .text.XMC_SCU_CLOCK_IsHighPerformanceOscillatorStable:00000000 XMC_SCU_CLOCK_IsHighPerformanceOscillatorStable
    {standard input}:7248   .text.XMC_SCU_CLOCK_DisableSystemPll:00000000 XMC_SCU_CLOCK_DisableSystemPll
    {standard input}:7204   .text.XMC_SCU_CLOCK_EnableSystemPll:00000000 XMC_SCU_CLOCK_EnableSystemPll
    {standard input}:7292   .text.XMC_SCU_CLOCK_StartSystemPll:00000000 XMC_SCU_CLOCK_StartSystemPll
    {standard input}:1878   .text.XMC_SCU_TRAP_Enable:00000000 $t
    {standard input}:1883   .text.XMC_SCU_TRAP_Enable:00000000 XMC_SCU_TRAP_Enable
    {standard input}:1925   .text.XMC_SCU_TRAP_Enable:00000020 $d
    {standard input}:1930   .text.XMC_SCU_TRAP_Disable:00000000 $t
    {standard input}:1935   .text.XMC_SCU_TRAP_Disable:00000000 XMC_SCU_TRAP_Disable
    {standard input}:1976   .text.XMC_SCU_TRAP_Disable:00000020 $d
    {standard input}:1981   .text.XMC_SCU_TRAP_GetStatus:00000000 $t
    {standard input}:1986   .text.XMC_SCU_TRAP_GetStatus:00000000 XMC_SCU_TRAP_GetStatus
    {standard input}:2017   .text.XMC_SCU_TRAP_GetStatus:00000014 $d
    {standard input}:2022   .text.XMC_SCU_TRAP_Trigger:00000000 $t
    {standard input}:2027   .text.XMC_SCU_TRAP_Trigger:00000000 XMC_SCU_TRAP_Trigger
    {standard input}:2065   .text.XMC_SCU_TRAP_Trigger:00000018 $d
    {standard input}:2070   .text.XMC_SCU_TRAP_ClearStatus:00000000 $t
    {standard input}:2075   .text.XMC_SCU_TRAP_ClearStatus:00000000 XMC_SCU_TRAP_ClearStatus
    {standard input}:2113   .text.XMC_SCU_TRAP_ClearStatus:00000018 $d
    {standard input}:2118   .text.XMC_SCU_PARITY_ClearStatus:00000000 $t
    {standard input}:2123   .text.XMC_SCU_PARITY_ClearStatus:00000000 XMC_SCU_PARITY_ClearStatus
    {standard input}:2164   .text.XMC_SCU_PARITY_ClearStatus:00000020 $d
    {standard input}:2169   .text.XMC_SCU_PARITY_GetStatus:00000000 $t
    {standard input}:2174   .text.XMC_SCU_PARITY_GetStatus:00000000 XMC_SCU_PARITY_GetStatus
    {standard input}:2205   .text.XMC_SCU_PARITY_GetStatus:00000014 $d
    {standard input}:2210   .text.XMC_SCU_PARITY_Enable:00000000 $t
    {standard input}:2215   .text.XMC_SCU_PARITY_Enable:00000000 XMC_SCU_PARITY_Enable
    {standard input}:2256   .text.XMC_SCU_PARITY_Enable:00000020 $d
    {standard input}:2261   .text.XMC_SCU_PARITY_Disable:00000000 $t
    {standard input}:2266   .text.XMC_SCU_PARITY_Disable:00000000 XMC_SCU_PARITY_Disable
    {standard input}:2308   .text.XMC_SCU_PARITY_Disable:00000020 $d
    {standard input}:2313   .text.XMC_SCU_PARITY_EnableTrapGeneration:00000000 $t
    {standard input}:2318   .text.XMC_SCU_PARITY_EnableTrapGeneration:00000000 XMC_SCU_PARITY_EnableTrapGeneration
    {standard input}:2359   .text.XMC_SCU_PARITY_EnableTrapGeneration:00000020 $d
    {standard input}:2364   .text.XMC_SCU_PARITY_DisableTrapGeneration:00000000 $t
    {standard input}:2369   .text.XMC_SCU_PARITY_DisableTrapGeneration:00000000 XMC_SCU_PARITY_DisableTrapGeneration
    {standard input}:2411   .text.XMC_SCU_PARITY_DisableTrapGeneration:00000020 $d
    {standard input}:2416   .text.XMC_SCU_INTERRUPT_EnableNmiRequest:00000000 $t
    {standard input}:2421   .text.XMC_SCU_INTERRUPT_EnableNmiRequest:00000000 XMC_SCU_INTERRUPT_EnableNmiRequest
    {standard input}:2462   .text.XMC_SCU_INTERRUPT_EnableNmiRequest:00000020 $d
    {standard input}:2467   .text.XMC_SCU_INTERRUPT_DisableNmiRequest:00000000 $t
    {standard input}:2472   .text.XMC_SCU_INTERRUPT_DisableNmiRequest:00000000 XMC_SCU_INTERRUPT_DisableNmiRequest
    {standard input}:2514   .text.XMC_SCU_INTERRUPT_DisableNmiRequest:00000020 $d
    {standard input}:2519   .text.XMC_SCU_RESET_AssertPeripheralReset:00000000 $t
    {standard input}:2524   .text.XMC_SCU_RESET_AssertPeripheralReset:00000000 XMC_SCU_RESET_AssertPeripheralReset
    {standard input}:2577   .text.XMC_SCU_RESET_AssertPeripheralReset:00000034 $d
    {standard input}:2582   .text.XMC_SCU_RESET_DeassertPeripheralReset:00000000 $t
    {standard input}:2587   .text.XMC_SCU_RESET_DeassertPeripheralReset:00000000 XMC_SCU_RESET_DeassertPeripheralReset
    {standard input}:2640   .text.XMC_SCU_RESET_DeassertPeripheralReset:00000034 $d
    {standard input}:2645   .text.XMC_SCU_RESET_IsPeripheralResetAsserted:00000000 $t
    {standard input}:2650   .text.XMC_SCU_RESET_IsPeripheralResetAsserted:00000000 XMC_SCU_RESET_IsPeripheralResetAsserted
    {standard input}:2710   .text.XMC_SCU_RESET_IsPeripheralResetAsserted:00000044 $d
    {standard input}:2715   .text.XMC_SCU_CLOCK_GetSystemPllClockFrequency:00000000 $t
    {standard input}:2720   .text.XMC_SCU_CLOCK_GetSystemPllClockFrequency:00000000 XMC_SCU_CLOCK_GetSystemPllClockFrequency
    {standard input}:2813   .text.XMC_SCU_CLOCK_GetSystemPllClockSourceFrequency:00000000 XMC_SCU_CLOCK_GetSystemPllClockSourceFrequency
    {standard input}:2803   .text.XMC_SCU_CLOCK_GetSystemPllClockFrequency:00000078 $d
    {standard input}:2808   .text.XMC_SCU_CLOCK_GetSystemPllClockSourceFrequency:00000000 $t
    {standard input}:2860   .text.XMC_SCU_CLOCK_GetSystemPllClockSourceFrequency:00000028 $d
    {standard input}:2866   .text.XMC_SCU_CLOCK_GetUsbPllClockFrequency:00000000 $t
    {standard input}:2871   .text.XMC_SCU_CLOCK_GetUsbPllClockFrequency:00000000 XMC_SCU_CLOCK_GetUsbPllClockFrequency
    {standard input}:2935   .text.XMC_SCU_CLOCK_GetUsbPllClockFrequency:00000050 $d
    {standard input}:2940   .text.XMC_SCU_CLOCK_GetCcuClockFrequency:00000000 $t
    {standard input}:2945   .text.XMC_SCU_CLOCK_GetCcuClockFrequency:00000000 XMC_SCU_CLOCK_GetCcuClockFrequency
    {standard input}:2987   .text.XMC_SCU_CLOCK_GetCcuClockFrequency:00000028 $d
    {standard input}:2992   .text.XMC_SCU_CLOCK_GetUsbClockFrequency:00000000 $t
    {standard input}:2997   .text.XMC_SCU_CLOCK_GetUsbClockFrequency:00000000 XMC_SCU_CLOCK_GetUsbClockFrequency
    {standard input}:3059   .text.XMC_SCU_CLOCK_GetUsbClockFrequency:00000044 $d
    {standard input}:3064   .text.XMC_SCU_CLOCK_GetWdtClockFrequency:00000000 $t
    {standard input}:3069   .text.XMC_SCU_CLOCK_GetWdtClockFrequency:00000000 XMC_SCU_CLOCK_GetWdtClockFrequency
    {standard input}:3140   .text.XMC_SCU_CLOCK_GetWdtClockFrequency:00000050 $d
    {standard input}:3146   .text.XMC_SCU_CLOCK_GetExternalOutputClockFrequency:00000000 $t
    {standard input}:3151   .text.XMC_SCU_CLOCK_GetExternalOutputClockFrequency:00000000 XMC_SCU_CLOCK_GetExternalOutputClockFrequency
    {standard input}:3240   .text.XMC_SCU_CLOCK_GetExternalOutputClockFrequency:0000006c $d
    {standard input}:3246   .text.XMC_SCU_CLOCK_GetPeripheralClockFrequency:00000000 $t
    {standard input}:3251   .text.XMC_SCU_CLOCK_GetPeripheralClockFrequency:00000000 XMC_SCU_CLOCK_GetPeripheralClockFrequency
    {standard input}:3280   .text.XMC_SCU_CLOCK_GetPeripheralClockFrequency:0000001c $d
    {standard input}:3285   .text.XMC_SCU_CLOCK_SetSystemClockSource:00000000 $t
    {standard input}:3332   .text.XMC_SCU_CLOCK_SetSystemClockSource:00000024 $d
    {standard input}:3337   .text.XMC_SCU_CLOCK_SetUsbClockSource:00000000 $t
    {standard input}:3342   .text.XMC_SCU_CLOCK_SetUsbClockSource:00000000 XMC_SCU_CLOCK_SetUsbClockSource
    {standard input}:3384   .text.XMC_SCU_CLOCK_SetUsbClockSource:00000024 $d
    {standard input}:3389   .text.XMC_SCU_CLOCK_SetWdtClockSource:00000000 $t
    {standard input}:3394   .text.XMC_SCU_CLOCK_SetWdtClockSource:00000000 XMC_SCU_CLOCK_SetWdtClockSource
    {standard input}:3436   .text.XMC_SCU_CLOCK_SetWdtClockSource:00000024 $d
    {standard input}:3441   .text.XMC_SCU_CLOCK_SetExternalOutputClockSource:00000000 $t
    {standard input}:3446   .text.XMC_SCU_CLOCK_SetExternalOutputClockSource:00000000 XMC_SCU_CLOCK_SetExternalOutputClockSource
    {standard input}:3491   .text.XMC_SCU_CLOCK_SetExternalOutputClockSource:00000024 $d
    {standard input}:3496   .text.XMC_SCU_CLOCK_SetSystemPllClockSource:00000000 $t
    {standard input}:3501   .text.XMC_SCU_CLOCK_SetSystemPllClockSource:00000000 XMC_SCU_CLOCK_SetSystemPllClockSource
    {standard input}:3557   .text.XMC_SCU_CLOCK_SetSystemPllClockSource:0000003c $d
    {standard input}:3562   .text.XMC_SCU_HIB_SetRtcClockSource:00000000 $t
    {standard input}:3567   .text.XMC_SCU_HIB_SetRtcClockSource:00000000 XMC_SCU_HIB_SetRtcClockSource
    {standard input}:3621   .text.XMC_SCU_HIB_SetRtcClockSource:00000034 $d
    {standard input}:3627   .text.XMC_SCU_HIB_SetStandbyClockSource:00000000 $t
    {standard input}:3686   .text.XMC_SCU_HIB_SetStandbyClockSource:00000034 $d
    {standard input}:3692   .text.XMC_SCU_CLOCK_SetSystemClockDivider:00000000 $t
    {standard input}:3742   .text.XMC_SCU_CLOCK_SetSystemClockDivider:00000024 $d
    {standard input}:3747   .text.XMC_SCU_CLOCK_SetCcuClockDivider:00000000 $t
    {standard input}:3797   .text.XMC_SCU_CLOCK_SetCcuClockDivider:00000024 $d
    {standard input}:3802   .text.XMC_SCU_CLOCK_SetCpuClockDivider:00000000 $t
    {standard input}:3852   .text.XMC_SCU_CLOCK_SetCpuClockDivider:00000024 $d
    {standard input}:3857   .text.XMC_SCU_CLOCK_SetPeripheralClockDivider:00000000 $t
    {standard input}:3907   .text.XMC_SCU_CLOCK_SetPeripheralClockDivider:00000024 $d
    {standard input}:3912   .text.XMC_SCU_CLOCK_SetUsbClockDivider:00000000 $t
    {standard input}:3917   .text.XMC_SCU_CLOCK_SetUsbClockDivider:00000000 XMC_SCU_CLOCK_SetUsbClockDivider
    {standard input}:3962   .text.XMC_SCU_CLOCK_SetUsbClockDivider:00000024 $d
    {standard input}:3967   .text.XMC_SCU_CLOCK_SetWdtClockDivider:00000000 $t
    {standard input}:3972   .text.XMC_SCU_CLOCK_SetWdtClockDivider:00000000 XMC_SCU_CLOCK_SetWdtClockDivider
    {standard input}:4017   .text.XMC_SCU_CLOCK_SetWdtClockDivider:00000024 $d
    {standard input}:4022   .text.XMC_SCU_CLOCK_SetExternalOutputClockDivider:00000000 $t
    {standard input}:4027   .text.XMC_SCU_CLOCK_SetExternalOutputClockDivider:00000000 XMC_SCU_CLOCK_SetExternalOutputClockDivider
    {standard input}:4074   .text.XMC_SCU_CLOCK_SetExternalOutputClockDivider:0000002c $d
    {standard input}:4079   .text.XMC_SCU_CLOCK_EnableClock:00000000 $t
    {standard input}:4084   .text.XMC_SCU_CLOCK_EnableClock:00000000 XMC_SCU_CLOCK_EnableClock
    {standard input}:4123   .text.XMC_SCU_CLOCK_EnableClock:0000001c $d
    {standard input}:4128   .text.XMC_SCU_CLOCK_DisableClock:00000000 $t
    {standard input}:4133   .text.XMC_SCU_CLOCK_DisableClock:00000000 XMC_SCU_CLOCK_DisableClock
    {standard input}:4172   .text.XMC_SCU_CLOCK_DisableClock:0000001c $d
    {standard input}:4177   .text.XMC_SCU_CLOCK_IsClockEnabled:00000000 $t
    {standard input}:4182   .text.XMC_SCU_CLOCK_IsClockEnabled:00000000 XMC_SCU_CLOCK_IsClockEnabled
    {standard input}:4228   .text.XMC_SCU_CLOCK_IsClockEnabled:00000028 $d
    {standard input}:4233   .text.XMC_SCU_CLOCK_GatePeripheralClock:00000000 $t
    {standard input}:4238   .text.XMC_SCU_CLOCK_GatePeripheralClock:00000000 XMC_SCU_CLOCK_GatePeripheralClock
    {standard input}:4291   .text.XMC_SCU_CLOCK_GatePeripheralClock:00000034 $d
    {standard input}:4296   .text.XMC_SCU_CLOCK_UngatePeripheralClock:00000000 $t
    {standard input}:4301   .text.XMC_SCU_CLOCK_UngatePeripheralClock:00000000 XMC_SCU_CLOCK_UngatePeripheralClock
    {standard input}:4354   .text.XMC_SCU_CLOCK_UngatePeripheralClock:00000034 $d
    {standard input}:4359   .text.XMC_SCU_CLOCK_IsPeripheralClockGated:00000000 $t
    {standard input}:4364   .text.XMC_SCU_CLOCK_IsPeripheralClockGated:00000000 XMC_SCU_CLOCK_IsPeripheralClockGated
    {standard input}:4424   .text.XMC_SCU_CLOCK_IsPeripheralClockGated:00000044 $d
    {standard input}:4429   .text.XMC_SCU_POWER_GetEVR13Voltage:00000000 $t
    {standard input}:4434   .text.XMC_SCU_POWER_GetEVR13Voltage:00000000 XMC_SCU_POWER_GetEVR13Voltage
    {standard input}:4471   .text.XMC_SCU_POWER_GetEVR13Voltage:00000028 $d
    {standard input}:4477   .text.XMC_SCU_POWER_GetEVR33Voltage:00000000 $t
    {standard input}:4482   .text.XMC_SCU_POWER_GetEVR33Voltage:00000000 XMC_SCU_POWER_GetEVR33Voltage
    {standard input}:4520   .text.XMC_SCU_POWER_GetEVR33Voltage:0000002c $d
    {standard input}:4526   .text.XMC_SCU_CLOCK_EnableUsbPll:00000000 $t
    {standard input}:4531   .text.XMC_SCU_CLOCK_EnableUsbPll:00000000 XMC_SCU_CLOCK_EnableUsbPll
    {standard input}:4565   .text.XMC_SCU_CLOCK_EnableUsbPll:0000001c $d
    {standard input}:4570   .text.XMC_SCU_CLOCK_DisableUsbPll:00000000 $t
    {standard input}:4575   .text.XMC_SCU_CLOCK_DisableUsbPll:00000000 XMC_SCU_CLOCK_DisableUsbPll
    {standard input}:4609   .text.XMC_SCU_CLOCK_DisableUsbPll:0000001c $d
    {standard input}:4614   .text.XMC_SCU_CLOCK_StartUsbPll:00000000 $t
    {standard input}:4619   .text.XMC_SCU_CLOCK_StartUsbPll:00000000 XMC_SCU_CLOCK_StartUsbPll
    {standard input}:4739   .text.XMC_SCU_CLOCK_StartUsbPll:000000ac $d
    {standard input}:4745   .text.XMC_SCU_CLOCK_StopUsbPll:00000000 $t
    {standard input}:4750   .text.XMC_SCU_CLOCK_StopUsbPll:00000000 XMC_SCU_CLOCK_StopUsbPll
    {standard input}:4781   .text.XMC_SCU_CLOCK_StopUsbPll:00000014 $d
    {standard input}:4787   .text.XMC_SCU_CLOCK_SetBackupClockCalibrationMode:00000000 $t
    {standard input}:4852   .text.XMC_SCU_CLOCK_SetBackupClockCalibrationMode:00000048 $d
    {standard input}:4857   .text.XMC_SCU_POWER_EnableUsb:00000000 $t
    {standard input}:4862   .text.XMC_SCU_POWER_EnableUsb:00000000 XMC_SCU_POWER_EnableUsb
    {standard input}:4893   .text.XMC_SCU_POWER_EnableUsb:00000014 $d
    {standard input}:4898   .text.XMC_SCU_POWER_DisableUsb:00000000 $t
    {standard input}:4903   .text.XMC_SCU_POWER_DisableUsb:00000000 XMC_SCU_POWER_DisableUsb
    {standard input}:4934   .text.XMC_SCU_POWER_DisableUsb:00000014 $d
    {standard input}:4939   .text.XMC_SCU_CLOCK_IsUsbPllLocked:00000000 $t
    {standard input}:4944   .text.XMC_SCU_CLOCK_IsUsbPllLocked:00000000 XMC_SCU_CLOCK_IsUsbPllLocked
    {standard input}:4981   .text.XMC_SCU_CLOCK_IsUsbPllLocked:00000020 $d
    {standard input}:4986   .text.XMC_SCU_HIB_EnableHibernateDomain:00000000 $t
    {standard input}:5058   .text.XMC_SCU_HIB_EnableHibernateDomain:00000050 $d
    {standard input}:5064   .text.XMC_SCU_HIB_DisableHibernateDomain:00000000 $t
    {standard input}:5069   .text.XMC_SCU_HIB_DisableHibernateDomain:00000000 XMC_SCU_HIB_DisableHibernateDomain
    {standard input}:5104   .text.XMC_SCU_HIB_DisableHibernateDomain:0000001c $d
    {standard input}:5110   .text.XMC_SCU_HIB_IsHibernateDomainEnabled:00000000 $t
    {standard input}:5115   .text.XMC_SCU_HIB_IsHibernateDomainEnabled:00000000 XMC_SCU_HIB_IsHibernateDomainEnabled
    {standard input}:5166   .text.XMC_SCU_HIB_IsHibernateDomainEnabled:00000034 $d
    {standard input}:5172   .text.XMC_SCU_HIB_EnableInternalSlowClock:00000000 $t
    {standard input}:5177   .text.XMC_SCU_HIB_EnableInternalSlowClock:00000000 XMC_SCU_HIB_EnableInternalSlowClock
    {standard input}:5219   .text.XMC_SCU_HIB_EnableInternalSlowClock:00000028 $d
    {standard input}:5225   .text.XMC_SCU_HIB_DisableInternalSlowClock:00000000 $t
    {standard input}:5230   .text.XMC_SCU_HIB_DisableInternalSlowClock:00000000 XMC_SCU_HIB_DisableInternalSlowClock
    {standard input}:5272   .text.XMC_SCU_HIB_DisableInternalSlowClock:00000028 $d
    {standard input}:5278   .text.XMC_SCU_HIB_ClearEventStatus:00000000 $t
    {standard input}:5283   .text.XMC_SCU_HIB_ClearEventStatus:00000000 XMC_SCU_HIB_ClearEventStatus
    {standard input}:5330   .text.XMC_SCU_HIB_ClearEventStatus:00000028 $d
    {standard input}:5336   .text.XMC_SCU_HIB_TriggerEvent:00000000 $t
    {standard input}:5341   .text.XMC_SCU_HIB_TriggerEvent:00000000 XMC_SCU_HIB_TriggerEvent
    {standard input}:5388   .text.XMC_SCU_HIB_TriggerEvent:00000028 $d
    {standard input}:5394   .text.XMC_SCU_HIB_EnableEvent:00000000 $t
    {standard input}:5399   .text.XMC_SCU_HIB_EnableEvent:00000000 XMC_SCU_HIB_EnableEvent
    {standard input}:5485   .text.XMC_SCU_HIB_EnableEvent:00000080 $d
    {standard input}:5491   .text.XMC_SCU_HIB_DisableEvent:00000000 $t
    {standard input}:5496   .text.XMC_SCU_HIB_DisableEvent:00000000 XMC_SCU_HIB_DisableEvent
    {standard input}:5583   .text.XMC_SCU_HIB_DisableEvent:00000080 $d
    {standard input}:5589   .text.XMC_SCU_HIB_EnterHibernateState:00000000 $t
    {standard input}:5594   .text.XMC_SCU_HIB_EnterHibernateState:00000000 XMC_SCU_HIB_EnterHibernateState
    {standard input}:5636   .text.XMC_SCU_HIB_EnterHibernateState:00000028 $d
    {standard input}:5642   .text.XMC_SCU_HIB_EnterHibernateStateEx:00000000 $t
    {standard input}:5647   .text.XMC_SCU_HIB_EnterHibernateStateEx:00000000 XMC_SCU_HIB_EnterHibernateStateEx
    {standard input}:5703   .text.XMC_SCU_HIB_EnterHibernateStateEx:00000038 $d
    {standard input}:5709   .text.XMC_SCU_HIB_SetWakeupTriggerInput:00000000 $t
    {standard input}:5714   .text.XMC_SCU_HIB_SetWakeupTriggerInput:00000000 XMC_SCU_HIB_SetWakeupTriggerInput
    {standard input}:5777   .text.XMC_SCU_HIB_SetWakeupTriggerInput:00000044 $d
    {standard input}:5783   .text.XMC_SCU_HIB_SetPinMode:00000000 $t
    {standard input}:5788   .text.XMC_SCU_HIB_SetPinMode:00000000 XMC_SCU_HIB_SetPinMode
    {standard input}:5855   .text.XMC_SCU_HIB_SetPinMode:0000004c $d
    {standard input}:5861   .text.XMC_SCU_HIB_SetPinOutputLevel:00000000 $t
    {standard input}:5866   .text.XMC_SCU_HIB_SetPinOutputLevel:00000000 XMC_SCU_HIB_SetPinOutputLevel
    {standard input}:5929   .text.XMC_SCU_HIB_SetPinOutputLevel:0000004c $d
    {standard input}:5935   .text.XMC_SCU_HIB_SetInput0:00000000 $t
    {standard input}:5940   .text.XMC_SCU_HIB_SetInput0:00000000 XMC_SCU_HIB_SetInput0
    {standard input}:6003   .text.XMC_SCU_HIB_SetInput0:00000044 $d
    {standard input}:6009   .text.XMC_SCU_HIB_SetSR0Input:00000000 $t
    {standard input}:6014   .text.XMC_SCU_HIB_SetSR0Input:00000000 XMC_SCU_HIB_SetSR0Input
    {standard input}:6066   .text.XMC_SCU_HIB_SetSR0Input:00000034 $d
    {standard input}:6072   .text.XMC_SCU_HIB_LPAC_SetInput:00000000 $t
    {standard input}:6077   .text.XMC_SCU_HIB_LPAC_SetInput:00000000 XMC_SCU_HIB_LPAC_SetInput
    {standard input}:6129   .text.XMC_SCU_HIB_LPAC_SetInput:00000034 $d
    {standard input}:6135   .text.XMC_SCU_HIB_LPAC_SetTrigger:00000000 $t
    {standard input}:6140   .text.XMC_SCU_HIB_LPAC_SetTrigger:00000000 XMC_SCU_HIB_LPAC_SetTrigger
    {standard input}:6192   .text.XMC_SCU_HIB_LPAC_SetTrigger:00000034 $d
    {standard input}:6198   .text.XMC_SCU_HIB_LPAC_SetTiming:00000000 $t
    {standard input}:6203   .text.XMC_SCU_HIB_LPAC_SetTiming:00000000 XMC_SCU_HIB_LPAC_SetTiming
    {standard input}:6287   .text.XMC_SCU_HIB_LPAC_SetTiming:00000068 $d
    {standard input}:6293   .text.XMC_SCU_HIB_LPAC_SetVBATThresholds:00000000 $t
    {standard input}:6298   .text.XMC_SCU_HIB_LPAC_SetVBATThresholds:00000000 XMC_SCU_HIB_LPAC_SetVBATThresholds
    {standard input}:6352   .text.XMC_SCU_HIB_LPAC_SetVBATThresholds:00000038 $d
    {standard input}:6358   .text.XMC_SCU_HIB_LPAC_SetHIBIO0Thresholds:00000000 $t
    {standard input}:6363   .text.XMC_SCU_HIB_LPAC_SetHIBIO0Thresholds:00000000 XMC_SCU_HIB_LPAC_SetHIBIO0Thresholds
    {standard input}:6425   .text.XMC_SCU_HIB_LPAC_SetHIBIO0Thresholds:00000044 $d
    {standard input}:6431   .text.XMC_SCU_HIB_LPAC_GetStatus:00000000 $t
    {standard input}:6436   .text.XMC_SCU_HIB_LPAC_GetStatus:00000000 XMC_SCU_HIB_LPAC_GetStatus
    {standard input}:6467   .text.XMC_SCU_HIB_LPAC_GetStatus:00000014 $d
    {standard input}:6472   .text.XMC_SCU_HIB_LPAC_ClearStatus:00000000 $t
    {standard input}:6477   .text.XMC_SCU_HIB_LPAC_ClearStatus:00000000 XMC_SCU_HIB_LPAC_ClearStatus
    {standard input}:6524   .text.XMC_SCU_HIB_LPAC_ClearStatus:00000028 $d
    {standard input}:6530   .text.XMC_SCU_HIB_LPAC_TriggerCompare:00000000 $t
    {standard input}:6535   .text.XMC_SCU_HIB_LPAC_TriggerCompare:00000000 XMC_SCU_HIB_LPAC_TriggerCompare
    {standard input}:6583   .text.XMC_SCU_HIB_LPAC_TriggerCompare:0000002c $d
    {standard input}:6589   .text.XMC_SCU_CLOCK_IsLowPowerOscillatorStable:00000000 $t
    {standard input}:6631   .text.XMC_SCU_CLOCK_IsLowPowerOscillatorStable:00000020 $d
    {standard input}:6636   .text.XMC_SCU_CLOCK_EnableLowPowerOscillator:00000000 $t
    {standard input}:6712   .text.XMC_SCU_CLOCK_EnableLowPowerOscillator:0000006c $d
    {standard input}:6717   .text.XMC_SCU_CLOCK_DisableLowPowerOscillator:00000000 $t
    {standard input}:6722   .text.XMC_SCU_CLOCK_DisableLowPowerOscillator:00000000 XMC_SCU_CLOCK_DisableLowPowerOscillator
    {standard input}:6764   .text.XMC_SCU_CLOCK_DisableLowPowerOscillator:00000028 $d
    {standard input}:6770   .text.XMC_SCU_CLOCK_EnableLowPowerOscillatorGeneralPurposeInput:00000000 $t
    {standard input}:6775   .text.XMC_SCU_CLOCK_EnableLowPowerOscillatorGeneralPurposeInput:00000000 XMC_SCU_CLOCK_EnableLowPowerOscillatorGeneralPurposeInput
    {standard input}:6817   .text.XMC_SCU_CLOCK_EnableLowPowerOscillatorGeneralPurposeInput:00000028 $d
    {standard input}:6823   .text.XMC_SCU_CLOCK_DisableLowPowerOscillatorGeneralPurposeInput:00000000 $t
    {standard input}:6828   .text.XMC_SCU_CLOCK_DisableLowPowerOscillatorGeneralPurposeInput:00000000 XMC_SCU_CLOCK_DisableLowPowerOscillatorGeneralPurposeInput
    {standard input}:6871   .text.XMC_SCU_CLOCK_DisableLowPowerOscillatorGeneralPurposeInput:0000002c $d
    {standard input}:6877   .text.XMC_SCU_CLOCK_GetLowPowerOscillatorGeneralPurposeInputStatus:00000000 $t
    {standard input}:6882   .text.XMC_SCU_CLOCK_GetLowPowerOscillatorGeneralPurposeInputStatus:00000000 XMC_SCU_CLOCK_GetLowPowerOscillatorGeneralPurposeInputStatus
    {standard input}:6914   .text.XMC_SCU_CLOCK_GetLowPowerOscillatorGeneralPurposeInputStatus:00000018 $d
    {standard input}:6919   .text.XMC_SCU_CLOCK_EnableHighPerformanceOscillator:00000000 $t
    {standard input}:6974   .text.XMC_SCU_CLOCK_EnableHighPerformanceOscillator:00000044 $d
    {standard input}:6981   .text.XMC_SCU_CLOCK_IsHighPerformanceOscillatorStable:00000000 $t
    {standard input}:7023   .text.XMC_SCU_CLOCK_IsHighPerformanceOscillatorStable:00000024 $d
    {standard input}:7028   .text.XMC_SCU_CLOCK_DisableHighPerformanceOscillator:00000000 $t
    {standard input}:7033   .text.XMC_SCU_CLOCK_DisableHighPerformanceOscillator:00000000 XMC_SCU_CLOCK_DisableHighPerformanceOscillator
    {standard input}:7066   .text.XMC_SCU_CLOCK_DisableHighPerformanceOscillator:00000018 $d
    {standard input}:7071   .text.XMC_SCU_CLOCK_EnableHighPerformanceOscillatorGeneralPurposeInput:00000000 $t
    {standard input}:7076   .text.XMC_SCU_CLOCK_EnableHighPerformanceOscillatorGeneralPurposeInput:00000000 XMC_SCU_CLOCK_EnableHighPerformanceOscillatorGeneralPurposeInput
    {standard input}:7109   .text.XMC_SCU_CLOCK_EnableHighPerformanceOscillatorGeneralPurposeInput:00000018 $d
    {standard input}:7114   .text.XMC_SCU_CLOCK_DisableHighPerformanceOscillatorGeneralPurposeInput:00000000 $t
    {standard input}:7119   .text.XMC_SCU_CLOCK_DisableHighPerformanceOscillatorGeneralPurposeInput:00000000 XMC_SCU_CLOCK_DisableHighPerformanceOscillatorGeneralPurposeInput
    {standard input}:7152   .text.XMC_SCU_CLOCK_DisableHighPerformanceOscillatorGeneralPurposeInput:00000018 $d
    {standard input}:7157   .text.XMC_SCU_CLOCK_GetHighPerformanceOscillatorGeneralPurposeInputStatus:00000000 $t
    {standard input}:7162   .text.XMC_SCU_CLOCK_GetHighPerformanceOscillatorGeneralPurposeInputStatus:00000000 XMC_SCU_CLOCK_GetHighPerformanceOscillatorGeneralPurposeInputStatus
    {standard input}:7194   .text.XMC_SCU_CLOCK_GetHighPerformanceOscillatorGeneralPurposeInputStatus:00000018 $d
    {standard input}:7199   .text.XMC_SCU_CLOCK_EnableSystemPll:00000000 $t
    {standard input}:7238   .text.XMC_SCU_CLOCK_EnableSystemPll:0000001c $d
    {standard input}:7243   .text.XMC_SCU_CLOCK_DisableSystemPll:00000000 $t
    {standard input}:7282   .text.XMC_SCU_CLOCK_DisableSystemPll:0000001c $d
    {standard input}:7287   .text.XMC_SCU_CLOCK_StartSystemPll:00000000 $t
    {standard input}:7591   .text.XMC_SCU_CLOCK_StepSystemPllFrequency:00000000 XMC_SCU_CLOCK_StepSystemPllFrequency
    {standard input}:7532   .text.XMC_SCU_CLOCK_StartSystemPll:00000180 $d
    {standard input}:7543   .text.XMC_SCU_CLOCK_StopSystemPll:00000000 $t
    {standard input}:7548   .text.XMC_SCU_CLOCK_StopSystemPll:00000000 XMC_SCU_CLOCK_StopSystemPll
    {standard input}:7581   .text.XMC_SCU_CLOCK_StopSystemPll:00000018 $d
    {standard input}:7586   .text.XMC_SCU_CLOCK_StepSystemPllFrequency:00000000 $t
    {standard input}:7645   .text.XMC_SCU_CLOCK_StepSystemPllFrequency:00000038 $d
    {standard input}:7650   .text.XMC_SCU_CLOCK_IsSystemPllLocked:00000000 $t
    {standard input}:7655   .text.XMC_SCU_CLOCK_IsSystemPllLocked:00000000 XMC_SCU_CLOCK_IsSystemPllLocked
    {standard input}:7692   .text.XMC_SCU_CLOCK_IsSystemPllLocked:00000020 $d
    {standard input}:7697   .text.XMC_SCU_INTERRUPT_SetEventHandler:00000000 $t
    {standard input}:7702   .text.XMC_SCU_INTERRUPT_SetEventHandler:00000000 XMC_SCU_INTERRUPT_SetEventHandler
    {standard input}:7781   .text.XMC_SCU_INTERRUPT_SetEventHandler:00000054 $d
    {standard input}:7786   .text.XMC_SCU_IRQHandler:00000000 $t
    {standard input}:7791   .text.XMC_SCU_IRQHandler:00000000 XMC_SCU_IRQHandler
    {standard input}:7869   .text.XMC_SCU_IRQHandler:0000005c $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
SystemCoreClock
SystemCoreClockUpdate
OSCHP_GetFrequency
