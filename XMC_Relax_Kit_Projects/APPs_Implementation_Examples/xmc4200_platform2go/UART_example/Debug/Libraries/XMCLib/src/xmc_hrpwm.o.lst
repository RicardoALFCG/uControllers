   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "xmc_hrpwm.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.XMC_HRPWM_lDelay,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	XMC_HRPWM_lDelay:
  25              	.LFB220:
  26              	 .file 1 "../Libraries/XMCLib/src/xmc_hrpwm.c"
   1:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
   2:../Libraries/XMCLib/src/xmc_hrpwm.c **** /**
   3:../Libraries/XMCLib/src/xmc_hrpwm.c ****  * @file xmc_hrpwm.c
   4:../Libraries/XMCLib/src/xmc_hrpwm.c ****  * @date 2019-12-16
   5:../Libraries/XMCLib/src/xmc_hrpwm.c ****  *
   6:../Libraries/XMCLib/src/xmc_hrpwm.c ****  * @cond
   7:../Libraries/XMCLib/src/xmc_hrpwm.c ****  *****************************************************************************
   8:../Libraries/XMCLib/src/xmc_hrpwm.c ****  * XMClib v2.2.0 - XMC Peripheral Driver Library
   9:../Libraries/XMCLib/src/xmc_hrpwm.c ****  *
  10:../Libraries/XMCLib/src/xmc_hrpwm.c ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  11:../Libraries/XMCLib/src/xmc_hrpwm.c ****  * All rights reserved.
  12:../Libraries/XMCLib/src/xmc_hrpwm.c ****  *
  13:../Libraries/XMCLib/src/xmc_hrpwm.c ****  * Boost Software License - Version 1.0 - August 17th, 2003
  14:../Libraries/XMCLib/src/xmc_hrpwm.c ****  *
  15:../Libraries/XMCLib/src/xmc_hrpwm.c ****  * Permission is hereby granted, free of charge, to any person or organization
  16:../Libraries/XMCLib/src/xmc_hrpwm.c ****  * obtaining a copy of the software and accompanying documentation covered by
  17:../Libraries/XMCLib/src/xmc_hrpwm.c ****  * this license (the "Software") to use, reproduce, display, distribute,
  18:../Libraries/XMCLib/src/xmc_hrpwm.c ****  * execute, and transmit the Software, and to prepare derivative works of the
  19:../Libraries/XMCLib/src/xmc_hrpwm.c ****  * Software, and to permit third-parties to whom the Software is furnished to
  20:../Libraries/XMCLib/src/xmc_hrpwm.c ****  * do so, all subject to the following:
  21:../Libraries/XMCLib/src/xmc_hrpwm.c ****  *
  22:../Libraries/XMCLib/src/xmc_hrpwm.c ****  * The copyright notices in the Software and this entire statement, including
  23:../Libraries/XMCLib/src/xmc_hrpwm.c ****  * the above license grant, this restriction and the following disclaimer,
  24:../Libraries/XMCLib/src/xmc_hrpwm.c ****  * must be included in all copies of the Software, in whole or in part, and
  25:../Libraries/XMCLib/src/xmc_hrpwm.c ****  * all derivative works of the Software, unless such copies or derivative
  26:../Libraries/XMCLib/src/xmc_hrpwm.c ****  * works are solely in the form of machine-executable object code generated by
  27:../Libraries/XMCLib/src/xmc_hrpwm.c ****  * a source language processor.
  28:../Libraries/XMCLib/src/xmc_hrpwm.c ****  *
  29:../Libraries/XMCLib/src/xmc_hrpwm.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  30:../Libraries/XMCLib/src/xmc_hrpwm.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  31:../Libraries/XMCLib/src/xmc_hrpwm.c ****  * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
  32:../Libraries/XMCLib/src/xmc_hrpwm.c ****  * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
  33:../Libraries/XMCLib/src/xmc_hrpwm.c ****  * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
  34:../Libraries/XMCLib/src/xmc_hrpwm.c ****  * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
  35:../Libraries/XMCLib/src/xmc_hrpwm.c ****  * DEALINGS IN THE SOFTWARE.
  36:../Libraries/XMCLib/src/xmc_hrpwm.c ****  *
  37:../Libraries/XMCLib/src/xmc_hrpwm.c ****  * To improve the quality of the software, users are encouraged to share
  38:../Libraries/XMCLib/src/xmc_hrpwm.c ****  * modifications, enhancements or bug fixes with Infineon Technologies AG
  39:../Libraries/XMCLib/src/xmc_hrpwm.c ****  * at XMCSupport@infineon.com.
  40:../Libraries/XMCLib/src/xmc_hrpwm.c ****  *****************************************************************************
  41:../Libraries/XMCLib/src/xmc_hrpwm.c ****  *
  42:../Libraries/XMCLib/src/xmc_hrpwm.c ****  * Change History
  43:../Libraries/XMCLib/src/xmc_hrpwm.c ****  * --------------
  44:../Libraries/XMCLib/src/xmc_hrpwm.c ****  *
  45:../Libraries/XMCLib/src/xmc_hrpwm.c ****  * 2015-02-18:
  46:../Libraries/XMCLib/src/xmc_hrpwm.c ****  *     - Variable g_hrpwm_char_data[] defined in startup file is used in place of trim data macro<b
  47:../Libraries/XMCLib/src/xmc_hrpwm.c ****  *
  48:../Libraries/XMCLib/src/xmc_hrpwm.c ****  * 2015-05-12:
  49:../Libraries/XMCLib/src/xmc_hrpwm.c ****  *     - XMC_HRPWM_CSG_SelClampingInput() api is added to select the clamping input.<br>
  50:../Libraries/XMCLib/src/xmc_hrpwm.c ****  *     - In XMC_HRPWM_Init() api macros used to check 'ccu_clock' frequency are renamed for readabi
  51:../Libraries/XMCLib/src/xmc_hrpwm.c ****  *     - 80MHz HRC operation would need a minimum of 70 Mhz CCU clock.<br>
  52:../Libraries/XMCLib/src/xmc_hrpwm.c ****  *
  53:../Libraries/XMCLib/src/xmc_hrpwm.c ****  * 2015-06-20:
  54:../Libraries/XMCLib/src/xmc_hrpwm.c ****  *     - Removed version macros and declaration of GetDriverVersion API <br>
  55:../Libraries/XMCLib/src/xmc_hrpwm.c ****  *     - Updated copyright and change history section.<br>
  56:../Libraries/XMCLib/src/xmc_hrpwm.c ****  *
  57:../Libraries/XMCLib/src/xmc_hrpwm.c ****  * 2015-07-06:
  58:../Libraries/XMCLib/src/xmc_hrpwm.c ****  *     - CSG trimming data assignment is corrected.<br>
  59:../Libraries/XMCLib/src/xmc_hrpwm.c ****  *
  60:../Libraries/XMCLib/src/xmc_hrpwm.c ****  * 2015-07-14:
  61:../Libraries/XMCLib/src/xmc_hrpwm.c ****  *     - Redundant code removed in XMC_HRPWM_HRC_ConfigSourceSelect0() and XMC_HRPWM_HRC_ConfigSour
  62:../Libraries/XMCLib/src/xmc_hrpwm.c ****  *     - Enums and masks are type casted to uint32_t type.
  63:../Libraries/XMCLib/src/xmc_hrpwm.c ****  *
  64:../Libraries/XMCLib/src/xmc_hrpwm.c ****  * 2019-12-16:
  65:../Libraries/XMCLib/src/xmc_hrpwm.c ****  *     - Fix including files following the convention: angle brackets are used for standard include
  66:../Libraries/XMCLib/src/xmc_hrpwm.c ****  *
  67:../Libraries/XMCLib/src/xmc_hrpwm.c ****  * 2020-05-28:
  68:../Libraries/XMCLib/src/xmc_hrpwm.c ****  *     - Fix: Use CSG trimming values only if the values are properly initialized
  69:../Libraries/XMCLib/src/xmc_hrpwm.c ****  *
  70:../Libraries/XMCLib/src/xmc_hrpwm.c ****  * 2020-07-07:
  71:../Libraries/XMCLib/src/xmc_hrpwm.c ****  *     - Fix XMC_HRPWM_HRC_ConfigSourceSelect1()
  72:../Libraries/XMCLib/src/xmc_hrpwm.c ****  * 
  73:../Libraries/XMCLib/src/xmc_hrpwm.c ****  * @endcond
  74:../Libraries/XMCLib/src/xmc_hrpwm.c ****  *
  75:../Libraries/XMCLib/src/xmc_hrpwm.c ****  */
  76:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
  77:../Libraries/XMCLib/src/xmc_hrpwm.c **** /**
  78:../Libraries/XMCLib/src/xmc_hrpwm.c ****  *
  79:../Libraries/XMCLib/src/xmc_hrpwm.c ****  * @brief HRPWM low level driver API prototype definition for XMC family of microcontrollers <br>
  80:../Libraries/XMCLib/src/xmc_hrpwm.c ****  *
  81:../Libraries/XMCLib/src/xmc_hrpwm.c ****  * <b>Detailed description of file</b> <br>
  82:../Libraries/XMCLib/src/xmc_hrpwm.c ****  * APIs provided in this file cover the following functional blocks of HRPWM: <br>
  83:../Libraries/XMCLib/src/xmc_hrpwm.c ****  * -- High Resolution Channel (APIs prefixed with XMC_HRPWM_HRC_) <br>
  84:../Libraries/XMCLib/src/xmc_hrpwm.c ****  * -- Comparator and Slope Generator (APIs prefixed with XMC_HRPWM_CSG_) <br>
  85:../Libraries/XMCLib/src/xmc_hrpwm.c ****  *
  86:../Libraries/XMCLib/src/xmc_hrpwm.c ****  */
  87:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
  88:../Libraries/XMCLib/src/xmc_hrpwm.c **** /**************************************************************************************************
  89:../Libraries/XMCLib/src/xmc_hrpwm.c ****  * HEADER FILES
  90:../Libraries/XMCLib/src/xmc_hrpwm.c ****  **************************************************************************************************
  91:../Libraries/XMCLib/src/xmc_hrpwm.c **** #include "xmc_hrpwm.h"
  92:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
  93:../Libraries/XMCLib/src/xmc_hrpwm.c **** #if defined(HRPWM0)
  94:../Libraries/XMCLib/src/xmc_hrpwm.c **** #include "xmc_scu.h"
  95:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
  96:../Libraries/XMCLib/src/xmc_hrpwm.c **** /**************************************************************************************************
  97:../Libraries/XMCLib/src/xmc_hrpwm.c ****  * MACROS
  98:../Libraries/XMCLib/src/xmc_hrpwm.c ****  **************************************************************************************************
  99:../Libraries/XMCLib/src/xmc_hrpwm.c **** /* 70MHz is considered as the minimum range for 80MHz HRC operation */
 100:../Libraries/XMCLib/src/xmc_hrpwm.c **** #define XMC_HRPWM_70MHZ_FREQUENCY   70000000U
 101:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 102:../Libraries/XMCLib/src/xmc_hrpwm.c **** /* 100MHz is considered as the maximum range for 80MHz HRC operation */
 103:../Libraries/XMCLib/src/xmc_hrpwm.c **** #define XMC_HRPWM_100MHZ_FREQUENCY  100000000U
 104:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 105:../Libraries/XMCLib/src/xmc_hrpwm.c **** /* 150MHz is considered as the maximum range for 120MHz HRC operation */
 106:../Libraries/XMCLib/src/xmc_hrpwm.c **** #define XMC_HRPWM_150MHZ_FREQUENCY  150000000U
 107:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 108:../Libraries/XMCLib/src/xmc_hrpwm.c **** /* 200MHz is considered as the maximum range for 180MHz HRC operation */
 109:../Libraries/XMCLib/src/xmc_hrpwm.c **** #define XMC_HRPWM_200MHZ_FREQUENCY  200000000U
 110:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 111:../Libraries/XMCLib/src/xmc_hrpwm.c **** #if (UC_SERIES == XMC44)
 112:../Libraries/XMCLib/src/xmc_hrpwm.c **** #define XMC_HRPWM_DELAY_CNT (28800U)  /* Provides ~2.8 msec delay @ 220MHz frequency */
 113:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 114:../Libraries/XMCLib/src/xmc_hrpwm.c **** #elif (UC_SERIES == XMC42)
 115:../Libraries/XMCLib/src/xmc_hrpwm.c **** #define XMC_HRPWM_DELAY_CNT (19200U)  /* Provides ~2.8 msec delay @ 150MHz frequency */
 116:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 117:../Libraries/XMCLib/src/xmc_hrpwm.c **** #else
 118:../Libraries/XMCLib/src/xmc_hrpwm.c **** #define XMC_HRPWM_DELAY_CNT (36000U)  /* Provides ~5.3 msec delay @ 150MHz frequency */
 119:../Libraries/XMCLib/src/xmc_hrpwm.c **** #endif
 120:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 121:../Libraries/XMCLib/src/xmc_hrpwm.c **** /**************************************************************************************************
 122:../Libraries/XMCLib/src/xmc_hrpwm.c ****  * LOCAL ROUTINES
 123:../Libraries/XMCLib/src/xmc_hrpwm.c ****  **************************************************************************************************
 124:../Libraries/XMCLib/src/xmc_hrpwm.c **** static void XMC_HRPWM_lDelay(void);
 125:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 126:../Libraries/XMCLib/src/xmc_hrpwm.c **** /**************************************************************************************************
 127:../Libraries/XMCLib/src/xmc_hrpwm.c ****  * API IMPLEMENTATION - GENERAL
 128:../Libraries/XMCLib/src/xmc_hrpwm.c ****  **************************************************************************************************
 129:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 130:../Libraries/XMCLib/src/xmc_hrpwm.c **** /* Delay */
 131:../Libraries/XMCLib/src/xmc_hrpwm.c **** void XMC_HRPWM_lDelay(void)
 132:../Libraries/XMCLib/src/xmc_hrpwm.c **** {
  27              	 .loc 1 132 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 83B0     	 sub sp,sp,#12
  37              	.LCFI1:
  38              	 .cfi_def_cfa_offset 16
  39 0004 00AF     	 add r7,sp,#0
  40              	.LCFI2:
  41              	 .cfi_def_cfa_register 7
 133:../Libraries/XMCLib/src/xmc_hrpwm.c ****   volatile uint32_t i;
 134:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 135:../Libraries/XMCLib/src/xmc_hrpwm.c ****   for (i = 0U; i <= XMC_HRPWM_DELAY_CNT; i++)  /* Wait more than 2 microseconds */
  42              	 .loc 1 135 0
  43 0006 0023     	 movs r3,#0
  44 0008 7B60     	 str r3,[r7,#4]
  45 000a 03E0     	 b .L2
  46              	.L3:
 136:../Libraries/XMCLib/src/xmc_hrpwm.c ****   {
 137:../Libraries/XMCLib/src/xmc_hrpwm.c ****     __NOP();
  47              	 .loc 1 137 0 discriminator 3
  48              	
  49 000c 00BF     	 nop
  50              	
 135:../Libraries/XMCLib/src/xmc_hrpwm.c ****   {
  51              	 .loc 1 135 0 discriminator 3
  52              	 .thumb
  53 000e 7B68     	 ldr r3,[r7,#4]
  54 0010 0133     	 adds r3,r3,#1
  55 0012 7B60     	 str r3,[r7,#4]
  56              	.L2:
 135:../Libraries/XMCLib/src/xmc_hrpwm.c ****   {
  57              	 .loc 1 135 0 is_stmt 0 discriminator 1
  58 0014 7B68     	 ldr r3,[r7,#4]
  59 0016 B3F5964F 	 cmp r3,#19200
  60 001a F7D9     	 bls .L3
 138:../Libraries/XMCLib/src/xmc_hrpwm.c ****   }
 139:../Libraries/XMCLib/src/xmc_hrpwm.c **** }
  61              	 .loc 1 139 0 is_stmt 1
  62 001c 0C37     	 adds r7,r7,#12
  63              	.LCFI3:
  64              	 .cfi_def_cfa_offset 4
  65 001e BD46     	 mov sp,r7
  66              	.LCFI4:
  67              	 .cfi_def_cfa_register 13
  68              	 
  69 0020 5DF8047B 	 ldr r7,[sp],#4
  70              	.LCFI5:
  71              	 .cfi_restore 7
  72              	 .cfi_def_cfa_offset 0
  73 0024 7047     	 bx lr
  74              	 .cfi_endproc
  75              	.LFE220:
  77 0026 00BF     	 .section .text.XMC_HRPWM_Init,"ax",%progbits
  78              	 .align 2
  79              	 .global XMC_HRPWM_Init
  80              	 .thumb
  81              	 .thumb_func
  83              	XMC_HRPWM_Init:
  84              	.LFB221:
 140:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 141:../Libraries/XMCLib/src/xmc_hrpwm.c **** /**************************************************************************************************
 142:../Libraries/XMCLib/src/xmc_hrpwm.c ****  * API IMPLEMENTATION - HRPWM GLOBAL
 143:../Libraries/XMCLib/src/xmc_hrpwm.c ****  **************************************************************************************************
 144:../Libraries/XMCLib/src/xmc_hrpwm.c **** /* Initializes HRPWM global registers */
 145:../Libraries/XMCLib/src/xmc_hrpwm.c **** XMC_HRPWM_STATUS_t XMC_HRPWM_Init(XMC_HRPWM_t *const hrpwm)
 146:../Libraries/XMCLib/src/xmc_hrpwm.c **** {
  85              	 .loc 1 146 0
  86              	 .cfi_startproc
  87              	 
  88              	 
  89 0000 80B5     	 push {r7,lr}
  90              	.LCFI6:
  91              	 .cfi_def_cfa_offset 8
  92              	 .cfi_offset 7,-8
  93              	 .cfi_offset 14,-4
  94 0002 86B0     	 sub sp,sp,#24
  95              	.LCFI7:
  96              	 .cfi_def_cfa_offset 32
  97 0004 00AF     	 add r7,sp,#0
  98              	.LCFI8:
  99              	 .cfi_def_cfa_register 7
 100 0006 7860     	 str r0,[r7,#4]
 147:../Libraries/XMCLib/src/xmc_hrpwm.c ****   uint32_t *csg_memory;
 148:../Libraries/XMCLib/src/xmc_hrpwm.c ****   uint32_t ccu_clock;
 149:../Libraries/XMCLib/src/xmc_hrpwm.c ****   uint32_t clkc;
 150:../Libraries/XMCLib/src/xmc_hrpwm.c ****   XMC_HRPWM_STATUS_t status;
 151:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 152:../Libraries/XMCLib/src/xmc_hrpwm.c ****   XMC_ASSERT("XMC_HRPWM_Init:Invalid module pointer", XMC_HRPWM_CHECK_MODULE_PTR(hrpwm));
 153:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 154:../Libraries/XMCLib/src/xmc_hrpwm.c ****   status = XMC_HRPWM_STATUS_ERROR;
 101              	 .loc 1 154 0
 102 0008 0223     	 movs r3,#2
 103 000a FB74     	 strb r3,[r7,#19]
 155:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 156:../Libraries/XMCLib/src/xmc_hrpwm.c ****   /* Apply reset to HRPWM module */
 157:../Libraries/XMCLib/src/xmc_hrpwm.c ****   XMC_SCU_RESET_AssertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_HRPWM0);
 104              	 .loc 1 157 0
 105 000c 4FF40000 	 mov r0,#8388608
 106 0010 FFF7FEFF 	 bl XMC_SCU_RESET_AssertPeripheralReset
 158:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 159:../Libraries/XMCLib/src/xmc_hrpwm.c ****   /* Release reset for HRPWM module */
 160:../Libraries/XMCLib/src/xmc_hrpwm.c ****   XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_HRPWM0);
 107              	 .loc 1 160 0
 108 0014 4FF40000 	 mov r0,#8388608
 109 0018 FFF7FEFF 	 bl XMC_SCU_RESET_DeassertPeripheralReset
 161:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 162:../Libraries/XMCLib/src/xmc_hrpwm.c ****   /* Ungate clock */
 163:../Libraries/XMCLib/src/xmc_hrpwm.c ****   XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_HRPWM0);
 110              	 .loc 1 163 0
 111 001c 4FF40000 	 mov r0,#8388608
 112 0020 FFF7FEFF 	 bl XMC_SCU_CLOCK_UngatePeripheralClock
 164:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 165:../Libraries/XMCLib/src/xmc_hrpwm.c ****   hrpwm->GLBANA = (uint32_t)0x00004A4E;  /* Initialization sequence */
 113              	 .loc 1 165 0
 114 0024 7B68     	 ldr r3,[r7,#4]
 115 0026 44F64E22 	 movw r2,#19022
 116 002a 5A61     	 str r2,[r3,#20]
 166:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 167:../Libraries/XMCLib/src/xmc_hrpwm.c ****   hrpwm->HRBSC |= (uint32_t)HRPWM0_HRBSC_HRBE_Msk;  /* Enable Bias Generator of HRPWM */
 117              	 .loc 1 167 0
 118 002c 7B68     	 ldr r3,[r7,#4]
 119 002e 1B68     	 ldr r3,[r3]
 120 0030 43F48072 	 orr r2,r3,#256
 121 0034 7B68     	 ldr r3,[r7,#4]
 122 0036 1A60     	 str r2,[r3]
 168:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 169:../Libraries/XMCLib/src/xmc_hrpwm.c ****   /* Update CSG0 memory data */
 170:../Libraries/XMCLib/src/xmc_hrpwm.c ****   if (g_hrpwm_char_data[0] != 0xffffffff)
 123              	 .loc 1 170 0
 124 0038 394B     	 ldr r3,.L16
 125 003a 1B68     	 ldr r3,[r3]
 126 003c B3F1FF3F 	 cmp r3,#-1
 127 0040 05D0     	 beq .L5
 171:../Libraries/XMCLib/src/xmc_hrpwm.c ****   {
 172:../Libraries/XMCLib/src/xmc_hrpwm.c ****     csg_memory = (uint32_t *)XMC_HRPWM_CSG0_MEMORY_ADDRESS;
 128              	 .loc 1 172 0
 129 0042 384B     	 ldr r3,.L16+4
 130 0044 FB60     	 str r3,[r7,#12]
 173:../Libraries/XMCLib/src/xmc_hrpwm.c ****     *csg_memory = g_hrpwm_char_data[0];
 131              	 .loc 1 173 0
 132 0046 364B     	 ldr r3,.L16
 133 0048 1A68     	 ldr r2,[r3]
 134 004a FB68     	 ldr r3,[r7,#12]
 135 004c 1A60     	 str r2,[r3]
 136              	.L5:
 174:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 175:../Libraries/XMCLib/src/xmc_hrpwm.c **** #if defined(XMC_HRPWM_CSG_LOW_SPEED)
 176:../Libraries/XMCLib/src/xmc_hrpwm.c ****     /* write csg memory bits[14:11] with 0b1100 */
 177:../Libraries/XMCLib/src/xmc_hrpwm.c ****     *csg_memory &= (uint32_t)(0xFFFF87FF);
 178:../Libraries/XMCLib/src/xmc_hrpwm.c ****     *csg_memory |= (uint32_t)(0x00006000);
 179:../Libraries/XMCLib/src/xmc_hrpwm.c **** #endif
 180:../Libraries/XMCLib/src/xmc_hrpwm.c ****   }
 181:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 182:../Libraries/XMCLib/src/xmc_hrpwm.c ****   /* Update CSG1 trimming data */
 183:../Libraries/XMCLib/src/xmc_hrpwm.c ****   if (g_hrpwm_char_data[1] != 0xffffffff)
 137              	 .loc 1 183 0
 138 004e 344B     	 ldr r3,.L16
 139 0050 5B68     	 ldr r3,[r3,#4]
 140 0052 B3F1FF3F 	 cmp r3,#-1
 141 0056 05D0     	 beq .L6
 184:../Libraries/XMCLib/src/xmc_hrpwm.c ****   {
 185:../Libraries/XMCLib/src/xmc_hrpwm.c ****     csg_memory = (uint32_t *)XMC_HRPWM_CSG1_MEMORY_ADDRESS;
 142              	 .loc 1 185 0
 143 0058 334B     	 ldr r3,.L16+8
 144 005a FB60     	 str r3,[r7,#12]
 186:../Libraries/XMCLib/src/xmc_hrpwm.c ****     *csg_memory = g_hrpwm_char_data[1];
 145              	 .loc 1 186 0
 146 005c 304B     	 ldr r3,.L16
 147 005e 5A68     	 ldr r2,[r3,#4]
 148 0060 FB68     	 ldr r3,[r7,#12]
 149 0062 1A60     	 str r2,[r3]
 150              	.L6:
 187:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 188:../Libraries/XMCLib/src/xmc_hrpwm.c **** #if defined(XMC_HRPWM_CSG_LOW_SPEED)
 189:../Libraries/XMCLib/src/xmc_hrpwm.c ****     /* write csg memory bits[14:11] with 0b1100 */
 190:../Libraries/XMCLib/src/xmc_hrpwm.c ****     *csg_memory &= (uint32_t)(0xFFFF87FF);
 191:../Libraries/XMCLib/src/xmc_hrpwm.c ****     *csg_memory |= (uint32_t)(0x00006000);
 192:../Libraries/XMCLib/src/xmc_hrpwm.c **** #endif
 193:../Libraries/XMCLib/src/xmc_hrpwm.c ****   }
 194:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 195:../Libraries/XMCLib/src/xmc_hrpwm.c ****   /* Update CSG2 trimming data */
 196:../Libraries/XMCLib/src/xmc_hrpwm.c ****   if (g_hrpwm_char_data[2] != 0xffffffff)
 151              	 .loc 1 196 0
 152 0064 2E4B     	 ldr r3,.L16
 153 0066 9B68     	 ldr r3,[r3,#8]
 154 0068 B3F1FF3F 	 cmp r3,#-1
 155 006c 05D0     	 beq .L7
 197:../Libraries/XMCLib/src/xmc_hrpwm.c ****   {
 198:../Libraries/XMCLib/src/xmc_hrpwm.c ****     csg_memory = (uint32_t *)XMC_HRPWM_CSG2_MEMORY_ADDRESS;
 156              	 .loc 1 198 0
 157 006e 2F4B     	 ldr r3,.L16+12
 158 0070 FB60     	 str r3,[r7,#12]
 199:../Libraries/XMCLib/src/xmc_hrpwm.c ****     *csg_memory = g_hrpwm_char_data[2];
 159              	 .loc 1 199 0
 160 0072 2B4B     	 ldr r3,.L16
 161 0074 9A68     	 ldr r2,[r3,#8]
 162 0076 FB68     	 ldr r3,[r7,#12]
 163 0078 1A60     	 str r2,[r3]
 164              	.L7:
 200:../Libraries/XMCLib/src/xmc_hrpwm.c **** #if defined(XMC_HRPWM_CSG_LOW_SPEED)
 201:../Libraries/XMCLib/src/xmc_hrpwm.c ****     /* write csg memory bits[14:11] with 0b1100 */
 202:../Libraries/XMCLib/src/xmc_hrpwm.c ****     *csg_memory &= (uint32_t)(0xFFFF87FF);
 203:../Libraries/XMCLib/src/xmc_hrpwm.c ****     *csg_memory |= (uint32_t)(0x00006000);
 204:../Libraries/XMCLib/src/xmc_hrpwm.c **** #endif
 205:../Libraries/XMCLib/src/xmc_hrpwm.c ****   }
 206:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 207:../Libraries/XMCLib/src/xmc_hrpwm.c ****   /* Set CSG units to high speed mode */
 208:../Libraries/XMCLib/src/xmc_hrpwm.c ****   hrpwm->CSGCFG = (uint32_t)(0x0000003F);
 165              	 .loc 1 208 0
 166 007a 7B68     	 ldr r3,[r7,#4]
 167 007c 3F22     	 movs r2,#63
 168 007e 1A62     	 str r2,[r3,#32]
 209:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 210:../Libraries/XMCLib/src/xmc_hrpwm.c ****   /* Read CCU clock frequency */
 211:../Libraries/XMCLib/src/xmc_hrpwm.c ****   ccu_clock = XMC_SCU_CLOCK_GetCcuClockFrequency();
 169              	 .loc 1 211 0
 170 0080 FFF7FEFF 	 bl XMC_SCU_CLOCK_GetCcuClockFrequency
 171 0084 B860     	 str r0,[r7,#8]
 212:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 213:../Libraries/XMCLib/src/xmc_hrpwm.c ****   if ((ccu_clock > XMC_HRPWM_70MHZ_FREQUENCY) && (ccu_clock <= XMC_HRPWM_100MHZ_FREQUENCY))
 172              	 .loc 1 213 0
 173 0086 BB68     	 ldr r3,[r7,#8]
 174 0088 294A     	 ldr r2,.L16+16
 175 008a 9342     	 cmp r3,r2
 176 008c 06D9     	 bls .L8
 177              	 .loc 1 213 0 is_stmt 0 discriminator 1
 178 008e BB68     	 ldr r3,[r7,#8]
 179 0090 284A     	 ldr r2,.L16+20
 180 0092 9342     	 cmp r3,r2
 181 0094 02D8     	 bhi .L8
 214:../Libraries/XMCLib/src/xmc_hrpwm.c ****   {
 215:../Libraries/XMCLib/src/xmc_hrpwm.c ****     clkc = 3U; /* Clock frequency range 70MHz+ - 100MHz is considered as 80MHz HRC operation */
 182              	 .loc 1 215 0 is_stmt 1
 183 0096 0323     	 movs r3,#3
 184 0098 7B61     	 str r3,[r7,#20]
 185 009a 17E0     	 b .L9
 186              	.L8:
 216:../Libraries/XMCLib/src/xmc_hrpwm.c ****   }
 217:../Libraries/XMCLib/src/xmc_hrpwm.c ****   else if ((ccu_clock > XMC_HRPWM_100MHZ_FREQUENCY) && (ccu_clock <= XMC_HRPWM_150MHZ_FREQUENCY))
 187              	 .loc 1 217 0
 188 009c BB68     	 ldr r3,[r7,#8]
 189 009e 254A     	 ldr r2,.L16+20
 190 00a0 9342     	 cmp r3,r2
 191 00a2 06D9     	 bls .L10
 192              	 .loc 1 217 0 is_stmt 0 discriminator 1
 193 00a4 BB68     	 ldr r3,[r7,#8]
 194 00a6 244A     	 ldr r2,.L16+24
 195 00a8 9342     	 cmp r3,r2
 196 00aa 02D8     	 bhi .L10
 218:../Libraries/XMCLib/src/xmc_hrpwm.c ****   {
 219:../Libraries/XMCLib/src/xmc_hrpwm.c ****     clkc = 2U; /* Clock frequency range 100MHz+ - 150MHz is considered as 120MHz HRC operation */
 197              	 .loc 1 219 0 is_stmt 1
 198 00ac 0223     	 movs r3,#2
 199 00ae 7B61     	 str r3,[r7,#20]
 200 00b0 0CE0     	 b .L9
 201              	.L10:
 220:../Libraries/XMCLib/src/xmc_hrpwm.c ****   }
 221:../Libraries/XMCLib/src/xmc_hrpwm.c ****   else if ((ccu_clock > XMC_HRPWM_150MHZ_FREQUENCY) && (ccu_clock <= XMC_HRPWM_200MHZ_FREQUENCY))
 202              	 .loc 1 221 0
 203 00b2 BB68     	 ldr r3,[r7,#8]
 204 00b4 204A     	 ldr r2,.L16+24
 205 00b6 9342     	 cmp r3,r2
 206 00b8 06D9     	 bls .L11
 207              	 .loc 1 221 0 is_stmt 0 discriminator 1
 208 00ba BB68     	 ldr r3,[r7,#8]
 209 00bc 1F4A     	 ldr r2,.L16+28
 210 00be 9342     	 cmp r3,r2
 211 00c0 02D8     	 bhi .L11
 222:../Libraries/XMCLib/src/xmc_hrpwm.c ****   {
 223:../Libraries/XMCLib/src/xmc_hrpwm.c ****     clkc = 1U; /* Clock frequency range 150MHz+ - 200MHz is considered as 180MHz HRC operation */
 212              	 .loc 1 223 0 is_stmt 1
 213 00c2 0123     	 movs r3,#1
 214 00c4 7B61     	 str r3,[r7,#20]
 215 00c6 01E0     	 b .L9
 216              	.L11:
 224:../Libraries/XMCLib/src/xmc_hrpwm.c ****   }
 225:../Libraries/XMCLib/src/xmc_hrpwm.c ****   else
 226:../Libraries/XMCLib/src/xmc_hrpwm.c ****   {
 227:../Libraries/XMCLib/src/xmc_hrpwm.c ****     clkc = 0U; /* Invalid frequency for HRC operation: Clock frequency <= 60MHz & Clock frequency >
 217              	 .loc 1 227 0
 218 00c8 0023     	 movs r3,#0
 219 00ca 7B61     	 str r3,[r7,#20]
 220              	.L9:
 228:../Libraries/XMCLib/src/xmc_hrpwm.c ****   }
 229:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 230:../Libraries/XMCLib/src/xmc_hrpwm.c ****   if (clkc != 0U) /* Enter the loop only if the clock frequency is valid */
 221              	 .loc 1 230 0
 222 00cc 7B69     	 ldr r3,[r7,#20]
 223 00ce 002B     	 cmp r3,#0
 224 00d0 1FD0     	 beq .L12
 231:../Libraries/XMCLib/src/xmc_hrpwm.c ****   {
 232:../Libraries/XMCLib/src/xmc_hrpwm.c ****     /* Program HRC clock configuration with clock frequency information */
 233:../Libraries/XMCLib/src/xmc_hrpwm.c ****     hrpwm->HRCCFG |= (clkc << HRPWM0_HRCCFG_CLKC_Pos);
 225              	 .loc 1 233 0
 226 00d2 7B68     	 ldr r3,[r7,#4]
 227 00d4 1A6E     	 ldr r2,[r3,#96]
 228 00d6 7B69     	 ldr r3,[r7,#20]
 229 00d8 1B04     	 lsls r3,r3,#16
 230 00da 1A43     	 orrs r2,r2,r3
 231 00dc 7B68     	 ldr r3,[r7,#4]
 232 00de 1A66     	 str r2,[r3,#96]
 234:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 235:../Libraries/XMCLib/src/xmc_hrpwm.c ****     hrpwm->HRCCFG |= (uint32_t)HRPWM0_HRCCFG_HRCPM_Msk; /* Release HR generation from power down mo
 233              	 .loc 1 235 0
 234 00e0 7B68     	 ldr r3,[r7,#4]
 235 00e2 1B6E     	 ldr r3,[r3,#96]
 236 00e4 43F00102 	 orr r2,r3,#1
 237 00e8 7B68     	 ldr r3,[r7,#4]
 238 00ea 1A66     	 str r2,[r3,#96]
 236:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 237:../Libraries/XMCLib/src/xmc_hrpwm.c ****     XMC_HRPWM_lDelay(); /* As per Initialization sequence */
 239              	 .loc 1 237 0
 240 00ec FFF7FEFF 	 bl XMC_HRPWM_lDelay
 238:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 239:../Libraries/XMCLib/src/xmc_hrpwm.c ****     /* Enable global high resolution generation / Force charge pump down */
 240:../Libraries/XMCLib/src/xmc_hrpwm.c ****     hrpwm->GLBANA |= (uint32_t)HRPWM0_GLBANA_GHREN_Msk;
 241              	 .loc 1 240 0
 242 00f0 7B68     	 ldr r3,[r7,#4]
 243 00f2 5B69     	 ldr r3,[r3,#20]
 244 00f4 43F48022 	 orr r2,r3,#262144
 245 00f8 7B68     	 ldr r3,[r7,#4]
 246 00fa 5A61     	 str r2,[r3,#20]
 241:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 242:../Libraries/XMCLib/src/xmc_hrpwm.c ****     XMC_HRPWM_lDelay();
 247              	 .loc 1 242 0
 248 00fc FFF7FEFF 	 bl XMC_HRPWM_lDelay
 243:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 244:../Libraries/XMCLib/src/xmc_hrpwm.c ****     /* Check High resolution ready bit field */
 245:../Libraries/XMCLib/src/xmc_hrpwm.c ****     if ((hrpwm->HRGHRS & HRPWM0_HRGHRS_HRGR_Msk) == 1U)
 249              	 .loc 1 245 0
 250 0100 7B68     	 ldr r3,[r7,#4]
 251 0102 1B6F     	 ldr r3,[r3,#112]
 252 0104 03F00103 	 and r3,r3,#1
 253 0108 002B     	 cmp r3,#0
 254 010a 04D0     	 beq .L14
 246:../Libraries/XMCLib/src/xmc_hrpwm.c ****     {
 247:../Libraries/XMCLib/src/xmc_hrpwm.c ****       /* High resolution logic unit is ready */
 248:../Libraries/XMCLib/src/xmc_hrpwm.c ****       status = XMC_HRPWM_STATUS_OK;
 255              	 .loc 1 248 0
 256 010c 0023     	 movs r3,#0
 257 010e FB74     	 strb r3,[r7,#19]
 258 0110 01E0     	 b .L14
 259              	.L12:
 249:../Libraries/XMCLib/src/xmc_hrpwm.c ****     }
 250:../Libraries/XMCLib/src/xmc_hrpwm.c ****   }
 251:../Libraries/XMCLib/src/xmc_hrpwm.c ****   else
 252:../Libraries/XMCLib/src/xmc_hrpwm.c ****   {
 253:../Libraries/XMCLib/src/xmc_hrpwm.c ****     status = XMC_HRPWM_STATUS_ERROR; /* Clock frequency is invalid */
 260              	 .loc 1 253 0
 261 0112 0223     	 movs r3,#2
 262 0114 FB74     	 strb r3,[r7,#19]
 263              	.L14:
 254:../Libraries/XMCLib/src/xmc_hrpwm.c ****   }
 255:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 256:../Libraries/XMCLib/src/xmc_hrpwm.c ****   return (status);
 264              	 .loc 1 256 0
 265 0116 FB7C     	 ldrb r3,[r7,#19]
 257:../Libraries/XMCLib/src/xmc_hrpwm.c **** }
 266              	 .loc 1 257 0
 267 0118 1846     	 mov r0,r3
 268 011a 1837     	 adds r7,r7,#24
 269              	.LCFI9:
 270              	 .cfi_def_cfa_offset 8
 271 011c BD46     	 mov sp,r7
 272              	.LCFI10:
 273              	 .cfi_def_cfa_register 13
 274              	 
 275 011e 80BD     	 pop {r7,pc}
 276              	.L17:
 277              	 .align 2
 278              	.L16:
 279 0120 00000000 	 .word g_hrpwm_char_data
 280 0124 400A0240 	 .word 1073875520
 281 0128 400B0240 	 .word 1073875776
 282 012c 400C0240 	 .word 1073876032
 283 0130 801D2C04 	 .word 70000000
 284 0134 00E1F505 	 .word 100000000
 285 0138 80D1F008 	 .word 150000000
 286 013c 00C2EB0B 	 .word 200000000
 287              	 .cfi_endproc
 288              	.LFE221:
 290              	 .section .text.XMC_HRPWM_EnableGlobalHR,"ax",%progbits
 291              	 .align 2
 292              	 .global XMC_HRPWM_EnableGlobalHR
 293              	 .thumb
 294              	 .thumb_func
 296              	XMC_HRPWM_EnableGlobalHR:
 297              	.LFB222:
 258:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 259:../Libraries/XMCLib/src/xmc_hrpwm.c **** /* Enable global high resolution generation */
 260:../Libraries/XMCLib/src/xmc_hrpwm.c **** void XMC_HRPWM_EnableGlobalHR(XMC_HRPWM_t *const hrpwm)
 261:../Libraries/XMCLib/src/xmc_hrpwm.c **** {
 298              	 .loc 1 261 0
 299              	 .cfi_startproc
 300              	 
 301              	 
 302 0000 80B5     	 push {r7,lr}
 303              	.LCFI11:
 304              	 .cfi_def_cfa_offset 8
 305              	 .cfi_offset 7,-8
 306              	 .cfi_offset 14,-4
 307 0002 82B0     	 sub sp,sp,#8
 308              	.LCFI12:
 309              	 .cfi_def_cfa_offset 16
 310 0004 00AF     	 add r7,sp,#0
 311              	.LCFI13:
 312              	 .cfi_def_cfa_register 7
 313 0006 7860     	 str r0,[r7,#4]
 262:../Libraries/XMCLib/src/xmc_hrpwm.c ****   XMC_ASSERT("XMC_HRPWM_EnableGlobalHR:Invalid module pointer", XMC_HRPWM_CHECK_MODULE_PTR(hrpwm));
 263:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 264:../Libraries/XMCLib/src/xmc_hrpwm.c ****   /* Enable global high resolution generation / Force charge pump down */
 265:../Libraries/XMCLib/src/xmc_hrpwm.c ****   hrpwm->GLBANA |= (uint32_t)HRPWM0_GLBANA_GHREN_Msk;
 314              	 .loc 1 265 0
 315 0008 7B68     	 ldr r3,[r7,#4]
 316 000a 5B69     	 ldr r3,[r3,#20]
 317 000c 43F48022 	 orr r2,r3,#262144
 318 0010 7B68     	 ldr r3,[r7,#4]
 319 0012 5A61     	 str r2,[r3,#20]
 266:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 267:../Libraries/XMCLib/src/xmc_hrpwm.c ****   XMC_HRPWM_lDelay(); /* Elapse startup time */
 320              	 .loc 1 267 0
 321 0014 FFF7FEFF 	 bl XMC_HRPWM_lDelay
 268:../Libraries/XMCLib/src/xmc_hrpwm.c **** }
 322              	 .loc 1 268 0
 323 0018 0837     	 adds r7,r7,#8
 324              	.LCFI14:
 325              	 .cfi_def_cfa_offset 8
 326 001a BD46     	 mov sp,r7
 327              	.LCFI15:
 328              	 .cfi_def_cfa_register 13
 329              	 
 330 001c 80BD     	 pop {r7,pc}
 331              	 .cfi_endproc
 332              	.LFE222:
 334 001e 00BF     	 .section .text.XMC_HRPWM_DisableGlobalHR,"ax",%progbits
 335              	 .align 2
 336              	 .global XMC_HRPWM_DisableGlobalHR
 337              	 .thumb
 338              	 .thumb_func
 340              	XMC_HRPWM_DisableGlobalHR:
 341              	.LFB223:
 269:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 270:../Libraries/XMCLib/src/xmc_hrpwm.c **** /* Disable global high resolution generation */
 271:../Libraries/XMCLib/src/xmc_hrpwm.c **** void XMC_HRPWM_DisableGlobalHR(XMC_HRPWM_t *const hrpwm)
 272:../Libraries/XMCLib/src/xmc_hrpwm.c **** {
 342              	 .loc 1 272 0
 343              	 .cfi_startproc
 344              	 
 345              	 
 346              	 
 347 0000 80B4     	 push {r7}
 348              	.LCFI16:
 349              	 .cfi_def_cfa_offset 4
 350              	 .cfi_offset 7,-4
 351 0002 83B0     	 sub sp,sp,#12
 352              	.LCFI17:
 353              	 .cfi_def_cfa_offset 16
 354 0004 00AF     	 add r7,sp,#0
 355              	.LCFI18:
 356              	 .cfi_def_cfa_register 7
 357 0006 7860     	 str r0,[r7,#4]
 273:../Libraries/XMCLib/src/xmc_hrpwm.c ****   XMC_ASSERT("XMC_HRPWM_DisableGlobalHR:Invalid module pointer", XMC_HRPWM_CHECK_MODULE_PTR(hrpwm))
 274:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 275:../Libraries/XMCLib/src/xmc_hrpwm.c ****   /* Enable global high resolution generation / Force charge pump down */
 276:../Libraries/XMCLib/src/xmc_hrpwm.c ****   hrpwm->GLBANA &= ~((uint32_t)HRPWM0_GLBANA_GHREN_Msk);
 358              	 .loc 1 276 0
 359 0008 7B68     	 ldr r3,[r7,#4]
 360 000a 5B69     	 ldr r3,[r3,#20]
 361 000c 23F48022 	 bic r2,r3,#262144
 362 0010 7B68     	 ldr r3,[r7,#4]
 363 0012 5A61     	 str r2,[r3,#20]
 277:../Libraries/XMCLib/src/xmc_hrpwm.c **** }
 364              	 .loc 1 277 0
 365 0014 0C37     	 adds r7,r7,#12
 366              	.LCFI19:
 367              	 .cfi_def_cfa_offset 4
 368 0016 BD46     	 mov sp,r7
 369              	.LCFI20:
 370              	 .cfi_def_cfa_register 13
 371              	 
 372 0018 5DF8047B 	 ldr r7,[sp],#4
 373              	.LCFI21:
 374              	 .cfi_restore 7
 375              	 .cfi_def_cfa_offset 0
 376 001c 7047     	 bx lr
 377              	 .cfi_endproc
 378              	.LFE223:
 380 001e 00BF     	 .section .text.XMC_HRPWM_GetHRGenReadyStatus,"ax",%progbits
 381              	 .align 2
 382              	 .global XMC_HRPWM_GetHRGenReadyStatus
 383              	 .thumb
 384              	 .thumb_func
 386              	XMC_HRPWM_GetHRGenReadyStatus:
 387              	.LFB224:
 278:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 279:../Libraries/XMCLib/src/xmc_hrpwm.c **** /**************************************************************************************************
 280:../Libraries/XMCLib/src/xmc_hrpwm.c ****  * API IMPLEMENTATION - HRPWM HRC GLOBAL
 281:../Libraries/XMCLib/src/xmc_hrpwm.c ****  **************************************************************************************************
 282:../Libraries/XMCLib/src/xmc_hrpwm.c **** /* Checks and returns high resolution generation working status */
 283:../Libraries/XMCLib/src/xmc_hrpwm.c **** XMC_HRPWM_HR_LOGIC_t XMC_HRPWM_GetHRGenReadyStatus(XMC_HRPWM_t *const hrpwm)
 284:../Libraries/XMCLib/src/xmc_hrpwm.c **** {
 388              	 .loc 1 284 0
 389              	 .cfi_startproc
 390              	 
 391              	 
 392              	 
 393 0000 80B4     	 push {r7}
 394              	.LCFI22:
 395              	 .cfi_def_cfa_offset 4
 396              	 .cfi_offset 7,-4
 397 0002 85B0     	 sub sp,sp,#20
 398              	.LCFI23:
 399              	 .cfi_def_cfa_offset 24
 400 0004 00AF     	 add r7,sp,#0
 401              	.LCFI24:
 402              	 .cfi_def_cfa_register 7
 403 0006 7860     	 str r0,[r7,#4]
 285:../Libraries/XMCLib/src/xmc_hrpwm.c ****   XMC_HRPWM_HR_LOGIC_t status;
 286:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 287:../Libraries/XMCLib/src/xmc_hrpwm.c ****   XMC_ASSERT("XMC_HRPWM_GetHRGenReadyStatus:Invalid module pointer", XMC_HRPWM_CHECK_MODULE_PTR(hrp
 288:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 289:../Libraries/XMCLib/src/xmc_hrpwm.c ****   if (hrpwm->HRGHRS)
 404              	 .loc 1 289 0
 405 0008 7B68     	 ldr r3,[r7,#4]
 406 000a 1B6F     	 ldr r3,[r3,#112]
 407 000c 002B     	 cmp r3,#0
 408 000e 02D0     	 beq .L21
 290:../Libraries/XMCLib/src/xmc_hrpwm.c ****   {
 291:../Libraries/XMCLib/src/xmc_hrpwm.c ****     status = XMC_HRPWM_HR_LOGIC_WORKING;
 409              	 .loc 1 291 0
 410 0010 0123     	 movs r3,#1
 411 0012 FB73     	 strb r3,[r7,#15]
 412 0014 01E0     	 b .L22
 413              	.L21:
 292:../Libraries/XMCLib/src/xmc_hrpwm.c ****   }
 293:../Libraries/XMCLib/src/xmc_hrpwm.c ****   else
 294:../Libraries/XMCLib/src/xmc_hrpwm.c ****   {
 295:../Libraries/XMCLib/src/xmc_hrpwm.c ****     status = XMC_HRPWM_HR_LOGIC_NOT_WORKING;
 414              	 .loc 1 295 0
 415 0016 0023     	 movs r3,#0
 416 0018 FB73     	 strb r3,[r7,#15]
 417              	.L22:
 296:../Libraries/XMCLib/src/xmc_hrpwm.c ****   }
 297:../Libraries/XMCLib/src/xmc_hrpwm.c ****   return status;
 418              	 .loc 1 297 0
 419 001a FB7B     	 ldrb r3,[r7,#15]
 298:../Libraries/XMCLib/src/xmc_hrpwm.c **** }
 420              	 .loc 1 298 0
 421 001c 1846     	 mov r0,r3
 422 001e 1437     	 adds r7,r7,#20
 423              	.LCFI25:
 424              	 .cfi_def_cfa_offset 4
 425 0020 BD46     	 mov sp,r7
 426              	.LCFI26:
 427              	 .cfi_def_cfa_register 13
 428              	 
 429 0022 5DF8047B 	 ldr r7,[sp],#4
 430              	.LCFI27:
 431              	 .cfi_restore 7
 432              	 .cfi_def_cfa_offset 0
 433 0026 7047     	 bx lr
 434              	 .cfi_endproc
 435              	.LFE224:
 437              	 .section .text.XMC_HRPWM_HRC_Init,"ax",%progbits
 438              	 .align 2
 439              	 .global XMC_HRPWM_HRC_Init
 440              	 .thumb
 441              	 .thumb_func
 443              	XMC_HRPWM_HRC_Init:
 444              	.LFB225:
 299:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 300:../Libraries/XMCLib/src/xmc_hrpwm.c **** /**************************************************************************************************
 301:../Libraries/XMCLib/src/xmc_hrpwm.c ****  * API IMPLEMENTATION - HRPWM HRC CHANNEL
 302:../Libraries/XMCLib/src/xmc_hrpwm.c ****  **************************************************************************************************
 303:../Libraries/XMCLib/src/xmc_hrpwm.c **** /* Initialize HRPWM HRC channel */
 304:../Libraries/XMCLib/src/xmc_hrpwm.c **** void XMC_HRPWM_HRC_Init(XMC_HRPWM_HRC_t *const hrc, const XMC_HRPWM_HRC_CONFIG_t *const config)
 305:../Libraries/XMCLib/src/xmc_hrpwm.c **** {
 445              	 .loc 1 305 0
 446              	 .cfi_startproc
 447              	 
 448              	 
 449              	 
 450 0000 80B4     	 push {r7}
 451              	.LCFI28:
 452              	 .cfi_def_cfa_offset 4
 453              	 .cfi_offset 7,-4
 454 0002 83B0     	 sub sp,sp,#12
 455              	.LCFI29:
 456              	 .cfi_def_cfa_offset 16
 457 0004 00AF     	 add r7,sp,#0
 458              	.LCFI30:
 459              	 .cfi_def_cfa_register 7
 460 0006 7860     	 str r0,[r7,#4]
 461 0008 3960     	 str r1,[r7]
 306:../Libraries/XMCLib/src/xmc_hrpwm.c ****   XMC_ASSERT("XMC_HRPWM_HRC_Init:Invalid HRC pointer", XMC_HRPWM_CHECK_HRC_PTR(hrc));
 307:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 308:../Libraries/XMCLib/src/xmc_hrpwm.c ****   /* Setting of HRCy mode configuration */
 309:../Libraries/XMCLib/src/xmc_hrpwm.c ****   hrc->GC = config->gc;
 462              	 .loc 1 309 0
 463 000a 3B68     	 ldr r3,[r7]
 464 000c 1A68     	 ldr r2,[r3]
 465 000e 7B68     	 ldr r3,[r7,#4]
 466 0010 1A60     	 str r2,[r3]
 310:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 311:../Libraries/XMCLib/src/xmc_hrpwm.c ****   /* Passive level configuration */
 312:../Libraries/XMCLib/src/xmc_hrpwm.c ****   hrc->PL = config->psl;
 467              	 .loc 1 312 0
 468 0012 3B68     	 ldr r3,[r7]
 469 0014 5A68     	 ldr r2,[r3,#4]
 470 0016 7B68     	 ldr r3,[r7,#4]
 471 0018 5A60     	 str r2,[r3,#4]
 313:../Libraries/XMCLib/src/xmc_hrpwm.c **** }
 472              	 .loc 1 313 0
 473 001a 0C37     	 adds r7,r7,#12
 474              	.LCFI31:
 475              	 .cfi_def_cfa_offset 4
 476 001c BD46     	 mov sp,r7
 477              	.LCFI32:
 478              	 .cfi_def_cfa_register 13
 479              	 
 480 001e 5DF8047B 	 ldr r7,[sp],#4
 481              	.LCFI33:
 482              	 .cfi_restore 7
 483              	 .cfi_def_cfa_offset 0
 484 0022 7047     	 bx lr
 485              	 .cfi_endproc
 486              	.LFE225:
 488              	 .section .text.XMC_HRPWM_HRC_ConfigSourceSelect0,"ax",%progbits
 489              	 .align 2
 490              	 .global XMC_HRPWM_HRC_ConfigSourceSelect0
 491              	 .thumb
 492              	 .thumb_func
 494              	XMC_HRPWM_HRC_ConfigSourceSelect0:
 495              	.LFB226:
 314:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 315:../Libraries/XMCLib/src/xmc_hrpwm.c **** /* Configure Source selector 0 */
 316:../Libraries/XMCLib/src/xmc_hrpwm.c **** void XMC_HRPWM_HRC_ConfigSourceSelect0(XMC_HRPWM_HRC_t *const hrc, const XMC_HRPWM_HRC_SRC_CONFIG_t
 317:../Libraries/XMCLib/src/xmc_hrpwm.c **** {
 496              	 .loc 1 317 0
 497              	 .cfi_startproc
 498              	 
 499              	 
 500              	 
 501 0000 80B4     	 push {r7}
 502              	.LCFI34:
 503              	 .cfi_def_cfa_offset 4
 504              	 .cfi_offset 7,-4
 505 0002 85B0     	 sub sp,sp,#20
 506              	.LCFI35:
 507              	 .cfi_def_cfa_offset 24
 508 0004 00AF     	 add r7,sp,#0
 509              	.LCFI36:
 510              	 .cfi_def_cfa_register 7
 511 0006 7860     	 str r0,[r7,#4]
 512 0008 3960     	 str r1,[r7]
 318:../Libraries/XMCLib/src/xmc_hrpwm.c ****   uint32_t reg;
 319:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 320:../Libraries/XMCLib/src/xmc_hrpwm.c ****   XMC_ASSERT("XMC_HRPWM_HRC_ConfigSourceSelect0:Invalid HRC pointer", XMC_HRPWM_CHECK_HRC_PTR(hrc))
 321:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 322:../Libraries/XMCLib/src/xmc_hrpwm.c ****   /* HRC mode config for source selector 0 */
 323:../Libraries/XMCLib/src/xmc_hrpwm.c ****   hrc->GC &= ~((uint32_t)HRPWM0_HRC_GC_HRM0_Msk);
 513              	 .loc 1 323 0
 514 000a 7B68     	 ldr r3,[r7,#4]
 515 000c 1B68     	 ldr r3,[r3]
 516 000e 23F00302 	 bic r2,r3,#3
 517 0012 7B68     	 ldr r3,[r7,#4]
 518 0014 1A60     	 str r2,[r3]
 324:../Libraries/XMCLib/src/xmc_hrpwm.c ****   hrc->GC |= ((uint32_t)config->high_res_mode) << HRPWM0_HRC_GC_HRM0_Pos;
 519              	 .loc 1 324 0
 520 0016 7B68     	 ldr r3,[r7,#4]
 521 0018 1B68     	 ldr r3,[r3]
 522 001a 3A68     	 ldr r2,[r7]
 523 001c 1278     	 ldrb r2,[r2]
 524 001e 1A43     	 orrs r2,r2,r3
 525 0020 7B68     	 ldr r3,[r7,#4]
 526 0022 1A60     	 str r2,[r3]
 325:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 326:../Libraries/XMCLib/src/xmc_hrpwm.c ****   /*****************************************************************************
 327:../Libraries/XMCLib/src/xmc_hrpwm.c ****    * HRCy global control selection (HRCyGSEL)
 328:../Libraries/XMCLib/src/xmc_hrpwm.c ****    ****************************************************************************/
 329:../Libraries/XMCLib/src/xmc_hrpwm.c ****   reg = 0U;
 527              	 .loc 1 329 0
 528 0024 0023     	 movs r3,#0
 529 0026 FB60     	 str r3,[r7,#12]
 330:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 331:../Libraries/XMCLib/src/xmc_hrpwm.c ****   if (config->set_config == XMC_HRPWM_HRC_SRC_INPUT_CSG)
 530              	 .loc 1 331 0
 531 0028 3B68     	 ldr r3,[r7]
 532 002a 5B78     	 ldrb r3,[r3,#1]
 533 002c 012B     	 cmp r3,#1
 534 002e 06D1     	 bne .L26
 332:../Libraries/XMCLib/src/xmc_hrpwm.c ****   {
 333:../Libraries/XMCLib/src/xmc_hrpwm.c ****     reg  = ((uint32_t)config->cmp_set) << HRPWM0_HRC_GSEL_C0SS_Pos;
 535              	 .loc 1 333 0
 536 0030 3B68     	 ldr r3,[r7]
 537 0032 DB78     	 ldrb r3,[r3,#3]
 538 0034 FB60     	 str r3,[r7,#12]
 334:../Libraries/XMCLib/src/xmc_hrpwm.c ****     reg |= ((uint32_t)XMC_HRPWM_HRC_SRC_INPUT_CSG) << HRPWM0_HRC_GSEL_S0M_Pos;  /* comparator outpu
 539              	 .loc 1 334 0
 540 0036 FB68     	 ldr r3,[r7,#12]
 541 0038 43F04003 	 orr r3,r3,#64
 542 003c FB60     	 str r3,[r7,#12]
 543              	.L26:
 335:../Libraries/XMCLib/src/xmc_hrpwm.c ****   }
 336:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 337:../Libraries/XMCLib/src/xmc_hrpwm.c ****   if (config->clear_config == XMC_HRPWM_HRC_SRC_INPUT_CSG)
 544              	 .loc 1 337 0
 545 003e 3B68     	 ldr r3,[r7]
 546 0040 9B78     	 ldrb r3,[r3,#2]
 547 0042 012B     	 cmp r3,#1
 548 0044 09D1     	 bne .L27
 338:../Libraries/XMCLib/src/xmc_hrpwm.c ****   {
 339:../Libraries/XMCLib/src/xmc_hrpwm.c ****     reg |= ((uint32_t)config->cmp_clear) << HRPWM0_HRC_GSEL_C0CS_Pos;
 549              	 .loc 1 339 0
 550 0046 3B68     	 ldr r3,[r7]
 551 0048 1B79     	 ldrb r3,[r3,#4]
 552 004a DB00     	 lsls r3,r3,#3
 553 004c FA68     	 ldr r2,[r7,#12]
 554 004e 1343     	 orrs r3,r3,r2
 555 0050 FB60     	 str r3,[r7,#12]
 340:../Libraries/XMCLib/src/xmc_hrpwm.c ****     reg |= ((uint32_t)XMC_HRPWM_HRC_SRC_INPUT_CSG) << HRPWM0_HRC_GSEL_C0M_Pos;  /* comparator outpu
 556              	 .loc 1 340 0
 557 0052 FB68     	 ldr r3,[r7,#12]
 558 0054 43F48073 	 orr r3,r3,#256
 559 0058 FB60     	 str r3,[r7,#12]
 560              	.L27:
 341:../Libraries/XMCLib/src/xmc_hrpwm.c ****   }
 342:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 343:../Libraries/XMCLib/src/xmc_hrpwm.c ****   reg |= ((uint32_t)config->set_edge_config) << HRPWM0_HRC_GSEL_S0ES_Pos;
 561              	 .loc 1 343 0
 562 005a 3B68     	 ldr r3,[r7]
 563 005c 9B79     	 ldrb r3,[r3,#6]
 564 005e 9B02     	 lsls r3,r3,#10
 565 0060 FA68     	 ldr r2,[r7,#12]
 566 0062 1343     	 orrs r3,r3,r2
 567 0064 FB60     	 str r3,[r7,#12]
 344:../Libraries/XMCLib/src/xmc_hrpwm.c ****   reg |= ((uint32_t)config->clear_edge_config) << HRPWM0_HRC_GSEL_C0ES_Pos;
 568              	 .loc 1 344 0
 569 0066 3B68     	 ldr r3,[r7]
 570 0068 DB79     	 ldrb r3,[r3,#7]
 571 006a 1B03     	 lsls r3,r3,#12
 572 006c FA68     	 ldr r2,[r7,#12]
 573 006e 1343     	 orrs r3,r3,r2
 574 0070 FB60     	 str r3,[r7,#12]
 345:../Libraries/XMCLib/src/xmc_hrpwm.c ****   hrc->GSEL &= (uint32_t)0xFFFF0000;
 575              	 .loc 1 345 0
 576 0072 7B68     	 ldr r3,[r7,#4]
 577 0074 9B68     	 ldr r3,[r3,#8]
 578 0076 1B0C     	 lsrs r3,r3,#16
 579 0078 1B04     	 lsls r3,r3,#16
 580 007a 7A68     	 ldr r2,[r7,#4]
 581 007c 9360     	 str r3,[r2,#8]
 346:../Libraries/XMCLib/src/xmc_hrpwm.c ****   hrc->GSEL |= reg;
 582              	 .loc 1 346 0
 583 007e 7B68     	 ldr r3,[r7,#4]
 584 0080 9A68     	 ldr r2,[r3,#8]
 585 0082 FB68     	 ldr r3,[r7,#12]
 586 0084 1A43     	 orrs r2,r2,r3
 587 0086 7B68     	 ldr r3,[r7,#4]
 588 0088 9A60     	 str r2,[r3,#8]
 347:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 348:../Libraries/XMCLib/src/xmc_hrpwm.c ****   /*****************************************************************************
 349:../Libraries/XMCLib/src/xmc_hrpwm.c ****    * HRCy timer selection (HRCyTSEL)
 350:../Libraries/XMCLib/src/xmc_hrpwm.c ****    ****************************************************************************/
 351:../Libraries/XMCLib/src/xmc_hrpwm.c ****   reg = (uint32_t)config->timer_sel << HRPWM0_HRC_TSEL_TSEL0_Pos;
 589              	 .loc 1 351 0
 590 008a 3B68     	 ldr r3,[r7]
 591 008c 5B79     	 ldrb r3,[r3,#5]
 592 008e FB60     	 str r3,[r7,#12]
 352:../Libraries/XMCLib/src/xmc_hrpwm.c ****   reg |= ((uint32_t)config->src_trap_enable) << HRPWM0_HRC_TSEL_TS0E_Pos;
 593              	 .loc 1 352 0
 594 0090 3B68     	 ldr r3,[r7]
 595 0092 1B7A     	 ldrb r3,[r3,#8]
 596 0094 1B04     	 lsls r3,r3,#16
 597 0096 FA68     	 ldr r2,[r7,#12]
 598 0098 1343     	 orrs r3,r3,r2
 599 009a FB60     	 str r3,[r7,#12]
 353:../Libraries/XMCLib/src/xmc_hrpwm.c ****   hrc->TSEL &= (uint32_t)~(HRPWM0_HRC_TSEL_TSEL0_Msk | HRPWM0_HRC_TSEL_TS0E_Msk);
 600              	 .loc 1 353 0
 601 009c 7B68     	 ldr r3,[r7,#4]
 602 009e DB68     	 ldr r3,[r3,#12]
 603 00a0 23F48033 	 bic r3,r3,#65536
 604 00a4 23F00703 	 bic r3,r3,#7
 605 00a8 7A68     	 ldr r2,[r7,#4]
 606 00aa D360     	 str r3,[r2,#12]
 354:../Libraries/XMCLib/src/xmc_hrpwm.c ****   hrc->TSEL |= reg;
 607              	 .loc 1 354 0
 608 00ac 7B68     	 ldr r3,[r7,#4]
 609 00ae DA68     	 ldr r2,[r3,#12]
 610 00b0 FB68     	 ldr r3,[r7,#12]
 611 00b2 1A43     	 orrs r2,r2,r3
 612 00b4 7B68     	 ldr r3,[r7,#4]
 613 00b6 DA60     	 str r2,[r3,#12]
 355:../Libraries/XMCLib/src/xmc_hrpwm.c **** }
 614              	 .loc 1 355 0
 615 00b8 1437     	 adds r7,r7,#20
 616              	.LCFI37:
 617              	 .cfi_def_cfa_offset 4
 618 00ba BD46     	 mov sp,r7
 619              	.LCFI38:
 620              	 .cfi_def_cfa_register 13
 621              	 
 622 00bc 5DF8047B 	 ldr r7,[sp],#4
 623              	.LCFI39:
 624              	 .cfi_restore 7
 625              	 .cfi_def_cfa_offset 0
 626 00c0 7047     	 bx lr
 627              	 .cfi_endproc
 628              	.LFE226:
 630 00c2 00BF     	 .section .text.XMC_HRPWM_HRC_ConfigSourceSelect1,"ax",%progbits
 631              	 .align 2
 632              	 .global XMC_HRPWM_HRC_ConfigSourceSelect1
 633              	 .thumb
 634              	 .thumb_func
 636              	XMC_HRPWM_HRC_ConfigSourceSelect1:
 637              	.LFB227:
 356:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 357:../Libraries/XMCLib/src/xmc_hrpwm.c **** /* Configure Source selector 1 */
 358:../Libraries/XMCLib/src/xmc_hrpwm.c **** void XMC_HRPWM_HRC_ConfigSourceSelect1(XMC_HRPWM_HRC_t *const hrc, const XMC_HRPWM_HRC_SRC_CONFIG_t
 359:../Libraries/XMCLib/src/xmc_hrpwm.c **** {
 638              	 .loc 1 359 0
 639              	 .cfi_startproc
 640              	 
 641              	 
 642              	 
 643 0000 80B4     	 push {r7}
 644              	.LCFI40:
 645              	 .cfi_def_cfa_offset 4
 646              	 .cfi_offset 7,-4
 647 0002 85B0     	 sub sp,sp,#20
 648              	.LCFI41:
 649              	 .cfi_def_cfa_offset 24
 650 0004 00AF     	 add r7,sp,#0
 651              	.LCFI42:
 652              	 .cfi_def_cfa_register 7
 653 0006 7860     	 str r0,[r7,#4]
 654 0008 3960     	 str r1,[r7]
 360:../Libraries/XMCLib/src/xmc_hrpwm.c ****   uint32_t reg;
 361:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 362:../Libraries/XMCLib/src/xmc_hrpwm.c ****   XMC_ASSERT("XMC_HRPWM_HRC_ConfigSourceSelect1:Invalid HRC pointer", XMC_HRPWM_CHECK_HRC_PTR(hrc))
 363:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 364:../Libraries/XMCLib/src/xmc_hrpwm.c ****   /* HRC mode config for source selector 1 */
 365:../Libraries/XMCLib/src/xmc_hrpwm.c ****   hrc->GC &= ~((uint32_t)HRPWM0_HRC_GC_HRM1_Msk);
 655              	 .loc 1 365 0
 656 000a 7B68     	 ldr r3,[r7,#4]
 657 000c 1B68     	 ldr r3,[r3]
 658 000e 23F00C02 	 bic r2,r3,#12
 659 0012 7B68     	 ldr r3,[r7,#4]
 660 0014 1A60     	 str r2,[r3]
 366:../Libraries/XMCLib/src/xmc_hrpwm.c ****   hrc->GC |= ((uint32_t)config->high_res_mode) << HRPWM0_HRC_GC_HRM1_Pos;
 661              	 .loc 1 366 0
 662 0016 7B68     	 ldr r3,[r7,#4]
 663 0018 1A68     	 ldr r2,[r3]
 664 001a 3B68     	 ldr r3,[r7]
 665 001c 1B78     	 ldrb r3,[r3]
 666 001e 9B00     	 lsls r3,r3,#2
 667 0020 1A43     	 orrs r2,r2,r3
 668 0022 7B68     	 ldr r3,[r7,#4]
 669 0024 1A60     	 str r2,[r3]
 367:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 368:../Libraries/XMCLib/src/xmc_hrpwm.c ****   /*****************************************************************************
 369:../Libraries/XMCLib/src/xmc_hrpwm.c ****    * HRCy global control selection (HRCyGSEL)
 370:../Libraries/XMCLib/src/xmc_hrpwm.c ****    ****************************************************************************/
 371:../Libraries/XMCLib/src/xmc_hrpwm.c ****   reg = 0U;
 670              	 .loc 1 371 0
 671 0026 0023     	 movs r3,#0
 672 0028 FB60     	 str r3,[r7,#12]
 372:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 373:../Libraries/XMCLib/src/xmc_hrpwm.c ****   if (config->set_config == XMC_HRPWM_HRC_SRC_INPUT_CSG)
 673              	 .loc 1 373 0
 674 002a 3B68     	 ldr r3,[r7]
 675 002c 5B78     	 ldrb r3,[r3,#1]
 676 002e 012B     	 cmp r3,#1
 677 0030 07D1     	 bne .L29
 374:../Libraries/XMCLib/src/xmc_hrpwm.c ****   {
 375:../Libraries/XMCLib/src/xmc_hrpwm.c ****     reg  = ((uint32_t)config->cmp_set) << HRPWM0_HRC_GSEL_C1SS_Pos;
 678              	 .loc 1 375 0
 679 0032 3B68     	 ldr r3,[r7]
 680 0034 DB78     	 ldrb r3,[r3,#3]
 681 0036 1B04     	 lsls r3,r3,#16
 682 0038 FB60     	 str r3,[r7,#12]
 376:../Libraries/XMCLib/src/xmc_hrpwm.c ****     reg |= ((uint32_t)XMC_HRPWM_HRC_SRC_INPUT_CSG) << HRPWM0_HRC_GSEL_S1M_Pos;  /* comparator outpu
 683              	 .loc 1 376 0
 684 003a FB68     	 ldr r3,[r7,#12]
 685 003c 43F48003 	 orr r3,r3,#4194304
 686 0040 FB60     	 str r3,[r7,#12]
 687              	.L29:
 377:../Libraries/XMCLib/src/xmc_hrpwm.c ****   }
 378:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 379:../Libraries/XMCLib/src/xmc_hrpwm.c ****   if (config->clear_config == XMC_HRPWM_HRC_SRC_INPUT_CSG)
 688              	 .loc 1 379 0
 689 0042 3B68     	 ldr r3,[r7]
 690 0044 9B78     	 ldrb r3,[r3,#2]
 691 0046 012B     	 cmp r3,#1
 692 0048 09D1     	 bne .L30
 380:../Libraries/XMCLib/src/xmc_hrpwm.c ****   {
 381:../Libraries/XMCLib/src/xmc_hrpwm.c ****     reg |= ((uint32_t)config->cmp_clear) << HRPWM0_HRC_GSEL_C1CS_Pos;
 693              	 .loc 1 381 0
 694 004a 3B68     	 ldr r3,[r7]
 695 004c 1B79     	 ldrb r3,[r3,#4]
 696 004e DB04     	 lsls r3,r3,#19
 697 0050 FA68     	 ldr r2,[r7,#12]
 698 0052 1343     	 orrs r3,r3,r2
 699 0054 FB60     	 str r3,[r7,#12]
 382:../Libraries/XMCLib/src/xmc_hrpwm.c ****     reg |= ((uint32_t)XMC_HRPWM_HRC_SRC_INPUT_CSG) << HRPWM0_HRC_GSEL_C1M_Pos;  /* comparator outpu
 700              	 .loc 1 382 0
 701 0056 FB68     	 ldr r3,[r7,#12]
 702 0058 43F08073 	 orr r3,r3,#16777216
 703 005c FB60     	 str r3,[r7,#12]
 704              	.L30:
 383:../Libraries/XMCLib/src/xmc_hrpwm.c ****   }
 384:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 385:../Libraries/XMCLib/src/xmc_hrpwm.c ****   reg |= ((uint32_t)config->set_edge_config) << HRPWM0_HRC_GSEL_S1ES_Pos;
 705              	 .loc 1 385 0
 706 005e 3B68     	 ldr r3,[r7]
 707 0060 9B79     	 ldrb r3,[r3,#6]
 708 0062 9B06     	 lsls r3,r3,#26
 709 0064 FA68     	 ldr r2,[r7,#12]
 710 0066 1343     	 orrs r3,r3,r2
 711 0068 FB60     	 str r3,[r7,#12]
 386:../Libraries/XMCLib/src/xmc_hrpwm.c ****   reg |= ((uint32_t)config->clear_edge_config) << HRPWM0_HRC_GSEL_C1ES_Pos;
 712              	 .loc 1 386 0
 713 006a 3B68     	 ldr r3,[r7]
 714 006c DB79     	 ldrb r3,[r3,#7]
 715 006e 1B07     	 lsls r3,r3,#28
 716 0070 FA68     	 ldr r2,[r7,#12]
 717 0072 1343     	 orrs r3,r3,r2
 718 0074 FB60     	 str r3,[r7,#12]
 387:../Libraries/XMCLib/src/xmc_hrpwm.c ****   hrc->GSEL &= (uint32_t)0x0000FFFF;
 719              	 .loc 1 387 0
 720 0076 7B68     	 ldr r3,[r7,#4]
 721 0078 9B68     	 ldr r3,[r3,#8]
 722 007a 9AB2     	 uxth r2,r3
 723 007c 7B68     	 ldr r3,[r7,#4]
 724 007e 9A60     	 str r2,[r3,#8]
 388:../Libraries/XMCLib/src/xmc_hrpwm.c ****   hrc->GSEL |= reg;
 725              	 .loc 1 388 0
 726 0080 7B68     	 ldr r3,[r7,#4]
 727 0082 9A68     	 ldr r2,[r3,#8]
 728 0084 FB68     	 ldr r3,[r7,#12]
 729 0086 1A43     	 orrs r2,r2,r3
 730 0088 7B68     	 ldr r3,[r7,#4]
 731 008a 9A60     	 str r2,[r3,#8]
 389:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 390:../Libraries/XMCLib/src/xmc_hrpwm.c ****   /*****************************************************************************
 391:../Libraries/XMCLib/src/xmc_hrpwm.c ****    * HRCy timer selection (HRCyTSEL)
 392:../Libraries/XMCLib/src/xmc_hrpwm.c ****    ****************************************************************************/
 393:../Libraries/XMCLib/src/xmc_hrpwm.c ****   reg = (uint32_t)config->timer_sel << HRPWM0_HRC_TSEL_TSEL1_Pos;
 732              	 .loc 1 393 0
 733 008c 3B68     	 ldr r3,[r7]
 734 008e 5B79     	 ldrb r3,[r3,#5]
 735 0090 DB00     	 lsls r3,r3,#3
 736 0092 FB60     	 str r3,[r7,#12]
 394:../Libraries/XMCLib/src/xmc_hrpwm.c ****   reg |= ((uint32_t)config->src_trap_enable) << HRPWM0_HRC_TSEL_TS1E_Pos;
 737              	 .loc 1 394 0
 738 0094 3B68     	 ldr r3,[r7]
 739 0096 1B7A     	 ldrb r3,[r3,#8]
 740 0098 5B04     	 lsls r3,r3,#17
 741 009a FA68     	 ldr r2,[r7,#12]
 742 009c 1343     	 orrs r3,r3,r2
 743 009e FB60     	 str r3,[r7,#12]
 395:../Libraries/XMCLib/src/xmc_hrpwm.c ****   hrc->TSEL &= (uint32_t)~(HRPWM0_HRC_TSEL_TSEL1_Msk | HRPWM0_HRC_TSEL_TS1E_Msk);
 744              	 .loc 1 395 0
 745 00a0 7B68     	 ldr r3,[r7,#4]
 746 00a2 DB68     	 ldr r3,[r3,#12]
 747 00a4 23F40033 	 bic r3,r3,#131072
 748 00a8 23F03803 	 bic r3,r3,#56
 749 00ac 7A68     	 ldr r2,[r7,#4]
 750 00ae D360     	 str r3,[r2,#12]
 396:../Libraries/XMCLib/src/xmc_hrpwm.c ****   hrc->TSEL |= reg;
 751              	 .loc 1 396 0
 752 00b0 7B68     	 ldr r3,[r7,#4]
 753 00b2 DA68     	 ldr r2,[r3,#12]
 754 00b4 FB68     	 ldr r3,[r7,#12]
 755 00b6 1A43     	 orrs r2,r2,r3
 756 00b8 7B68     	 ldr r3,[r7,#4]
 757 00ba DA60     	 str r2,[r3,#12]
 397:../Libraries/XMCLib/src/xmc_hrpwm.c **** }
 758              	 .loc 1 397 0
 759 00bc 1437     	 adds r7,r7,#20
 760              	.LCFI43:
 761              	 .cfi_def_cfa_offset 4
 762 00be BD46     	 mov sp,r7
 763              	.LCFI44:
 764              	 .cfi_def_cfa_register 13
 765              	 
 766 00c0 5DF8047B 	 ldr r7,[sp],#4
 767              	.LCFI45:
 768              	 .cfi_restore 7
 769              	 .cfi_def_cfa_offset 0
 770 00c4 7047     	 bx lr
 771              	 .cfi_endproc
 772              	.LFE227:
 774 00c6 00BF     	 .section .text.XMC_HRPWM_CSG_Init,"ax",%progbits
 775              	 .align 2
 776              	 .global XMC_HRPWM_CSG_Init
 777              	 .thumb
 778              	 .thumb_func
 780              	XMC_HRPWM_CSG_Init:
 781              	.LFB228:
 398:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 399:../Libraries/XMCLib/src/xmc_hrpwm.c **** /**************************************************************************************************
 400:../Libraries/XMCLib/src/xmc_hrpwm.c ****  * API IMPLEMENTATION - HRPWM CSG GLOBAL
 401:../Libraries/XMCLib/src/xmc_hrpwm.c ****  **************************************************************************************************
 402:../Libraries/XMCLib/src/xmc_hrpwm.c **** /* No api's for CSG GLOBAL in xmc_hrpwm.c file */
 403:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 404:../Libraries/XMCLib/src/xmc_hrpwm.c **** /**************************************************************************************************
 405:../Libraries/XMCLib/src/xmc_hrpwm.c ****  * API IMPLEMENTATION - HRPWM CSG SLICE
 406:../Libraries/XMCLib/src/xmc_hrpwm.c ****  **************************************************************************************************
 407:../Libraries/XMCLib/src/xmc_hrpwm.c **** /* Initialization of CSG slice */
 408:../Libraries/XMCLib/src/xmc_hrpwm.c **** void XMC_HRPWM_CSG_Init(XMC_HRPWM_CSG_t *const csg, const XMC_HRPWM_CSG_CONFIG_t *const config)
 409:../Libraries/XMCLib/src/xmc_hrpwm.c **** {
 782              	 .loc 1 409 0
 783              	 .cfi_startproc
 784              	 
 785              	 
 786              	 
 787 0000 80B4     	 push {r7}
 788              	.LCFI46:
 789              	 .cfi_def_cfa_offset 4
 790              	 .cfi_offset 7,-4
 791 0002 85B0     	 sub sp,sp,#20
 792              	.LCFI47:
 793              	 .cfi_def_cfa_offset 24
 794 0004 00AF     	 add r7,sp,#0
 795              	.LCFI48:
 796              	 .cfi_def_cfa_register 7
 797 0006 7860     	 str r0,[r7,#4]
 798 0008 3960     	 str r1,[r7]
 410:../Libraries/XMCLib/src/xmc_hrpwm.c ****   uint32_t reg;
 411:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 412:../Libraries/XMCLib/src/xmc_hrpwm.c ****   XMC_ASSERT("XMC_HRPWM_CSG_Init:Invalid CSG pointer", XMC_HRPWM_CHECK_CSG_PTR(csg));
 413:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 414:../Libraries/XMCLib/src/xmc_hrpwm.c ****   /* Passive level configuration */
 415:../Libraries/XMCLib/src/xmc_hrpwm.c ****   csg->PLC = config->cmp_config.plc;
 799              	 .loc 1 415 0
 800 000a 3B68     	 ldr r3,[r7]
 801 000c 9A68     	 ldr r2,[r3,#8]
 802 000e 7B68     	 ldr r3,[r7,#4]
 803 0010 5A62     	 str r2,[r3,#36]
 416:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 417:../Libraries/XMCLib/src/xmc_hrpwm.c ****   /* DAC Reference values */
 418:../Libraries/XMCLib/src/xmc_hrpwm.c ****   csg->SDSV1 = config->dac_config.dac_dsv1;
 804              	 .loc 1 418 0
 805 0012 3B68     	 ldr r3,[r7]
 806 0014 1A69     	 ldr r2,[r3,#16]
 807 0016 7B68     	 ldr r3,[r7,#4]
 808 0018 9A61     	 str r2,[r3,#24]
 419:../Libraries/XMCLib/src/xmc_hrpwm.c ****   csg->DSV2  = config->dac_config.dac_dsv2;
 809              	 .loc 1 419 0
 810 001a 3B68     	 ldr r3,[r7]
 811 001c 5A69     	 ldr r2,[r3,#20]
 812 001e 7B68     	 ldr r3,[r7,#4]
 813 0020 5A61     	 str r2,[r3,#20]
 420:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 421:../Libraries/XMCLib/src/xmc_hrpwm.c ****   /* Pulse Swallow value */
 422:../Libraries/XMCLib/src/xmc_hrpwm.c ****   csg->SPC = config->sgen_config.pulse_swallow_val;
 814              	 .loc 1 422 0
 815 0022 3B68     	 ldr r3,[r7]
 816 0024 DA69     	 ldr r2,[r3,#28]
 817 0026 7B68     	 ldr r3,[r7,#4]
 818 0028 DA61     	 str r2,[r3,#28]
 423:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 424:../Libraries/XMCLib/src/xmc_hrpwm.c ****   /* Slope generation control (CSGySC) */
 425:../Libraries/XMCLib/src/xmc_hrpwm.c ****   if (config->sgen_config.ctrl_mode != (uint32_t) XMC_HRPWM_CSG_SLOPE_CTRL_MODE_STATIC)
 819              	 .loc 1 425 0
 820 002a 3B68     	 ldr r3,[r7]
 821 002c 5B7E     	 ldrb r3,[r3,#25]
 822 002e 03F00303 	 and r3,r3,#3
 823 0032 DBB2     	 uxtb r3,r3
 824 0034 002B     	 cmp r3,#0
 825 0036 04D0     	 beq .L32
 426:../Libraries/XMCLib/src/xmc_hrpwm.c ****   {
 427:../Libraries/XMCLib/src/xmc_hrpwm.c ****     /* Dynamic Slope Generation */
 428:../Libraries/XMCLib/src/xmc_hrpwm.c ****     csg->SC = config->sgen_config.sc;
 826              	 .loc 1 428 0
 827 0038 3B68     	 ldr r3,[r7]
 828 003a 9A69     	 ldr r2,[r3,#24]
 829 003c 7B68     	 ldr r3,[r7,#4]
 830 003e 9A60     	 str r2,[r3,#8]
 831 0040 07E0     	 b .L33
 832              	.L32:
 429:../Libraries/XMCLib/src/xmc_hrpwm.c ****   }
 430:../Libraries/XMCLib/src/xmc_hrpwm.c ****   else
 431:../Libraries/XMCLib/src/xmc_hrpwm.c ****   {
 432:../Libraries/XMCLib/src/xmc_hrpwm.c ****     /* Static Mode */
 433:../Libraries/XMCLib/src/xmc_hrpwm.c ****     csg->SC = ((uint32_t)config->sgen_config.static_mode_ist_enable) << HRPWM0_CSG_SC_IST_Pos;
 833              	 .loc 1 433 0
 834 0042 3B68     	 ldr r3,[r7]
 835 0044 9B7E     	 ldrb r3,[r3,#26]
 836 0046 C3F30013 	 ubfx r3,r3,#4,#1
 837 004a DBB2     	 uxtb r3,r3
 838 004c 1A05     	 lsls r2,r3,#20
 839 004e 7B68     	 ldr r3,[r7,#4]
 840 0050 9A60     	 str r2,[r3,#8]
 841              	.L33:
 434:../Libraries/XMCLib/src/xmc_hrpwm.c ****   }
 435:../Libraries/XMCLib/src/xmc_hrpwm.c ****   reg = ((uint32_t)config->dac_config.start_mode) << HRPWM0_CSG_SC_SWSM_Pos;
 842              	 .loc 1 435 0
 843 0052 3B68     	 ldr r3,[r7]
 844 0054 1B7B     	 ldrb r3,[r3,#12]
 845 0056 1B04     	 lsls r3,r3,#16
 846 0058 FB60     	 str r3,[r7,#12]
 436:../Libraries/XMCLib/src/xmc_hrpwm.c ****   csg->SC |= reg;
 847              	 .loc 1 436 0
 848 005a 7B68     	 ldr r3,[r7,#4]
 849 005c 9A68     	 ldr r2,[r3,#8]
 850 005e FB68     	 ldr r3,[r7,#12]
 851 0060 1A43     	 orrs r2,r2,r3
 852 0062 7B68     	 ldr r3,[r7,#4]
 853 0064 9A60     	 str r2,[r3,#8]
 437:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 438:../Libraries/XMCLib/src/xmc_hrpwm.c ****   /* Comparator Initialization */
 439:../Libraries/XMCLib/src/xmc_hrpwm.c ****   csg->CC = config->cmp_config.cc;
 854              	 .loc 1 439 0
 855 0066 3B68     	 ldr r3,[r7]
 856 0068 1A68     	 ldr r2,[r3]
 857 006a 7B68     	 ldr r3,[r7,#4]
 858 006c 1A62     	 str r2,[r3,#32]
 440:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 441:../Libraries/XMCLib/src/xmc_hrpwm.c ****   /* Blanking value */
 442:../Libraries/XMCLib/src/xmc_hrpwm.c ****   csg->BLV = config->cmp_config.blanking_val;
 859              	 .loc 1 442 0
 860 006e 3B68     	 ldr r3,[r7]
 861 0070 5A68     	 ldr r2,[r3,#4]
 862 0072 7B68     	 ldr r3,[r7,#4]
 863 0074 9A62     	 str r2,[r3,#40]
 443:../Libraries/XMCLib/src/xmc_hrpwm.c **** }
 864              	 .loc 1 443 0
 865 0076 1437     	 adds r7,r7,#20
 866              	.LCFI49:
 867              	 .cfi_def_cfa_offset 4
 868 0078 BD46     	 mov sp,r7
 869              	.LCFI50:
 870              	 .cfi_def_cfa_register 13
 871              	 
 872 007a 5DF8047B 	 ldr r7,[sp],#4
 873              	.LCFI51:
 874              	 .cfi_restore 7
 875              	 .cfi_def_cfa_offset 0
 876 007e 7047     	 bx lr
 877              	 .cfi_endproc
 878              	.LFE228:
 880              	 .section .text.XMC_HRPWM_CSG_SetCMPInput,"ax",%progbits
 881              	 .align 2
 882              	 .global XMC_HRPWM_CSG_SetCMPInput
 883              	 .thumb
 884              	 .thumb_func
 886              	XMC_HRPWM_CSG_SetCMPInput:
 887              	.LFB229:
 444:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 445:../Libraries/XMCLib/src/xmc_hrpwm.c **** /* Set either CINA or CINB as inverting input of the comparator */
 446:../Libraries/XMCLib/src/xmc_hrpwm.c **** void XMC_HRPWM_CSG_SetCMPInput(XMC_HRPWM_CSG_t *const csg, const XMC_HRPWM_CSG_CMP_INPUT_t input)
 447:../Libraries/XMCLib/src/xmc_hrpwm.c **** {
 888              	 .loc 1 447 0
 889              	 .cfi_startproc
 890              	 
 891              	 
 892              	 
 893 0000 80B4     	 push {r7}
 894              	.LCFI52:
 895              	 .cfi_def_cfa_offset 4
 896              	 .cfi_offset 7,-4
 897 0002 83B0     	 sub sp,sp,#12
 898              	.LCFI53:
 899              	 .cfi_def_cfa_offset 16
 900 0004 00AF     	 add r7,sp,#0
 901              	.LCFI54:
 902              	 .cfi_def_cfa_register 7
 903 0006 7860     	 str r0,[r7,#4]
 904 0008 0B46     	 mov r3,r1
 905 000a FB70     	 strb r3,[r7,#3]
 448:../Libraries/XMCLib/src/xmc_hrpwm.c ****   XMC_ASSERT("XMC_HRPWM_CSG_SetCMPInput:Invalid CSG pointer", XMC_HRPWM_CHECK_CSG_PTR(csg));
 449:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 450:../Libraries/XMCLib/src/xmc_hrpwm.c ****   if (input == XMC_HRPWM_CSG_CMP_INPUT_CINA)
 906              	 .loc 1 450 0
 907 000c FB78     	 ldrb r3,[r7,#3]
 908 000e 002B     	 cmp r3,#0
 909 0010 06D1     	 bne .L35
 451:../Libraries/XMCLib/src/xmc_hrpwm.c ****   {
 452:../Libraries/XMCLib/src/xmc_hrpwm.c ****     /* Inverting comparator input connected to CINA */
 453:../Libraries/XMCLib/src/xmc_hrpwm.c ****     csg->CC &= ~((uint32_t)HRPWM0_CSG_CC_IMCS_Msk);
 910              	 .loc 1 453 0
 911 0012 7B68     	 ldr r3,[r7,#4]
 912 0014 1B6A     	 ldr r3,[r3,#32]
 913 0016 23F48072 	 bic r2,r3,#256
 914 001a 7B68     	 ldr r3,[r7,#4]
 915 001c 1A62     	 str r2,[r3,#32]
 916 001e 05E0     	 b .L34
 917              	.L35:
 454:../Libraries/XMCLib/src/xmc_hrpwm.c ****   }
 455:../Libraries/XMCLib/src/xmc_hrpwm.c ****   else
 456:../Libraries/XMCLib/src/xmc_hrpwm.c ****   {
 457:../Libraries/XMCLib/src/xmc_hrpwm.c ****     /* Inverting comparator input connected to CINB */
 458:../Libraries/XMCLib/src/xmc_hrpwm.c ****     csg->CC |= (uint32_t)HRPWM0_CSG_CC_IMCS_Msk;
 918              	 .loc 1 458 0
 919 0020 7B68     	 ldr r3,[r7,#4]
 920 0022 1B6A     	 ldr r3,[r3,#32]
 921 0024 43F48072 	 orr r2,r3,#256
 922 0028 7B68     	 ldr r3,[r7,#4]
 923 002a 1A62     	 str r2,[r3,#32]
 924              	.L34:
 459:../Libraries/XMCLib/src/xmc_hrpwm.c ****   }
 460:../Libraries/XMCLib/src/xmc_hrpwm.c **** }
 925              	 .loc 1 460 0
 926 002c 0C37     	 adds r7,r7,#12
 927              	.LCFI55:
 928              	 .cfi_def_cfa_offset 4
 929 002e BD46     	 mov sp,r7
 930              	.LCFI56:
 931              	 .cfi_def_cfa_register 13
 932              	 
 933 0030 5DF8047B 	 ldr r7,[sp],#4
 934              	.LCFI57:
 935              	 .cfi_restore 7
 936              	 .cfi_def_cfa_offset 0
 937 0034 7047     	 bx lr
 938              	 .cfi_endproc
 939              	.LFE229:
 941 0036 00BF     	 .section .text.XMC_HRPWM_CSG_SelBlankingInput,"ax",%progbits
 942              	 .align 2
 943              	 .global XMC_HRPWM_CSG_SelBlankingInput
 944              	 .thumb
 945              	 .thumb_func
 947              	XMC_HRPWM_CSG_SelBlankingInput:
 948              	.LFB230:
 461:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 462:../Libraries/XMCLib/src/xmc_hrpwm.c **** /* Configure input selection for Blanking function */
 463:../Libraries/XMCLib/src/xmc_hrpwm.c **** void XMC_HRPWM_CSG_SelBlankingInput(XMC_HRPWM_CSG_t *const csg, const XMC_HRPWM_CSG_INPUT_CONFIG_t 
 464:../Libraries/XMCLib/src/xmc_hrpwm.c **** {
 949              	 .loc 1 464 0
 950              	 .cfi_startproc
 951              	 
 952              	 
 953              	 
 954 0000 80B4     	 push {r7}
 955              	.LCFI58:
 956              	 .cfi_def_cfa_offset 4
 957              	 .cfi_offset 7,-4
 958 0002 85B0     	 sub sp,sp,#20
 959              	.LCFI59:
 960              	 .cfi_def_cfa_offset 24
 961 0004 00AF     	 add r7,sp,#0
 962              	.LCFI60:
 963              	 .cfi_def_cfa_register 7
 964 0006 7860     	 str r0,[r7,#4]
 965 0008 3960     	 str r1,[r7]
 465:../Libraries/XMCLib/src/xmc_hrpwm.c ****   uint32_t reg;
 466:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 467:../Libraries/XMCLib/src/xmc_hrpwm.c ****   XMC_ASSERT("XMC_HRPWM_CSG_SelBlankingInput:Invalid CSG pointer", XMC_HRPWM_CHECK_CSG_PTR(csg));
 468:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 469:../Libraries/XMCLib/src/xmc_hrpwm.c ****   reg = csg->CC;
 966              	 .loc 1 469 0
 967 000a 7B68     	 ldr r3,[r7,#4]
 968 000c 1B6A     	 ldr r3,[r3,#32]
 969 000e FB60     	 str r3,[r7,#12]
 470:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 471:../Libraries/XMCLib/src/xmc_hrpwm.c ****   if ((reg & HRPWM0_CSG_CC_EBE_Msk) != 0U)  /* external blanking trigger enabled? */
 970              	 .loc 1 471 0
 971 0010 FB68     	 ldr r3,[r7,#12]
 972 0012 03F48033 	 and r3,r3,#65536
 973 0016 002B     	 cmp r3,#0
 974 0018 09D0     	 beq .L38
 472:../Libraries/XMCLib/src/xmc_hrpwm.c ****   {
 473:../Libraries/XMCLib/src/xmc_hrpwm.c ****     reg &= ~((uint32_t)HRPWM0_CSG_CC_IBS_Msk);
 975              	 .loc 1 473 0
 976 001a FB68     	 ldr r3,[r7,#12]
 977 001c 23F00F03 	 bic r3,r3,#15
 978 0020 FB60     	 str r3,[r7,#12]
 474:../Libraries/XMCLib/src/xmc_hrpwm.c ****     reg |= (uint32_t) config->mapped_input;
 979              	 .loc 1 474 0
 980 0022 3B68     	 ldr r3,[r7]
 981 0024 1B78     	 ldrb r3,[r3]
 982 0026 1A46     	 mov r2,r3
 983 0028 FB68     	 ldr r3,[r7,#12]
 984 002a 1343     	 orrs r3,r3,r2
 985 002c FB60     	 str r3,[r7,#12]
 986              	.L38:
 475:../Libraries/XMCLib/src/xmc_hrpwm.c ****   }
 476:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 477:../Libraries/XMCLib/src/xmc_hrpwm.c ****   reg &= ~((uint32_t)HRPWM0_CSG_CC_BLMC_Msk);
 987              	 .loc 1 477 0
 988 002e FB68     	 ldr r3,[r7,#12]
 989 0030 23F44043 	 bic r3,r3,#49152
 990 0034 FB60     	 str r3,[r7,#12]
 478:../Libraries/XMCLib/src/xmc_hrpwm.c ****   reg |= ((uint32_t) config->edge) << HRPWM0_CSG_CC_BLMC_Pos;
 991              	 .loc 1 478 0
 992 0036 3B68     	 ldr r3,[r7]
 993 0038 5B78     	 ldrb r3,[r3,#1]
 994 003a 9B03     	 lsls r3,r3,#14
 995 003c FA68     	 ldr r2,[r7,#12]
 996 003e 1343     	 orrs r3,r3,r2
 997 0040 FB60     	 str r3,[r7,#12]
 479:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 480:../Libraries/XMCLib/src/xmc_hrpwm.c ****   csg->CC = reg;
 998              	 .loc 1 480 0
 999 0042 7B68     	 ldr r3,[r7,#4]
 1000 0044 FA68     	 ldr r2,[r7,#12]
 1001 0046 1A62     	 str r2,[r3,#32]
 481:../Libraries/XMCLib/src/xmc_hrpwm.c **** }
 1002              	 .loc 1 481 0
 1003 0048 1437     	 adds r7,r7,#20
 1004              	.LCFI61:
 1005              	 .cfi_def_cfa_offset 4
 1006 004a BD46     	 mov sp,r7
 1007              	.LCFI62:
 1008              	 .cfi_def_cfa_register 13
 1009              	 
 1010 004c 5DF8047B 	 ldr r7,[sp],#4
 1011              	.LCFI63:
 1012              	 .cfi_restore 7
 1013              	 .cfi_def_cfa_offset 0
 1014 0050 7047     	 bx lr
 1015              	 .cfi_endproc
 1016              	.LFE230:
 1018 0052 00BF     	 .section .text.XMC_HRPWM_CSG_SelClampingInput,"ax",%progbits
 1019              	 .align 2
 1020              	 .global XMC_HRPWM_CSG_SelClampingInput
 1021              	 .thumb
 1022              	 .thumb_func
 1024              	XMC_HRPWM_CSG_SelClampingInput:
 1025              	.LFB231:
 482:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 483:../Libraries/XMCLib/src/xmc_hrpwm.c **** /* Configure input selection for Clamping */
 484:../Libraries/XMCLib/src/xmc_hrpwm.c **** void XMC_HRPWM_CSG_SelClampingInput(XMC_HRPWM_CSG_t *const csg, const XMC_HRPWM_CSG_INPUT_CONFIG_t 
 485:../Libraries/XMCLib/src/xmc_hrpwm.c **** {
 1026              	 .loc 1 485 0
 1027              	 .cfi_startproc
 1028              	 
 1029              	 
 1030              	 
 1031 0000 80B4     	 push {r7}
 1032              	.LCFI64:
 1033              	 .cfi_def_cfa_offset 4
 1034              	 .cfi_offset 7,-4
 1035 0002 85B0     	 sub sp,sp,#20
 1036              	.LCFI65:
 1037              	 .cfi_def_cfa_offset 24
 1038 0004 00AF     	 add r7,sp,#0
 1039              	.LCFI66:
 1040              	 .cfi_def_cfa_register 7
 1041 0006 7860     	 str r0,[r7,#4]
 1042 0008 3960     	 str r1,[r7]
 486:../Libraries/XMCLib/src/xmc_hrpwm.c ****   uint32_t reg;
 487:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 488:../Libraries/XMCLib/src/xmc_hrpwm.c ****   XMC_ASSERT("XMC_HRPWM_CSG_SelClampingInput:Invalid CSG pointer", XMC_HRPWM_CHECK_CSG_PTR(csg));
 489:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 490:../Libraries/XMCLib/src/xmc_hrpwm.c ****   reg = csg->PLC;
 1043              	 .loc 1 490 0
 1044 000a 7B68     	 ldr r3,[r7,#4]
 1045 000c 5B6A     	 ldr r3,[r3,#36]
 1046 000e FB60     	 str r3,[r7,#12]
 491:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 492:../Libraries/XMCLib/src/xmc_hrpwm.c ****   reg &= ~((uint32_t)HRPWM0_CSG_PLC_IPLS_Msk);
 1047              	 .loc 1 492 0
 1048 0010 FB68     	 ldr r3,[r7,#12]
 1049 0012 23F00F03 	 bic r3,r3,#15
 1050 0016 FB60     	 str r3,[r7,#12]
 493:../Libraries/XMCLib/src/xmc_hrpwm.c ****   reg |= (uint32_t) config->mapped_input;
 1051              	 .loc 1 493 0
 1052 0018 3B68     	 ldr r3,[r7]
 1053 001a 1B78     	 ldrb r3,[r3]
 1054 001c 1A46     	 mov r2,r3
 1055 001e FB68     	 ldr r3,[r7,#12]
 1056 0020 1343     	 orrs r3,r3,r2
 1057 0022 FB60     	 str r3,[r7,#12]
 494:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 495:../Libraries/XMCLib/src/xmc_hrpwm.c ****   reg &= ~((uint32_t)HRPWM0_CSG_PLC_PLCL_Msk);
 1058              	 .loc 1 495 0
 1059 0024 FB68     	 ldr r3,[r7,#12]
 1060 0026 23F44073 	 bic r3,r3,#768
 1061 002a FB60     	 str r3,[r7,#12]
 496:../Libraries/XMCLib/src/xmc_hrpwm.c ****   reg |= ((uint32_t) config->level) << HRPWM0_CSG_PLC_PLCL_Pos;
 1062              	 .loc 1 496 0
 1063 002c 3B68     	 ldr r3,[r7]
 1064 002e 9B78     	 ldrb r3,[r3,#2]
 1065 0030 1B02     	 lsls r3,r3,#8
 1066 0032 FA68     	 ldr r2,[r7,#12]
 1067 0034 1343     	 orrs r3,r3,r2
 1068 0036 FB60     	 str r3,[r7,#12]
 497:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 498:../Libraries/XMCLib/src/xmc_hrpwm.c ****   csg->PLC = reg;
 1069              	 .loc 1 498 0
 1070 0038 7B68     	 ldr r3,[r7,#4]
 1071 003a FA68     	 ldr r2,[r7,#12]
 1072 003c 5A62     	 str r2,[r3,#36]
 499:../Libraries/XMCLib/src/xmc_hrpwm.c **** }
 1073              	 .loc 1 499 0
 1074 003e 1437     	 adds r7,r7,#20
 1075              	.LCFI67:
 1076              	 .cfi_def_cfa_offset 4
 1077 0040 BD46     	 mov sp,r7
 1078              	.LCFI68:
 1079              	 .cfi_def_cfa_register 13
 1080              	 
 1081 0042 5DF8047B 	 ldr r7,[sp],#4
 1082              	.LCFI69:
 1083              	 .cfi_restore 7
 1084              	 .cfi_def_cfa_offset 0
 1085 0046 7047     	 bx lr
 1086              	 .cfi_endproc
 1087              	.LFE231:
 1089              	 .section .text.XMC_HRPWM_CSG_StartSlopeGenConfig,"ax",%progbits
 1090              	 .align 2
 1091              	 .global XMC_HRPWM_CSG_StartSlopeGenConfig
 1092              	 .thumb
 1093              	 .thumb_func
 1095              	XMC_HRPWM_CSG_StartSlopeGenConfig:
 1096              	.LFB232:
 500:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 501:../Libraries/XMCLib/src/xmc_hrpwm.c **** /* Configure input selection to start slope generation function */
 502:../Libraries/XMCLib/src/xmc_hrpwm.c **** void XMC_HRPWM_CSG_StartSlopeGenConfig(XMC_HRPWM_CSG_t *const csg, const XMC_HRPWM_CSG_INPUT_CONFIG
 503:../Libraries/XMCLib/src/xmc_hrpwm.c **** {
 1097              	 .loc 1 503 0
 1098              	 .cfi_startproc
 1099              	 
 1100              	 
 1101              	 
 1102 0000 80B4     	 push {r7}
 1103              	.LCFI70:
 1104              	 .cfi_def_cfa_offset 4
 1105              	 .cfi_offset 7,-4
 1106 0002 83B0     	 sub sp,sp,#12
 1107              	.LCFI71:
 1108              	 .cfi_def_cfa_offset 16
 1109 0004 00AF     	 add r7,sp,#0
 1110              	.LCFI72:
 1111              	 .cfi_def_cfa_register 7
 1112 0006 7860     	 str r0,[r7,#4]
 1113 0008 3960     	 str r1,[r7]
 504:../Libraries/XMCLib/src/xmc_hrpwm.c ****   XMC_ASSERT("XMC_HRPWM_CSG_StartSlopeGenConfig:Invalid CSG pointer", XMC_HRPWM_CHECK_CSG_PTR(csg))
 505:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 506:../Libraries/XMCLib/src/xmc_hrpwm.c ****   csg->DCI &= ~((uint32_t)HRPWM0_CSG0_DCI_STRIS_Msk);
 1114              	 .loc 1 506 0
 1115 000a 7B68     	 ldr r3,[r7,#4]
 1116 000c 1B68     	 ldr r3,[r3]
 1117 000e 23F0F002 	 bic r2,r3,#240
 1118 0012 7B68     	 ldr r3,[r7,#4]
 1119 0014 1A60     	 str r2,[r3]
 507:../Libraries/XMCLib/src/xmc_hrpwm.c ****   csg->DCI |= ((uint32_t)config->mapped_input) << HRPWM0_CSG0_DCI_STRIS_Pos;
 1120              	 .loc 1 507 0
 1121 0016 7B68     	 ldr r3,[r7,#4]
 1122 0018 1A68     	 ldr r2,[r3]
 1123 001a 3B68     	 ldr r3,[r7]
 1124 001c 1B78     	 ldrb r3,[r3]
 1125 001e 1B01     	 lsls r3,r3,#4
 1126 0020 1A43     	 orrs r2,r2,r3
 1127 0022 7B68     	 ldr r3,[r7,#4]
 1128 0024 1A60     	 str r2,[r3]
 508:../Libraries/XMCLib/src/xmc_hrpwm.c ****   csg->IES &= ~((uint32_t)HRPWM0_CSG_IES_STRES_Msk);
 1129              	 .loc 1 508 0
 1130 0026 7B68     	 ldr r3,[r7,#4]
 1131 0028 5B68     	 ldr r3,[r3,#4]
 1132 002a 23F00C02 	 bic r2,r3,#12
 1133 002e 7B68     	 ldr r3,[r7,#4]
 1134 0030 5A60     	 str r2,[r3,#4]
 509:../Libraries/XMCLib/src/xmc_hrpwm.c ****   csg->IES |= ((uint32_t)config->edge) << HRPWM0_CSG_IES_STRES_Pos;
 1135              	 .loc 1 509 0
 1136 0032 7B68     	 ldr r3,[r7,#4]
 1137 0034 5A68     	 ldr r2,[r3,#4]
 1138 0036 3B68     	 ldr r3,[r7]
 1139 0038 5B78     	 ldrb r3,[r3,#1]
 1140 003a 9B00     	 lsls r3,r3,#2
 1141 003c 1A43     	 orrs r2,r2,r3
 1142 003e 7B68     	 ldr r3,[r7,#4]
 1143 0040 5A60     	 str r2,[r3,#4]
 510:../Libraries/XMCLib/src/xmc_hrpwm.c **** }
 1144              	 .loc 1 510 0
 1145 0042 0C37     	 adds r7,r7,#12
 1146              	.LCFI73:
 1147              	 .cfi_def_cfa_offset 4
 1148 0044 BD46     	 mov sp,r7
 1149              	.LCFI74:
 1150              	 .cfi_def_cfa_register 13
 1151              	 
 1152 0046 5DF8047B 	 ldr r7,[sp],#4
 1153              	.LCFI75:
 1154              	 .cfi_restore 7
 1155              	 .cfi_def_cfa_offset 0
 1156 004a 7047     	 bx lr
 1157              	 .cfi_endproc
 1158              	.LFE232:
 1160              	 .section .text.XMC_HRPWM_CSG_StopSlopeGenConfig,"ax",%progbits
 1161              	 .align 2
 1162              	 .global XMC_HRPWM_CSG_StopSlopeGenConfig
 1163              	 .thumb
 1164              	 .thumb_func
 1166              	XMC_HRPWM_CSG_StopSlopeGenConfig:
 1167              	.LFB233:
 511:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 512:../Libraries/XMCLib/src/xmc_hrpwm.c **** /* Configure input selection to stop slope generation function */
 513:../Libraries/XMCLib/src/xmc_hrpwm.c **** void XMC_HRPWM_CSG_StopSlopeGenConfig(XMC_HRPWM_CSG_t *const csg, const XMC_HRPWM_CSG_INPUT_CONFIG_
 514:../Libraries/XMCLib/src/xmc_hrpwm.c **** {
 1168              	 .loc 1 514 0
 1169              	 .cfi_startproc
 1170              	 
 1171              	 
 1172              	 
 1173 0000 80B4     	 push {r7}
 1174              	.LCFI76:
 1175              	 .cfi_def_cfa_offset 4
 1176              	 .cfi_offset 7,-4
 1177 0002 83B0     	 sub sp,sp,#12
 1178              	.LCFI77:
 1179              	 .cfi_def_cfa_offset 16
 1180 0004 00AF     	 add r7,sp,#0
 1181              	.LCFI78:
 1182              	 .cfi_def_cfa_register 7
 1183 0006 7860     	 str r0,[r7,#4]
 1184 0008 3960     	 str r1,[r7]
 515:../Libraries/XMCLib/src/xmc_hrpwm.c ****   XMC_ASSERT("XMC_HRPWM_CSG_StopSlopeGenConfig:Invalid CSG pointer", XMC_HRPWM_CHECK_CSG_PTR(csg));
 516:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 517:../Libraries/XMCLib/src/xmc_hrpwm.c ****   csg->DCI &= ~((uint32_t)HRPWM0_CSG0_DCI_STPIS_Msk);
 1185              	 .loc 1 517 0
 1186 000a 7B68     	 ldr r3,[r7,#4]
 1187 000c 1B68     	 ldr r3,[r3]
 1188 000e 23F47062 	 bic r2,r3,#3840
 1189 0012 7B68     	 ldr r3,[r7,#4]
 1190 0014 1A60     	 str r2,[r3]
 518:../Libraries/XMCLib/src/xmc_hrpwm.c ****   csg->DCI |= ((uint32_t)config->mapped_input) << HRPWM0_CSG0_DCI_STPIS_Pos;
 1191              	 .loc 1 518 0
 1192 0016 7B68     	 ldr r3,[r7,#4]
 1193 0018 1A68     	 ldr r2,[r3]
 1194 001a 3B68     	 ldr r3,[r7]
 1195 001c 1B78     	 ldrb r3,[r3]
 1196 001e 1B02     	 lsls r3,r3,#8
 1197 0020 1A43     	 orrs r2,r2,r3
 1198 0022 7B68     	 ldr r3,[r7,#4]
 1199 0024 1A60     	 str r2,[r3]
 519:../Libraries/XMCLib/src/xmc_hrpwm.c ****   csg->IES &= ~((uint32_t)HRPWM0_CSG_IES_STPES_Msk);
 1200              	 .loc 1 519 0
 1201 0026 7B68     	 ldr r3,[r7,#4]
 1202 0028 5B68     	 ldr r3,[r3,#4]
 1203 002a 23F03002 	 bic r2,r3,#48
 1204 002e 7B68     	 ldr r3,[r7,#4]
 1205 0030 5A60     	 str r2,[r3,#4]
 520:../Libraries/XMCLib/src/xmc_hrpwm.c ****   csg->IES |= ((uint32_t)config->edge) << HRPWM0_CSG_IES_STPES_Pos;
 1206              	 .loc 1 520 0
 1207 0032 7B68     	 ldr r3,[r7,#4]
 1208 0034 5A68     	 ldr r2,[r3,#4]
 1209 0036 3B68     	 ldr r3,[r7]
 1210 0038 5B78     	 ldrb r3,[r3,#1]
 1211 003a 1B01     	 lsls r3,r3,#4
 1212 003c 1A43     	 orrs r2,r2,r3
 1213 003e 7B68     	 ldr r3,[r7,#4]
 1214 0040 5A60     	 str r2,[r3,#4]
 521:../Libraries/XMCLib/src/xmc_hrpwm.c **** }
 1215              	 .loc 1 521 0
 1216 0042 0C37     	 adds r7,r7,#12
 1217              	.LCFI79:
 1218              	 .cfi_def_cfa_offset 4
 1219 0044 BD46     	 mov sp,r7
 1220              	.LCFI80:
 1221              	 .cfi_def_cfa_register 13
 1222              	 
 1223 0046 5DF8047B 	 ldr r7,[sp],#4
 1224              	.LCFI81:
 1225              	 .cfi_restore 7
 1226              	 .cfi_def_cfa_offset 0
 1227 004a 7047     	 bx lr
 1228              	 .cfi_endproc
 1229              	.LFE233:
 1231              	 .section .text.XMC_HRPWM_CSG_TriggerDACConvConfig,"ax",%progbits
 1232              	 .align 2
 1233              	 .global XMC_HRPWM_CSG_TriggerDACConvConfig
 1234              	 .thumb
 1235              	 .thumb_func
 1237              	XMC_HRPWM_CSG_TriggerDACConvConfig:
 1238              	.LFB234:
 522:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 523:../Libraries/XMCLib/src/xmc_hrpwm.c **** /* Configure input selection for triggering DAC conversion */
 524:../Libraries/XMCLib/src/xmc_hrpwm.c **** void XMC_HRPWM_CSG_TriggerDACConvConfig(XMC_HRPWM_CSG_t *const csg, const XMC_HRPWM_CSG_INPUT_CONFI
 525:../Libraries/XMCLib/src/xmc_hrpwm.c **** {
 1239              	 .loc 1 525 0
 1240              	 .cfi_startproc
 1241              	 
 1242              	 
 1243              	 
 1244 0000 80B4     	 push {r7}
 1245              	.LCFI82:
 1246              	 .cfi_def_cfa_offset 4
 1247              	 .cfi_offset 7,-4
 1248 0002 83B0     	 sub sp,sp,#12
 1249              	.LCFI83:
 1250              	 .cfi_def_cfa_offset 16
 1251 0004 00AF     	 add r7,sp,#0
 1252              	.LCFI84:
 1253              	 .cfi_def_cfa_register 7
 1254 0006 7860     	 str r0,[r7,#4]
 1255 0008 3960     	 str r1,[r7]
 526:../Libraries/XMCLib/src/xmc_hrpwm.c ****   XMC_ASSERT("XMC_HRPWM_CSG_TriggerDACConvConfig:Invalid CSG pointer", XMC_HRPWM_CHECK_CSG_PTR(csg)
 527:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 528:../Libraries/XMCLib/src/xmc_hrpwm.c ****   csg->DCI &= ~((uint32_t)HRPWM0_CSG0_DCI_TRGIS_Msk);
 1256              	 .loc 1 528 0
 1257 000a 7B68     	 ldr r3,[r7,#4]
 1258 000c 1B68     	 ldr r3,[r3]
 1259 000e 23F47042 	 bic r2,r3,#61440
 1260 0012 7B68     	 ldr r3,[r7,#4]
 1261 0014 1A60     	 str r2,[r3]
 529:../Libraries/XMCLib/src/xmc_hrpwm.c ****   csg->DCI |= ((uint32_t)config->mapped_input) << HRPWM0_CSG0_DCI_TRGIS_Pos;
 1262              	 .loc 1 529 0
 1263 0016 7B68     	 ldr r3,[r7,#4]
 1264 0018 1A68     	 ldr r2,[r3]
 1265 001a 3B68     	 ldr r3,[r7]
 1266 001c 1B78     	 ldrb r3,[r3]
 1267 001e 1B03     	 lsls r3,r3,#12
 1268 0020 1A43     	 orrs r2,r2,r3
 1269 0022 7B68     	 ldr r3,[r7,#4]
 1270 0024 1A60     	 str r2,[r3]
 530:../Libraries/XMCLib/src/xmc_hrpwm.c ****   csg->IES &= ~((uint32_t)HRPWM0_CSG_IES_TRGES_Msk);
 1271              	 .loc 1 530 0
 1272 0026 7B68     	 ldr r3,[r7,#4]
 1273 0028 5B68     	 ldr r3,[r3,#4]
 1274 002a 23F0C002 	 bic r2,r3,#192
 1275 002e 7B68     	 ldr r3,[r7,#4]
 1276 0030 5A60     	 str r2,[r3,#4]
 531:../Libraries/XMCLib/src/xmc_hrpwm.c ****   csg->IES |= ((uint32_t)config->edge) << HRPWM0_CSG_IES_TRGES_Pos;
 1277              	 .loc 1 531 0
 1278 0032 7B68     	 ldr r3,[r7,#4]
 1279 0034 5A68     	 ldr r2,[r3,#4]
 1280 0036 3B68     	 ldr r3,[r7]
 1281 0038 5B78     	 ldrb r3,[r3,#1]
 1282 003a 9B01     	 lsls r3,r3,#6
 1283 003c 1A43     	 orrs r2,r2,r3
 1284 003e 7B68     	 ldr r3,[r7,#4]
 1285 0040 5A60     	 str r2,[r3,#4]
 532:../Libraries/XMCLib/src/xmc_hrpwm.c **** }
 1286              	 .loc 1 532 0
 1287 0042 0C37     	 adds r7,r7,#12
 1288              	.LCFI85:
 1289              	 .cfi_def_cfa_offset 4
 1290 0044 BD46     	 mov sp,r7
 1291              	.LCFI86:
 1292              	 .cfi_def_cfa_register 13
 1293              	 
 1294 0046 5DF8047B 	 ldr r7,[sp],#4
 1295              	.LCFI87:
 1296              	 .cfi_restore 7
 1297              	 .cfi_def_cfa_offset 0
 1298 004a 7047     	 bx lr
 1299              	 .cfi_endproc
 1300              	.LFE234:
 1302              	 .section .text.XMC_HRPWM_CSG_TriggerShadowXferConfig,"ax",%progbits
 1303              	 .align 2
 1304              	 .global XMC_HRPWM_CSG_TriggerShadowXferConfig
 1305              	 .thumb
 1306              	 .thumb_func
 1308              	XMC_HRPWM_CSG_TriggerShadowXferConfig:
 1309              	.LFB235:
 533:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 534:../Libraries/XMCLib/src/xmc_hrpwm.c **** /* Configure input selection for triggering shadow transfer */
 535:../Libraries/XMCLib/src/xmc_hrpwm.c **** void XMC_HRPWM_CSG_TriggerShadowXferConfig(XMC_HRPWM_CSG_t *const csg, const XMC_HRPWM_CSG_INPUT_CO
 536:../Libraries/XMCLib/src/xmc_hrpwm.c **** {
 1310              	 .loc 1 536 0
 1311              	 .cfi_startproc
 1312              	 
 1313              	 
 1314              	 
 1315 0000 80B4     	 push {r7}
 1316              	.LCFI88:
 1317              	 .cfi_def_cfa_offset 4
 1318              	 .cfi_offset 7,-4
 1319 0002 83B0     	 sub sp,sp,#12
 1320              	.LCFI89:
 1321              	 .cfi_def_cfa_offset 16
 1322 0004 00AF     	 add r7,sp,#0
 1323              	.LCFI90:
 1324              	 .cfi_def_cfa_register 7
 1325 0006 7860     	 str r0,[r7,#4]
 1326 0008 3960     	 str r1,[r7]
 537:../Libraries/XMCLib/src/xmc_hrpwm.c ****   XMC_ASSERT("XMC_HRPWM_CSG_TriggerShadowXferConfig:Invalid CSG pointer", XMC_HRPWM_CHECK_CSG_PTR(c
 538:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 539:../Libraries/XMCLib/src/xmc_hrpwm.c ****   csg->DCI &= ~((uint32_t)HRPWM0_CSG0_DCI_STIS_Msk);
 1327              	 .loc 1 539 0
 1328 000a 7B68     	 ldr r3,[r7,#4]
 1329 000c 1B68     	 ldr r3,[r3]
 1330 000e 23F47022 	 bic r2,r3,#983040
 1331 0012 7B68     	 ldr r3,[r7,#4]
 1332 0014 1A60     	 str r2,[r3]
 540:../Libraries/XMCLib/src/xmc_hrpwm.c ****   csg->DCI |= ((uint32_t)config->mapped_input) << HRPWM0_CSG0_DCI_STIS_Pos;
 1333              	 .loc 1 540 0
 1334 0016 7B68     	 ldr r3,[r7,#4]
 1335 0018 1A68     	 ldr r2,[r3]
 1336 001a 3B68     	 ldr r3,[r7]
 1337 001c 1B78     	 ldrb r3,[r3]
 1338 001e 1B04     	 lsls r3,r3,#16
 1339 0020 1A43     	 orrs r2,r2,r3
 1340 0022 7B68     	 ldr r3,[r7,#4]
 1341 0024 1A60     	 str r2,[r3]
 541:../Libraries/XMCLib/src/xmc_hrpwm.c ****   csg->IES &= ~((uint32_t)HRPWM0_CSG_IES_STES_Msk);
 1342              	 .loc 1 541 0
 1343 0026 7B68     	 ldr r3,[r7,#4]
 1344 0028 5B68     	 ldr r3,[r3,#4]
 1345 002a 23F44072 	 bic r2,r3,#768
 1346 002e 7B68     	 ldr r3,[r7,#4]
 1347 0030 5A60     	 str r2,[r3,#4]
 542:../Libraries/XMCLib/src/xmc_hrpwm.c ****   csg->IES |= ((uint32_t)config->edge) << HRPWM0_CSG_IES_STES_Pos;
 1348              	 .loc 1 542 0
 1349 0032 7B68     	 ldr r3,[r7,#4]
 1350 0034 5A68     	 ldr r2,[r3,#4]
 1351 0036 3B68     	 ldr r3,[r7]
 1352 0038 5B78     	 ldrb r3,[r3,#1]
 1353 003a 1B02     	 lsls r3,r3,#8
 1354 003c 1A43     	 orrs r2,r2,r3
 1355 003e 7B68     	 ldr r3,[r7,#4]
 1356 0040 5A60     	 str r2,[r3,#4]
 543:../Libraries/XMCLib/src/xmc_hrpwm.c **** }
 1357              	 .loc 1 543 0
 1358 0042 0C37     	 adds r7,r7,#12
 1359              	.LCFI91:
 1360              	 .cfi_def_cfa_offset 4
 1361 0044 BD46     	 mov sp,r7
 1362              	.LCFI92:
 1363              	 .cfi_def_cfa_register 13
 1364              	 
 1365 0046 5DF8047B 	 ldr r7,[sp],#4
 1366              	.LCFI93:
 1367              	 .cfi_restore 7
 1368              	 .cfi_def_cfa_offset 0
 1369 004a 7047     	 bx lr
 1370              	 .cfi_endproc
 1371              	.LFE235:
 1373              	 .section .text.XMC_HRPWM_CSG_DACRefValSwitchingConfig,"ax",%progbits
 1374              	 .align 2
 1375              	 .global XMC_HRPWM_CSG_DACRefValSwitchingConfig
 1376              	 .thumb
 1377              	 .thumb_func
 1379              	XMC_HRPWM_CSG_DACRefValSwitchingConfig:
 1380              	.LFB236:
 544:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 545:../Libraries/XMCLib/src/xmc_hrpwm.c **** /* Configure input selection to trigger a switch in DAC reference value. This is only applicable to
 546:../Libraries/XMCLib/src/xmc_hrpwm.c **** void XMC_HRPWM_CSG_DACRefValSwitchingConfig(XMC_HRPWM_CSG_t *const csg, const XMC_HRPWM_CSG_INPUT_C
 547:../Libraries/XMCLib/src/xmc_hrpwm.c **** {
 1381              	 .loc 1 547 0
 1382              	 .cfi_startproc
 1383              	 
 1384              	 
 1385              	 
 1386 0000 80B4     	 push {r7}
 1387              	.LCFI94:
 1388              	 .cfi_def_cfa_offset 4
 1389              	 .cfi_offset 7,-4
 1390 0002 83B0     	 sub sp,sp,#12
 1391              	.LCFI95:
 1392              	 .cfi_def_cfa_offset 16
 1393 0004 00AF     	 add r7,sp,#0
 1394              	.LCFI96:
 1395              	 .cfi_def_cfa_register 7
 1396 0006 7860     	 str r0,[r7,#4]
 1397 0008 3960     	 str r1,[r7]
 548:../Libraries/XMCLib/src/xmc_hrpwm.c ****   XMC_ASSERT("XMC_HRPWM_CSG_DACRefValSwitchingConfig:Invalid CSG pointer", XMC_HRPWM_CHECK_CSG_PTR(
 549:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 550:../Libraries/XMCLib/src/xmc_hrpwm.c ****   csg->DCI &= ~((uint32_t)HRPWM0_CSG0_DCI_SVIS_Msk);
 1398              	 .loc 1 550 0
 1399 000a 7B68     	 ldr r3,[r7,#4]
 1400 000c 1B68     	 ldr r3,[r3]
 1401 000e 23F00F02 	 bic r2,r3,#15
 1402 0012 7B68     	 ldr r3,[r7,#4]
 1403 0014 1A60     	 str r2,[r3]
 551:../Libraries/XMCLib/src/xmc_hrpwm.c ****   csg->DCI |= ((uint32_t)config->mapped_input) << HRPWM0_CSG0_DCI_SVIS_Pos;
 1404              	 .loc 1 551 0
 1405 0016 7B68     	 ldr r3,[r7,#4]
 1406 0018 1B68     	 ldr r3,[r3]
 1407 001a 3A68     	 ldr r2,[r7]
 1408 001c 1278     	 ldrb r2,[r2]
 1409 001e 1A43     	 orrs r2,r2,r3
 1410 0020 7B68     	 ldr r3,[r7,#4]
 1411 0022 1A60     	 str r2,[r3]
 552:../Libraries/XMCLib/src/xmc_hrpwm.c ****   csg->IES &= ~((uint32_t)HRPWM0_CSG_IES_SVLS_Msk);
 1412              	 .loc 1 552 0
 1413 0024 7B68     	 ldr r3,[r7,#4]
 1414 0026 5B68     	 ldr r3,[r3,#4]
 1415 0028 23F00302 	 bic r2,r3,#3
 1416 002c 7B68     	 ldr r3,[r7,#4]
 1417 002e 5A60     	 str r2,[r3,#4]
 553:../Libraries/XMCLib/src/xmc_hrpwm.c ****   csg->IES |= ((uint32_t)config->level) << HRPWM0_CSG_IES_SVLS_Pos;
 1418              	 .loc 1 553 0
 1419 0030 7B68     	 ldr r3,[r7,#4]
 1420 0032 5B68     	 ldr r3,[r3,#4]
 1421 0034 3A68     	 ldr r2,[r7]
 1422 0036 9278     	 ldrb r2,[r2,#2]
 1423 0038 1A43     	 orrs r2,r2,r3
 1424 003a 7B68     	 ldr r3,[r7,#4]
 1425 003c 5A60     	 str r2,[r3,#4]
 554:../Libraries/XMCLib/src/xmc_hrpwm.c **** }
 1426              	 .loc 1 554 0
 1427 003e 0C37     	 adds r7,r7,#12
 1428              	.LCFI97:
 1429              	 .cfi_def_cfa_offset 4
 1430 0040 BD46     	 mov sp,r7
 1431              	.LCFI98:
 1432              	 .cfi_def_cfa_register 13
 1433              	 
 1434 0042 5DF8047B 	 ldr r7,[sp],#4
 1435              	.LCFI99:
 1436              	 .cfi_restore 7
 1437              	 .cfi_def_cfa_offset 0
 1438 0046 7047     	 bx lr
 1439              	 .cfi_endproc
 1440              	.LFE236:
 1442              	 .section .text.XMC_HRPWM_CSG_SelSlopeGenClkInput,"ax",%progbits
 1443              	 .align 2
 1444              	 .global XMC_HRPWM_CSG_SelSlopeGenClkInput
 1445              	 .thumb
 1446              	 .thumb_func
 1448              	XMC_HRPWM_CSG_SelSlopeGenClkInput:
 1449              	.LFB237:
 555:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 556:../Libraries/XMCLib/src/xmc_hrpwm.c **** /* Configure input selection for clock selection used in slope generation */
 557:../Libraries/XMCLib/src/xmc_hrpwm.c **** void XMC_HRPWM_CSG_SelSlopeGenClkInput(XMC_HRPWM_CSG_t *const csg, const XMC_HRPWM_CSG_CLK_INPUT_t 
 558:../Libraries/XMCLib/src/xmc_hrpwm.c **** {
 1450              	 .loc 1 558 0
 1451              	 .cfi_startproc
 1452              	 
 1453              	 
 1454              	 
 1455 0000 80B4     	 push {r7}
 1456              	.LCFI100:
 1457              	 .cfi_def_cfa_offset 4
 1458              	 .cfi_offset 7,-4
 1459 0002 83B0     	 sub sp,sp,#12
 1460              	.LCFI101:
 1461              	 .cfi_def_cfa_offset 16
 1462 0004 00AF     	 add r7,sp,#0
 1463              	.LCFI102:
 1464              	 .cfi_def_cfa_register 7
 1465 0006 7860     	 str r0,[r7,#4]
 1466 0008 0B46     	 mov r3,r1
 1467 000a FB70     	 strb r3,[r7,#3]
 559:../Libraries/XMCLib/src/xmc_hrpwm.c ****   XMC_ASSERT("XMC_HRPWM_CSG_SelSlopeGenClkInput:Invalid CSG pointer", XMC_HRPWM_CHECK_CSG_PTR(csg))
 560:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 561:../Libraries/XMCLib/src/xmc_hrpwm.c ****   csg->DCI &= ~((uint32_t)HRPWM0_CSG0_DCI_SCS_Msk);
 1468              	 .loc 1 561 0
 1469 000c 7B68     	 ldr r3,[r7,#4]
 1470 000e 1B68     	 ldr r3,[r3]
 1471 0010 23F44012 	 bic r2,r3,#3145728
 1472 0014 7B68     	 ldr r3,[r7,#4]
 1473 0016 1A60     	 str r2,[r3]
 562:../Libraries/XMCLib/src/xmc_hrpwm.c ****   csg->DCI |= ((uint32_t)input_clk) << HRPWM0_CSG0_DCI_SCS_Pos;
 1474              	 .loc 1 562 0
 1475 0018 7B68     	 ldr r3,[r7,#4]
 1476 001a 1A68     	 ldr r2,[r3]
 1477 001c FB78     	 ldrb r3,[r7,#3]
 1478 001e 1B05     	 lsls r3,r3,#20
 1479 0020 1A43     	 orrs r2,r2,r3
 1480 0022 7B68     	 ldr r3,[r7,#4]
 1481 0024 1A60     	 str r2,[r3]
 563:../Libraries/XMCLib/src/xmc_hrpwm.c **** }
 1482              	 .loc 1 563 0
 1483 0026 0C37     	 adds r7,r7,#12
 1484              	.LCFI103:
 1485              	 .cfi_def_cfa_offset 4
 1486 0028 BD46     	 mov sp,r7
 1487              	.LCFI104:
 1488              	 .cfi_def_cfa_register 13
 1489              	 
 1490 002a 5DF8047B 	 ldr r7,[sp],#4
 1491              	.LCFI105:
 1492              	 .cfi_restore 7
 1493              	 .cfi_def_cfa_offset 0
 1494 002e 7047     	 bx lr
 1495              	 .cfi_endproc
 1496              	.LFE237:
 1498              	 .section .text.XMC_HRPWM_CSG_SetSRNode,"ax",%progbits
 1499              	 .align 2
 1500              	 .global XMC_HRPWM_CSG_SetSRNode
 1501              	 .thumb
 1502              	 .thumb_func
 1504              	XMC_HRPWM_CSG_SetSRNode:
 1505              	.LFB238:
 564:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 565:../Libraries/XMCLib/src/xmc_hrpwm.c **** /* Set the service request interrupt node */
 566:../Libraries/XMCLib/src/xmc_hrpwm.c **** void XMC_HRPWM_CSG_SetSRNode(XMC_HRPWM_CSG_t *const csg, const XMC_HRPWM_CSG_IRQ_ID_t event,
 567:../Libraries/XMCLib/src/xmc_hrpwm.c ****                              const XMC_HRPWM_CSG_IRQ_SR_LINE_t sr)
 568:../Libraries/XMCLib/src/xmc_hrpwm.c **** {
 1506              	 .loc 1 568 0
 1507              	 .cfi_startproc
 1508              	 
 1509              	 
 1510              	 
 1511 0000 80B4     	 push {r7}
 1512              	.LCFI106:
 1513              	 .cfi_def_cfa_offset 4
 1514              	 .cfi_offset 7,-4
 1515 0002 83B0     	 sub sp,sp,#12
 1516              	.LCFI107:
 1517              	 .cfi_def_cfa_offset 16
 1518 0004 00AF     	 add r7,sp,#0
 1519              	.LCFI108:
 1520              	 .cfi_def_cfa_register 7
 1521 0006 7860     	 str r0,[r7,#4]
 1522 0008 0B46     	 mov r3,r1
 1523 000a 7B80     	 strh r3,[r7,#2]
 1524 000c 1346     	 mov r3,r2
 1525 000e 7B70     	 strb r3,[r7,#1]
 569:../Libraries/XMCLib/src/xmc_hrpwm.c ****   XMC_ASSERT("XMC_HRPWM_CSG_SetSRNode:Invalid CSG pointer", XMC_HRPWM_CHECK_CSG_PTR(csg));
 570:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 571:../Libraries/XMCLib/src/xmc_hrpwm.c ****   switch (event)
 1526              	 .loc 1 571 0
 1527 0010 7B88     	 ldrh r3,[r7,#2]
 1528 0012 102B     	 cmp r3,#16
 1529 0014 43D0     	 beq .L48
 1530 0016 102B     	 cmp r3,#16
 1531 0018 0BDC     	 bgt .L49
 1532 001a 022B     	 cmp r3,#2
 1533 001c 23D0     	 beq .L50
 1534 001e 022B     	 cmp r3,#2
 1535 0020 02DC     	 bgt .L51
 1536 0022 012B     	 cmp r3,#1
 1537 0024 12D0     	 beq .L52
 572:../Libraries/XMCLib/src/xmc_hrpwm.c ****   {
 573:../Libraries/XMCLib/src/xmc_hrpwm.c ****     case (XMC_HRPWM_CSG_IRQ_ID_VLS1):
 574:../Libraries/XMCLib/src/xmc_hrpwm.c ****       csg->SRS &= ~((uint32_t)HRPWM0_CSG_SRS_VLS1S_Msk);
 575:../Libraries/XMCLib/src/xmc_hrpwm.c ****       csg->SRS |= (uint32_t)sr;
 576:../Libraries/XMCLib/src/xmc_hrpwm.c ****       break;
 577:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 578:../Libraries/XMCLib/src/xmc_hrpwm.c ****     case (XMC_HRPWM_CSG_IRQ_ID_VLS2):
 579:../Libraries/XMCLib/src/xmc_hrpwm.c ****       csg->SRS &= ~((uint32_t)HRPWM0_CSG_SRS_VLS2S_Msk);
 580:../Libraries/XMCLib/src/xmc_hrpwm.c ****       csg->SRS |= ((uint32_t)sr) << HRPWM0_CSG_SRS_VLS2S_Pos;
 581:../Libraries/XMCLib/src/xmc_hrpwm.c ****       break;
 582:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 583:../Libraries/XMCLib/src/xmc_hrpwm.c ****     case (XMC_HRPWM_CSG_IRQ_ID_TRGS):
 584:../Libraries/XMCLib/src/xmc_hrpwm.c ****       csg->SRS &= ~((uint32_t)HRPWM0_CSG_SRS_TRLS_Msk);
 585:../Libraries/XMCLib/src/xmc_hrpwm.c ****       csg->SRS |= ((uint32_t)sr) << HRPWM0_CSG_SRS_TRLS_Pos;
 586:../Libraries/XMCLib/src/xmc_hrpwm.c ****       break;
 587:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 588:../Libraries/XMCLib/src/xmc_hrpwm.c ****     case (XMC_HRPWM_CSG_IRQ_ID_STRS):
 589:../Libraries/XMCLib/src/xmc_hrpwm.c ****     case (XMC_HRPWM_CSG_IRQ_ID_STPS):
 590:../Libraries/XMCLib/src/xmc_hrpwm.c ****       csg->SRS &= ~((uint32_t)HRPWM0_CSG_SRS_SSLS_Msk);
 591:../Libraries/XMCLib/src/xmc_hrpwm.c ****       csg->SRS |= ((uint32_t)sr) << HRPWM0_CSG_SRS_SSLS_Pos;
 592:../Libraries/XMCLib/src/xmc_hrpwm.c ****       break;
 593:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 594:../Libraries/XMCLib/src/xmc_hrpwm.c ****     case (XMC_HRPWM_CSG_IRQ_ID_STD):
 595:../Libraries/XMCLib/src/xmc_hrpwm.c ****       csg->SRS &= ~((uint32_t)HRPWM0_CSG_SRS_STLS_Msk);
 596:../Libraries/XMCLib/src/xmc_hrpwm.c ****       csg->SRS |= ((uint32_t)sr) << HRPWM0_CSG_SRS_STLS_Pos;
 597:../Libraries/XMCLib/src/xmc_hrpwm.c ****       break;
 598:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 599:../Libraries/XMCLib/src/xmc_hrpwm.c ****     case (XMC_HRPWM_CSG_IRQ_ID_CRSE):
 600:../Libraries/XMCLib/src/xmc_hrpwm.c ****     case (XMC_HRPWM_CSG_IRQ_ID_CFSE):
 601:../Libraries/XMCLib/src/xmc_hrpwm.c ****       csg->SRS &= ~((uint32_t)HRPWM0_CSG_SRS_CRFLS_Msk);
 602:../Libraries/XMCLib/src/xmc_hrpwm.c ****       csg->SRS |= ((uint32_t)sr) << HRPWM0_CSG_SRS_CRFLS_Pos;
 603:../Libraries/XMCLib/src/xmc_hrpwm.c ****       break;
 604:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 605:../Libraries/XMCLib/src/xmc_hrpwm.c ****     case (XMC_HRPWM_CSG_IRQ_ID_CSEE):
 606:../Libraries/XMCLib/src/xmc_hrpwm.c ****       csg->SRS &= ~((uint32_t)HRPWM0_CSG_SRS_CSLS_Msk);
 607:../Libraries/XMCLib/src/xmc_hrpwm.c ****       csg->SRS |= ((uint32_t)sr) << HRPWM0_CSG_SRS_CSLS_Pos;
 608:../Libraries/XMCLib/src/xmc_hrpwm.c ****       break;
 609:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 610:../Libraries/XMCLib/src/xmc_hrpwm.c ****     default:
 611:../Libraries/XMCLib/src/xmc_hrpwm.c ****       break;
 1538              	 .loc 1 611 0
 1539 0026 72E0     	 b .L46
 1540              	.L51:
 571:../Libraries/XMCLib/src/xmc_hrpwm.c ****   {
 1541              	 .loc 1 571 0
 1542 0028 042B     	 cmp r3,#4
 1543 002a 2AD0     	 beq .L53
 1544 002c 082B     	 cmp r3,#8
 1545 002e 36D0     	 beq .L48
 1546              	 .loc 1 611 0
 1547 0030 6DE0     	 b .L46
 1548              	.L49:
 571:../Libraries/XMCLib/src/xmc_hrpwm.c ****   {
 1549              	 .loc 1 571 0
 1550 0032 402B     	 cmp r3,#64
 1551 0034 4FD0     	 beq .L54
 1552 0036 402B     	 cmp r3,#64
 1553 0038 02DC     	 bgt .L55
 1554 003a 202B     	 cmp r3,#32
 1555 003c 3DD0     	 beq .L56
 1556              	 .loc 1 611 0
 1557 003e 66E0     	 b .L46
 1558              	.L55:
 571:../Libraries/XMCLib/src/xmc_hrpwm.c ****   {
 1559              	 .loc 1 571 0
 1560 0040 802B     	 cmp r3,#128
 1561 0042 48D0     	 beq .L54
 1562 0044 B3F5807F 	 cmp r3,#256
 1563 0048 53D0     	 beq .L57
 1564              	 .loc 1 611 0
 1565 004a 60E0     	 b .L46
 1566              	.L52:
 574:../Libraries/XMCLib/src/xmc_hrpwm.c ****       csg->SRS |= (uint32_t)sr;
 1567              	 .loc 1 574 0
 1568 004c 7B68     	 ldr r3,[r7,#4]
 1569 004e 1B6B     	 ldr r3,[r3,#48]
 1570 0050 23F00302 	 bic r2,r3,#3
 1571 0054 7B68     	 ldr r3,[r7,#4]
 1572 0056 1A63     	 str r2,[r3,#48]
 575:../Libraries/XMCLib/src/xmc_hrpwm.c ****       break;
 1573              	 .loc 1 575 0
 1574 0058 7B68     	 ldr r3,[r7,#4]
 1575 005a 1A6B     	 ldr r2,[r3,#48]
 1576 005c 7B78     	 ldrb r3,[r7,#1]
 1577 005e 1A43     	 orrs r2,r2,r3
 1578 0060 7B68     	 ldr r3,[r7,#4]
 1579 0062 1A63     	 str r2,[r3,#48]
 576:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 1580              	 .loc 1 576 0
 1581 0064 53E0     	 b .L46
 1582              	.L50:
 579:../Libraries/XMCLib/src/xmc_hrpwm.c ****       csg->SRS |= ((uint32_t)sr) << HRPWM0_CSG_SRS_VLS2S_Pos;
 1583              	 .loc 1 579 0
 1584 0066 7B68     	 ldr r3,[r7,#4]
 1585 0068 1B6B     	 ldr r3,[r3,#48]
 1586 006a 23F00C02 	 bic r2,r3,#12
 1587 006e 7B68     	 ldr r3,[r7,#4]
 1588 0070 1A63     	 str r2,[r3,#48]
 580:../Libraries/XMCLib/src/xmc_hrpwm.c ****       break;
 1589              	 .loc 1 580 0
 1590 0072 7B68     	 ldr r3,[r7,#4]
 1591 0074 1A6B     	 ldr r2,[r3,#48]
 1592 0076 7B78     	 ldrb r3,[r7,#1]
 1593 0078 9B00     	 lsls r3,r3,#2
 1594 007a 1A43     	 orrs r2,r2,r3
 1595 007c 7B68     	 ldr r3,[r7,#4]
 1596 007e 1A63     	 str r2,[r3,#48]
 581:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 1597              	 .loc 1 581 0
 1598 0080 45E0     	 b .L46
 1599              	.L53:
 584:../Libraries/XMCLib/src/xmc_hrpwm.c ****       csg->SRS |= ((uint32_t)sr) << HRPWM0_CSG_SRS_TRLS_Pos;
 1600              	 .loc 1 584 0
 1601 0082 7B68     	 ldr r3,[r7,#4]
 1602 0084 1B6B     	 ldr r3,[r3,#48]
 1603 0086 23F03002 	 bic r2,r3,#48
 1604 008a 7B68     	 ldr r3,[r7,#4]
 1605 008c 1A63     	 str r2,[r3,#48]
 585:../Libraries/XMCLib/src/xmc_hrpwm.c ****       break;
 1606              	 .loc 1 585 0
 1607 008e 7B68     	 ldr r3,[r7,#4]
 1608 0090 1A6B     	 ldr r2,[r3,#48]
 1609 0092 7B78     	 ldrb r3,[r7,#1]
 1610 0094 1B01     	 lsls r3,r3,#4
 1611 0096 1A43     	 orrs r2,r2,r3
 1612 0098 7B68     	 ldr r3,[r7,#4]
 1613 009a 1A63     	 str r2,[r3,#48]
 586:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 1614              	 .loc 1 586 0
 1615 009c 37E0     	 b .L46
 1616              	.L48:
 590:../Libraries/XMCLib/src/xmc_hrpwm.c ****       csg->SRS |= ((uint32_t)sr) << HRPWM0_CSG_SRS_SSLS_Pos;
 1617              	 .loc 1 590 0
 1618 009e 7B68     	 ldr r3,[r7,#4]
 1619 00a0 1B6B     	 ldr r3,[r3,#48]
 1620 00a2 23F0C002 	 bic r2,r3,#192
 1621 00a6 7B68     	 ldr r3,[r7,#4]
 1622 00a8 1A63     	 str r2,[r3,#48]
 591:../Libraries/XMCLib/src/xmc_hrpwm.c ****       break;
 1623              	 .loc 1 591 0
 1624 00aa 7B68     	 ldr r3,[r7,#4]
 1625 00ac 1A6B     	 ldr r2,[r3,#48]
 1626 00ae 7B78     	 ldrb r3,[r7,#1]
 1627 00b0 9B01     	 lsls r3,r3,#6
 1628 00b2 1A43     	 orrs r2,r2,r3
 1629 00b4 7B68     	 ldr r3,[r7,#4]
 1630 00b6 1A63     	 str r2,[r3,#48]
 592:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 1631              	 .loc 1 592 0
 1632 00b8 29E0     	 b .L46
 1633              	.L56:
 595:../Libraries/XMCLib/src/xmc_hrpwm.c ****       csg->SRS |= ((uint32_t)sr) << HRPWM0_CSG_SRS_STLS_Pos;
 1634              	 .loc 1 595 0
 1635 00ba 7B68     	 ldr r3,[r7,#4]
 1636 00bc 1B6B     	 ldr r3,[r3,#48]
 1637 00be 23F44072 	 bic r2,r3,#768
 1638 00c2 7B68     	 ldr r3,[r7,#4]
 1639 00c4 1A63     	 str r2,[r3,#48]
 596:../Libraries/XMCLib/src/xmc_hrpwm.c ****       break;
 1640              	 .loc 1 596 0
 1641 00c6 7B68     	 ldr r3,[r7,#4]
 1642 00c8 1A6B     	 ldr r2,[r3,#48]
 1643 00ca 7B78     	 ldrb r3,[r7,#1]
 1644 00cc 1B02     	 lsls r3,r3,#8
 1645 00ce 1A43     	 orrs r2,r2,r3
 1646 00d0 7B68     	 ldr r3,[r7,#4]
 1647 00d2 1A63     	 str r2,[r3,#48]
 597:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 1648              	 .loc 1 597 0
 1649 00d4 1BE0     	 b .L46
 1650              	.L54:
 601:../Libraries/XMCLib/src/xmc_hrpwm.c ****       csg->SRS |= ((uint32_t)sr) << HRPWM0_CSG_SRS_CRFLS_Pos;
 1651              	 .loc 1 601 0
 1652 00d6 7B68     	 ldr r3,[r7,#4]
 1653 00d8 1B6B     	 ldr r3,[r3,#48]
 1654 00da 23F44062 	 bic r2,r3,#3072
 1655 00de 7B68     	 ldr r3,[r7,#4]
 1656 00e0 1A63     	 str r2,[r3,#48]
 602:../Libraries/XMCLib/src/xmc_hrpwm.c ****       break;
 1657              	 .loc 1 602 0
 1658 00e2 7B68     	 ldr r3,[r7,#4]
 1659 00e4 1A6B     	 ldr r2,[r3,#48]
 1660 00e6 7B78     	 ldrb r3,[r7,#1]
 1661 00e8 9B02     	 lsls r3,r3,#10
 1662 00ea 1A43     	 orrs r2,r2,r3
 1663 00ec 7B68     	 ldr r3,[r7,#4]
 1664 00ee 1A63     	 str r2,[r3,#48]
 603:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 1665              	 .loc 1 603 0
 1666 00f0 0DE0     	 b .L46
 1667              	.L57:
 606:../Libraries/XMCLib/src/xmc_hrpwm.c ****       csg->SRS |= ((uint32_t)sr) << HRPWM0_CSG_SRS_CSLS_Pos;
 1668              	 .loc 1 606 0
 1669 00f2 7B68     	 ldr r3,[r7,#4]
 1670 00f4 1B6B     	 ldr r3,[r3,#48]
 1671 00f6 23F44052 	 bic r2,r3,#12288
 1672 00fa 7B68     	 ldr r3,[r7,#4]
 1673 00fc 1A63     	 str r2,[r3,#48]
 607:../Libraries/XMCLib/src/xmc_hrpwm.c ****       break;
 1674              	 .loc 1 607 0
 1675 00fe 7B68     	 ldr r3,[r7,#4]
 1676 0100 1A6B     	 ldr r2,[r3,#48]
 1677 0102 7B78     	 ldrb r3,[r7,#1]
 1678 0104 1B03     	 lsls r3,r3,#12
 1679 0106 1A43     	 orrs r2,r2,r3
 1680 0108 7B68     	 ldr r3,[r7,#4]
 1681 010a 1A63     	 str r2,[r3,#48]
 608:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 1682              	 .loc 1 608 0
 1683 010c 00BF     	 nop
 1684              	.L46:
 612:../Libraries/XMCLib/src/xmc_hrpwm.c ****   }
 613:../Libraries/XMCLib/src/xmc_hrpwm.c **** }
 1685              	 .loc 1 613 0
 1686 010e 0C37     	 adds r7,r7,#12
 1687              	.LCFI109:
 1688              	 .cfi_def_cfa_offset 4
 1689 0110 BD46     	 mov sp,r7
 1690              	.LCFI110:
 1691              	 .cfi_def_cfa_register 13
 1692              	 
 1693 0112 5DF8047B 	 ldr r7,[sp],#4
 1694              	.LCFI111:
 1695              	 .cfi_restore 7
 1696              	 .cfi_def_cfa_offset 0
 1697 0116 7047     	 bx lr
 1698              	 .cfi_endproc
 1699              	.LFE238:
 1701              	 .text
 1702              	.Letext0:
 1703              	 .file 2 "c:\\dave_4-4-2_64bit_2018-02-23\\dave_4-4-2_64bit_2018-02-23\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 1704              	 .file 3 "c:\\dave_4-4-2_64bit_2018-02-23\\dave_4-4-2_64bit_2018-02-23\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 1705              	 .file 4 "C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/CMSIS/Infineon/XMC4200_series/Include/XMC4200.h"
 1706              	 .file 5 "C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc/xmc_hrpwm.h"
 1707              	 .file 6 "C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc/xmc4_scu.h"
 1708              	 .file 7 "C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/CMSIS/Include/cmsis_gcc.h"
 1709              	 .file 8 "C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/CMSIS/Include/core_cm4.h"
 1710              	 .file 9 "C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/CMSIS/Infineon/XMC4200_series/Include/system_XMC4200.h"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc_hrpwm.c
    {standard input}:20     .text.XMC_HRPWM_lDelay:00000000 $t
    {standard input}:24     .text.XMC_HRPWM_lDelay:00000000 XMC_HRPWM_lDelay
    {standard input}:78     .text.XMC_HRPWM_Init:00000000 $t
    {standard input}:83     .text.XMC_HRPWM_Init:00000000 XMC_HRPWM_Init
    {standard input}:279    .text.XMC_HRPWM_Init:00000120 $d
    {standard input}:291    .text.XMC_HRPWM_EnableGlobalHR:00000000 $t
    {standard input}:296    .text.XMC_HRPWM_EnableGlobalHR:00000000 XMC_HRPWM_EnableGlobalHR
    {standard input}:335    .text.XMC_HRPWM_DisableGlobalHR:00000000 $t
    {standard input}:340    .text.XMC_HRPWM_DisableGlobalHR:00000000 XMC_HRPWM_DisableGlobalHR
    {standard input}:381    .text.XMC_HRPWM_GetHRGenReadyStatus:00000000 $t
    {standard input}:386    .text.XMC_HRPWM_GetHRGenReadyStatus:00000000 XMC_HRPWM_GetHRGenReadyStatus
    {standard input}:438    .text.XMC_HRPWM_HRC_Init:00000000 $t
    {standard input}:443    .text.XMC_HRPWM_HRC_Init:00000000 XMC_HRPWM_HRC_Init
    {standard input}:489    .text.XMC_HRPWM_HRC_ConfigSourceSelect0:00000000 $t
    {standard input}:494    .text.XMC_HRPWM_HRC_ConfigSourceSelect0:00000000 XMC_HRPWM_HRC_ConfigSourceSelect0
    {standard input}:631    .text.XMC_HRPWM_HRC_ConfigSourceSelect1:00000000 $t
    {standard input}:636    .text.XMC_HRPWM_HRC_ConfigSourceSelect1:00000000 XMC_HRPWM_HRC_ConfigSourceSelect1
    {standard input}:775    .text.XMC_HRPWM_CSG_Init:00000000 $t
    {standard input}:780    .text.XMC_HRPWM_CSG_Init:00000000 XMC_HRPWM_CSG_Init
    {standard input}:881    .text.XMC_HRPWM_CSG_SetCMPInput:00000000 $t
    {standard input}:886    .text.XMC_HRPWM_CSG_SetCMPInput:00000000 XMC_HRPWM_CSG_SetCMPInput
    {standard input}:942    .text.XMC_HRPWM_CSG_SelBlankingInput:00000000 $t
    {standard input}:947    .text.XMC_HRPWM_CSG_SelBlankingInput:00000000 XMC_HRPWM_CSG_SelBlankingInput
    {standard input}:1019   .text.XMC_HRPWM_CSG_SelClampingInput:00000000 $t
    {standard input}:1024   .text.XMC_HRPWM_CSG_SelClampingInput:00000000 XMC_HRPWM_CSG_SelClampingInput
    {standard input}:1090   .text.XMC_HRPWM_CSG_StartSlopeGenConfig:00000000 $t
    {standard input}:1095   .text.XMC_HRPWM_CSG_StartSlopeGenConfig:00000000 XMC_HRPWM_CSG_StartSlopeGenConfig
    {standard input}:1161   .text.XMC_HRPWM_CSG_StopSlopeGenConfig:00000000 $t
    {standard input}:1166   .text.XMC_HRPWM_CSG_StopSlopeGenConfig:00000000 XMC_HRPWM_CSG_StopSlopeGenConfig
    {standard input}:1232   .text.XMC_HRPWM_CSG_TriggerDACConvConfig:00000000 $t
    {standard input}:1237   .text.XMC_HRPWM_CSG_TriggerDACConvConfig:00000000 XMC_HRPWM_CSG_TriggerDACConvConfig
    {standard input}:1303   .text.XMC_HRPWM_CSG_TriggerShadowXferConfig:00000000 $t
    {standard input}:1308   .text.XMC_HRPWM_CSG_TriggerShadowXferConfig:00000000 XMC_HRPWM_CSG_TriggerShadowXferConfig
    {standard input}:1374   .text.XMC_HRPWM_CSG_DACRefValSwitchingConfig:00000000 $t
    {standard input}:1379   .text.XMC_HRPWM_CSG_DACRefValSwitchingConfig:00000000 XMC_HRPWM_CSG_DACRefValSwitchingConfig
    {standard input}:1443   .text.XMC_HRPWM_CSG_SelSlopeGenClkInput:00000000 $t
    {standard input}:1448   .text.XMC_HRPWM_CSG_SelSlopeGenClkInput:00000000 XMC_HRPWM_CSG_SelSlopeGenClkInput
    {standard input}:1499   .text.XMC_HRPWM_CSG_SetSRNode:00000000 $t
    {standard input}:1504   .text.XMC_HRPWM_CSG_SetSRNode:00000000 XMC_HRPWM_CSG_SetSRNode
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
XMC_SCU_RESET_AssertPeripheralReset
XMC_SCU_RESET_DeassertPeripheralReset
XMC_SCU_CLOCK_UngatePeripheralClock
XMC_SCU_CLOCK_GetCcuClockFrequency
g_hrpwm_char_data
