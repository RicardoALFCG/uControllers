   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "xmc_dma.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.XMC_DMA_GetEventStatus,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	XMC_DMA_GetEventStatus:
  25              	.LFB133:
  26              	 .file 1 "C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc/xmc_dma.h"
   1:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** /**
   2:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * @file xmc_dma.h
   3:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * @date 2018-09-18
   4:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  *
   5:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * @cond
   6:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  *****************************************************************************
   7:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * XMClib v2.2.0 - XMC Peripheral Driver Library
   8:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  *
   9:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  10:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * All rights reserved.
  11:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  *
  12:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * Boost Software License - Version 1.0 - August 17th, 2003
  13:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  *
  14:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * Permission is hereby granted, free of charge, to any person or organization
  15:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * obtaining a copy of the software and accompanying documentation covered by
  16:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * this license (the "Software") to use, reproduce, display, distribute,
  17:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * execute, and transmit the Software, and to prepare derivative works of the
  18:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * Software, and to permit third-parties to whom the Software is furnished to
  19:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * do so, all subject to the following:
  20:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  *
  21:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * The copyright notices in the Software and this entire statement, including
  22:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * the above license grant, this restriction and the following disclaimer,
  23:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * must be included in all copies of the Software, in whole or in part, and
  24:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * all derivative works of the Software, unless such copies or derivative
  25:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * works are solely in the form of machine-executable object code generated by
  26:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * a source language processor.
  27:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  *
  28:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  29:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  30:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
  31:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
  32:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
  33:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
  34:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * DEALINGS IN THE SOFTWARE.
  35:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  *
  36:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * To improve the quality of the software, users are encouraged to share
  37:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * modifications, enhancements or bug fixes with Infineon Technologies AG
  38:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * at XMCSupport@infineon.com.
  39:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  *****************************************************************************
  40:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  *
  41:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * Change History
  42:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * --------------
  43:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  *
  44:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * 2015-02-20:
  45:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  *     - Initial <br>
  46:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  *
  47:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * 2015-06-20:
  48:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  *     - Add the declarations for the following APIs: <br>
  49:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  *       XMC_DMA_DisableRequestLine, XMC_DMA_ClearRequestLine, <br>
  50:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  *       XMC_DMA_CH_ClearSourcePeripheralRequest, <br>
  51:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  *       XMC_DMA_CH_ClearDestinationPeripheralRequest <br>
  52:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  *     - Documentation updates <br>
  53:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  *     - Removed version macros and declaration of GetDriverVersion API <br>
  54:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  *
  55:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * 2016-10-28:
  56:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  *     - Fix documentation on maximum block size
  57:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  *
  58:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * 2017-09-28:
  59:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  *     - Improved documentation and added XMC_DMA_CH_EnableFifo() and XMC_DMA_CH_DisableFifo()
  60:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  *
  61:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * 2018-09-18:
  62:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  *     - Added XMC_DMA_CH_GetTransferredData()
  63:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  *
  64:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * @endcond
  65:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  */
  66:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** 
  67:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** #ifndef XMC_DMA_H
  68:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** #define XMC_DMA_H
  69:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** 
  70:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** /*******************************************************************************
  71:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * HEADER FILES
  72:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  *******************************************************************************/
  73:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** 
  74:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** #include "xmc_common.h"
  75:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** 
  76:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** #if defined (GPDMA0)
  77:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** 
  78:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** #include "xmc_dma_map.h"
  79:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** 
  80:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** /**
  81:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * @addtogroup XMClib XMC Peripheral Library
  82:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * @{
  83:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  */
  84:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** 
  85:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** /**
  86:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * @addtogroup DMA
  87:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * @brief General purpose DMA (GPDMA) driver for the XMC4000 microcontroller family
  88:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  *
  89:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * The GPDMA is a highly configurable DMA controller that allows high-speed data transfers
  90:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * between peripherals and memories. Complex data transfers can be done with minimal
  91:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * intervention of the processor, making CPU available for other operations.
  92:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  *
  93:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * GPDMA provides extensive support for XMC microcontroller peripherals like A/D, D/A
  94:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * converters and timers. Data transfers through communication interfaces (USIC) using the
  95:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * GPDMA increase efficiency and parallelism for real-time applications.
  96:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  *
  97:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * The DMA low level driver provides functions to configure and initialize the GPDMA
  98:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * hardware peripheral.
  99:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * @{
 100:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  */
 101:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** 
 102:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** /*******************************************************************************
 103:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * MACROS
 104:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  *******************************************************************************/
 105:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** 
 106:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** #if defined (GPDMA0)
 107:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** #define XMC_DMA0 ((XMC_DMA_t *)GPDMA0_CH0_BASE) /**< DMA module 0 */
 108:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** #define XMC_DMA0_NUM_CHANNELS 8
 109:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** #endif
 110:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** 
 111:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** #if defined (GPDMA1)
 112:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** #define XMC_DMA1 ((XMC_DMA_t *)GPDMA1_CH0_BASE) /**< DMA module 1, only available in XMC45xx series
 113:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** #define XMC_DMA1_NUM_CHANNELS 4
 114:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** #endif
 115:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** 
 116:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** /*******************************************************************************
 117:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * ENUMS
 118:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  *******************************************************************************/
 119:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** 
 120:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** /**
 121:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * DMA transfer types
 122:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  */
 123:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** typedef enum XMC_DMA_CH_TRANSFER_TYPE
 124:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** {
 125:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_TYPE_SINGLE_BLOCK,                                /**< Single block */
 126:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_CONTIGUOUS_DSTADR_RELOAD, /**< Multi-block: src addre
 127:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_RELOAD_DSTADR_CONTIGUOUS, /**< Multi-block: src addre
 128:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_RELOAD_DSTADR_RELOAD,     /**< Multi-block: src addre
 129:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_CONTIGUOUS_DSTADR_LINKED, /**< Multi-block: src addre
 130:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_RELOAD_DSTADR_LINKED,     /**< Multi-block: src addre
 131:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_LINKED_DSTADR_CONTIGUOUS, /**< Multi-block: src addre
 132:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_LINKED_DSTADR_RELOAD,     /**< Multi-block: src addre
 133:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_LINKED_DSTADR_LINKED      /**< Multi-block: src addre
 134:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** } XMC_DMA_CH_TRANSFER_TYPE_t;
 135:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** 
 136:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** /**
 137:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * DMA transfer flow modes
 138:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  */
 139:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** typedef enum XMC_DMA_CH_TRANSFER_FLOW
 140:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** {
 141:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_FLOW_M2M_DMA    = 0x0UL, /**< Memory to memory (DMA flow controller) */
 142:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_FLOW_M2P_DMA    = 0x1UL, /**< Memory to peripheral (DMA flow controller) */
 143:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_FLOW_P2M_DMA    = 0x2UL, /**< Peripheral to memory (DMA flow controller) */
 144:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_FLOW_P2P_DMA    = 0x3UL, /**< Peripheral to peripheral (DMA flow controller) 
 145:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_FLOW_P2M_PER    = 0x4UL, /**< Peripheral to memory (Peripheral flow controlle
 146:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_FLOW_P2P_SRCPER = 0x5UL, /**< Peripheral to peripheral (Source peripheral flo
 147:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_FLOW_M2P_PER    = 0x6UL, /**< Memory to peripheral (Peripheral flow controlle
 148:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_FLOW_P2P_DSTPER = 0x7UL  /**< Peripheral to peripheral (Destination periphera
 149:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** } XMC_DMA_CH_TRANSFER_FLOW_t;
 150:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** 
 151:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** /**
 152:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * Valid burst length values
 153:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  */
 154:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** typedef enum XMC_DMA_CH_BURST_LENGTH
 155:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** {
 156:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_BURST_LENGTH_1 = 0x0UL, /**< Burst length: 1 word */
 157:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_BURST_LENGTH_4 = 0x1UL, /**< Burst length: 4 words */
 158:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_BURST_LENGTH_8 = 0x2UL  /**< Burst length: 8 words */
 159:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** } XMC_DMA_CH_BURST_LENGTH_t;
 160:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** 
 161:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** /**
 162:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * Valid transfer width values
 163:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  */
 164:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** typedef enum XMC_DMA_CH_TRANSFER_WIDTH
 165:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** {
 166:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_WIDTH_8  = 0x0UL, /**< 8-bit transfer width */
 167:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_WIDTH_16 = 0x1UL, /**< 16-bit transfer width */
 168:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_WIDTH_32 = 0x2UL  /**< 32-bit transfer width */
 169:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** } XMC_DMA_CH_TRANSFER_WIDTH_t;
 170:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** 
 171:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** /**
 172:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * DMA address count mode
 173:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  */
 174:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** typedef enum XMC_DMA_CH_ADDRESS_COUNT_MODE
 175:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** {
 176:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_ADDRESS_COUNT_MODE_INCREMENT = 0x0UL, /**< Address count mode: increment */
 177:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_ADDRESS_COUNT_MODE_DECREMENT = 0x1UL, /**< Address count mode: decrement */
 178:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_ADDRESS_COUNT_MODE_NO_CHANGE = 0x2UL  /**< Address count mode: no change */
 179:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** } XMC_DMA_CH_ADDRESS_COUNT_MODE_t;
 180:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** 
 181:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** /**
 182:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * DMA channel priorities
 183:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  */
 184:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** typedef enum XMC_DMA_CH_PRIORITY
 185:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** {
 186:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_PRIORITY_0 = 0x0UL << GPDMA0_CH_CFGL_CH_PRIOR_Pos, /**< DMA channel priority 0 (low) *
 187:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_PRIORITY_1 = 0x1UL << GPDMA0_CH_CFGL_CH_PRIOR_Pos, /**< DMA channel priority 1 */
 188:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_PRIORITY_2 = 0x2UL << GPDMA0_CH_CFGL_CH_PRIOR_Pos, /**< DMA channel priority 2 */
 189:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_PRIORITY_3 = 0x3UL << GPDMA0_CH_CFGL_CH_PRIOR_Pos, /**< DMA channel priority 3 */
 190:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_PRIORITY_4 = 0x4UL << GPDMA0_CH_CFGL_CH_PRIOR_Pos, /**< DMA channel priority 4 */
 191:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_PRIORITY_5 = 0x5UL << GPDMA0_CH_CFGL_CH_PRIOR_Pos, /**< DMA channel priority 5 */
 192:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_PRIORITY_6 = 0x6UL << GPDMA0_CH_CFGL_CH_PRIOR_Pos, /**< DMA channel priority 6 */
 193:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_PRIORITY_7 = 0x7UL << GPDMA0_CH_CFGL_CH_PRIOR_Pos  /**< DMA channel priority 7 (high) 
 194:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** } XMC_DMA_CH_PRIORITY_t;
 195:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** 
 196:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** /**
 197:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * Source handshake interface
 198:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  */
 199:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** typedef enum XMC_DMA_CH_SRC_HANDSHAKING
 200:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** {
 201:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_SRC_HANDSHAKING_HARDWARE = 0x0UL << GPDMA0_CH_CFGL_HS_SEL_SRC_Pos, /**< Source: hardwa
 202:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_SRC_HANDSHAKING_SOFTWARE = 0x1UL << GPDMA0_CH_CFGL_HS_SEL_SRC_Pos  /**< Source: softwa
 203:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** } XMC_DMA_CH_SRC_HANDSHAKING_t;
 204:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** 
 205:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** /**
 206:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * Destination handshake interface
 207:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  */
 208:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** typedef enum XMC_DMA_CH_DST_HANDSHAKING
 209:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** {
 210:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_DST_HANDSHAKING_HARDWARE = 0x0UL << GPDMA0_CH_CFGL_HS_SEL_DST_Pos, /**< Destination: h
 211:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_DST_HANDSHAKING_SOFTWARE = 0x1UL << GPDMA0_CH_CFGL_HS_SEL_DST_Pos  /**< Destination: s
 212:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** } XMC_DMA_CH_DST_HANDSHAKING_t;
 213:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** 
 214:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** /**
 215:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * DMA hardware handshaking interface
 216:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * Hardware handshaking available only if DMA is flow controller
 217:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  */
 218:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** typedef enum XMC_DMA_CH_HARDWARE_HANDSHAKING_IF
 219:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** {
 220:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_HARDWARE_HANDSHAKING_IF_0 = 0x0UL, /**< Hardware handshaking interface 0 */
 221:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_HARDWARE_HANDSHAKING_IF_1 = 0x1UL, /**< Hardware handshaking interface 1 */
 222:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_HARDWARE_HANDSHAKING_IF_2 = 0x2UL, /**< Hardware handshaking interface 2 */
 223:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_HARDWARE_HANDSHAKING_IF_3 = 0x3UL, /**< Hardware handshaking interface 3 */
 224:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_HARDWARE_HANDSHAKING_IF_4 = 0x4UL, /**< Hardware handshaking interface 4 */
 225:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_HARDWARE_HANDSHAKING_IF_5 = 0x5UL, /**< Hardware handshaking interface 5 */
 226:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_HARDWARE_HANDSHAKING_IF_6 = 0x6UL, /**< Hardware handshaking interface 6 */
 227:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_HARDWARE_HANDSHAKING_IF_7 = 0x7UL  /**< Hardware handshaking interface 7 */
 228:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** } XMC_DMA_CH_HARDWARE_HANDSHAKING_IF_t;
 229:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** 
 230:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** /**
 231:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * DMA events
 232:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  */
 233:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** typedef enum XMC_DMA_CH_EVENT
 234:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** {
 235:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_EVENT_TRANSFER_COMPLETE        = 0x1UL, /**< Transfer complete event */
 236:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_EVENT_BLOCK_TRANSFER_COMPLETE  = 0x2UL, /**< Block transfer complete event */
 237:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_EVENT_SRC_TRANSACTION_COMPLETE = 0x4UL, /**< Source transaction complete event */
 238:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_EVENT_DST_TRANSACTION_COMPLETE = 0x8UL, /**< Destination transaction complete event */
 239:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_EVENT_ERROR                    = 0x10UL /**< DMA error event */
 240:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** } XMC_DMA_CH_EVENT_t;
 241:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** 
 242:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** /**
 243:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * Transaction types
 244:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  */
 245:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** typedef enum XMC_DMA_CH_TRANSACTION_TYPE
 246:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** {
 247:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSACTION_TYPE_SINGLE, /**< Single DMA transaction */
 248:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSACTION_TYPE_BURST   /**< Burst transaction */
 249:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** } XMC_DMA_CH_TRANSACTION_TYPE_t;
 250:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** 
 251:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** /**
 252:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * DMA channel status values
 253:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  */
 254:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** typedef enum XMC_DMA_CH_STATUS
 255:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** {
 256:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_STATUS_OK,    /**< DMA status OK */
 257:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_STATUS_ERROR, /**< DMA status error */
 258:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_STATUS_BUSY   /**< DMA is busy */
 259:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** } XMC_DMA_CH_STATUS_t;
 260:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** 
 261:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** /*******************************************************************************
 262:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * DATA STRUCTURES
 263:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  *******************************************************************************/
 264:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** 
 265:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** /**
 266:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * DMA channel configuration structure <br>
 267:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  *
 268:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * The structure represents a collection of all hardware registers used
 269:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * to configure the DMA channel. It is contained within the ::XMC_DMA_t
 270:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * structure. It's registers can be used to configure DMA transfer details
 271:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * like source address, destination address, block size, incrementation
 272:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * modes and the like.
 273:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  */
 274:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** 
 275:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** typedef struct GPDMA_CH
 276:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** {
 277:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  SAR;
 278:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED0;
 279:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  DAR;
 280:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED1;
 281:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  LLP;
 282:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED2;
 283:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  CTLL;
 284:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  CTLH;
 285:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  SSTAT;
 286:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED3;
 287:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  DSTAT;
 288:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED4;
 289:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  SSTATAR;
 290:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED5;
 291:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  DSTATAR;
 292:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED6;
 293:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  CFGL;
 294:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  CFGH;
 295:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  SGR;
 296:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED7;
 297:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  DSR;
 298:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED8;
 299:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** } GPDMA_CH_t;
 300:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** 
 301:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** /**
 302:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * DMA device structure <br>
 303:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  *
 304:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * The structure represents a collection of all hardware registers used
 305:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * to configure the GPDMA peripheral on the XMC4000 series of microcontrollers.
 306:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * The registers can be accessed with ::XMC_DMA0 and ::XMC_DMA1.
 307:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  */
 308:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** typedef struct XMC_DMA
 309:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** {
 310:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   GPDMA_CH_t CH[8];
 311:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** 
 312:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  RAWCHEV[10];
 313:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  STATUSCHEV[10];
 314:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  MASKCHEV[10];
 315:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   __O  uint32_t  CLEARCHEV[10];
 316:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  STATUSGLEV;
 317:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED20;
 318:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  REQSRCREG;
 319:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED21;
 320:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  REQDSTREG;
 321:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED22;
 322:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  SGLREQSRCREG;
 323:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED23;
 324:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  SGLREQDSTREG;
 325:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED24;
 326:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  LSTSRCREG;
 327:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED25;
 328:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  LSTDSTREG;
 329:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED26;
 330:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  DMACFGREG;
 331:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED27;
 332:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  CHENREG;
 333:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED28;
 334:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  ID;
 335:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED29[19];
 336:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  TYPE;
 337:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  VERSION;
 338:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** } XMC_DMA_t;
 339:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** 
 340:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** /* Anonymous structure/union guard start */
 341:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** #if defined (__CC_ARM)
 342:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** #pragma push
 343:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** #pragma anon_unions
 344:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** #elif defined (__TASKING__)
 345:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** #pragma warning 586
 346:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** #endif
 347:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** 
 348:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** /**
 349:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * DMA channel linked list item.
 350:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * Note: Needs to be word aligned
 351:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  */
 352:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** typedef struct XMC_DMA_LLI
 353:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** {
 354:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   uint32_t src_addr;                            /**< Source address */
 355:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   uint32_t dst_addr;                            /**< Destination address */
 356:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   struct XMC_DMA_LLI *llp;                      /**< Linked list pointer of type XMC_DMA_LLI_t */
 357:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   union
 358:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   {
 359:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****     struct
 360:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****     {
 361:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t enable_interrupt: 1;             /**< Enable interrupts? */
 362:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t dst_transfer_width: 3;           /**< Destination transfer width (:: XMC_DMA_CH_TRAN
 363:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t src_transfer_width: 3;           /**< Source transfer width (:: XMC_DMA_CH_TRANSFER_
 364:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t dst_address_count_mode: 2;       /**< Destination address count mode (:: XMC_DMA_CH_
 365:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t src_address_count_mode: 2;       /**< Source address count mode (:: XMC_DMA_CH_ADDRE
 366:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t dst_burst_length: 3;             /**< Destination burst length (:: XMC_DMA_CH_BURST_
 367:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t src_burst_length: 3;             /**< Source burst length (:: XMC_DMA_CH_BURST_LENGT
 368:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t enable_src_gather: 1;            /**< Enable source gather? */
 369:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t enable_dst_scatter: 1;           /**< Enable destination scatter? */
 370:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t : 1;                             /**< Reserved bits */
 371:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t transfer_flow: 3;                /**< DMA transfer flow (:: XMC_DMA_CH_TRANSFER_FLOW
 372:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t : 4;                             /**< Reserved bits */
 373:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t enable_dst_linked_list: 1;       /**< Enable destination linked list? */
 374:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t enable_src_linked_list: 1;       /**< Enable source linked list? */
 375:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t : 3;                             /**< Reserved bits */
 376:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****     };
 377:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****     uint32_t control;
 378:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   };
 379:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   uint32_t block_size;                          /**< Transfer block size */
 380:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   uint32_t src_status;                          /**< Source status */
 381:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   uint32_t dst_status;                          /**< Destination status */
 382:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** } XMC_DMA_LLI_t;
 383:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** 
 384:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** typedef XMC_DMA_LLI_t **XMC_DMA_LIST_t;         /**< Type definition for a linked list pointer */
 385:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** 
 386:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** /**
 387:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * DMA channel configuration structure
 388:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  */
 389:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** typedef struct XMC_DMA_CH_CONFIG
 390:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** {
 391:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   union
 392:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   {
 393:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****     uint32_t control;
 394:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****     struct
 395:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****     {
 396:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t enable_interrupt: 1;             /**< Enable interrupts? */
 397:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t dst_transfer_width: 3;           /**< Destination transfer width (:: XMC_DMA_CH_TRAN
 398:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t src_transfer_width: 3;           /**< Source transfer width (:: XMC_DMA_CH_TRANSFER_
 399:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t dst_address_count_mode: 2;       /**< Destination address count mode (:: XMC_DMA_CH_
 400:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t src_address_count_mode: 2;       /**< Source address count mode (:: XMC_DMA_CH_ADDRE
 401:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t dst_burst_length: 3;             /**< Destination burst length (:: XMC_DMA_CH_BURST_
 402:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t src_burst_length: 3;             /**< Source burst length (:: XMC_DMA_CH_BURST_LENGT
 403:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t enable_src_gather: 1;            /**< Enable source gather? */
 404:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t enable_dst_scatter: 1;           /**< Enable destination scatter? */
 405:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t : 1;
 406:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t transfer_flow: 3;                /**< DMA transfer flow (:: XMC_DMA_CH_TRANSFER_FLOW
 407:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t : 9;
 408:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****     };
 409:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   };
 410:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** 
 411:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   uint32_t src_addr;                            /**< Source address */
 412:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   uint32_t dst_addr;                            /**< Destination address */
 413:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_LLI_t *linked_list_pointer;           /**< Linked list pointer */
 414:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** 
 415:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   union
 416:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   {
 417:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****     uint32_t src_gather_control;
 418:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****     struct
 419:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****     {
 420:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t src_gather_interval: 20;         /**< Source gather interval */
 421:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t src_gather_count: 12;            /**< Source gather count */
 422:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****     };
 423:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   };
 424:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** 
 425:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   union
 426:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   {
 427:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****     uint32_t dst_scatter_control;
 428:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****     struct
 429:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****     {
 430:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t dst_scatter_interval: 20;        /**< Destination scatter interval */
 431:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t dst_scatter_count: 12;           /**< Destination scatter count */
 432:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****     };
 433:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   };
 434:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** 
 435:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   uint16_t block_size;                          /**< Block size for DMA controlled transfers [max. 
 436:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_TYPE_t transfer_type;     /**< DMA transfer type (:: XMC_DMA_CH_TRANSFER_TYPE
 437:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_PRIORITY_t priority;               /**< DMA channel priority (::XMC_DMA_CH_PRIORITY_t)
 438:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_SRC_HANDSHAKING_t src_handshaking; /**< DMA source handshaking interface (:: XMC_DMA_C
 439:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   uint8_t src_peripheral_request;               /**< Source peripheral request. See xmc_dma_map.h *
 440:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_DST_HANDSHAKING_t dst_handshaking; /**< DMA destination handshaking interface (:: XMC_
 441:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   uint8_t dst_peripheral_request;               /**< Destination peripheral request. See xmc_dma_ma
 442:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** } XMC_DMA_CH_CONFIG_t;
 443:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** 
 444:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** /* Anonymous structure/union guard end */
 445:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** #if defined (__CC_ARM)
 446:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** #pragma pop
 447:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** #elif defined (__TASKING__)
 448:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** #pragma warning restore
 449:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** #endif
 450:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** 
 451:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** /**
 452:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * DMA channel event handler
 453:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  */
 454:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** typedef void (*XMC_DMA_CH_EVENT_HANDLER_t)(XMC_DMA_CH_EVENT_t event);
 455:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** 
 456:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** /*******************************************************************************
 457:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * API PROTOTYPES
 458:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  *******************************************************************************/
 459:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** 
 460:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** #ifdef __cplusplus
 461:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** extern "C" {
 462:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** #endif
 463:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** 
 464:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** /**
 465:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * @param dma A constant pointer to XMC_DMA_t, pointing to the GPDMA base address
 466:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * @return None
 467:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  *
 468:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * \par<b>Description: </b><br>
 469:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * Initialize the GPDMA peripheral <br>
 470:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  *
 471:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * \par
 472:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * The function initializes a prioritized list of DMA channels and enables the GPDMA
 473:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * peripheral.
 474:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  */
 475:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** void XMC_DMA_Init(XMC_DMA_t *const dma);
 476:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** 
 477:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** /**
 478:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * @param dma A constant pointer to XMC_DMA_t, pointing to the GPDMA base address
 479:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * @return None
 480:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  *
 481:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * \par<b>Description: </b><br>
 482:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * Enable the GPDMA peripheral <br>
 483:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  *
 484:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * \par
 485:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * The function de-asserts the GPDMA peripheral reset. In addition, it un-gates the
 486:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * GPDMA0 peripheral clock for all XMC4000 series of microcontrollers with an exception
 487:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * of the XMC4500 microcontroller. The XMC4500 doesn't support gating.
 488:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  */
 489:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** void XMC_DMA_Enable(XMC_DMA_t *const dma);
 490:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** 
 491:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** /**
 492:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * @param dma A constant pointer to XMC_DMA_t, pointing to the GPDMA base address
 493:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * @return None
 494:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  *
 495:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * \par<b>Description: </b><br>
 496:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * Disable the GPDMA peripheral <br>
 497:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  *
 498:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * \par
 499:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * The function asserts the GPDMA peripheral reset. In addition, it gates the GPDMA0
 500:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * peripheral clock for all XMC4000 series of microcontrollers with an exception of
 501:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * the XMC4500 microcontroller. The XMC4500 doesn't support gating.
 502:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  */
 503:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** void XMC_DMA_Disable(XMC_DMA_t *const dma);
 504:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** 
 505:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** /**
 506:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * @param dma A constant pointer to XMC_DMA_t, pointing to the GPDMA base address
 507:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * @return bool
 508:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  *
 509:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * \par<b>Description: </b><br>
 510:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * Check if the GPDMA peripheral is enabled <br>
 511:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  *
 512:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * \par
 513:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * For the XMC4500 microcontroller, the function checks if the GPDMA module is asserted
 514:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * and returns "false" if it is. In addition, it also checks if the clock is gated
 515:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * for the other XMC4000 series of microcontrollers. It returns "true" if the peripheral
 516:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * is enabled.
 517:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  */
 518:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** bool XMC_DMA_IsEnabled(const XMC_DMA_t *const dma);
 519:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** 
 520:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** /**
 521:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * @param dma A constant pointer to XMC_DMA_t, pointing to the GPDMA base address
 522:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * @return uint32_t DMA event status
 523:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  *
 524:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * \par<b>Description: </b><br>
 525:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * Get DMA event status <br>
 526:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  *
 527:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * \par
 528:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * The function returns the collective (global) status of GPDMA events. The following
 529:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * lists the various DMA events and their corresponding enumeration. The return value
 530:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * of this function may then be masked with any one of the following enumerations to
 531:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * obtain the status of individual DMA events. <br>
 532:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  *
 533:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * \par
 534:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * Transfer complete -> ::XMC_DMA_CH_EVENT_TRANSFER_COMPLETE                       <br>
 535:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * Block transfer complete -> ::XMC_DMA_CH_EVENT_BLOCK_TRANSFER_COMPLETE           <br>
 536:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * Source transaction complete -> ::XMC_DMA_CH_EVENT_SRC_TRANSACTION_COMPLETE      <br>
 537:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * Destination transaction complete -> ::XMC_DMA_CH_EVENT_DST_TRANSACTION_COMPLETE <br>
 538:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * DMA error event -> ::XMC_DMA_CH_EVENT_ERROR                                     <br>
 539:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  */
 540:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** __STATIC_INLINE uint32_t XMC_DMA_GetEventStatus(XMC_DMA_t *const dma)
 541:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** {
  27              	 .loc 1 541 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 83B0     	 sub sp,sp,#12
  37              	.LCFI1:
  38              	 .cfi_def_cfa_offset 16
  39 0004 00AF     	 add r7,sp,#0
  40              	.LCFI2:
  41              	 .cfi_def_cfa_register 7
  42 0006 7860     	 str r0,[r7,#4]
 542:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   return (dma->STATUSGLEV);
  43              	 .loc 1 542 0
  44 0008 7B68     	 ldr r3,[r7,#4]
  45 000a D3F86033 	 ldr r3,[r3,#864]
 543:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** }
  46              	 .loc 1 543 0
  47 000e 1846     	 mov r0,r3
  48 0010 0C37     	 adds r7,r7,#12
  49              	.LCFI3:
  50              	 .cfi_def_cfa_offset 4
  51 0012 BD46     	 mov sp,r7
  52              	.LCFI4:
  53              	 .cfi_def_cfa_register 13
  54              	 
  55 0014 5DF8047B 	 ldr r7,[sp],#4
  56              	.LCFI5:
  57              	 .cfi_restore 7
  58              	 .cfi_def_cfa_offset 0
  59 0018 7047     	 bx lr
  60              	 .cfi_endproc
  61              	.LFE133:
  63 001a 00BF     	 .section .text.XMC_DMA_GetChannelsTransferCompleteStatus,"ax",%progbits
  64              	 .align 2
  65              	 .thumb
  66              	 .thumb_func
  68              	XMC_DMA_GetChannelsTransferCompleteStatus:
  69              	.LFB134:
 544:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** 
 545:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** /**
 546:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * @param dma A constant pointer to XMC_DMA_t, pointing to the GPDMA base address
 547:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * @return uint32_t DMA transfer complete status
 548:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  *
 549:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * \par<b>Description: </b><br>
 550:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * Get transfer complete status <br>
 551:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  *
 552:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * \par
 553:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * The function returns GPDMA transfer complete interrupt status. <br>
 554:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  */
 555:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** __STATIC_INLINE uint32_t XMC_DMA_GetChannelsTransferCompleteStatus(XMC_DMA_t *const dma)
 556:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** {
  70              	 .loc 1 556 0
  71              	 .cfi_startproc
  72              	 
  73              	 
  74              	 
  75 0000 80B4     	 push {r7}
  76              	.LCFI6:
  77              	 .cfi_def_cfa_offset 4
  78              	 .cfi_offset 7,-4
  79 0002 83B0     	 sub sp,sp,#12
  80              	.LCFI7:
  81              	 .cfi_def_cfa_offset 16
  82 0004 00AF     	 add r7,sp,#0
  83              	.LCFI8:
  84              	 .cfi_def_cfa_register 7
  85 0006 7860     	 str r0,[r7,#4]
 557:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   return (dma->STATUSCHEV[0]);
  86              	 .loc 1 557 0
  87 0008 7B68     	 ldr r3,[r7,#4]
  88 000a D3F8E832 	 ldr r3,[r3,#744]
 558:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** }
  89              	 .loc 1 558 0
  90 000e 1846     	 mov r0,r3
  91 0010 0C37     	 adds r7,r7,#12
  92              	.LCFI9:
  93              	 .cfi_def_cfa_offset 4
  94 0012 BD46     	 mov sp,r7
  95              	.LCFI10:
  96              	 .cfi_def_cfa_register 13
  97              	 
  98 0014 5DF8047B 	 ldr r7,[sp],#4
  99              	.LCFI11:
 100              	 .cfi_restore 7
 101              	 .cfi_def_cfa_offset 0
 102 0018 7047     	 bx lr
 103              	 .cfi_endproc
 104              	.LFE134:
 106 001a 00BF     	 .section .text.XMC_DMA_GetChannelsBlockCompleteStatus,"ax",%progbits
 107              	 .align 2
 108              	 .thumb
 109              	 .thumb_func
 111              	XMC_DMA_GetChannelsBlockCompleteStatus:
 112              	.LFB135:
 559:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** 
 560:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** /**
 561:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * @param dma A constant pointer to XMC_DMA_t, pointing to the GPDMA base address
 562:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * @return uint32_t DMA block complete status
 563:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  *
 564:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * \par<b>Description: </b><br>
 565:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * Get block transfer complete status <br>
 566:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  *
 567:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * \par
 568:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * The function returns GPDMA block transfer complete interrupt status. <br>
 569:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  */
 570:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** __STATIC_INLINE uint32_t XMC_DMA_GetChannelsBlockCompleteStatus(XMC_DMA_t *const dma)
 571:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** {
 113              	 .loc 1 571 0
 114              	 .cfi_startproc
 115              	 
 116              	 
 117              	 
 118 0000 80B4     	 push {r7}
 119              	.LCFI12:
 120              	 .cfi_def_cfa_offset 4
 121              	 .cfi_offset 7,-4
 122 0002 83B0     	 sub sp,sp,#12
 123              	.LCFI13:
 124              	 .cfi_def_cfa_offset 16
 125 0004 00AF     	 add r7,sp,#0
 126              	.LCFI14:
 127              	 .cfi_def_cfa_register 7
 128 0006 7860     	 str r0,[r7,#4]
 572:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   return (dma->STATUSCHEV[2]);
 129              	 .loc 1 572 0
 130 0008 7B68     	 ldr r3,[r7,#4]
 131 000a D3F8F032 	 ldr r3,[r3,#752]
 573:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** }
 132              	 .loc 1 573 0
 133 000e 1846     	 mov r0,r3
 134 0010 0C37     	 adds r7,r7,#12
 135              	.LCFI15:
 136              	 .cfi_def_cfa_offset 4
 137 0012 BD46     	 mov sp,r7
 138              	.LCFI16:
 139              	 .cfi_def_cfa_register 13
 140              	 
 141 0014 5DF8047B 	 ldr r7,[sp],#4
 142              	.LCFI17:
 143              	 .cfi_restore 7
 144              	 .cfi_def_cfa_offset 0
 145 0018 7047     	 bx lr
 146              	 .cfi_endproc
 147              	.LFE135:
 149 001a 00BF     	 .section .text.XMC_DMA_GetChannelsSourceTransactionCompleteStatus,"ax",%progbits
 150              	 .align 2
 151              	 .thumb
 152              	 .thumb_func
 154              	XMC_DMA_GetChannelsSourceTransactionCompleteStatus:
 155              	.LFB136:
 574:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** 
 575:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** /**
 576:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * @param dma A constant pointer to XMC_DMA_t, pointing to the GPDMA base address
 577:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * @return uint32_t DMA event status
 578:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  *
 579:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * \par<b>Description: </b><br>
 580:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * Get source transaction complete status <br>
 581:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  *
 582:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * \par
 583:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * The function returns the source transaction complete interrupt status. <br>
 584:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  *
 585:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * \par<b>Note: </b><br>
 586:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * If the source peripheral is memory, the source transaction complete interrupt is
 587:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * ignored.
 588:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  */
 589:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** __STATIC_INLINE uint32_t XMC_DMA_GetChannelsSourceTransactionCompleteStatus(XMC_DMA_t *const dma)
 590:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** {
 156              	 .loc 1 590 0
 157              	 .cfi_startproc
 158              	 
 159              	 
 160              	 
 161 0000 80B4     	 push {r7}
 162              	.LCFI18:
 163              	 .cfi_def_cfa_offset 4
 164              	 .cfi_offset 7,-4
 165 0002 83B0     	 sub sp,sp,#12
 166              	.LCFI19:
 167              	 .cfi_def_cfa_offset 16
 168 0004 00AF     	 add r7,sp,#0
 169              	.LCFI20:
 170              	 .cfi_def_cfa_register 7
 171 0006 7860     	 str r0,[r7,#4]
 591:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   return (dma->STATUSCHEV[4]);
 172              	 .loc 1 591 0
 173 0008 7B68     	 ldr r3,[r7,#4]
 174 000a D3F8F832 	 ldr r3,[r3,#760]
 592:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** }
 175              	 .loc 1 592 0
 176 000e 1846     	 mov r0,r3
 177 0010 0C37     	 adds r7,r7,#12
 178              	.LCFI21:
 179              	 .cfi_def_cfa_offset 4
 180 0012 BD46     	 mov sp,r7
 181              	.LCFI22:
 182              	 .cfi_def_cfa_register 13
 183              	 
 184 0014 5DF8047B 	 ldr r7,[sp],#4
 185              	.LCFI23:
 186              	 .cfi_restore 7
 187              	 .cfi_def_cfa_offset 0
 188 0018 7047     	 bx lr
 189              	 .cfi_endproc
 190              	.LFE136:
 192 001a 00BF     	 .section .text.XMC_DMA_GetChannelsDestinationTransactionCompleteStatus,"ax",%progbits
 193              	 .align 2
 194              	 .thumb
 195              	 .thumb_func
 197              	XMC_DMA_GetChannelsDestinationTransactionCompleteStatus:
 198              	.LFB137:
 593:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** 
 594:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** /**
 595:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * @param dma A constant pointer to XMC_DMA_t, pointing to the GPDMA base address
 596:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * @return uint32_t DMA event status
 597:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  *
 598:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * \par<b>Description: </b><br>
 599:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * Get destination transaction complete status <br>
 600:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  *
 601:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * \par
 602:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * The function returns the destination transaction complete interrupt status <br>
 603:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  *
 604:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * \par<b>Note: </b><br>
 605:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * If the destination peripheral is memory, the destination transaction complete
 606:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * interrupt is ignored.
 607:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  */
 608:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** __STATIC_INLINE uint32_t XMC_DMA_GetChannelsDestinationTransactionCompleteStatus(XMC_DMA_t *const d
 609:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** {
 199              	 .loc 1 609 0
 200              	 .cfi_startproc
 201              	 
 202              	 
 203              	 
 204 0000 80B4     	 push {r7}
 205              	.LCFI24:
 206              	 .cfi_def_cfa_offset 4
 207              	 .cfi_offset 7,-4
 208 0002 83B0     	 sub sp,sp,#12
 209              	.LCFI25:
 210              	 .cfi_def_cfa_offset 16
 211 0004 00AF     	 add r7,sp,#0
 212              	.LCFI26:
 213              	 .cfi_def_cfa_register 7
 214 0006 7860     	 str r0,[r7,#4]
 610:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   return (dma->STATUSCHEV[6]);
 215              	 .loc 1 610 0
 216 0008 7B68     	 ldr r3,[r7,#4]
 217 000a D3F80033 	 ldr r3,[r3,#768]
 611:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** }
 218              	 .loc 1 611 0
 219 000e 1846     	 mov r0,r3
 220 0010 0C37     	 adds r7,r7,#12
 221              	.LCFI27:
 222              	 .cfi_def_cfa_offset 4
 223 0012 BD46     	 mov sp,r7
 224              	.LCFI28:
 225              	 .cfi_def_cfa_register 13
 226              	 
 227 0014 5DF8047B 	 ldr r7,[sp],#4
 228              	.LCFI29:
 229              	 .cfi_restore 7
 230              	 .cfi_def_cfa_offset 0
 231 0018 7047     	 bx lr
 232              	 .cfi_endproc
 233              	.LFE137:
 235 001a 00BF     	 .section .text.XMC_DMA_GetChannelsErrorStatus,"ax",%progbits
 236              	 .align 2
 237              	 .thumb
 238              	 .thumb_func
 240              	XMC_DMA_GetChannelsErrorStatus:
 241              	.LFB138:
 612:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** 
 613:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** /**
 614:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * @param dma A constant pointer to XMC_DMA_t, pointing to the GPDMA base address
 615:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * @return uint32_t DMA error event status
 616:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  *
 617:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * \par<b>Description: </b><br>
 618:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * Get DMA error event status <br>
 619:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  *
 620:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * \par
 621:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  * The function returns error interrupt status. <br>
 622:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****  */
 623:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** __STATIC_INLINE uint32_t XMC_DMA_GetChannelsErrorStatus(XMC_DMA_t *const dma)
 624:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** {
 242              	 .loc 1 624 0
 243              	 .cfi_startproc
 244              	 
 245              	 
 246              	 
 247 0000 80B4     	 push {r7}
 248              	.LCFI30:
 249              	 .cfi_def_cfa_offset 4
 250              	 .cfi_offset 7,-4
 251 0002 83B0     	 sub sp,sp,#12
 252              	.LCFI31:
 253              	 .cfi_def_cfa_offset 16
 254 0004 00AF     	 add r7,sp,#0
 255              	.LCFI32:
 256              	 .cfi_def_cfa_register 7
 257 0006 7860     	 str r0,[r7,#4]
 625:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h ****   return (dma->STATUSCHEV[8]);
 258              	 .loc 1 625 0
 259 0008 7B68     	 ldr r3,[r7,#4]
 260 000a D3F80833 	 ldr r3,[r3,#776]
 626:C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc\xmc_dma.h **** }
 261              	 .loc 1 626 0
 262 000e 1846     	 mov r0,r3
 263 0010 0C37     	 adds r7,r7,#12
 264              	.LCFI33:
 265              	 .cfi_def_cfa_offset 4
 266 0012 BD46     	 mov sp,r7
 267              	.LCFI34:
 268              	 .cfi_def_cfa_register 13
 269              	 
 270 0014 5DF8047B 	 ldr r7,[sp],#4
 271              	.LCFI35:
 272              	 .cfi_restore 7
 273              	 .cfi_def_cfa_offset 0
 274 0018 7047     	 bx lr
 275              	 .cfi_endproc
 276              	.LFE138:
 278 001a 00BF     	 .section .bss.dma0_event_handlers,"aw",%nobits
 279              	 .align 2
 282              	dma0_event_handlers:
 283 0000 00000000 	 .space 32
 283      00000000 
 283      00000000 
 283      00000000 
 283      00000000 
 284              	 .section .text.XMC_DMA_Init,"ax",%progbits
 285              	 .align 2
 286              	 .global XMC_DMA_Init
 287              	 .thumb
 288              	 .thumb_func
 290              	XMC_DMA_Init:
 291              	.LFB184:
 292              	 .file 2 "../Libraries/XMCLib/src/xmc_dma.c"
   1:../Libraries/XMCLib/src/xmc_dma.c **** 
   2:../Libraries/XMCLib/src/xmc_dma.c **** /**
   3:../Libraries/XMCLib/src/xmc_dma.c ****  * @file xmc_dma.c
   4:../Libraries/XMCLib/src/xmc_dma.c ****  * @date 2019-05-07
   5:../Libraries/XMCLib/src/xmc_dma.c ****  *
   6:../Libraries/XMCLib/src/xmc_dma.c ****  * @cond
   7:../Libraries/XMCLib/src/xmc_dma.c ****  *****************************************************************************
   8:../Libraries/XMCLib/src/xmc_dma.c ****  * XMClib v2.2.0 - XMC Peripheral Driver Library
   9:../Libraries/XMCLib/src/xmc_dma.c ****  *
  10:../Libraries/XMCLib/src/xmc_dma.c ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  11:../Libraries/XMCLib/src/xmc_dma.c ****  * All rights reserved.
  12:../Libraries/XMCLib/src/xmc_dma.c ****  *
  13:../Libraries/XMCLib/src/xmc_dma.c ****  * Boost Software License - Version 1.0 - August 17th, 2003
  14:../Libraries/XMCLib/src/xmc_dma.c ****  *
  15:../Libraries/XMCLib/src/xmc_dma.c ****  * Permission is hereby granted, free of charge, to any person or organization
  16:../Libraries/XMCLib/src/xmc_dma.c ****  * obtaining a copy of the software and accompanying documentation covered by
  17:../Libraries/XMCLib/src/xmc_dma.c ****  * this license (the "Software") to use, reproduce, display, distribute,
  18:../Libraries/XMCLib/src/xmc_dma.c ****  * execute, and transmit the Software, and to prepare derivative works of the
  19:../Libraries/XMCLib/src/xmc_dma.c ****  * Software, and to permit third-parties to whom the Software is furnished to
  20:../Libraries/XMCLib/src/xmc_dma.c ****  * do so, all subject to the following:
  21:../Libraries/XMCLib/src/xmc_dma.c ****  *
  22:../Libraries/XMCLib/src/xmc_dma.c ****  * The copyright notices in the Software and this entire statement, including
  23:../Libraries/XMCLib/src/xmc_dma.c ****  * the above license grant, this restriction and the following disclaimer,
  24:../Libraries/XMCLib/src/xmc_dma.c ****  * must be included in all copies of the Software, in whole or in part, and
  25:../Libraries/XMCLib/src/xmc_dma.c ****  * all derivative works of the Software, unless such copies or derivative
  26:../Libraries/XMCLib/src/xmc_dma.c ****  * works are solely in the form of machine-executable object code generated by
  27:../Libraries/XMCLib/src/xmc_dma.c ****  * a source language processor.
  28:../Libraries/XMCLib/src/xmc_dma.c ****  *
  29:../Libraries/XMCLib/src/xmc_dma.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  30:../Libraries/XMCLib/src/xmc_dma.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  31:../Libraries/XMCLib/src/xmc_dma.c ****  * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
  32:../Libraries/XMCLib/src/xmc_dma.c ****  * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
  33:../Libraries/XMCLib/src/xmc_dma.c ****  * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
  34:../Libraries/XMCLib/src/xmc_dma.c ****  * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
  35:../Libraries/XMCLib/src/xmc_dma.c ****  * DEALINGS IN THE SOFTWARE.
  36:../Libraries/XMCLib/src/xmc_dma.c ****  *
  37:../Libraries/XMCLib/src/xmc_dma.c ****  * To improve the quality of the software, users are encouraged to share
  38:../Libraries/XMCLib/src/xmc_dma.c ****  * modifications, enhancements or bug fixes with Infineon Technologies AG
  39:../Libraries/XMCLib/src/xmc_dma.c ****  * at XMCSupport@infineon.com.
  40:../Libraries/XMCLib/src/xmc_dma.c ****  *****************************************************************************
  41:../Libraries/XMCLib/src/xmc_dma.c ****  *
  42:../Libraries/XMCLib/src/xmc_dma.c ****  * Change History
  43:../Libraries/XMCLib/src/xmc_dma.c ****  * --------------
  44:../Libraries/XMCLib/src/xmc_dma.c ****  *
  45:../Libraries/XMCLib/src/xmc_dma.c ****  * 2015-02-20:
  46:../Libraries/XMCLib/src/xmc_dma.c ****  *     - Initial <br>
  47:../Libraries/XMCLib/src/xmc_dma.c ****  *
  48:../Libraries/XMCLib/src/xmc_dma.c ****  * 2015-05-20:
  49:../Libraries/XMCLib/src/xmc_dma.c ****  *     - Add the declarations for the following APIs: <br>
  50:../Libraries/XMCLib/src/xmc_dma.c ****  *       XMC_DMA_DisableRequestLine, XMC_DMA_ClearRequestLine, <br>
  51:../Libraries/XMCLib/src/xmc_dma.c ****  *       XMC_DMA_CH_ClearSourcePeripheralRequest, <br>
  52:../Libraries/XMCLib/src/xmc_dma.c ****  *       XMC_DMA_CH_ClearDestinationPeripheralRequest <br>
  53:../Libraries/XMCLib/src/xmc_dma.c ****  *     - Remove PRIOARRAY <br>
  54:../Libraries/XMCLib/src/xmc_dma.c ****  *     - Documentation updates <br>
  55:../Libraries/XMCLib/src/xmc_dma.c ****  *
  56:../Libraries/XMCLib/src/xmc_dma.c ****  * 2015-06-20:
  57:../Libraries/XMCLib/src/xmc_dma.c ****  *     - Removed GetDriverVersion API <br>
  58:../Libraries/XMCLib/src/xmc_dma.c ****  *     - Updated XMC_DMA_CH_Init() to support scatter/gather functionality (only
  59:../Libraries/XMCLib/src/xmc_dma.c ****  *       on advanced DMA channels) <br>
  60:../Libraries/XMCLib/src/xmc_dma.c ****  *     - Updated XMC_DMA_CH_Disable() <br>
  61:../Libraries/XMCLib/src/xmc_dma.c ****  *
  62:../Libraries/XMCLib/src/xmc_dma.c ****  * 2016-03-09:
  63:../Libraries/XMCLib/src/xmc_dma.c ****  *     - Optimize write only registers
  64:../Libraries/XMCLib/src/xmc_dma.c ****  *
  65:../Libraries/XMCLib/src/xmc_dma.c ****  * 2016-04-08:
  66:../Libraries/XMCLib/src/xmc_dma.c ****  *     - Update XMC_DMA_CH_EnableEvent and XMC_DMA_CH_DisableEvent.
  67:../Libraries/XMCLib/src/xmc_dma.c ****  *       Write optimization of MASKCHEV
  68:../Libraries/XMCLib/src/xmc_dma.c ****  *     - Fix XMC_DMA_IRQHandler, clear channel event status before processing the event handler.
  69:../Libraries/XMCLib/src/xmc_dma.c ****  *       It corrects event losses if the DMA triggered in the event handler finished before returni
  70:../Libraries/XMCLib/src/xmc_dma.c ****  *
  71:../Libraries/XMCLib/src/xmc_dma.c ****  * 2018-02-08:
  72:../Libraries/XMCLib/src/xmc_dma.c ****  *     - Fix XMC_DMA_CH_RequestLastMultiblockTransfer() clearing CTLL_LLP_SRC_EN and CTLL_LLP_DST_E
  73:../Libraries/XMCLib/src/xmc_dma.c ****  *
  74:../Libraries/XMCLib/src/xmc_dma.c ****  * 2019-05-07:
  75:../Libraries/XMCLib/src/xmc_dma.c ****  *     - Fixed compilation warnings
  76:../Libraries/XMCLib/src/xmc_dma.c ****  *
  77:../Libraries/XMCLib/src/xmc_dma.c ****  * @endcond
  78:../Libraries/XMCLib/src/xmc_dma.c ****  */
  79:../Libraries/XMCLib/src/xmc_dma.c **** 
  80:../Libraries/XMCLib/src/xmc_dma.c **** /*******************************************************************************
  81:../Libraries/XMCLib/src/xmc_dma.c ****  * HEADER FILES
  82:../Libraries/XMCLib/src/xmc_dma.c ****  *******************************************************************************/
  83:../Libraries/XMCLib/src/xmc_dma.c **** 
  84:../Libraries/XMCLib/src/xmc_dma.c **** #include "xmc_dma.h"
  85:../Libraries/XMCLib/src/xmc_dma.c **** 
  86:../Libraries/XMCLib/src/xmc_dma.c **** #if defined (GPDMA0)
  87:../Libraries/XMCLib/src/xmc_dma.c **** 
  88:../Libraries/XMCLib/src/xmc_dma.c **** #include "xmc_scu.h"
  89:../Libraries/XMCLib/src/xmc_dma.c **** 
  90:../Libraries/XMCLib/src/xmc_dma.c **** /*******************************************************************************
  91:../Libraries/XMCLib/src/xmc_dma.c ****  * MACROS
  92:../Libraries/XMCLib/src/xmc_dma.c ****  *******************************************************************************/
  93:../Libraries/XMCLib/src/xmc_dma.c **** 
  94:../Libraries/XMCLib/src/xmc_dma.c **** #define DLR_SRSEL_RS_MSK (0xfUL)
  95:../Libraries/XMCLib/src/xmc_dma.c **** #define DLR_SRSEL_RS_BITSIZE (4UL)
  96:../Libraries/XMCLib/src/xmc_dma.c **** #define DMA_EVENT_MAX (5UL)
  97:../Libraries/XMCLib/src/xmc_dma.c **** #define GPDMA_CH_CFGH_DEST_PER_Pos GPDMA0_CH_CFGH_DEST_PER_Pos
  98:../Libraries/XMCLib/src/xmc_dma.c **** #define GPDMA_CH_CFGH_SRC_PER_Pos GPDMA0_CH_CFGH_SRC_PER_Pos
  99:../Libraries/XMCLib/src/xmc_dma.c **** #define GPDMA0_CH_CFGH_PER_Msk (0x7U)
 100:../Libraries/XMCLib/src/xmc_dma.c **** #define GPDMA1_CH_CFGH_PER_Msk (0x3U)
 101:../Libraries/XMCLib/src/xmc_dma.c **** #define GPDMA_CH_CFGH_PER_BITSIZE (4U)
 102:../Libraries/XMCLib/src/xmc_dma.c **** #define GPDMA_CH_CTLL_INT_EN_Msk GPDMA0_CH_CTLL_INT_EN_Msk
 103:../Libraries/XMCLib/src/xmc_dma.c **** 
 104:../Libraries/XMCLib/src/xmc_dma.c **** /*******************************************************************************
 105:../Libraries/XMCLib/src/xmc_dma.c ****  * LOCAL DATA
 106:../Libraries/XMCLib/src/xmc_dma.c ****  *******************************************************************************/
 107:../Libraries/XMCLib/src/xmc_dma.c **** 
 108:../Libraries/XMCLib/src/xmc_dma.c **** #if defined (GPDMA0)
 109:../Libraries/XMCLib/src/xmc_dma.c **** static XMC_DMA_CH_EVENT_HANDLER_t dma0_event_handlers[XMC_DMA0_NUM_CHANNELS];
 110:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 111:../Libraries/XMCLib/src/xmc_dma.c **** 
 112:../Libraries/XMCLib/src/xmc_dma.c **** #if defined (GPDMA1)
 113:../Libraries/XMCLib/src/xmc_dma.c **** static XMC_DMA_CH_EVENT_HANDLER_t dma1_event_handlers[XMC_DMA1_NUM_CHANNELS];
 114:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 115:../Libraries/XMCLib/src/xmc_dma.c **** 
 116:../Libraries/XMCLib/src/xmc_dma.c **** /*******************************************************************************
 117:../Libraries/XMCLib/src/xmc_dma.c ****  * API IMPLEMENTATION
 118:../Libraries/XMCLib/src/xmc_dma.c ****  *******************************************************************************/
 119:../Libraries/XMCLib/src/xmc_dma.c **** 
 120:../Libraries/XMCLib/src/xmc_dma.c **** /* Initialize GPDMA */
 121:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_Init(XMC_DMA_t *const dma)
 122:../Libraries/XMCLib/src/xmc_dma.c **** {
 293              	 .loc 2 122 0
 294              	 .cfi_startproc
 295              	 
 296              	 
 297 0000 80B5     	 push {r7,lr}
 298              	.LCFI36:
 299              	 .cfi_def_cfa_offset 8
 300              	 .cfi_offset 7,-8
 301              	 .cfi_offset 14,-4
 302 0002 82B0     	 sub sp,sp,#8
 303              	.LCFI37:
 304              	 .cfi_def_cfa_offset 16
 305 0004 00AF     	 add r7,sp,#0
 306              	.LCFI38:
 307              	 .cfi_def_cfa_register 7
 308 0006 7860     	 str r0,[r7,#4]
 123:../Libraries/XMCLib/src/xmc_dma.c ****   XMC_DMA_Enable(dma);
 309              	 .loc 2 123 0
 310 0008 7868     	 ldr r0,[r7,#4]
 311 000a FFF7FEFF 	 bl XMC_DMA_Enable
 124:../Libraries/XMCLib/src/xmc_dma.c **** }
 312              	 .loc 2 124 0
 313 000e 0837     	 adds r7,r7,#8
 314              	.LCFI39:
 315              	 .cfi_def_cfa_offset 8
 316 0010 BD46     	 mov sp,r7
 317              	.LCFI40:
 318              	 .cfi_def_cfa_register 13
 319              	 
 320 0012 80BD     	 pop {r7,pc}
 321              	 .cfi_endproc
 322              	.LFE184:
 324              	 .section .text.XMC_DMA_Enable,"ax",%progbits
 325              	 .align 2
 326              	 .global XMC_DMA_Enable
 327              	 .thumb
 328              	 .thumb_func
 330              	XMC_DMA_Enable:
 331              	.LFB185:
 125:../Libraries/XMCLib/src/xmc_dma.c **** 
 126:../Libraries/XMCLib/src/xmc_dma.c **** /* Enable GPDMA module */
 127:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_Enable(XMC_DMA_t *const dma)
 128:../Libraries/XMCLib/src/xmc_dma.c **** {
 332              	 .loc 2 128 0
 333              	 .cfi_startproc
 334              	 
 335              	 
 336 0000 80B5     	 push {r7,lr}
 337              	.LCFI41:
 338              	 .cfi_def_cfa_offset 8
 339              	 .cfi_offset 7,-8
 340              	 .cfi_offset 14,-4
 341 0002 82B0     	 sub sp,sp,#8
 342              	.LCFI42:
 343              	 .cfi_def_cfa_offset 16
 344 0004 00AF     	 add r7,sp,#0
 345              	.LCFI43:
 346              	 .cfi_def_cfa_register 7
 347 0006 7860     	 str r0,[r7,#4]
 129:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 130:../Libraries/XMCLib/src/xmc_dma.c ****   if (dma == XMC_DMA0)
 131:../Libraries/XMCLib/src/xmc_dma.c ****   {
 132:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 133:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(CLOCK_GATING_SUPPORTED)
 134:../Libraries/XMCLib/src/xmc_dma.c ****     XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_GPDMA0);
 348              	 .loc 2 134 0
 349 0008 0648     	 ldr r0,.L15
 350 000a FFF7FEFF 	 bl XMC_SCU_CLOCK_UngatePeripheralClock
 135:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 136:../Libraries/XMCLib/src/xmc_dma.c ****     XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_GPDMA0);
 351              	 .loc 2 136 0
 352 000e 0548     	 ldr r0,.L15
 353 0010 FFF7FEFF 	 bl XMC_SCU_RESET_DeassertPeripheralReset
 137:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 138:../Libraries/XMCLib/src/xmc_dma.c ****   }
 139:../Libraries/XMCLib/src/xmc_dma.c ****   else
 140:../Libraries/XMCLib/src/xmc_dma.c ****   {
 141:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(CLOCK_GATING_SUPPORTED)
 142:../Libraries/XMCLib/src/xmc_dma.c ****     XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_GPDMA1);
 143:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 144:../Libraries/XMCLib/src/xmc_dma.c ****     XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_GPDMA1);
 145:../Libraries/XMCLib/src/xmc_dma.c ****   }
 146:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 147:../Libraries/XMCLib/src/xmc_dma.c **** 
 148:../Libraries/XMCLib/src/xmc_dma.c ****   dma->DMACFGREG = 0x1U;
 354              	 .loc 2 148 0
 355 0014 7B68     	 ldr r3,[r7,#4]
 356 0016 0122     	 movs r2,#1
 357 0018 C3F89823 	 str r2,[r3,#920]
 149:../Libraries/XMCLib/src/xmc_dma.c **** }
 358              	 .loc 2 149 0
 359 001c 0837     	 adds r7,r7,#8
 360              	.LCFI44:
 361              	 .cfi_def_cfa_offset 8
 362 001e BD46     	 mov sp,r7
 363              	.LCFI45:
 364              	 .cfi_def_cfa_register 13
 365              	 
 366 0020 80BD     	 pop {r7,pc}
 367              	.L16:
 368 0022 00BF     	 .align 2
 369              	.L15:
 370 0024 10000020 	 .word 536870928
 371              	 .cfi_endproc
 372              	.LFE185:
 374              	 .section .text.XMC_DMA_Disable,"ax",%progbits
 375              	 .align 2
 376              	 .global XMC_DMA_Disable
 377              	 .thumb
 378              	 .thumb_func
 380              	XMC_DMA_Disable:
 381              	.LFB186:
 150:../Libraries/XMCLib/src/xmc_dma.c **** 
 151:../Libraries/XMCLib/src/xmc_dma.c **** /* Disable GPDMA module */
 152:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_Disable(XMC_DMA_t *const dma)
 153:../Libraries/XMCLib/src/xmc_dma.c **** {
 382              	 .loc 2 153 0
 383              	 .cfi_startproc
 384              	 
 385              	 
 386 0000 80B5     	 push {r7,lr}
 387              	.LCFI46:
 388              	 .cfi_def_cfa_offset 8
 389              	 .cfi_offset 7,-8
 390              	 .cfi_offset 14,-4
 391 0002 82B0     	 sub sp,sp,#8
 392              	.LCFI47:
 393              	 .cfi_def_cfa_offset 16
 394 0004 00AF     	 add r7,sp,#0
 395              	.LCFI48:
 396              	 .cfi_def_cfa_register 7
 397 0006 7860     	 str r0,[r7,#4]
 154:../Libraries/XMCLib/src/xmc_dma.c ****   dma->DMACFGREG = 0x0U;
 398              	 .loc 2 154 0
 399 0008 7B68     	 ldr r3,[r7,#4]
 400 000a 0022     	 movs r2,#0
 401 000c C3F89823 	 str r2,[r3,#920]
 155:../Libraries/XMCLib/src/xmc_dma.c **** 
 156:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 157:../Libraries/XMCLib/src/xmc_dma.c ****   if (dma == XMC_DMA0)
 158:../Libraries/XMCLib/src/xmc_dma.c ****   {
 159:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 160:../Libraries/XMCLib/src/xmc_dma.c ****     XMC_SCU_RESET_AssertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_GPDMA0);
 402              	 .loc 2 160 0
 403 0010 0448     	 ldr r0,.L18
 404 0012 FFF7FEFF 	 bl XMC_SCU_RESET_AssertPeripheralReset
 161:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(CLOCK_GATING_SUPPORTED)
 162:../Libraries/XMCLib/src/xmc_dma.c ****     XMC_SCU_CLOCK_GatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_GPDMA0);
 405              	 .loc 2 162 0
 406 0016 0348     	 ldr r0,.L18
 407 0018 FFF7FEFF 	 bl XMC_SCU_CLOCK_GatePeripheralClock
 163:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 164:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 165:../Libraries/XMCLib/src/xmc_dma.c ****   }
 166:../Libraries/XMCLib/src/xmc_dma.c ****   else
 167:../Libraries/XMCLib/src/xmc_dma.c ****   {
 168:../Libraries/XMCLib/src/xmc_dma.c ****     XMC_SCU_RESET_AssertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_GPDMA1);
 169:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(CLOCK_GATING_SUPPORTED)
 170:../Libraries/XMCLib/src/xmc_dma.c ****     XMC_SCU_CLOCK_GatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_GPDMA1);
 171:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 172:../Libraries/XMCLib/src/xmc_dma.c ****   }
 173:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 174:../Libraries/XMCLib/src/xmc_dma.c **** }
 408              	 .loc 2 174 0
 409 001c 0837     	 adds r7,r7,#8
 410              	.LCFI49:
 411              	 .cfi_def_cfa_offset 8
 412 001e BD46     	 mov sp,r7
 413              	.LCFI50:
 414              	 .cfi_def_cfa_register 13
 415              	 
 416 0020 80BD     	 pop {r7,pc}
 417              	.L19:
 418 0022 00BF     	 .align 2
 419              	.L18:
 420 0024 10000020 	 .word 536870928
 421              	 .cfi_endproc
 422              	.LFE186:
 424              	 .section .text.XMC_DMA_IsEnabled,"ax",%progbits
 425              	 .align 2
 426              	 .global XMC_DMA_IsEnabled
 427              	 .thumb
 428              	 .thumb_func
 430              	XMC_DMA_IsEnabled:
 431              	.LFB187:
 175:../Libraries/XMCLib/src/xmc_dma.c **** 
 176:../Libraries/XMCLib/src/xmc_dma.c **** /* Check is the GPDMA peripheral is enabled */
 177:../Libraries/XMCLib/src/xmc_dma.c **** bool XMC_DMA_IsEnabled(const XMC_DMA_t *const dma)
 178:../Libraries/XMCLib/src/xmc_dma.c **** {
 432              	 .loc 2 178 0
 433              	 .cfi_startproc
 434              	 
 435              	 
 436 0000 80B5     	 push {r7,lr}
 437              	.LCFI51:
 438              	 .cfi_def_cfa_offset 8
 439              	 .cfi_offset 7,-8
 440              	 .cfi_offset 14,-4
 441 0002 84B0     	 sub sp,sp,#16
 442              	.LCFI52:
 443              	 .cfi_def_cfa_offset 24
 444 0004 00AF     	 add r7,sp,#0
 445              	.LCFI53:
 446              	 .cfi_def_cfa_register 7
 447 0006 7860     	 str r0,[r7,#4]
 179:../Libraries/XMCLib/src/xmc_dma.c ****   bool status;
 180:../Libraries/XMCLib/src/xmc_dma.c **** 
 181:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 182:../Libraries/XMCLib/src/xmc_dma.c ****   if (dma == XMC_DMA0)
 183:../Libraries/XMCLib/src/xmc_dma.c ****   {
 184:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 185:../Libraries/XMCLib/src/xmc_dma.c ****     status = !XMC_SCU_RESET_IsPeripheralResetAsserted(XMC_SCU_PERIPHERAL_RESET_GPDMA0);
 448              	 .loc 2 185 0
 449 0008 1E48     	 ldr r0,.L27
 450 000a FFF7FEFF 	 bl XMC_SCU_RESET_IsPeripheralResetAsserted
 451 000e 0346     	 mov r3,r0
 452 0010 002B     	 cmp r3,#0
 453 0012 14BF     	 ite ne
 454 0014 0123     	 movne r3,#1
 455 0016 0023     	 moveq r3,#0
 456 0018 DBB2     	 uxtb r3,r3
 457 001a 83F00103 	 eor r3,r3,#1
 458 001e DBB2     	 uxtb r3,r3
 459 0020 FB73     	 strb r3,[r7,#15]
 460 0022 FB7B     	 ldrb r3,[r7,#15]
 461 0024 03F00103 	 and r3,r3,#1
 462 0028 FB73     	 strb r3,[r7,#15]
 186:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(CLOCK_GATING_SUPPORTED)
 187:../Libraries/XMCLib/src/xmc_dma.c ****     status = status && !XMC_SCU_CLOCK_IsPeripheralClockGated(XMC_SCU_PERIPHERAL_CLOCK_GPDMA0);
 463              	 .loc 2 187 0
 464 002a FB7B     	 ldrb r3,[r7,#15]
 465 002c 002B     	 cmp r3,#0
 466 002e 0AD0     	 beq .L21
 467              	 .loc 2 187 0 is_stmt 0 discriminator 1
 468 0030 1448     	 ldr r0,.L27
 469 0032 FFF7FEFF 	 bl XMC_SCU_CLOCK_IsPeripheralClockGated
 470 0036 0346     	 mov r3,r0
 471 0038 83F00103 	 eor r3,r3,#1
 472 003c DBB2     	 uxtb r3,r3
 473 003e 002B     	 cmp r3,#0
 474 0040 01D0     	 beq .L21
 475              	 .loc 2 187 0 discriminator 3
 476 0042 0123     	 movs r3,#1
 477 0044 00E0     	 b .L22
 478              	.L21:
 479              	 .loc 2 187 0 discriminator 4
 480 0046 0023     	 movs r3,#0
 481              	.L22:
 482              	 .loc 2 187 0 discriminator 6
 483 0048 FB73     	 strb r3,[r7,#15]
 484 004a FB7B     	 ldrb r3,[r7,#15]
 485 004c 03F00103 	 and r3,r3,#1
 486 0050 FB73     	 strb r3,[r7,#15]
 188:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 189:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 190:../Libraries/XMCLib/src/xmc_dma.c ****   }
 191:../Libraries/XMCLib/src/xmc_dma.c ****   else
 192:../Libraries/XMCLib/src/xmc_dma.c ****   {
 193:../Libraries/XMCLib/src/xmc_dma.c ****     status = !XMC_SCU_RESET_IsPeripheralResetAsserted(XMC_SCU_PERIPHERAL_RESET_GPDMA1);
 194:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(CLOCK_GATING_SUPPORTED)
 195:../Libraries/XMCLib/src/xmc_dma.c ****     status = status && !XMC_SCU_CLOCK_IsPeripheralClockGated(XMC_SCU_PERIPHERAL_CLOCK_GPDMA1);
 196:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 197:../Libraries/XMCLib/src/xmc_dma.c ****   }
 198:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 199:../Libraries/XMCLib/src/xmc_dma.c **** 
 200:../Libraries/XMCLib/src/xmc_dma.c ****   /* DMA reset is not asserted and peripheral clock is not gated */
 201:../Libraries/XMCLib/src/xmc_dma.c ****   if (status == true)
 487              	 .loc 2 201 0 is_stmt 1 discriminator 6
 488 0052 FB7B     	 ldrb r3,[r7,#15]
 489 0054 002B     	 cmp r3,#0
 490 0056 0FD0     	 beq .L23
 202:../Libraries/XMCLib/src/xmc_dma.c ****   {
 203:../Libraries/XMCLib/src/xmc_dma.c ****     status = status && (dma->DMACFGREG != 0U);
 491              	 .loc 2 203 0
 492 0058 FB7B     	 ldrb r3,[r7,#15]
 493 005a 002B     	 cmp r3,#0
 494 005c 06D0     	 beq .L24
 495              	 .loc 2 203 0 is_stmt 0 discriminator 1
 496 005e 7B68     	 ldr r3,[r7,#4]
 497 0060 D3F89833 	 ldr r3,[r3,#920]
 498 0064 002B     	 cmp r3,#0
 499 0066 01D0     	 beq .L24
 500              	 .loc 2 203 0 discriminator 3
 501 0068 0123     	 movs r3,#1
 502 006a 00E0     	 b .L25
 503              	.L24:
 504              	 .loc 2 203 0 discriminator 4
 505 006c 0023     	 movs r3,#0
 506              	.L25:
 507              	 .loc 2 203 0 discriminator 6
 508 006e FB73     	 strb r3,[r7,#15]
 509 0070 FB7B     	 ldrb r3,[r7,#15]
 510 0072 03F00103 	 and r3,r3,#1
 511 0076 FB73     	 strb r3,[r7,#15]
 512              	.L23:
 204:../Libraries/XMCLib/src/xmc_dma.c ****   }
 205:../Libraries/XMCLib/src/xmc_dma.c **** 
 206:../Libraries/XMCLib/src/xmc_dma.c ****   return status;
 513              	 .loc 2 206 0 is_stmt 1
 514 0078 FB7B     	 ldrb r3,[r7,#15]
 207:../Libraries/XMCLib/src/xmc_dma.c **** }
 515              	 .loc 2 207 0
 516 007a 1846     	 mov r0,r3
 517 007c 1037     	 adds r7,r7,#16
 518              	.LCFI54:
 519              	 .cfi_def_cfa_offset 8
 520 007e BD46     	 mov sp,r7
 521              	.LCFI55:
 522              	 .cfi_def_cfa_register 13
 523              	 
 524 0080 80BD     	 pop {r7,pc}
 525              	.L28:
 526 0082 00BF     	 .align 2
 527              	.L27:
 528 0084 10000020 	 .word 536870928
 529              	 .cfi_endproc
 530              	.LFE187:
 532              	 .section .text.XMC_DMA_EnableRequestLine,"ax",%progbits
 533              	 .align 2
 534              	 .global XMC_DMA_EnableRequestLine
 535              	 .thumb
 536              	 .thumb_func
 538              	XMC_DMA_EnableRequestLine:
 539              	.LFB188:
 208:../Libraries/XMCLib/src/xmc_dma.c **** 
 209:../Libraries/XMCLib/src/xmc_dma.c **** /* Enable request line */
 210:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_EnableRequestLine(XMC_DMA_t *const dma, uint8_t line, uint8_t peripheral)
 211:../Libraries/XMCLib/src/xmc_dma.c **** {
 540              	 .loc 2 211 0
 541              	 .cfi_startproc
 542              	 
 543              	 
 544              	 
 545 0000 80B4     	 push {r7}
 546              	.LCFI56:
 547              	 .cfi_def_cfa_offset 4
 548              	 .cfi_offset 7,-4
 549 0002 83B0     	 sub sp,sp,#12
 550              	.LCFI57:
 551              	 .cfi_def_cfa_offset 16
 552 0004 00AF     	 add r7,sp,#0
 553              	.LCFI58:
 554              	 .cfi_def_cfa_register 7
 555 0006 7860     	 str r0,[r7,#4]
 556 0008 0B46     	 mov r3,r1
 557 000a FB70     	 strb r3,[r7,#3]
 558 000c 1346     	 mov r3,r2
 559 000e BB70     	 strb r3,[r7,#2]
 212:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 213:../Libraries/XMCLib/src/xmc_dma.c ****   if (dma == XMC_DMA0)
 214:../Libraries/XMCLib/src/xmc_dma.c ****   {
 215:../Libraries/XMCLib/src/xmc_dma.c **** #else
 216:../Libraries/XMCLib/src/xmc_dma.c ****   XMC_UNUSED_ARG(dma);
 217:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 218:../Libraries/XMCLib/src/xmc_dma.c ****     DLR->SRSEL0 = ((DLR->SRSEL0 & (uint32_t)~(DLR_SRSEL_RS_MSK << (line * DLR_SRSEL_RS_BITSIZE))) |
 560              	 .loc 2 218 0
 561 0010 0F48     	 ldr r0,.L30
 562 0012 0F4B     	 ldr r3,.L30
 563 0014 9A68     	 ldr r2,[r3,#8]
 564 0016 FB78     	 ldrb r3,[r7,#3]
 565 0018 9B00     	 lsls r3,r3,#2
 566 001a 1946     	 mov r1,r3
 567 001c 0F23     	 movs r3,#15
 568 001e 8B40     	 lsls r3,r3,r1
 569 0020 DB43     	 mvns r3,r3
 570 0022 1A40     	 ands r2,r2,r3
 219:../Libraries/XMCLib/src/xmc_dma.c ****                    ((uint32_t)peripheral << (line * DLR_SRSEL_RS_BITSIZE)));
 571              	 .loc 2 219 0
 572 0024 BB78     	 ldrb r3,[r7,#2]
 573 0026 F978     	 ldrb r1,[r7,#3]
 574 0028 8900     	 lsls r1,r1,#2
 575 002a 8B40     	 lsls r3,r3,r1
 218:../Libraries/XMCLib/src/xmc_dma.c ****                    ((uint32_t)peripheral << (line * DLR_SRSEL_RS_BITSIZE)));
 576              	 .loc 2 218 0
 577 002c 1343     	 orrs r3,r3,r2
 578 002e 8360     	 str r3,[r0,#8]
 220:../Libraries/XMCLib/src/xmc_dma.c ****     DLR->LNEN |= (0x1UL << (line & GPDMA0_CH_CFGH_PER_Msk));
 579              	 .loc 2 220 0
 580 0030 0749     	 ldr r1,.L30
 581 0032 074B     	 ldr r3,.L30
 582 0034 1A69     	 ldr r2,[r3,#16]
 583 0036 FB78     	 ldrb r3,[r7,#3]
 584 0038 03F00703 	 and r3,r3,#7
 585 003c 0120     	 movs r0,#1
 586 003e 00FA03F3 	 lsl r3,r0,r3
 587 0042 1343     	 orrs r3,r3,r2
 588 0044 0B61     	 str r3,[r1,#16]
 221:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 222:../Libraries/XMCLib/src/xmc_dma.c ****   }
 223:../Libraries/XMCLib/src/xmc_dma.c ****   else
 224:../Libraries/XMCLib/src/xmc_dma.c ****   {
 225:../Libraries/XMCLib/src/xmc_dma.c ****     DLR->SRSEL1 = ((DLR->SRSEL1 & (uint32_t)~(DLR_SRSEL_RS_MSK << (line * DLR_SRSEL_RS_BITSIZE))) |
 226:../Libraries/XMCLib/src/xmc_dma.c ****                    ((uint32_t)peripheral << (line * DLR_SRSEL_RS_BITSIZE)));
 227:../Libraries/XMCLib/src/xmc_dma.c ****     DLR->LNEN |= (0x100UL << line);
 228:../Libraries/XMCLib/src/xmc_dma.c ****   }
 229:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 230:../Libraries/XMCLib/src/xmc_dma.c **** }
 589              	 .loc 2 230 0
 590 0046 0C37     	 adds r7,r7,#12
 591              	.LCFI59:
 592              	 .cfi_def_cfa_offset 4
 593 0048 BD46     	 mov sp,r7
 594              	.LCFI60:
 595              	 .cfi_def_cfa_register 13
 596              	 
 597 004a 5DF8047B 	 ldr r7,[sp],#4
 598              	.LCFI61:
 599              	 .cfi_restore 7
 600              	 .cfi_def_cfa_offset 0
 601 004e 7047     	 bx lr
 602              	.L31:
 603              	 .align 2
 604              	.L30:
 605 0050 00490050 	 .word 1342195968
 606              	 .cfi_endproc
 607              	.LFE188:
 609              	 .section .text.XMC_DMA_DisableRequestLine,"ax",%progbits
 610              	 .align 2
 611              	 .global XMC_DMA_DisableRequestLine
 612              	 .thumb
 613              	 .thumb_func
 615              	XMC_DMA_DisableRequestLine:
 616              	.LFB189:
 231:../Libraries/XMCLib/src/xmc_dma.c **** 
 232:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_DisableRequestLine(XMC_DMA_t *const dma, uint8_t line)
 233:../Libraries/XMCLib/src/xmc_dma.c **** {
 617              	 .loc 2 233 0
 618              	 .cfi_startproc
 619              	 
 620              	 
 621              	 
 622 0000 80B4     	 push {r7}
 623              	.LCFI62:
 624              	 .cfi_def_cfa_offset 4
 625              	 .cfi_offset 7,-4
 626 0002 83B0     	 sub sp,sp,#12
 627              	.LCFI63:
 628              	 .cfi_def_cfa_offset 16
 629 0004 00AF     	 add r7,sp,#0
 630              	.LCFI64:
 631              	 .cfi_def_cfa_register 7
 632 0006 7860     	 str r0,[r7,#4]
 633 0008 0B46     	 mov r3,r1
 634 000a FB70     	 strb r3,[r7,#3]
 234:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 235:../Libraries/XMCLib/src/xmc_dma.c ****   if (dma == XMC_DMA0)
 236:../Libraries/XMCLib/src/xmc_dma.c ****   {
 237:../Libraries/XMCLib/src/xmc_dma.c **** #else
 238:../Libraries/XMCLib/src/xmc_dma.c ****   XMC_UNUSED_ARG(dma);
 239:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 240:../Libraries/XMCLib/src/xmc_dma.c ****     DLR->LNEN &= ~(0x1UL << line);
 635              	 .loc 2 240 0
 636 000c 0749     	 ldr r1,.L33
 637 000e 074B     	 ldr r3,.L33
 638 0010 1A69     	 ldr r2,[r3,#16]
 639 0012 FB78     	 ldrb r3,[r7,#3]
 640 0014 0120     	 movs r0,#1
 641 0016 00FA03F3 	 lsl r3,r0,r3
 642 001a DB43     	 mvns r3,r3
 643 001c 1340     	 ands r3,r3,r2
 644 001e 0B61     	 str r3,[r1,#16]
 241:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 242:../Libraries/XMCLib/src/xmc_dma.c ****   }
 243:../Libraries/XMCLib/src/xmc_dma.c ****   else
 244:../Libraries/XMCLib/src/xmc_dma.c ****   {
 245:../Libraries/XMCLib/src/xmc_dma.c ****     DLR->LNEN &= ~(0x100UL << line);
 246:../Libraries/XMCLib/src/xmc_dma.c ****   }
 247:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 248:../Libraries/XMCLib/src/xmc_dma.c **** }
 645              	 .loc 2 248 0
 646 0020 0C37     	 adds r7,r7,#12
 647              	.LCFI65:
 648              	 .cfi_def_cfa_offset 4
 649 0022 BD46     	 mov sp,r7
 650              	.LCFI66:
 651              	 .cfi_def_cfa_register 13
 652              	 
 653 0024 5DF8047B 	 ldr r7,[sp],#4
 654              	.LCFI67:
 655              	 .cfi_restore 7
 656              	 .cfi_def_cfa_offset 0
 657 0028 7047     	 bx lr
 658              	.L34:
 659 002a 00BF     	 .align 2
 660              	.L33:
 661 002c 00490050 	 .word 1342195968
 662              	 .cfi_endproc
 663              	.LFE189:
 665              	 .section .text.XMC_DMA_ClearRequestLine,"ax",%progbits
 666              	 .align 2
 667              	 .global XMC_DMA_ClearRequestLine
 668              	 .thumb
 669              	 .thumb_func
 671              	XMC_DMA_ClearRequestLine:
 672              	.LFB190:
 249:../Libraries/XMCLib/src/xmc_dma.c **** 
 250:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_ClearRequestLine(XMC_DMA_t *const dma, uint8_t line)
 251:../Libraries/XMCLib/src/xmc_dma.c **** {
 673              	 .loc 2 251 0
 674              	 .cfi_startproc
 675              	 
 676              	 
 677              	 
 678 0000 80B4     	 push {r7}
 679              	.LCFI68:
 680              	 .cfi_def_cfa_offset 4
 681              	 .cfi_offset 7,-4
 682 0002 83B0     	 sub sp,sp,#12
 683              	.LCFI69:
 684              	 .cfi_def_cfa_offset 16
 685 0004 00AF     	 add r7,sp,#0
 686              	.LCFI70:
 687              	 .cfi_def_cfa_register 7
 688 0006 7860     	 str r0,[r7,#4]
 689 0008 0B46     	 mov r3,r1
 690 000a FB70     	 strb r3,[r7,#3]
 252:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 253:../Libraries/XMCLib/src/xmc_dma.c ****   if (dma == XMC_DMA0)
 254:../Libraries/XMCLib/src/xmc_dma.c ****   {
 255:../Libraries/XMCLib/src/xmc_dma.c **** #else
 256:../Libraries/XMCLib/src/xmc_dma.c ****   XMC_UNUSED_ARG(dma);
 257:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 258:../Libraries/XMCLib/src/xmc_dma.c ****     DLR->LNEN &= ~(0x1UL << line);
 691              	 .loc 2 258 0
 692 000c 0B49     	 ldr r1,.L36
 693 000e 0B4B     	 ldr r3,.L36
 694 0010 1A69     	 ldr r2,[r3,#16]
 695 0012 FB78     	 ldrb r3,[r7,#3]
 696 0014 0120     	 movs r0,#1
 697 0016 00FA03F3 	 lsl r3,r0,r3
 698 001a DB43     	 mvns r3,r3
 699 001c 1340     	 ands r3,r3,r2
 700 001e 0B61     	 str r3,[r1,#16]
 259:../Libraries/XMCLib/src/xmc_dma.c ****     DLR->LNEN |= 0x1UL << line;
 701              	 .loc 2 259 0
 702 0020 0649     	 ldr r1,.L36
 703 0022 064B     	 ldr r3,.L36
 704 0024 1A69     	 ldr r2,[r3,#16]
 705 0026 FB78     	 ldrb r3,[r7,#3]
 706 0028 0120     	 movs r0,#1
 707 002a 00FA03F3 	 lsl r3,r0,r3
 708 002e 1343     	 orrs r3,r3,r2
 709 0030 0B61     	 str r3,[r1,#16]
 260:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 261:../Libraries/XMCLib/src/xmc_dma.c ****   }
 262:../Libraries/XMCLib/src/xmc_dma.c ****   else
 263:../Libraries/XMCLib/src/xmc_dma.c ****   {
 264:../Libraries/XMCLib/src/xmc_dma.c ****     DLR->LNEN &= ~(0x100UL << line);
 265:../Libraries/XMCLib/src/xmc_dma.c ****     DLR->LNEN |= 0x100UL << line;
 266:../Libraries/XMCLib/src/xmc_dma.c ****   }
 267:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 268:../Libraries/XMCLib/src/xmc_dma.c **** }
 710              	 .loc 2 268 0
 711 0032 0C37     	 adds r7,r7,#12
 712              	.LCFI71:
 713              	 .cfi_def_cfa_offset 4
 714 0034 BD46     	 mov sp,r7
 715              	.LCFI72:
 716              	 .cfi_def_cfa_register 13
 717              	 
 718 0036 5DF8047B 	 ldr r7,[sp],#4
 719              	.LCFI73:
 720              	 .cfi_restore 7
 721              	 .cfi_def_cfa_offset 0
 722 003a 7047     	 bx lr
 723              	.L37:
 724              	 .align 2
 725              	.L36:
 726 003c 00490050 	 .word 1342195968
 727              	 .cfi_endproc
 728              	.LFE190:
 730              	 .section .text.XMC_DMA_GetOverrunStatus,"ax",%progbits
 731              	 .align 2
 732              	 .global XMC_DMA_GetOverrunStatus
 733              	 .thumb
 734              	 .thumb_func
 736              	XMC_DMA_GetOverrunStatus:
 737              	.LFB191:
 269:../Libraries/XMCLib/src/xmc_dma.c **** 
 270:../Libraries/XMCLib/src/xmc_dma.c **** /* Get DMA DLR overrun status */
 271:../Libraries/XMCLib/src/xmc_dma.c **** bool XMC_DMA_GetOverrunStatus(XMC_DMA_t *const dma, uint8_t line)
 272:../Libraries/XMCLib/src/xmc_dma.c **** {
 738              	 .loc 2 272 0
 739              	 .cfi_startproc
 740              	 
 741              	 
 742              	 
 743 0000 80B4     	 push {r7}
 744              	.LCFI74:
 745              	 .cfi_def_cfa_offset 4
 746              	 .cfi_offset 7,-4
 747 0002 85B0     	 sub sp,sp,#20
 748              	.LCFI75:
 749              	 .cfi_def_cfa_offset 24
 750 0004 00AF     	 add r7,sp,#0
 751              	.LCFI76:
 752              	 .cfi_def_cfa_register 7
 753 0006 7860     	 str r0,[r7,#4]
 754 0008 0B46     	 mov r3,r1
 755 000a FB70     	 strb r3,[r7,#3]
 273:../Libraries/XMCLib/src/xmc_dma.c ****   bool status;
 274:../Libraries/XMCLib/src/xmc_dma.c **** 
 275:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 276:../Libraries/XMCLib/src/xmc_dma.c ****   if (dma == XMC_DMA0)
 277:../Libraries/XMCLib/src/xmc_dma.c ****   {
 278:../Libraries/XMCLib/src/xmc_dma.c **** #else
 279:../Libraries/XMCLib/src/xmc_dma.c ****   XMC_UNUSED_ARG(dma);
 280:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 281:../Libraries/XMCLib/src/xmc_dma.c ****     status = (bool)(DLR->OVRSTAT & (0x1UL << line));
 756              	 .loc 2 281 0
 757 000c 094B     	 ldr r3,.L40
 758 000e 1A68     	 ldr r2,[r3]
 759 0010 FB78     	 ldrb r3,[r7,#3]
 760 0012 22FA03F3 	 lsr r3,r2,r3
 761 0016 03F00103 	 and r3,r3,#1
 762 001a 002B     	 cmp r3,#0
 763 001c 14BF     	 ite ne
 764 001e 0123     	 movne r3,#1
 765 0020 0023     	 moveq r3,#0
 766 0022 FB73     	 strb r3,[r7,#15]
 282:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 283:../Libraries/XMCLib/src/xmc_dma.c ****   }
 284:../Libraries/XMCLib/src/xmc_dma.c ****   else
 285:../Libraries/XMCLib/src/xmc_dma.c ****   {
 286:../Libraries/XMCLib/src/xmc_dma.c ****     status = (bool)(DLR->OVRSTAT & (0x100UL << line));
 287:../Libraries/XMCLib/src/xmc_dma.c ****   }
 288:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 289:../Libraries/XMCLib/src/xmc_dma.c **** 
 290:../Libraries/XMCLib/src/xmc_dma.c ****   return status;
 767              	 .loc 2 290 0
 768 0024 FB7B     	 ldrb r3,[r7,#15]
 291:../Libraries/XMCLib/src/xmc_dma.c **** }
 769              	 .loc 2 291 0
 770 0026 1846     	 mov r0,r3
 771 0028 1437     	 adds r7,r7,#20
 772              	.LCFI77:
 773              	 .cfi_def_cfa_offset 4
 774 002a BD46     	 mov sp,r7
 775              	.LCFI78:
 776              	 .cfi_def_cfa_register 13
 777              	 
 778 002c 5DF8047B 	 ldr r7,[sp],#4
 779              	.LCFI79:
 780              	 .cfi_restore 7
 781              	 .cfi_def_cfa_offset 0
 782 0030 7047     	 bx lr
 783              	.L41:
 784 0032 00BF     	 .align 2
 785              	.L40:
 786 0034 00490050 	 .word 1342195968
 787              	 .cfi_endproc
 788              	.LFE191:
 790              	 .section .text.XMC_DMA_ClearOverrunStatus,"ax",%progbits
 791              	 .align 2
 792              	 .global XMC_DMA_ClearOverrunStatus
 793              	 .thumb
 794              	 .thumb_func
 796              	XMC_DMA_ClearOverrunStatus:
 797              	.LFB192:
 292:../Libraries/XMCLib/src/xmc_dma.c **** 
 293:../Libraries/XMCLib/src/xmc_dma.c **** /* Clear DMA DLR overrun status */
 294:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_ClearOverrunStatus(XMC_DMA_t *const dma, const uint8_t line)
 295:../Libraries/XMCLib/src/xmc_dma.c **** {
 798              	 .loc 2 295 0
 799              	 .cfi_startproc
 800              	 
 801              	 
 802              	 
 803 0000 80B4     	 push {r7}
 804              	.LCFI80:
 805              	 .cfi_def_cfa_offset 4
 806              	 .cfi_offset 7,-4
 807 0002 83B0     	 sub sp,sp,#12
 808              	.LCFI81:
 809              	 .cfi_def_cfa_offset 16
 810 0004 00AF     	 add r7,sp,#0
 811              	.LCFI82:
 812              	 .cfi_def_cfa_register 7
 813 0006 7860     	 str r0,[r7,#4]
 814 0008 0B46     	 mov r3,r1
 815 000a FB70     	 strb r3,[r7,#3]
 296:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 297:../Libraries/XMCLib/src/xmc_dma.c ****   if (dma == XMC_DMA0)
 298:../Libraries/XMCLib/src/xmc_dma.c ****   {
 299:../Libraries/XMCLib/src/xmc_dma.c **** #else
 300:../Libraries/XMCLib/src/xmc_dma.c ****   XMC_UNUSED_ARG(dma);
 301:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 302:../Libraries/XMCLib/src/xmc_dma.c ****     DLR->OVRCLR = (uint32_t)(0x1UL << line);
 816              	 .loc 2 302 0
 817 000c 054A     	 ldr r2,.L43
 818 000e FB78     	 ldrb r3,[r7,#3]
 819 0010 0121     	 movs r1,#1
 820 0012 01FA03F3 	 lsl r3,r1,r3
 821 0016 5360     	 str r3,[r2,#4]
 303:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 304:../Libraries/XMCLib/src/xmc_dma.c ****   }
 305:../Libraries/XMCLib/src/xmc_dma.c ****   else
 306:../Libraries/XMCLib/src/xmc_dma.c ****   {
 307:../Libraries/XMCLib/src/xmc_dma.c ****     DLR->OVRCLR = (uint32_t)(0x100UL << line);
 308:../Libraries/XMCLib/src/xmc_dma.c ****   }
 309:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 310:../Libraries/XMCLib/src/xmc_dma.c **** }
 822              	 .loc 2 310 0
 823 0018 0C37     	 adds r7,r7,#12
 824              	.LCFI83:
 825              	 .cfi_def_cfa_offset 4
 826 001a BD46     	 mov sp,r7
 827              	.LCFI84:
 828              	 .cfi_def_cfa_register 13
 829              	 
 830 001c 5DF8047B 	 ldr r7,[sp],#4
 831              	.LCFI85:
 832              	 .cfi_restore 7
 833              	 .cfi_def_cfa_offset 0
 834 0020 7047     	 bx lr
 835              	.L44:
 836 0022 00BF     	 .align 2
 837              	.L43:
 838 0024 00490050 	 .word 1342195968
 839              	 .cfi_endproc
 840              	.LFE192:
 842              	 .section .text.XMC_DMA_CH_Disable,"ax",%progbits
 843              	 .align 2
 844              	 .global XMC_DMA_CH_Disable
 845              	 .thumb
 846              	 .thumb_func
 848              	XMC_DMA_CH_Disable:
 849              	.LFB193:
 311:../Libraries/XMCLib/src/xmc_dma.c **** 
 312:../Libraries/XMCLib/src/xmc_dma.c **** /* Disable DMA channel */
 313:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_Disable(XMC_DMA_t *const dma, const uint8_t channel)
 314:../Libraries/XMCLib/src/xmc_dma.c **** {
 850              	 .loc 2 314 0
 851              	 .cfi_startproc
 852              	 
 853              	 
 854              	 
 855 0000 80B4     	 push {r7}
 856              	.LCFI86:
 857              	 .cfi_def_cfa_offset 4
 858              	 .cfi_offset 7,-4
 859 0002 83B0     	 sub sp,sp,#12
 860              	.LCFI87:
 861              	 .cfi_def_cfa_offset 16
 862 0004 00AF     	 add r7,sp,#0
 863              	.LCFI88:
 864              	 .cfi_def_cfa_register 7
 865 0006 7860     	 str r0,[r7,#4]
 866 0008 0B46     	 mov r3,r1
 867 000a FB70     	 strb r3,[r7,#3]
 315:../Libraries/XMCLib/src/xmc_dma.c ****   dma->CHENREG = (uint32_t)(0x100UL << channel);
 868              	 .loc 2 315 0
 869 000c FB78     	 ldrb r3,[r7,#3]
 870 000e 4FF48072 	 mov r2,#256
 871 0012 9A40     	 lsls r2,r2,r3
 872 0014 7B68     	 ldr r3,[r7,#4]
 873 0016 C3F8A023 	 str r2,[r3,#928]
 316:../Libraries/XMCLib/src/xmc_dma.c ****   while ((dma->CHENREG & (uint32_t)(0x1UL << channel)) != 0U)
 874              	 .loc 2 316 0
 875 001a 00BF     	 nop
 876              	.L46:
 877              	 .loc 2 316 0 is_stmt 0 discriminator 1
 878 001c 7B68     	 ldr r3,[r7,#4]
 879 001e D3F8A023 	 ldr r2,[r3,#928]
 880 0022 FB78     	 ldrb r3,[r7,#3]
 881 0024 22FA03F3 	 lsr r3,r2,r3
 882 0028 03F00103 	 and r3,r3,#1
 883 002c 002B     	 cmp r3,#0
 884 002e F5D1     	 bne .L46
 317:../Libraries/XMCLib/src/xmc_dma.c ****   {
 318:../Libraries/XMCLib/src/xmc_dma.c ****     /* wait until channel is disabled */
 319:../Libraries/XMCLib/src/xmc_dma.c ****   }
 320:../Libraries/XMCLib/src/xmc_dma.c **** }
 885              	 .loc 2 320 0 is_stmt 1
 886 0030 0C37     	 adds r7,r7,#12
 887              	.LCFI89:
 888              	 .cfi_def_cfa_offset 4
 889 0032 BD46     	 mov sp,r7
 890              	.LCFI90:
 891              	 .cfi_def_cfa_register 13
 892              	 
 893 0034 5DF8047B 	 ldr r7,[sp],#4
 894              	.LCFI91:
 895              	 .cfi_restore 7
 896              	 .cfi_def_cfa_offset 0
 897 0038 7047     	 bx lr
 898              	 .cfi_endproc
 899              	.LFE193:
 901 003a 00BF     	 .section .text.XMC_DMA_CH_IsEnabled,"ax",%progbits
 902              	 .align 2
 903              	 .global XMC_DMA_CH_IsEnabled
 904              	 .thumb
 905              	 .thumb_func
 907              	XMC_DMA_CH_IsEnabled:
 908              	.LFB194:
 321:../Libraries/XMCLib/src/xmc_dma.c **** 
 322:../Libraries/XMCLib/src/xmc_dma.c **** /* Check if a DMA channel is enabled */
 323:../Libraries/XMCLib/src/xmc_dma.c **** bool XMC_DMA_CH_IsEnabled(XMC_DMA_t *const dma, const uint8_t channel)
 324:../Libraries/XMCLib/src/xmc_dma.c **** {
 909              	 .loc 2 324 0
 910              	 .cfi_startproc
 911              	 
 912              	 
 913              	 
 914 0000 80B4     	 push {r7}
 915              	.LCFI92:
 916              	 .cfi_def_cfa_offset 4
 917              	 .cfi_offset 7,-4
 918 0002 83B0     	 sub sp,sp,#12
 919              	.LCFI93:
 920              	 .cfi_def_cfa_offset 16
 921 0004 00AF     	 add r7,sp,#0
 922              	.LCFI94:
 923              	 .cfi_def_cfa_register 7
 924 0006 7860     	 str r0,[r7,#4]
 925 0008 0B46     	 mov r3,r1
 926 000a FB70     	 strb r3,[r7,#3]
 325:../Libraries/XMCLib/src/xmc_dma.c ****   return (bool)(dma->CHENREG & ((uint32_t)1U << channel));
 927              	 .loc 2 325 0
 928 000c 7B68     	 ldr r3,[r7,#4]
 929 000e D3F8A023 	 ldr r2,[r3,#928]
 930 0012 FB78     	 ldrb r3,[r7,#3]
 931 0014 22FA03F3 	 lsr r3,r2,r3
 932 0018 03F00103 	 and r3,r3,#1
 933 001c 002B     	 cmp r3,#0
 934 001e 14BF     	 ite ne
 935 0020 0123     	 movne r3,#1
 936 0022 0023     	 moveq r3,#0
 937 0024 DBB2     	 uxtb r3,r3
 326:../Libraries/XMCLib/src/xmc_dma.c **** }
 938              	 .loc 2 326 0
 939 0026 1846     	 mov r0,r3
 940 0028 0C37     	 adds r7,r7,#12
 941              	.LCFI95:
 942              	 .cfi_def_cfa_offset 4
 943 002a BD46     	 mov sp,r7
 944              	.LCFI96:
 945              	 .cfi_def_cfa_register 13
 946              	 
 947 002c 5DF8047B 	 ldr r7,[sp],#4
 948              	.LCFI97:
 949              	 .cfi_restore 7
 950              	 .cfi_def_cfa_offset 0
 951 0030 7047     	 bx lr
 952              	 .cfi_endproc
 953              	.LFE194:
 955 0032 00BF     	 .section .text.XMC_DMA_CH_Init,"ax",%progbits
 956              	 .align 2
 957              	 .global XMC_DMA_CH_Init
 958              	 .thumb
 959              	 .thumb_func
 961              	XMC_DMA_CH_Init:
 962              	.LFB195:
 327:../Libraries/XMCLib/src/xmc_dma.c **** 
 328:../Libraries/XMCLib/src/xmc_dma.c **** /* Initialize DMA channel */
 329:../Libraries/XMCLib/src/xmc_dma.c **** XMC_DMA_CH_STATUS_t XMC_DMA_CH_Init(XMC_DMA_t *const dma, const uint8_t channel, const XMC_DMA_CH_C
 330:../Libraries/XMCLib/src/xmc_dma.c **** {
 963              	 .loc 2 330 0
 964              	 .cfi_startproc
 965              	 
 966              	 
 967 0000 80B5     	 push {r7,lr}
 968              	.LCFI98:
 969              	 .cfi_def_cfa_offset 8
 970              	 .cfi_offset 7,-8
 971              	 .cfi_offset 14,-4
 972 0002 86B0     	 sub sp,sp,#24
 973              	.LCFI99:
 974              	 .cfi_def_cfa_offset 32
 975 0004 00AF     	 add r7,sp,#0
 976              	.LCFI100:
 977              	 .cfi_def_cfa_register 7
 978 0006 F860     	 str r0,[r7,#12]
 979 0008 0B46     	 mov r3,r1
 980 000a 7A60     	 str r2,[r7,#4]
 981 000c FB72     	 strb r3,[r7,#11]
 331:../Libraries/XMCLib/src/xmc_dma.c ****   XMC_DMA_CH_STATUS_t status;
 332:../Libraries/XMCLib/src/xmc_dma.c ****   uint8_t line;
 333:../Libraries/XMCLib/src/xmc_dma.c ****   uint8_t peripheral;
 334:../Libraries/XMCLib/src/xmc_dma.c **** 
 335:../Libraries/XMCLib/src/xmc_dma.c ****   if (XMC_DMA_IsEnabled(dma) == true)
 982              	 .loc 2 335 0
 983 000e F868     	 ldr r0,[r7,#12]
 984 0010 FFF7FEFF 	 bl XMC_DMA_IsEnabled
 985 0014 0346     	 mov r3,r0
 986 0016 002B     	 cmp r3,#0
 987 0018 00F0DB81 	 beq .L50
 336:../Libraries/XMCLib/src/xmc_dma.c ****   {
 337:../Libraries/XMCLib/src/xmc_dma.c ****     if (XMC_DMA_CH_IsEnabled(dma, channel) == false)
 988              	 .loc 2 337 0
 989 001c FB7A     	 ldrb r3,[r7,#11]
 990 001e F868     	 ldr r0,[r7,#12]
 991 0020 1946     	 mov r1,r3
 992 0022 FFF7FEFF 	 bl XMC_DMA_CH_IsEnabled
 993 0026 0346     	 mov r3,r0
 994 0028 83F00103 	 eor r3,r3,#1
 995 002c DBB2     	 uxtb r3,r3
 996 002e 002B     	 cmp r3,#0
 997 0030 00F0CC81 	 beq .L51
 338:../Libraries/XMCLib/src/xmc_dma.c ****     {
 339:../Libraries/XMCLib/src/xmc_dma.c ****       dma->CH[channel].SAR = config->src_addr;
 998              	 .loc 2 339 0
 999 0034 FB7A     	 ldrb r3,[r7,#11]
 1000 0036 7A68     	 ldr r2,[r7,#4]
 1001 0038 5268     	 ldr r2,[r2,#4]
 1002 003a F968     	 ldr r1,[r7,#12]
 1003 003c 5820     	 movs r0,#88
 1004 003e 00FB03F3 	 mul r3,r0,r3
 1005 0042 0B44     	 add r3,r3,r1
 1006 0044 1A60     	 str r2,[r3]
 340:../Libraries/XMCLib/src/xmc_dma.c ****       dma->CH[channel].DAR = config->dst_addr;
 1007              	 .loc 2 340 0
 1008 0046 FB7A     	 ldrb r3,[r7,#11]
 1009 0048 7A68     	 ldr r2,[r7,#4]
 1010 004a 9268     	 ldr r2,[r2,#8]
 1011 004c F968     	 ldr r1,[r7,#12]
 1012 004e 5820     	 movs r0,#88
 1013 0050 00FB03F3 	 mul r3,r0,r3
 1014 0054 0B44     	 add r3,r3,r1
 1015 0056 0833     	 adds r3,r3,#8
 1016 0058 1A60     	 str r2,[r3]
 341:../Libraries/XMCLib/src/xmc_dma.c ****       dma->CH[channel].LLP = (uint32_t)config->linked_list_pointer;
 1017              	 .loc 2 341 0
 1018 005a FB7A     	 ldrb r3,[r7,#11]
 1019 005c 7A68     	 ldr r2,[r7,#4]
 1020 005e D268     	 ldr r2,[r2,#12]
 1021 0060 1046     	 mov r0,r2
 1022 0062 FA68     	 ldr r2,[r7,#12]
 1023 0064 5821     	 movs r1,#88
 1024 0066 01FB03F3 	 mul r3,r1,r3
 1025 006a 1344     	 add r3,r3,r2
 1026 006c 1033     	 adds r3,r3,#16
 1027 006e 1860     	 str r0,[r3]
 342:../Libraries/XMCLib/src/xmc_dma.c ****       dma->CH[channel].CTLH = (uint32_t)config->block_size;
 1028              	 .loc 2 342 0
 1029 0070 FB7A     	 ldrb r3,[r7,#11]
 1030 0072 7A68     	 ldr r2,[r7,#4]
 1031 0074 128B     	 ldrh r2,[r2,#24]
 1032 0076 1046     	 mov r0,r2
 1033 0078 FA68     	 ldr r2,[r7,#12]
 1034 007a 5821     	 movs r1,#88
 1035 007c 01FB03F3 	 mul r3,r1,r3
 1036 0080 1344     	 add r3,r3,r2
 1037 0082 1833     	 adds r3,r3,#24
 1038 0084 5860     	 str r0,[r3,#4]
 343:../Libraries/XMCLib/src/xmc_dma.c ****       dma->CH[channel].CTLL = config->control;
 1039              	 .loc 2 343 0
 1040 0086 FB7A     	 ldrb r3,[r7,#11]
 1041 0088 7A68     	 ldr r2,[r7,#4]
 1042 008a 1268     	 ldr r2,[r2]
 1043 008c F968     	 ldr r1,[r7,#12]
 1044 008e 5820     	 movs r0,#88
 1045 0090 00FB03F3 	 mul r3,r0,r3
 1046 0094 0B44     	 add r3,r3,r1
 1047 0096 1833     	 adds r3,r3,#24
 1048 0098 1A60     	 str r2,[r3]
 344:../Libraries/XMCLib/src/xmc_dma.c **** 
 345:../Libraries/XMCLib/src/xmc_dma.c ****       dma->CH[channel].CFGL = (uint32_t)((uint32_t)config->priority |
 1049              	 .loc 2 345 0
 1050 009a FB7A     	 ldrb r3,[r7,#11]
 1051 009c 7A68     	 ldr r2,[r7,#4]
 1052 009e D27E     	 ldrb r2,[r2,#27]
 1053 00a0 42F44062 	 orr r2,r2,#3072
 1054 00a4 F968     	 ldr r1,[r7,#12]
 1055 00a6 5820     	 movs r0,#88
 1056 00a8 00FB03F3 	 mul r3,r0,r3
 1057 00ac 0B44     	 add r3,r3,r1
 1058 00ae 4033     	 adds r3,r3,#64
 1059 00b0 1A60     	 str r2,[r3]
 346:../Libraries/XMCLib/src/xmc_dma.c ****                                          (uint32_t)GPDMA0_CH_CFGL_HS_SEL_SRC_Msk |
 347:../Libraries/XMCLib/src/xmc_dma.c ****                                          (uint32_t)GPDMA0_CH_CFGL_HS_SEL_DST_Msk);
 348:../Libraries/XMCLib/src/xmc_dma.c **** 
 349:../Libraries/XMCLib/src/xmc_dma.c ****       if ((dma == XMC_DMA0) && (channel < (uint8_t)2))
 1060              	 .loc 2 349 0
 1061 00b2 FB68     	 ldr r3,[r7,#12]
 1062 00b4 A64A     	 ldr r2,.L73
 1063 00b6 9342     	 cmp r3,r2
 1064 00b8 16D1     	 bne .L52
 1065              	 .loc 2 349 0 is_stmt 0 discriminator 1
 1066 00ba FB7A     	 ldrb r3,[r7,#11]
 1067 00bc 012B     	 cmp r3,#1
 1068 00be 13D8     	 bhi .L52
 350:../Libraries/XMCLib/src/xmc_dma.c ****       {
 351:../Libraries/XMCLib/src/xmc_dma.c ****         /* Configure scatter and gather */
 352:../Libraries/XMCLib/src/xmc_dma.c ****         dma->CH[channel].SGR = config->src_gather_control;
 1069              	 .loc 2 352 0 is_stmt 1
 1070 00c0 FB7A     	 ldrb r3,[r7,#11]
 1071 00c2 7A68     	 ldr r2,[r7,#4]
 1072 00c4 1269     	 ldr r2,[r2,#16]
 1073 00c6 F968     	 ldr r1,[r7,#12]
 1074 00c8 5820     	 movs r0,#88
 1075 00ca 00FB03F3 	 mul r3,r0,r3
 1076 00ce 0B44     	 add r3,r3,r1
 1077 00d0 4833     	 adds r3,r3,#72
 1078 00d2 1A60     	 str r2,[r3]
 353:../Libraries/XMCLib/src/xmc_dma.c ****         dma->CH[channel].DSR = config->dst_scatter_control;
 1079              	 .loc 2 353 0
 1080 00d4 FB7A     	 ldrb r3,[r7,#11]
 1081 00d6 7A68     	 ldr r2,[r7,#4]
 1082 00d8 5269     	 ldr r2,[r2,#20]
 1083 00da F968     	 ldr r1,[r7,#12]
 1084 00dc 5820     	 movs r0,#88
 1085 00de 00FB03F3 	 mul r3,r0,r3
 1086 00e2 0B44     	 add r3,r3,r1
 1087 00e4 5033     	 adds r3,r3,#80
 1088 00e6 1A60     	 str r2,[r3]
 1089              	.L52:
 354:../Libraries/XMCLib/src/xmc_dma.c ****       }
 355:../Libraries/XMCLib/src/xmc_dma.c **** 
 356:../Libraries/XMCLib/src/xmc_dma.c ****       if (config->dst_handshaking == XMC_DMA_CH_DST_HANDSHAKING_HARDWARE)
 1090              	 .loc 2 356 0
 1091 00e8 7B68     	 ldr r3,[r7,#4]
 1092 00ea 1B8C     	 ldrh r3,[r3,#32]
 1093 00ec 002B     	 cmp r3,#0
 1094 00ee 44D1     	 bne .L53
 357:../Libraries/XMCLib/src/xmc_dma.c ****       {
 358:../Libraries/XMCLib/src/xmc_dma.c ****         /* Hardware handshaking interface configuration */
 359:../Libraries/XMCLib/src/xmc_dma.c ****         if ((config->transfer_flow == (uint32_t)XMC_DMA_CH_TRANSFER_FLOW_M2P_DMA) ||
 1095              	 .loc 2 359 0
 1096 00f0 7B68     	 ldr r3,[r7,#4]
 1097 00f2 9B78     	 ldrb r3,[r3,#2]
 1098 00f4 03F07003 	 and r3,r3,#112
 1099 00f8 DBB2     	 uxtb r3,r3
 1100 00fa 102B     	 cmp r3,#16
 1101 00fc 06D0     	 beq .L54
 360:../Libraries/XMCLib/src/xmc_dma.c ****             (config->transfer_flow == (uint32_t)XMC_DMA_CH_TRANSFER_FLOW_P2P_DMA))
 1102              	 .loc 2 360 0 discriminator 1
 1103 00fe 7B68     	 ldr r3,[r7,#4]
 1104 0100 9B78     	 ldrb r3,[r3,#2]
 1105 0102 03F07003 	 and r3,r3,#112
 1106 0106 DBB2     	 uxtb r3,r3
 359:../Libraries/XMCLib/src/xmc_dma.c ****             (config->transfer_flow == (uint32_t)XMC_DMA_CH_TRANSFER_FLOW_P2P_DMA))
 1107              	 .loc 2 359 0 discriminator 1
 1108 0108 302B     	 cmp r3,#48
 1109 010a 36D1     	 bne .L53
 1110              	.L54:
 361:../Libraries/XMCLib/src/xmc_dma.c ****         {
 362:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 363:../Libraries/XMCLib/src/xmc_dma.c ****           if (dma == XMC_DMA0)
 364:../Libraries/XMCLib/src/xmc_dma.c ****           {
 365:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 366:../Libraries/XMCLib/src/xmc_dma.c ****             line = config->dst_peripheral_request & GPDMA0_CH_CFGH_PER_Msk;
 1111              	 .loc 2 366 0
 1112 010c 7B68     	 ldr r3,[r7,#4]
 1113 010e 93F82230 	 ldrb r3,[r3,#34]
 1114 0112 03F00703 	 and r3,r3,#7
 1115 0116 BB75     	 strb r3,[r7,#22]
 367:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 368:../Libraries/XMCLib/src/xmc_dma.c ****           }
 369:../Libraries/XMCLib/src/xmc_dma.c ****           else
 370:../Libraries/XMCLib/src/xmc_dma.c ****           {
 371:../Libraries/XMCLib/src/xmc_dma.c ****             line = config->dst_peripheral_request & GPDMA1_CH_CFGH_PER_Msk;
 372:../Libraries/XMCLib/src/xmc_dma.c ****           }
 373:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 374:../Libraries/XMCLib/src/xmc_dma.c ****           peripheral = config->dst_peripheral_request >> GPDMA_CH_CFGH_PER_BITSIZE;
 1116              	 .loc 2 374 0
 1117 0118 7B68     	 ldr r3,[r7,#4]
 1118 011a 93F82230 	 ldrb r3,[r3,#34]
 1119 011e 1B09     	 lsrs r3,r3,#4
 1120 0120 7B75     	 strb r3,[r7,#21]
 375:../Libraries/XMCLib/src/xmc_dma.c **** 
 376:../Libraries/XMCLib/src/xmc_dma.c ****           dma->CH[channel].CFGH |= (uint32_t)((uint32_t)line << GPDMA0_CH_CFGH_DEST_PER_Pos);
 1121              	 .loc 2 376 0
 1122 0122 FB7A     	 ldrb r3,[r7,#11]
 1123 0124 FA7A     	 ldrb r2,[r7,#11]
 1124 0126 F968     	 ldr r1,[r7,#12]
 1125 0128 5820     	 movs r0,#88
 1126 012a 00FB02F2 	 mul r2,r0,r2
 1127 012e 0A44     	 add r2,r2,r1
 1128 0130 4032     	 adds r2,r2,#64
 1129 0132 5168     	 ldr r1,[r2,#4]
 1130 0134 BA7D     	 ldrb r2,[r7,#22]
 1131 0136 D202     	 lsls r2,r2,#11
 1132 0138 0A43     	 orrs r2,r2,r1
 1133 013a F968     	 ldr r1,[r7,#12]
 1134 013c 5820     	 movs r0,#88
 1135 013e 00FB03F3 	 mul r3,r0,r3
 1136 0142 0B44     	 add r3,r3,r1
 1137 0144 4033     	 adds r3,r3,#64
 1138 0146 5A60     	 str r2,[r3,#4]
 377:../Libraries/XMCLib/src/xmc_dma.c ****           XMC_DMA_EnableRequestLine(dma, line, peripheral);
 1139              	 .loc 2 377 0
 1140 0148 BA7D     	 ldrb r2,[r7,#22]
 1141 014a 7B7D     	 ldrb r3,[r7,#21]
 1142 014c F868     	 ldr r0,[r7,#12]
 1143 014e 1146     	 mov r1,r2
 1144 0150 1A46     	 mov r2,r3
 1145 0152 FFF7FEFF 	 bl XMC_DMA_EnableRequestLine
 378:../Libraries/XMCLib/src/xmc_dma.c ****           dma->CH[channel].CFGL &= (uint32_t)~GPDMA0_CH_CFGL_HS_SEL_DST_Msk;
 1146              	 .loc 2 378 0
 1147 0156 FB7A     	 ldrb r3,[r7,#11]
 1148 0158 FA7A     	 ldrb r2,[r7,#11]
 1149 015a F968     	 ldr r1,[r7,#12]
 1150 015c 5820     	 movs r0,#88
 1151 015e 00FB02F2 	 mul r2,r0,r2
 1152 0162 0A44     	 add r2,r2,r1
 1153 0164 4032     	 adds r2,r2,#64
 1154 0166 1268     	 ldr r2,[r2]
 1155 0168 22F48062 	 bic r2,r2,#1024
 1156 016c F968     	 ldr r1,[r7,#12]
 1157 016e 5820     	 movs r0,#88
 1158 0170 00FB03F3 	 mul r3,r0,r3
 1159 0174 0B44     	 add r3,r3,r1
 1160 0176 4033     	 adds r3,r3,#64
 1161 0178 1A60     	 str r2,[r3]
 1162              	.L53:
 379:../Libraries/XMCLib/src/xmc_dma.c ****         }
 380:../Libraries/XMCLib/src/xmc_dma.c ****       }
 381:../Libraries/XMCLib/src/xmc_dma.c **** 
 382:../Libraries/XMCLib/src/xmc_dma.c **** 
 383:../Libraries/XMCLib/src/xmc_dma.c ****       if (config->src_handshaking == XMC_DMA_CH_SRC_HANDSHAKING_HARDWARE)
 1163              	 .loc 2 383 0
 1164 017a 7B68     	 ldr r3,[r7,#4]
 1165 017c 9B8B     	 ldrh r3,[r3,#28]
 1166 017e 002B     	 cmp r3,#0
 1167 0180 42D1     	 bne .L55
 384:../Libraries/XMCLib/src/xmc_dma.c ****       {
 385:../Libraries/XMCLib/src/xmc_dma.c ****         if ((config->transfer_flow == (uint32_t)XMC_DMA_CH_TRANSFER_FLOW_P2M_DMA) ||
 1168              	 .loc 2 385 0
 1169 0182 7B68     	 ldr r3,[r7,#4]
 1170 0184 9B78     	 ldrb r3,[r3,#2]
 1171 0186 03F07003 	 and r3,r3,#112
 1172 018a DBB2     	 uxtb r3,r3
 1173 018c 202B     	 cmp r3,#32
 1174 018e 06D0     	 beq .L56
 386:../Libraries/XMCLib/src/xmc_dma.c ****             (config->transfer_flow == (uint32_t)XMC_DMA_CH_TRANSFER_FLOW_P2P_DMA))
 1175              	 .loc 2 386 0 discriminator 1
 1176 0190 7B68     	 ldr r3,[r7,#4]
 1177 0192 9B78     	 ldrb r3,[r3,#2]
 1178 0194 03F07003 	 and r3,r3,#112
 1179 0198 DBB2     	 uxtb r3,r3
 385:../Libraries/XMCLib/src/xmc_dma.c ****             (config->transfer_flow == (uint32_t)XMC_DMA_CH_TRANSFER_FLOW_P2P_DMA))
 1180              	 .loc 2 385 0 discriminator 1
 1181 019a 302B     	 cmp r3,#48
 1182 019c 34D1     	 bne .L55
 1183              	.L56:
 387:../Libraries/XMCLib/src/xmc_dma.c ****         {
 388:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 389:../Libraries/XMCLib/src/xmc_dma.c ****           if (dma == XMC_DMA0)
 390:../Libraries/XMCLib/src/xmc_dma.c ****           {
 391:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 392:../Libraries/XMCLib/src/xmc_dma.c ****             line = config->src_peripheral_request & GPDMA0_CH_CFGH_PER_Msk;
 1184              	 .loc 2 392 0
 1185 019e 7B68     	 ldr r3,[r7,#4]
 1186 01a0 9B7F     	 ldrb r3,[r3,#30]
 1187 01a2 03F00703 	 and r3,r3,#7
 1188 01a6 BB75     	 strb r3,[r7,#22]
 393:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 394:../Libraries/XMCLib/src/xmc_dma.c ****           }
 395:../Libraries/XMCLib/src/xmc_dma.c ****           else
 396:../Libraries/XMCLib/src/xmc_dma.c ****           {
 397:../Libraries/XMCLib/src/xmc_dma.c ****             line = config->src_peripheral_request & GPDMA1_CH_CFGH_PER_Msk;
 398:../Libraries/XMCLib/src/xmc_dma.c ****           }
 399:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 400:../Libraries/XMCLib/src/xmc_dma.c ****           peripheral = config->src_peripheral_request >> GPDMA_CH_CFGH_PER_BITSIZE;
 1189              	 .loc 2 400 0
 1190 01a8 7B68     	 ldr r3,[r7,#4]
 1191 01aa 9B7F     	 ldrb r3,[r3,#30]
 1192 01ac 1B09     	 lsrs r3,r3,#4
 1193 01ae 7B75     	 strb r3,[r7,#21]
 401:../Libraries/XMCLib/src/xmc_dma.c **** 
 402:../Libraries/XMCLib/src/xmc_dma.c ****           dma->CH[channel].CFGH |= (uint32_t)((uint32_t)line << GPDMA0_CH_CFGH_SRC_PER_Pos);
 1194              	 .loc 2 402 0
 1195 01b0 FB7A     	 ldrb r3,[r7,#11]
 1196 01b2 FA7A     	 ldrb r2,[r7,#11]
 1197 01b4 F968     	 ldr r1,[r7,#12]
 1198 01b6 5820     	 movs r0,#88
 1199 01b8 00FB02F2 	 mul r2,r0,r2
 1200 01bc 0A44     	 add r2,r2,r1
 1201 01be 4032     	 adds r2,r2,#64
 1202 01c0 5168     	 ldr r1,[r2,#4]
 1203 01c2 BA7D     	 ldrb r2,[r7,#22]
 1204 01c4 D201     	 lsls r2,r2,#7
 1205 01c6 0A43     	 orrs r2,r2,r1
 1206 01c8 F968     	 ldr r1,[r7,#12]
 1207 01ca 5820     	 movs r0,#88
 1208 01cc 00FB03F3 	 mul r3,r0,r3
 1209 01d0 0B44     	 add r3,r3,r1
 1210 01d2 4033     	 adds r3,r3,#64
 1211 01d4 5A60     	 str r2,[r3,#4]
 403:../Libraries/XMCLib/src/xmc_dma.c ****           XMC_DMA_EnableRequestLine(dma, line, peripheral);
 1212              	 .loc 2 403 0
 1213 01d6 BA7D     	 ldrb r2,[r7,#22]
 1214 01d8 7B7D     	 ldrb r3,[r7,#21]
 1215 01da F868     	 ldr r0,[r7,#12]
 1216 01dc 1146     	 mov r1,r2
 1217 01de 1A46     	 mov r2,r3
 1218 01e0 FFF7FEFF 	 bl XMC_DMA_EnableRequestLine
 404:../Libraries/XMCLib/src/xmc_dma.c ****           dma->CH[channel].CFGL &= (uint32_t)~GPDMA0_CH_CFGL_HS_SEL_SRC_Msk;
 1219              	 .loc 2 404 0
 1220 01e4 FB7A     	 ldrb r3,[r7,#11]
 1221 01e6 FA7A     	 ldrb r2,[r7,#11]
 1222 01e8 F968     	 ldr r1,[r7,#12]
 1223 01ea 5820     	 movs r0,#88
 1224 01ec 00FB02F2 	 mul r2,r0,r2
 1225 01f0 0A44     	 add r2,r2,r1
 1226 01f2 4032     	 adds r2,r2,#64
 1227 01f4 1268     	 ldr r2,[r2]
 1228 01f6 22F40062 	 bic r2,r2,#2048
 1229 01fa F968     	 ldr r1,[r7,#12]
 1230 01fc 5820     	 movs r0,#88
 1231 01fe 00FB03F3 	 mul r3,r0,r3
 1232 0202 0B44     	 add r3,r3,r1
 1233 0204 4033     	 adds r3,r3,#64
 1234 0206 1A60     	 str r2,[r3]
 1235              	.L55:
 405:../Libraries/XMCLib/src/xmc_dma.c ****         }
 406:../Libraries/XMCLib/src/xmc_dma.c ****       }
 407:../Libraries/XMCLib/src/xmc_dma.c **** 
 408:../Libraries/XMCLib/src/xmc_dma.c ****       XMC_DMA_CH_ClearEventStatus(dma, channel, (uint32_t)((uint32_t)XMC_DMA_CH_EVENT_TRANSFER_COMP
 1236              	 .loc 2 408 0
 1237 0208 FB7A     	 ldrb r3,[r7,#11]
 1238 020a F868     	 ldr r0,[r7,#12]
 1239 020c 1946     	 mov r1,r3
 1240 020e 1F22     	 movs r2,#31
 1241 0210 FFF7FEFF 	 bl XMC_DMA_CH_ClearEventStatus
 409:../Libraries/XMCLib/src/xmc_dma.c ****                                   (uint32_t)XMC_DMA_CH_EVENT_BLOCK_TRANSFER_COMPLETE |
 410:../Libraries/XMCLib/src/xmc_dma.c ****                                   (uint32_t)XMC_DMA_CH_EVENT_SRC_TRANSACTION_COMPLETE |
 411:../Libraries/XMCLib/src/xmc_dma.c ****                                   (uint32_t)XMC_DMA_CH_EVENT_DST_TRANSACTION_COMPLETE |
 412:../Libraries/XMCLib/src/xmc_dma.c ****                                   (uint32_t)XMC_DMA_CH_EVENT_ERROR));
 413:../Libraries/XMCLib/src/xmc_dma.c **** 
 414:../Libraries/XMCLib/src/xmc_dma.c ****       switch (config->transfer_type)
 1242              	 .loc 2 414 0
 1243 0214 7B68     	 ldr r3,[r7,#4]
 1244 0216 9B7E     	 ldrb r3,[r3,#26]
 1245 0218 082B     	 cmp r3,#8
 1246 021a 00F2D380 	 bhi .L72
 1247 021e 01A2     	 adr r2,.L59
 1248 0220 52F823F0 	 ldr pc,[r2,r3,lsl#2]
 1249              	 .p2align 2
 1250              	.L59:
 1251 0224 C5030000 	 .word .L72+1
 1252 0228 49020000 	 .word .L60+1
 1253 022c 6F020000 	 .word .L61+1
 1254 0230 95020000 	 .word .L62+1
 1255 0234 BB020000 	 .word .L63+1
 1256 0238 E1020000 	 .word .L64+1
 1257 023c 2B030000 	 .word .L65+1
 1258 0240 55030000 	 .word .L66+1
 1259 0244 9F030000 	 .word .L67+1
 1260              	 .p2align 1
 1261              	.L60:
 415:../Libraries/XMCLib/src/xmc_dma.c ****       {
 416:../Libraries/XMCLib/src/xmc_dma.c ****         case XMC_DMA_CH_TRANSFER_TYPE_SINGLE_BLOCK:
 417:../Libraries/XMCLib/src/xmc_dma.c ****           break;
 418:../Libraries/XMCLib/src/xmc_dma.c **** 
 419:../Libraries/XMCLib/src/xmc_dma.c ****         case XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_CONTIGUOUS_DSTADR_RELOAD:
 420:../Libraries/XMCLib/src/xmc_dma.c ****           dma->CH[channel].CFGL |= (uint32_t)GPDMA0_CH_CFGL_RELOAD_DST_Msk;
 1262              	 .loc 2 420 0
 1263 0248 FB7A     	 ldrb r3,[r7,#11]
 1264 024a FA7A     	 ldrb r2,[r7,#11]
 1265 024c F968     	 ldr r1,[r7,#12]
 1266 024e 5820     	 movs r0,#88
 1267 0250 00FB02F2 	 mul r2,r0,r2
 1268 0254 0A44     	 add r2,r2,r1
 1269 0256 4032     	 adds r2,r2,#64
 1270 0258 1268     	 ldr r2,[r2]
 1271 025a 42F00042 	 orr r2,r2,#-2147483648
 1272 025e F968     	 ldr r1,[r7,#12]
 1273 0260 5820     	 movs r0,#88
 1274 0262 00FB03F3 	 mul r3,r0,r3
 1275 0266 0B44     	 add r3,r3,r1
 1276 0268 4033     	 adds r3,r3,#64
 1277 026a 1A60     	 str r2,[r3]
 421:../Libraries/XMCLib/src/xmc_dma.c ****           break;
 1278              	 .loc 2 421 0
 1279 026c ABE0     	 b .L68
 1280              	.L61:
 422:../Libraries/XMCLib/src/xmc_dma.c **** 
 423:../Libraries/XMCLib/src/xmc_dma.c ****         case XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_RELOAD_DSTADR_CONTIGUOUS:
 424:../Libraries/XMCLib/src/xmc_dma.c ****           dma->CH[channel].CFGL |= (uint32_t)GPDMA0_CH_CFGL_RELOAD_SRC_Msk;
 1281              	 .loc 2 424 0
 1282 026e FB7A     	 ldrb r3,[r7,#11]
 1283 0270 FA7A     	 ldrb r2,[r7,#11]
 1284 0272 F968     	 ldr r1,[r7,#12]
 1285 0274 5820     	 movs r0,#88
 1286 0276 00FB02F2 	 mul r2,r0,r2
 1287 027a 0A44     	 add r2,r2,r1
 1288 027c 4032     	 adds r2,r2,#64
 1289 027e 1268     	 ldr r2,[r2]
 1290 0280 42F08042 	 orr r2,r2,#1073741824
 1291 0284 F968     	 ldr r1,[r7,#12]
 1292 0286 5820     	 movs r0,#88
 1293 0288 00FB03F3 	 mul r3,r0,r3
 1294 028c 0B44     	 add r3,r3,r1
 1295 028e 4033     	 adds r3,r3,#64
 1296 0290 1A60     	 str r2,[r3]
 425:../Libraries/XMCLib/src/xmc_dma.c ****           break;
 1297              	 .loc 2 425 0
 1298 0292 98E0     	 b .L68
 1299              	.L62:
 426:../Libraries/XMCLib/src/xmc_dma.c **** 
 427:../Libraries/XMCLib/src/xmc_dma.c ****         case XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_RELOAD_DSTADR_RELOAD:
 428:../Libraries/XMCLib/src/xmc_dma.c ****           dma->CH[channel].CFGL |= (uint32_t)((uint32_t)GPDMA0_CH_CFGL_RELOAD_DST_Msk |
 1300              	 .loc 2 428 0
 1301 0294 FB7A     	 ldrb r3,[r7,#11]
 1302 0296 FA7A     	 ldrb r2,[r7,#11]
 1303 0298 F968     	 ldr r1,[r7,#12]
 1304 029a 5820     	 movs r0,#88
 1305 029c 00FB02F2 	 mul r2,r0,r2
 1306 02a0 0A44     	 add r2,r2,r1
 1307 02a2 4032     	 adds r2,r2,#64
 1308 02a4 1268     	 ldr r2,[r2]
 1309 02a6 42F04042 	 orr r2,r2,#-1073741824
 1310 02aa F968     	 ldr r1,[r7,#12]
 1311 02ac 5820     	 movs r0,#88
 1312 02ae 00FB03F3 	 mul r3,r0,r3
 1313 02b2 0B44     	 add r3,r3,r1
 1314 02b4 4033     	 adds r3,r3,#64
 1315 02b6 1A60     	 str r2,[r3]
 429:../Libraries/XMCLib/src/xmc_dma.c ****                                               (uint32_t)GPDMA0_CH_CFGL_RELOAD_SRC_Msk);
 430:../Libraries/XMCLib/src/xmc_dma.c ****           break;
 1316              	 .loc 2 430 0
 1317 02b8 85E0     	 b .L68
 1318              	.L63:
 431:../Libraries/XMCLib/src/xmc_dma.c **** 
 432:../Libraries/XMCLib/src/xmc_dma.c ****         case XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_CONTIGUOUS_DSTADR_LINKED:
 433:../Libraries/XMCLib/src/xmc_dma.c ****           dma->CH[channel].CTLL |= (uint32_t)GPDMA0_CH_CTLL_LLP_DST_EN_Msk;
 1319              	 .loc 2 433 0
 1320 02ba FB7A     	 ldrb r3,[r7,#11]
 1321 02bc FA7A     	 ldrb r2,[r7,#11]
 1322 02be F968     	 ldr r1,[r7,#12]
 1323 02c0 5820     	 movs r0,#88
 1324 02c2 00FB02F2 	 mul r2,r0,r2
 1325 02c6 0A44     	 add r2,r2,r1
 1326 02c8 1832     	 adds r2,r2,#24
 1327 02ca 1268     	 ldr r2,[r2]
 1328 02cc 42F00062 	 orr r2,r2,#134217728
 1329 02d0 F968     	 ldr r1,[r7,#12]
 1330 02d2 5820     	 movs r0,#88
 1331 02d4 00FB03F3 	 mul r3,r0,r3
 1332 02d8 0B44     	 add r3,r3,r1
 1333 02da 1833     	 adds r3,r3,#24
 1334 02dc 1A60     	 str r2,[r3]
 434:../Libraries/XMCLib/src/xmc_dma.c ****           break;
 1335              	 .loc 2 434 0
 1336 02de 72E0     	 b .L68
 1337              	.L64:
 435:../Libraries/XMCLib/src/xmc_dma.c **** 
 436:../Libraries/XMCLib/src/xmc_dma.c ****         case XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_RELOAD_DSTADR_LINKED:
 437:../Libraries/XMCLib/src/xmc_dma.c ****           dma->CH[channel].CFGL |= (uint32_t)GPDMA0_CH_CFGL_RELOAD_SRC_Msk;
 1338              	 .loc 2 437 0
 1339 02e0 FB7A     	 ldrb r3,[r7,#11]
 1340 02e2 FA7A     	 ldrb r2,[r7,#11]
 1341 02e4 F968     	 ldr r1,[r7,#12]
 1342 02e6 5820     	 movs r0,#88
 1343 02e8 00FB02F2 	 mul r2,r0,r2
 1344 02ec 0A44     	 add r2,r2,r1
 1345 02ee 4032     	 adds r2,r2,#64
 1346 02f0 1268     	 ldr r2,[r2]
 1347 02f2 42F08042 	 orr r2,r2,#1073741824
 1348 02f6 F968     	 ldr r1,[r7,#12]
 1349 02f8 5820     	 movs r0,#88
 1350 02fa 00FB03F3 	 mul r3,r0,r3
 1351 02fe 0B44     	 add r3,r3,r1
 1352 0300 4033     	 adds r3,r3,#64
 1353 0302 1A60     	 str r2,[r3]
 438:../Libraries/XMCLib/src/xmc_dma.c ****           dma->CH[channel].CTLL |= (uint32_t)GPDMA0_CH_CTLL_LLP_DST_EN_Msk;
 1354              	 .loc 2 438 0
 1355 0304 FB7A     	 ldrb r3,[r7,#11]
 1356 0306 FA7A     	 ldrb r2,[r7,#11]
 1357 0308 F968     	 ldr r1,[r7,#12]
 1358 030a 5820     	 movs r0,#88
 1359 030c 00FB02F2 	 mul r2,r0,r2
 1360 0310 0A44     	 add r2,r2,r1
 1361 0312 1832     	 adds r2,r2,#24
 1362 0314 1268     	 ldr r2,[r2]
 1363 0316 42F00062 	 orr r2,r2,#134217728
 1364 031a F968     	 ldr r1,[r7,#12]
 1365 031c 5820     	 movs r0,#88
 1366 031e 00FB03F3 	 mul r3,r0,r3
 1367 0322 0B44     	 add r3,r3,r1
 1368 0324 1833     	 adds r3,r3,#24
 1369 0326 1A60     	 str r2,[r3]
 439:../Libraries/XMCLib/src/xmc_dma.c ****           break;
 1370              	 .loc 2 439 0
 1371 0328 4DE0     	 b .L68
 1372              	.L65:
 440:../Libraries/XMCLib/src/xmc_dma.c **** 
 441:../Libraries/XMCLib/src/xmc_dma.c ****         case XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_LINKED_DSTADR_CONTIGUOUS:
 442:../Libraries/XMCLib/src/xmc_dma.c ****           dma->CH[channel].CTLL |= (uint32_t)GPDMA0_CH_CTLL_LLP_SRC_EN_Msk;
 1373              	 .loc 2 442 0
 1374 032a FB7A     	 ldrb r3,[r7,#11]
 1375 032c FA7A     	 ldrb r2,[r7,#11]
 1376 032e F968     	 ldr r1,[r7,#12]
 1377 0330 5820     	 movs r0,#88
 1378 0332 00FB02F2 	 mul r2,r0,r2
 1379 0336 0A44     	 add r2,r2,r1
 1380 0338 1832     	 adds r2,r2,#24
 1381 033a 1268     	 ldr r2,[r2]
 1382 033c 42F08052 	 orr r2,r2,#268435456
 1383 0340 F968     	 ldr r1,[r7,#12]
 1384 0342 5820     	 movs r0,#88
 1385 0344 00FB03F3 	 mul r3,r0,r3
 1386 0348 0B44     	 add r3,r3,r1
 1387 034a 1833     	 adds r3,r3,#24
 1388 034c 1A60     	 str r2,[r3]
 443:../Libraries/XMCLib/src/xmc_dma.c ****           break;
 1389              	 .loc 2 443 0
 1390 034e 3AE0     	 b .L68
 1391              	.L74:
 1392              	 .align 2
 1393              	.L73:
 1394 0350 00400150 	 .word 1342259200
 1395              	.L66:
 444:../Libraries/XMCLib/src/xmc_dma.c **** 
 445:../Libraries/XMCLib/src/xmc_dma.c ****         case XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_LINKED_DSTADR_RELOAD:
 446:../Libraries/XMCLib/src/xmc_dma.c ****           dma->CH[channel].CFGL |= (uint32_t)GPDMA0_CH_CFGL_RELOAD_DST_Msk;
 1396              	 .loc 2 446 0
 1397 0354 FB7A     	 ldrb r3,[r7,#11]
 1398 0356 FA7A     	 ldrb r2,[r7,#11]
 1399 0358 F968     	 ldr r1,[r7,#12]
 1400 035a 5820     	 movs r0,#88
 1401 035c 00FB02F2 	 mul r2,r0,r2
 1402 0360 0A44     	 add r2,r2,r1
 1403 0362 4032     	 adds r2,r2,#64
 1404 0364 1268     	 ldr r2,[r2]
 1405 0366 42F00042 	 orr r2,r2,#-2147483648
 1406 036a F968     	 ldr r1,[r7,#12]
 1407 036c 5820     	 movs r0,#88
 1408 036e 00FB03F3 	 mul r3,r0,r3
 1409 0372 0B44     	 add r3,r3,r1
 1410 0374 4033     	 adds r3,r3,#64
 1411 0376 1A60     	 str r2,[r3]
 447:../Libraries/XMCLib/src/xmc_dma.c ****           dma->CH[channel].CTLL |= (uint32_t)GPDMA0_CH_CTLL_LLP_SRC_EN_Msk;
 1412              	 .loc 2 447 0
 1413 0378 FB7A     	 ldrb r3,[r7,#11]
 1414 037a FA7A     	 ldrb r2,[r7,#11]
 1415 037c F968     	 ldr r1,[r7,#12]
 1416 037e 5820     	 movs r0,#88
 1417 0380 00FB02F2 	 mul r2,r0,r2
 1418 0384 0A44     	 add r2,r2,r1
 1419 0386 1832     	 adds r2,r2,#24
 1420 0388 1268     	 ldr r2,[r2]
 1421 038a 42F08052 	 orr r2,r2,#268435456
 1422 038e F968     	 ldr r1,[r7,#12]
 1423 0390 5820     	 movs r0,#88
 1424 0392 00FB03F3 	 mul r3,r0,r3
 1425 0396 0B44     	 add r3,r3,r1
 1426 0398 1833     	 adds r3,r3,#24
 1427 039a 1A60     	 str r2,[r3]
 448:../Libraries/XMCLib/src/xmc_dma.c ****           break;
 1428              	 .loc 2 448 0
 1429 039c 13E0     	 b .L68
 1430              	.L67:
 449:../Libraries/XMCLib/src/xmc_dma.c **** 
 450:../Libraries/XMCLib/src/xmc_dma.c ****         case XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_LINKED_DSTADR_LINKED:
 451:../Libraries/XMCLib/src/xmc_dma.c ****           dma->CH[channel].CTLL |= (uint32_t)((uint32_t)GPDMA0_CH_CTLL_LLP_SRC_EN_Msk |
 1431              	 .loc 2 451 0
 1432 039e FB7A     	 ldrb r3,[r7,#11]
 1433 03a0 FA7A     	 ldrb r2,[r7,#11]
 1434 03a2 F968     	 ldr r1,[r7,#12]
 1435 03a4 5820     	 movs r0,#88
 1436 03a6 00FB02F2 	 mul r2,r0,r2
 1437 03aa 0A44     	 add r2,r2,r1
 1438 03ac 1832     	 adds r2,r2,#24
 1439 03ae 1268     	 ldr r2,[r2]
 1440 03b0 42F0C052 	 orr r2,r2,#402653184
 1441 03b4 F968     	 ldr r1,[r7,#12]
 1442 03b6 5820     	 movs r0,#88
 1443 03b8 00FB03F3 	 mul r3,r0,r3
 1444 03bc 0B44     	 add r3,r3,r1
 1445 03be 1833     	 adds r3,r3,#24
 1446 03c0 1A60     	 str r2,[r3]
 452:../Libraries/XMCLib/src/xmc_dma.c ****                                               (uint32_t)GPDMA0_CH_CTLL_LLP_DST_EN_Msk);
 453:../Libraries/XMCLib/src/xmc_dma.c ****           break;
 1447              	 .loc 2 453 0
 1448 03c2 00E0     	 b .L68
 1449              	.L72:
 454:../Libraries/XMCLib/src/xmc_dma.c **** 
 455:../Libraries/XMCLib/src/xmc_dma.c ****         default:
 456:../Libraries/XMCLib/src/xmc_dma.c ****           break;
 1450              	 .loc 2 456 0
 1451 03c4 00BF     	 nop
 1452              	.L68:
 457:../Libraries/XMCLib/src/xmc_dma.c ****       }
 458:../Libraries/XMCLib/src/xmc_dma.c **** 
 459:../Libraries/XMCLib/src/xmc_dma.c ****       status = XMC_DMA_CH_STATUS_OK;
 1453              	 .loc 2 459 0
 1454 03c6 0023     	 movs r3,#0
 1455 03c8 FB75     	 strb r3,[r7,#23]
 1456 03ca 04E0     	 b .L70
 1457              	.L51:
 460:../Libraries/XMCLib/src/xmc_dma.c **** 
 461:../Libraries/XMCLib/src/xmc_dma.c ****     }
 462:../Libraries/XMCLib/src/xmc_dma.c ****     else
 463:../Libraries/XMCLib/src/xmc_dma.c ****     {
 464:../Libraries/XMCLib/src/xmc_dma.c ****       status = XMC_DMA_CH_STATUS_BUSY;
 1458              	 .loc 2 464 0
 1459 03cc 0223     	 movs r3,#2
 1460 03ce FB75     	 strb r3,[r7,#23]
 1461 03d0 01E0     	 b .L70
 1462              	.L50:
 465:../Libraries/XMCLib/src/xmc_dma.c ****     }
 466:../Libraries/XMCLib/src/xmc_dma.c ****   }
 467:../Libraries/XMCLib/src/xmc_dma.c ****   else
 468:../Libraries/XMCLib/src/xmc_dma.c ****   {
 469:../Libraries/XMCLib/src/xmc_dma.c ****     status = XMC_DMA_CH_STATUS_ERROR;
 1463              	 .loc 2 469 0
 1464 03d2 0123     	 movs r3,#1
 1465 03d4 FB75     	 strb r3,[r7,#23]
 1466              	.L70:
 470:../Libraries/XMCLib/src/xmc_dma.c ****   }
 471:../Libraries/XMCLib/src/xmc_dma.c **** 
 472:../Libraries/XMCLib/src/xmc_dma.c ****   return status;
 1467              	 .loc 2 472 0
 1468 03d6 FB7D     	 ldrb r3,[r7,#23]
 473:../Libraries/XMCLib/src/xmc_dma.c **** }
 1469              	 .loc 2 473 0
 1470 03d8 1846     	 mov r0,r3
 1471 03da 1837     	 adds r7,r7,#24
 1472              	.LCFI101:
 1473              	 .cfi_def_cfa_offset 8
 1474 03dc BD46     	 mov sp,r7
 1475              	.LCFI102:
 1476              	 .cfi_def_cfa_register 13
 1477              	 
 1478 03de 80BD     	 pop {r7,pc}
 1479              	 .cfi_endproc
 1480              	.LFE195:
 1482              	 .section .text.XMC_DMA_CH_Suspend,"ax",%progbits
 1483              	 .align 2
 1484              	 .global XMC_DMA_CH_Suspend
 1485              	 .thumb
 1486              	 .thumb_func
 1488              	XMC_DMA_CH_Suspend:
 1489              	.LFB196:
 474:../Libraries/XMCLib/src/xmc_dma.c **** 
 475:../Libraries/XMCLib/src/xmc_dma.c **** /* Suspend DMA channel transfer */
 476:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_Suspend(XMC_DMA_t *const dma, const uint8_t channel)
 477:../Libraries/XMCLib/src/xmc_dma.c **** {
 1490              	 .loc 2 477 0
 1491              	 .cfi_startproc
 1492              	 
 1493              	 
 1494              	 
 1495 0000 80B4     	 push {r7}
 1496              	.LCFI103:
 1497              	 .cfi_def_cfa_offset 4
 1498              	 .cfi_offset 7,-4
 1499 0002 83B0     	 sub sp,sp,#12
 1500              	.LCFI104:
 1501              	 .cfi_def_cfa_offset 16
 1502 0004 00AF     	 add r7,sp,#0
 1503              	.LCFI105:
 1504              	 .cfi_def_cfa_register 7
 1505 0006 7860     	 str r0,[r7,#4]
 1506 0008 0B46     	 mov r3,r1
 1507 000a FB70     	 strb r3,[r7,#3]
 478:../Libraries/XMCLib/src/xmc_dma.c ****   dma->CH[channel].CFGL |= (uint32_t)GPDMA0_CH_CFGL_CH_SUSP_Msk;
 1508              	 .loc 2 478 0
 1509 000c FB78     	 ldrb r3,[r7,#3]
 1510 000e FA78     	 ldrb r2,[r7,#3]
 1511 0010 7968     	 ldr r1,[r7,#4]
 1512 0012 5820     	 movs r0,#88
 1513 0014 00FB02F2 	 mul r2,r0,r2
 1514 0018 0A44     	 add r2,r2,r1
 1515 001a 4032     	 adds r2,r2,#64
 1516 001c 1268     	 ldr r2,[r2]
 1517 001e 42F48072 	 orr r2,r2,#256
 1518 0022 7968     	 ldr r1,[r7,#4]
 1519 0024 5820     	 movs r0,#88
 1520 0026 00FB03F3 	 mul r3,r0,r3
 1521 002a 0B44     	 add r3,r3,r1
 1522 002c 4033     	 adds r3,r3,#64
 1523 002e 1A60     	 str r2,[r3]
 479:../Libraries/XMCLib/src/xmc_dma.c **** }
 1524              	 .loc 2 479 0
 1525 0030 0C37     	 adds r7,r7,#12
 1526              	.LCFI106:
 1527              	 .cfi_def_cfa_offset 4
 1528 0032 BD46     	 mov sp,r7
 1529              	.LCFI107:
 1530              	 .cfi_def_cfa_register 13
 1531              	 
 1532 0034 5DF8047B 	 ldr r7,[sp],#4
 1533              	.LCFI108:
 1534              	 .cfi_restore 7
 1535              	 .cfi_def_cfa_offset 0
 1536 0038 7047     	 bx lr
 1537              	 .cfi_endproc
 1538              	.LFE196:
 1540 003a 00BF     	 .section .text.XMC_DMA_CH_Resume,"ax",%progbits
 1541              	 .align 2
 1542              	 .global XMC_DMA_CH_Resume
 1543              	 .thumb
 1544              	 .thumb_func
 1546              	XMC_DMA_CH_Resume:
 1547              	.LFB197:
 480:../Libraries/XMCLib/src/xmc_dma.c **** 
 481:../Libraries/XMCLib/src/xmc_dma.c **** /* Resume DMA channel transfer */
 482:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_Resume(XMC_DMA_t *const dma, const uint8_t channel)
 483:../Libraries/XMCLib/src/xmc_dma.c **** {
 1548              	 .loc 2 483 0
 1549              	 .cfi_startproc
 1550              	 
 1551              	 
 1552              	 
 1553 0000 80B4     	 push {r7}
 1554              	.LCFI109:
 1555              	 .cfi_def_cfa_offset 4
 1556              	 .cfi_offset 7,-4
 1557 0002 83B0     	 sub sp,sp,#12
 1558              	.LCFI110:
 1559              	 .cfi_def_cfa_offset 16
 1560 0004 00AF     	 add r7,sp,#0
 1561              	.LCFI111:
 1562              	 .cfi_def_cfa_register 7
 1563 0006 7860     	 str r0,[r7,#4]
 1564 0008 0B46     	 mov r3,r1
 1565 000a FB70     	 strb r3,[r7,#3]
 484:../Libraries/XMCLib/src/xmc_dma.c ****   dma->CH[channel].CFGL &= (uint32_t)~GPDMA0_CH_CFGL_CH_SUSP_Msk;
 1566              	 .loc 2 484 0
 1567 000c FB78     	 ldrb r3,[r7,#3]
 1568 000e FA78     	 ldrb r2,[r7,#3]
 1569 0010 7968     	 ldr r1,[r7,#4]
 1570 0012 5820     	 movs r0,#88
 1571 0014 00FB02F2 	 mul r2,r0,r2
 1572 0018 0A44     	 add r2,r2,r1
 1573 001a 4032     	 adds r2,r2,#64
 1574 001c 1268     	 ldr r2,[r2]
 1575 001e 22F48072 	 bic r2,r2,#256
 1576 0022 7968     	 ldr r1,[r7,#4]
 1577 0024 5820     	 movs r0,#88
 1578 0026 00FB03F3 	 mul r3,r0,r3
 1579 002a 0B44     	 add r3,r3,r1
 1580 002c 4033     	 adds r3,r3,#64
 1581 002e 1A60     	 str r2,[r3]
 485:../Libraries/XMCLib/src/xmc_dma.c **** }
 1582              	 .loc 2 485 0
 1583 0030 0C37     	 adds r7,r7,#12
 1584              	.LCFI112:
 1585              	 .cfi_def_cfa_offset 4
 1586 0032 BD46     	 mov sp,r7
 1587              	.LCFI113:
 1588              	 .cfi_def_cfa_register 13
 1589              	 
 1590 0034 5DF8047B 	 ldr r7,[sp],#4
 1591              	.LCFI114:
 1592              	 .cfi_restore 7
 1593              	 .cfi_def_cfa_offset 0
 1594 0038 7047     	 bx lr
 1595              	 .cfi_endproc
 1596              	.LFE197:
 1598 003a 00BF     	 .section .text.XMC_DMA_CH_IsSuspended,"ax",%progbits
 1599              	 .align 2
 1600              	 .global XMC_DMA_CH_IsSuspended
 1601              	 .thumb
 1602              	 .thumb_func
 1604              	XMC_DMA_CH_IsSuspended:
 1605              	.LFB198:
 486:../Libraries/XMCLib/src/xmc_dma.c **** 
 487:../Libraries/XMCLib/src/xmc_dma.c **** /* Check if a DMA channel is suspended */
 488:../Libraries/XMCLib/src/xmc_dma.c **** bool XMC_DMA_CH_IsSuspended(XMC_DMA_t *const dma, const uint8_t channel)
 489:../Libraries/XMCLib/src/xmc_dma.c **** {
 1606              	 .loc 2 489 0
 1607              	 .cfi_startproc
 1608              	 
 1609              	 
 1610              	 
 1611 0000 80B4     	 push {r7}
 1612              	.LCFI115:
 1613              	 .cfi_def_cfa_offset 4
 1614              	 .cfi_offset 7,-4
 1615 0002 83B0     	 sub sp,sp,#12
 1616              	.LCFI116:
 1617              	 .cfi_def_cfa_offset 16
 1618 0004 00AF     	 add r7,sp,#0
 1619              	.LCFI117:
 1620              	 .cfi_def_cfa_register 7
 1621 0006 7860     	 str r0,[r7,#4]
 1622 0008 0B46     	 mov r3,r1
 1623 000a FB70     	 strb r3,[r7,#3]
 490:../Libraries/XMCLib/src/xmc_dma.c ****   return (bool)(dma->CH[channel].CFGL & (uint32_t)GPDMA0_CH_CFGL_CH_SUSP_Msk);
 1624              	 .loc 2 490 0
 1625 000c FB78     	 ldrb r3,[r7,#3]
 1626 000e 7A68     	 ldr r2,[r7,#4]
 1627 0010 5821     	 movs r1,#88
 1628 0012 01FB03F3 	 mul r3,r1,r3
 1629 0016 1344     	 add r3,r3,r2
 1630 0018 4033     	 adds r3,r3,#64
 1631 001a 1B68     	 ldr r3,[r3]
 1632 001c 03F48073 	 and r3,r3,#256
 1633 0020 002B     	 cmp r3,#0
 1634 0022 14BF     	 ite ne
 1635 0024 0123     	 movne r3,#1
 1636 0026 0023     	 moveq r3,#0
 1637 0028 DBB2     	 uxtb r3,r3
 491:../Libraries/XMCLib/src/xmc_dma.c **** }
 1638              	 .loc 2 491 0
 1639 002a 1846     	 mov r0,r3
 1640 002c 0C37     	 adds r7,r7,#12
 1641              	.LCFI118:
 1642              	 .cfi_def_cfa_offset 4
 1643 002e BD46     	 mov sp,r7
 1644              	.LCFI119:
 1645              	 .cfi_def_cfa_register 13
 1646              	 
 1647 0030 5DF8047B 	 ldr r7,[sp],#4
 1648              	.LCFI120:
 1649              	 .cfi_restore 7
 1650              	 .cfi_def_cfa_offset 0
 1651 0034 7047     	 bx lr
 1652              	 .cfi_endproc
 1653              	.LFE198:
 1655 0036 00BF     	 .section .text.XMC_DMA_CH_EnableEvent,"ax",%progbits
 1656              	 .align 2
 1657              	 .global XMC_DMA_CH_EnableEvent
 1658              	 .thumb
 1659              	 .thumb_func
 1661              	XMC_DMA_CH_EnableEvent:
 1662              	.LFB199:
 492:../Libraries/XMCLib/src/xmc_dma.c **** 
 493:../Libraries/XMCLib/src/xmc_dma.c **** /* Enable GPDMA event */
 494:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_EnableEvent(XMC_DMA_t *const dma, const uint8_t channel, const uint32_t event)
 495:../Libraries/XMCLib/src/xmc_dma.c **** {
 1663              	 .loc 2 495 0
 1664              	 .cfi_startproc
 1665              	 
 1666              	 
 1667              	 
 1668 0000 80B4     	 push {r7}
 1669              	.LCFI121:
 1670              	 .cfi_def_cfa_offset 4
 1671              	 .cfi_offset 7,-4
 1672 0002 87B0     	 sub sp,sp,#28
 1673              	.LCFI122:
 1674              	 .cfi_def_cfa_offset 32
 1675 0004 00AF     	 add r7,sp,#0
 1676              	.LCFI123:
 1677              	 .cfi_def_cfa_register 7
 1678 0006 F860     	 str r0,[r7,#12]
 1679 0008 0B46     	 mov r3,r1
 1680 000a 7A60     	 str r2,[r7,#4]
 1681 000c FB72     	 strb r3,[r7,#11]
 496:../Libraries/XMCLib/src/xmc_dma.c ****   uint32_t event_idx;
 497:../Libraries/XMCLib/src/xmc_dma.c **** 
 498:../Libraries/XMCLib/src/xmc_dma.c ****   for (event_idx = 0UL; event_idx < DMA_EVENT_MAX; ++event_idx)
 1682              	 .loc 2 498 0
 1683 000e 0023     	 movs r3,#0
 1684 0010 7B61     	 str r3,[r7,#20]
 1685 0012 14E0     	 b .L80
 1686              	.L82:
 499:../Libraries/XMCLib/src/xmc_dma.c ****   {
 500:../Libraries/XMCLib/src/xmc_dma.c ****     if (event & ((uint32_t)0x1UL << event_idx))
 1687              	 .loc 2 500 0
 1688 0014 7B69     	 ldr r3,[r7,#20]
 1689 0016 7A68     	 ldr r2,[r7,#4]
 1690 0018 22FA03F3 	 lsr r3,r2,r3
 1691 001c 03F00103 	 and r3,r3,#1
 1692 0020 002B     	 cmp r3,#0
 1693 0022 09D0     	 beq .L81
 501:../Libraries/XMCLib/src/xmc_dma.c ****     {
 502:../Libraries/XMCLib/src/xmc_dma.c ****       dma->MASKCHEV[event_idx * 2UL] = ((uint32_t)0x101UL << channel);
 1694              	 .loc 2 502 0
 1695 0024 7B69     	 ldr r3,[r7,#20]
 1696 0026 5A00     	 lsls r2,r3,#1
 1697 0028 FB7A     	 ldrb r3,[r7,#11]
 1698 002a 40F20111 	 movw r1,#257
 1699 002e 9940     	 lsls r1,r1,r3
 1700 0030 FB68     	 ldr r3,[r7,#12]
 1701 0032 C432     	 adds r2,r2,#196
 1702 0034 43F82210 	 str r1,[r3,r2,lsl#2]
 1703              	.L81:
 498:../Libraries/XMCLib/src/xmc_dma.c ****   {
 1704              	 .loc 2 498 0 discriminator 2
 1705 0038 7B69     	 ldr r3,[r7,#20]
 1706 003a 0133     	 adds r3,r3,#1
 1707 003c 7B61     	 str r3,[r7,#20]
 1708              	.L80:
 498:../Libraries/XMCLib/src/xmc_dma.c ****   {
 1709              	 .loc 2 498 0 is_stmt 0 discriminator 1
 1710 003e 7B69     	 ldr r3,[r7,#20]
 1711 0040 042B     	 cmp r3,#4
 1712 0042 E7D9     	 bls .L82
 503:../Libraries/XMCLib/src/xmc_dma.c ****     }
 504:../Libraries/XMCLib/src/xmc_dma.c ****   }
 505:../Libraries/XMCLib/src/xmc_dma.c **** }
 1713              	 .loc 2 505 0 is_stmt 1
 1714 0044 1C37     	 adds r7,r7,#28
 1715              	.LCFI124:
 1716              	 .cfi_def_cfa_offset 4
 1717 0046 BD46     	 mov sp,r7
 1718              	.LCFI125:
 1719              	 .cfi_def_cfa_register 13
 1720              	 
 1721 0048 5DF8047B 	 ldr r7,[sp],#4
 1722              	.LCFI126:
 1723              	 .cfi_restore 7
 1724              	 .cfi_def_cfa_offset 0
 1725 004c 7047     	 bx lr
 1726              	 .cfi_endproc
 1727              	.LFE199:
 1729 004e 00BF     	 .section .text.XMC_DMA_CH_DisableEvent,"ax",%progbits
 1730              	 .align 2
 1731              	 .global XMC_DMA_CH_DisableEvent
 1732              	 .thumb
 1733              	 .thumb_func
 1735              	XMC_DMA_CH_DisableEvent:
 1736              	.LFB200:
 506:../Libraries/XMCLib/src/xmc_dma.c **** 
 507:../Libraries/XMCLib/src/xmc_dma.c **** /* Disable GPDMA event */
 508:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_DisableEvent(XMC_DMA_t *const dma, const uint8_t channel, const uint32_t event)
 509:../Libraries/XMCLib/src/xmc_dma.c **** {
 1737              	 .loc 2 509 0
 1738              	 .cfi_startproc
 1739              	 
 1740              	 
 1741              	 
 1742 0000 80B4     	 push {r7}
 1743              	.LCFI127:
 1744              	 .cfi_def_cfa_offset 4
 1745              	 .cfi_offset 7,-4
 1746 0002 87B0     	 sub sp,sp,#28
 1747              	.LCFI128:
 1748              	 .cfi_def_cfa_offset 32
 1749 0004 00AF     	 add r7,sp,#0
 1750              	.LCFI129:
 1751              	 .cfi_def_cfa_register 7
 1752 0006 F860     	 str r0,[r7,#12]
 1753 0008 0B46     	 mov r3,r1
 1754 000a 7A60     	 str r2,[r7,#4]
 1755 000c FB72     	 strb r3,[r7,#11]
 510:../Libraries/XMCLib/src/xmc_dma.c ****   uint32_t event_idx;
 511:../Libraries/XMCLib/src/xmc_dma.c **** 
 512:../Libraries/XMCLib/src/xmc_dma.c ****   for (event_idx = 0UL; event_idx < DMA_EVENT_MAX; ++event_idx)
 1756              	 .loc 2 512 0
 1757 000e 0023     	 movs r3,#0
 1758 0010 7B61     	 str r3,[r7,#20]
 1759 0012 14E0     	 b .L84
 1760              	.L86:
 513:../Libraries/XMCLib/src/xmc_dma.c ****   {
 514:../Libraries/XMCLib/src/xmc_dma.c ****     if (event & ((uint32_t)0x1UL << event_idx))
 1761              	 .loc 2 514 0
 1762 0014 7B69     	 ldr r3,[r7,#20]
 1763 0016 7A68     	 ldr r2,[r7,#4]
 1764 0018 22FA03F3 	 lsr r3,r2,r3
 1765 001c 03F00103 	 and r3,r3,#1
 1766 0020 002B     	 cmp r3,#0
 1767 0022 09D0     	 beq .L85
 515:../Libraries/XMCLib/src/xmc_dma.c ****     {
 516:../Libraries/XMCLib/src/xmc_dma.c ****       dma->MASKCHEV[event_idx * 2UL] = ((uint32_t)0x100UL << channel);
 1768              	 .loc 2 516 0
 1769 0024 7B69     	 ldr r3,[r7,#20]
 1770 0026 5A00     	 lsls r2,r3,#1
 1771 0028 FB7A     	 ldrb r3,[r7,#11]
 1772 002a 4FF48071 	 mov r1,#256
 1773 002e 9940     	 lsls r1,r1,r3
 1774 0030 FB68     	 ldr r3,[r7,#12]
 1775 0032 C432     	 adds r2,r2,#196
 1776 0034 43F82210 	 str r1,[r3,r2,lsl#2]
 1777              	.L85:
 512:../Libraries/XMCLib/src/xmc_dma.c ****   {
 1778              	 .loc 2 512 0 discriminator 2
 1779 0038 7B69     	 ldr r3,[r7,#20]
 1780 003a 0133     	 adds r3,r3,#1
 1781 003c 7B61     	 str r3,[r7,#20]
 1782              	.L84:
 512:../Libraries/XMCLib/src/xmc_dma.c ****   {
 1783              	 .loc 2 512 0 is_stmt 0 discriminator 1
 1784 003e 7B69     	 ldr r3,[r7,#20]
 1785 0040 042B     	 cmp r3,#4
 1786 0042 E7D9     	 bls .L86
 517:../Libraries/XMCLib/src/xmc_dma.c ****     }
 518:../Libraries/XMCLib/src/xmc_dma.c ****   }
 519:../Libraries/XMCLib/src/xmc_dma.c **** }
 1787              	 .loc 2 519 0 is_stmt 1
 1788 0044 1C37     	 adds r7,r7,#28
 1789              	.LCFI130:
 1790              	 .cfi_def_cfa_offset 4
 1791 0046 BD46     	 mov sp,r7
 1792              	.LCFI131:
 1793              	 .cfi_def_cfa_register 13
 1794              	 
 1795 0048 5DF8047B 	 ldr r7,[sp],#4
 1796              	.LCFI132:
 1797              	 .cfi_restore 7
 1798              	 .cfi_def_cfa_offset 0
 1799 004c 7047     	 bx lr
 1800              	 .cfi_endproc
 1801              	.LFE200:
 1803 004e 00BF     	 .section .text.XMC_DMA_CH_ClearEventStatus,"ax",%progbits
 1804              	 .align 2
 1805              	 .global XMC_DMA_CH_ClearEventStatus
 1806              	 .thumb
 1807              	 .thumb_func
 1809              	XMC_DMA_CH_ClearEventStatus:
 1810              	.LFB201:
 520:../Libraries/XMCLib/src/xmc_dma.c **** 
 521:../Libraries/XMCLib/src/xmc_dma.c **** /* Clear GPDMA event */
 522:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_ClearEventStatus(XMC_DMA_t *const dma, const uint8_t channel, const uint32_t event)
 523:../Libraries/XMCLib/src/xmc_dma.c **** {
 1811              	 .loc 2 523 0
 1812              	 .cfi_startproc
 1813              	 
 1814              	 
 1815              	 
 1816 0000 80B4     	 push {r7}
 1817              	.LCFI133:
 1818              	 .cfi_def_cfa_offset 4
 1819              	 .cfi_offset 7,-4
 1820 0002 87B0     	 sub sp,sp,#28
 1821              	.LCFI134:
 1822              	 .cfi_def_cfa_offset 32
 1823 0004 00AF     	 add r7,sp,#0
 1824              	.LCFI135:
 1825              	 .cfi_def_cfa_register 7
 1826 0006 F860     	 str r0,[r7,#12]
 1827 0008 0B46     	 mov r3,r1
 1828 000a 7A60     	 str r2,[r7,#4]
 1829 000c FB72     	 strb r3,[r7,#11]
 524:../Libraries/XMCLib/src/xmc_dma.c ****   uint32_t event_idx;
 525:../Libraries/XMCLib/src/xmc_dma.c **** 
 526:../Libraries/XMCLib/src/xmc_dma.c ****   for (event_idx = 0UL; event_idx < DMA_EVENT_MAX; ++event_idx)
 1830              	 .loc 2 526 0
 1831 000e 0023     	 movs r3,#0
 1832 0010 7B61     	 str r3,[r7,#20]
 1833 0012 13E0     	 b .L88
 1834              	.L90:
 527:../Libraries/XMCLib/src/xmc_dma.c ****   {
 528:../Libraries/XMCLib/src/xmc_dma.c ****     if (event & (uint32_t)((uint32_t)0x1UL << event_idx))
 1835              	 .loc 2 528 0
 1836 0014 7B69     	 ldr r3,[r7,#20]
 1837 0016 7A68     	 ldr r2,[r7,#4]
 1838 0018 22FA03F3 	 lsr r3,r2,r3
 1839 001c 03F00103 	 and r3,r3,#1
 1840 0020 002B     	 cmp r3,#0
 1841 0022 08D0     	 beq .L89
 529:../Libraries/XMCLib/src/xmc_dma.c ****     {
 530:../Libraries/XMCLib/src/xmc_dma.c ****       dma->CLEARCHEV[event_idx * 2UL] = ((uint32_t)0x1UL << channel);
 1842              	 .loc 2 530 0
 1843 0024 7B69     	 ldr r3,[r7,#20]
 1844 0026 5A00     	 lsls r2,r3,#1
 1845 0028 FB7A     	 ldrb r3,[r7,#11]
 1846 002a 0121     	 movs r1,#1
 1847 002c 9940     	 lsls r1,r1,r3
 1848 002e FB68     	 ldr r3,[r7,#12]
 1849 0030 CE32     	 adds r2,r2,#206
 1850 0032 43F82210 	 str r1,[r3,r2,lsl#2]
 1851              	.L89:
 526:../Libraries/XMCLib/src/xmc_dma.c ****   {
 1852              	 .loc 2 526 0 discriminator 2
 1853 0036 7B69     	 ldr r3,[r7,#20]
 1854 0038 0133     	 adds r3,r3,#1
 1855 003a 7B61     	 str r3,[r7,#20]
 1856              	.L88:
 526:../Libraries/XMCLib/src/xmc_dma.c ****   {
 1857              	 .loc 2 526 0 is_stmt 0 discriminator 1
 1858 003c 7B69     	 ldr r3,[r7,#20]
 1859 003e 042B     	 cmp r3,#4
 1860 0040 E8D9     	 bls .L90
 531:../Libraries/XMCLib/src/xmc_dma.c ****     }
 532:../Libraries/XMCLib/src/xmc_dma.c ****   }
 533:../Libraries/XMCLib/src/xmc_dma.c **** 
 534:../Libraries/XMCLib/src/xmc_dma.c **** }
 1861              	 .loc 2 534 0 is_stmt 1
 1862 0042 1C37     	 adds r7,r7,#28
 1863              	.LCFI136:
 1864              	 .cfi_def_cfa_offset 4
 1865 0044 BD46     	 mov sp,r7
 1866              	.LCFI137:
 1867              	 .cfi_def_cfa_register 13
 1868              	 
 1869 0046 5DF8047B 	 ldr r7,[sp],#4
 1870              	.LCFI138:
 1871              	 .cfi_restore 7
 1872              	 .cfi_def_cfa_offset 0
 1873 004a 7047     	 bx lr
 1874              	 .cfi_endproc
 1875              	.LFE201:
 1877              	 .section .text.XMC_DMA_CH_GetEventStatus,"ax",%progbits
 1878              	 .align 2
 1879              	 .global XMC_DMA_CH_GetEventStatus
 1880              	 .thumb
 1881              	 .thumb_func
 1883              	XMC_DMA_CH_GetEventStatus:
 1884              	.LFB202:
 535:../Libraries/XMCLib/src/xmc_dma.c **** 
 536:../Libraries/XMCLib/src/xmc_dma.c **** /* Get GPDMA event status */
 537:../Libraries/XMCLib/src/xmc_dma.c **** uint32_t XMC_DMA_CH_GetEventStatus(XMC_DMA_t *const dma, const uint8_t channel)
 538:../Libraries/XMCLib/src/xmc_dma.c **** {
 1885              	 .loc 2 538 0
 1886              	 .cfi_startproc
 1887              	 
 1888              	 
 1889              	 
 1890 0000 80B4     	 push {r7}
 1891              	.LCFI139:
 1892              	 .cfi_def_cfa_offset 4
 1893              	 .cfi_offset 7,-4
 1894 0002 85B0     	 sub sp,sp,#20
 1895              	.LCFI140:
 1896              	 .cfi_def_cfa_offset 24
 1897 0004 00AF     	 add r7,sp,#0
 1898              	.LCFI141:
 1899              	 .cfi_def_cfa_register 7
 1900 0006 7860     	 str r0,[r7,#4]
 1901 0008 0B46     	 mov r3,r1
 1902 000a FB70     	 strb r3,[r7,#3]
 539:../Libraries/XMCLib/src/xmc_dma.c ****   uint32_t event_idx;
 540:../Libraries/XMCLib/src/xmc_dma.c ****   uint32_t status = 0UL;
 1903              	 .loc 2 540 0
 1904 000c 0023     	 movs r3,#0
 1905 000e BB60     	 str r3,[r7,#8]
 541:../Libraries/XMCLib/src/xmc_dma.c **** 
 542:../Libraries/XMCLib/src/xmc_dma.c ****   for (event_idx = 0UL; event_idx < DMA_EVENT_MAX; ++event_idx)
 1906              	 .loc 2 542 0
 1907 0010 0023     	 movs r3,#0
 1908 0012 FB60     	 str r3,[r7,#12]
 1909 0014 18E0     	 b .L92
 1910              	.L95:
 543:../Libraries/XMCLib/src/xmc_dma.c ****   {
 544:../Libraries/XMCLib/src/xmc_dma.c ****     status |= (uint32_t)((dma->STATUSCHEV[event_idx * 2UL] & (uint32_t)((uint32_t)0x1UL << (uint32_
 1911              	 .loc 2 544 0
 1912 0016 FB68     	 ldr r3,[r7,#12]
 1913 0018 5A00     	 lsls r2,r3,#1
 1914 001a 7B68     	 ldr r3,[r7,#4]
 1915 001c BA32     	 adds r2,r2,#186
 1916 001e 53F82220 	 ldr r2,[r3,r2,lsl#2]
 1917 0022 FB78     	 ldrb r3,[r7,#3]
 1918 0024 22FA03F3 	 lsr r3,r2,r3
 1919 0028 03F00103 	 and r3,r3,#1
 1920 002c 002B     	 cmp r3,#0
 1921 002e 04D0     	 beq .L93
 1922              	 .loc 2 544 0 is_stmt 0 discriminator 1
 1923 0030 FB68     	 ldr r3,[r7,#12]
 1924 0032 0122     	 movs r2,#1
 1925 0034 02FA03F3 	 lsl r3,r2,r3
 1926 0038 00E0     	 b .L94
 1927              	.L93:
 1928              	 .loc 2 544 0 discriminator 2
 1929 003a 0023     	 movs r3,#0
 1930              	.L94:
 1931              	 .loc 2 544 0 discriminator 4
 1932 003c BA68     	 ldr r2,[r7,#8]
 1933 003e 1343     	 orrs r3,r3,r2
 1934 0040 BB60     	 str r3,[r7,#8]
 542:../Libraries/XMCLib/src/xmc_dma.c ****   {
 1935              	 .loc 2 542 0 is_stmt 1 discriminator 4
 1936 0042 FB68     	 ldr r3,[r7,#12]
 1937 0044 0133     	 adds r3,r3,#1
 1938 0046 FB60     	 str r3,[r7,#12]
 1939              	.L92:
 542:../Libraries/XMCLib/src/xmc_dma.c ****   {
 1940              	 .loc 2 542 0 is_stmt 0 discriminator 2
 1941 0048 FB68     	 ldr r3,[r7,#12]
 1942 004a 042B     	 cmp r3,#4
 1943 004c E3D9     	 bls .L95
 545:../Libraries/XMCLib/src/xmc_dma.c ****                          ((uint32_t)0x1UL << event_idx) : (uint32_t)0UL);
 546:../Libraries/XMCLib/src/xmc_dma.c ****   }
 547:../Libraries/XMCLib/src/xmc_dma.c **** 
 548:../Libraries/XMCLib/src/xmc_dma.c ****   return status;
 1944              	 .loc 2 548 0 is_stmt 1
 1945 004e BB68     	 ldr r3,[r7,#8]
 549:../Libraries/XMCLib/src/xmc_dma.c **** }
 1946              	 .loc 2 549 0
 1947 0050 1846     	 mov r0,r3
 1948 0052 1437     	 adds r7,r7,#20
 1949              	.LCFI142:
 1950              	 .cfi_def_cfa_offset 4
 1951 0054 BD46     	 mov sp,r7
 1952              	.LCFI143:
 1953              	 .cfi_def_cfa_register 13
 1954              	 
 1955 0056 5DF8047B 	 ldr r7,[sp],#4
 1956              	.LCFI144:
 1957              	 .cfi_restore 7
 1958              	 .cfi_def_cfa_offset 0
 1959 005a 7047     	 bx lr
 1960              	 .cfi_endproc
 1961              	.LFE202:
 1963              	 .section .text.XMC_DMA_CH_EnableSourceGather,"ax",%progbits
 1964              	 .align 2
 1965              	 .global XMC_DMA_CH_EnableSourceGather
 1966              	 .thumb
 1967              	 .thumb_func
 1969              	XMC_DMA_CH_EnableSourceGather:
 1970              	.LFB203:
 550:../Libraries/XMCLib/src/xmc_dma.c **** 
 551:../Libraries/XMCLib/src/xmc_dma.c **** /* Enable source gather */
 552:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_EnableSourceGather(XMC_DMA_t *const dma, const uint8_t channel, uint32_t interval, 
 553:../Libraries/XMCLib/src/xmc_dma.c **** {
 1971              	 .loc 2 553 0
 1972              	 .cfi_startproc
 1973              	 
 1974              	 
 1975              	 
 1976 0000 80B4     	 push {r7}
 1977              	.LCFI145:
 1978              	 .cfi_def_cfa_offset 4
 1979              	 .cfi_offset 7,-4
 1980 0002 85B0     	 sub sp,sp,#20
 1981              	.LCFI146:
 1982              	 .cfi_def_cfa_offset 24
 1983 0004 00AF     	 add r7,sp,#0
 1984              	.LCFI147:
 1985              	 .cfi_def_cfa_register 7
 1986 0006 F860     	 str r0,[r7,#12]
 1987 0008 7A60     	 str r2,[r7,#4]
 1988 000a 1A46     	 mov r2,r3
 1989 000c 0B46     	 mov r3,r1
 1990 000e FB72     	 strb r3,[r7,#11]
 1991 0010 1346     	 mov r3,r2
 1992 0012 3B81     	 strh r3,[r7,#8]
 554:../Libraries/XMCLib/src/xmc_dma.c ****   dma->CH[channel].CTLL |= (uint32_t)GPDMA0_CH_CTLL_SRC_GATHER_EN_Msk;
 1993              	 .loc 2 554 0
 1994 0014 FB7A     	 ldrb r3,[r7,#11]
 1995 0016 FA7A     	 ldrb r2,[r7,#11]
 1996 0018 F968     	 ldr r1,[r7,#12]
 1997 001a 5820     	 movs r0,#88
 1998 001c 00FB02F2 	 mul r2,r0,r2
 1999 0020 0A44     	 add r2,r2,r1
 2000 0022 1832     	 adds r2,r2,#24
 2001 0024 1268     	 ldr r2,[r2]
 2002 0026 42F40032 	 orr r2,r2,#131072
 2003 002a F968     	 ldr r1,[r7,#12]
 2004 002c 5820     	 movs r0,#88
 2005 002e 00FB03F3 	 mul r3,r0,r3
 2006 0032 0B44     	 add r3,r3,r1
 2007 0034 1833     	 adds r3,r3,#24
 2008 0036 1A60     	 str r2,[r3]
 555:../Libraries/XMCLib/src/xmc_dma.c ****   dma->CH[channel].SGR = ((uint32_t)interval << GPDMA0_CH_SGR_SGI_Pos) | ((uint32_t)count << GPDMA0
 2009              	 .loc 2 555 0
 2010 0038 FB7A     	 ldrb r3,[r7,#11]
 2011 003a 3A89     	 ldrh r2,[r7,#8]
 2012 003c 1105     	 lsls r1,r2,#20
 2013 003e 7A68     	 ldr r2,[r7,#4]
 2014 0040 0A43     	 orrs r2,r2,r1
 2015 0042 F968     	 ldr r1,[r7,#12]
 2016 0044 5820     	 movs r0,#88
 2017 0046 00FB03F3 	 mul r3,r0,r3
 2018 004a 0B44     	 add r3,r3,r1
 2019 004c 4833     	 adds r3,r3,#72
 2020 004e 1A60     	 str r2,[r3]
 556:../Libraries/XMCLib/src/xmc_dma.c **** }
 2021              	 .loc 2 556 0
 2022 0050 1437     	 adds r7,r7,#20
 2023              	.LCFI148:
 2024              	 .cfi_def_cfa_offset 4
 2025 0052 BD46     	 mov sp,r7
 2026              	.LCFI149:
 2027              	 .cfi_def_cfa_register 13
 2028              	 
 2029 0054 5DF8047B 	 ldr r7,[sp],#4
 2030              	.LCFI150:
 2031              	 .cfi_restore 7
 2032              	 .cfi_def_cfa_offset 0
 2033 0058 7047     	 bx lr
 2034              	 .cfi_endproc
 2035              	.LFE203:
 2037 005a 00BF     	 .section .text.XMC_DMA_CH_DisableSourceGather,"ax",%progbits
 2038              	 .align 2
 2039              	 .global XMC_DMA_CH_DisableSourceGather
 2040              	 .thumb
 2041              	 .thumb_func
 2043              	XMC_DMA_CH_DisableSourceGather:
 2044              	.LFB204:
 557:../Libraries/XMCLib/src/xmc_dma.c **** 
 558:../Libraries/XMCLib/src/xmc_dma.c **** /* Disable source gather */
 559:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_DisableSourceGather(XMC_DMA_t *const dma, const uint8_t channel)
 560:../Libraries/XMCLib/src/xmc_dma.c **** {
 2045              	 .loc 2 560 0
 2046              	 .cfi_startproc
 2047              	 
 2048              	 
 2049              	 
 2050 0000 80B4     	 push {r7}
 2051              	.LCFI151:
 2052              	 .cfi_def_cfa_offset 4
 2053              	 .cfi_offset 7,-4
 2054 0002 83B0     	 sub sp,sp,#12
 2055              	.LCFI152:
 2056              	 .cfi_def_cfa_offset 16
 2057 0004 00AF     	 add r7,sp,#0
 2058              	.LCFI153:
 2059              	 .cfi_def_cfa_register 7
 2060 0006 7860     	 str r0,[r7,#4]
 2061 0008 0B46     	 mov r3,r1
 2062 000a FB70     	 strb r3,[r7,#3]
 561:../Libraries/XMCLib/src/xmc_dma.c ****   dma->CH[channel].CTLL &= (uint32_t)~GPDMA0_CH_CTLL_SRC_GATHER_EN_Msk;
 2063              	 .loc 2 561 0
 2064 000c FB78     	 ldrb r3,[r7,#3]
 2065 000e FA78     	 ldrb r2,[r7,#3]
 2066 0010 7968     	 ldr r1,[r7,#4]
 2067 0012 5820     	 movs r0,#88
 2068 0014 00FB02F2 	 mul r2,r0,r2
 2069 0018 0A44     	 add r2,r2,r1
 2070 001a 1832     	 adds r2,r2,#24
 2071 001c 1268     	 ldr r2,[r2]
 2072 001e 22F40032 	 bic r2,r2,#131072
 2073 0022 7968     	 ldr r1,[r7,#4]
 2074 0024 5820     	 movs r0,#88
 2075 0026 00FB03F3 	 mul r3,r0,r3
 2076 002a 0B44     	 add r3,r3,r1
 2077 002c 1833     	 adds r3,r3,#24
 2078 002e 1A60     	 str r2,[r3]
 562:../Libraries/XMCLib/src/xmc_dma.c **** }
 2079              	 .loc 2 562 0
 2080 0030 0C37     	 adds r7,r7,#12
 2081              	.LCFI154:
 2082              	 .cfi_def_cfa_offset 4
 2083 0032 BD46     	 mov sp,r7
 2084              	.LCFI155:
 2085              	 .cfi_def_cfa_register 13
 2086              	 
 2087 0034 5DF8047B 	 ldr r7,[sp],#4
 2088              	.LCFI156:
 2089              	 .cfi_restore 7
 2090              	 .cfi_def_cfa_offset 0
 2091 0038 7047     	 bx lr
 2092              	 .cfi_endproc
 2093              	.LFE204:
 2095 003a 00BF     	 .section .text.XMC_DMA_CH_EnableDestinationScatter,"ax",%progbits
 2096              	 .align 2
 2097              	 .global XMC_DMA_CH_EnableDestinationScatter
 2098              	 .thumb
 2099              	 .thumb_func
 2101              	XMC_DMA_CH_EnableDestinationScatter:
 2102              	.LFB205:
 563:../Libraries/XMCLib/src/xmc_dma.c **** 
 564:../Libraries/XMCLib/src/xmc_dma.c **** /* Enable destination scatter */
 565:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_EnableDestinationScatter(XMC_DMA_t *const dma, const uint8_t channel, uint32_t inte
 566:../Libraries/XMCLib/src/xmc_dma.c **** {
 2103              	 .loc 2 566 0
 2104              	 .cfi_startproc
 2105              	 
 2106              	 
 2107              	 
 2108 0000 80B4     	 push {r7}
 2109              	.LCFI157:
 2110              	 .cfi_def_cfa_offset 4
 2111              	 .cfi_offset 7,-4
 2112 0002 85B0     	 sub sp,sp,#20
 2113              	.LCFI158:
 2114              	 .cfi_def_cfa_offset 24
 2115 0004 00AF     	 add r7,sp,#0
 2116              	.LCFI159:
 2117              	 .cfi_def_cfa_register 7
 2118 0006 F860     	 str r0,[r7,#12]
 2119 0008 7A60     	 str r2,[r7,#4]
 2120 000a 1A46     	 mov r2,r3
 2121 000c 0B46     	 mov r3,r1
 2122 000e FB72     	 strb r3,[r7,#11]
 2123 0010 1346     	 mov r3,r2
 2124 0012 3B81     	 strh r3,[r7,#8]
 567:../Libraries/XMCLib/src/xmc_dma.c ****   dma->CH[channel].CTLL |= (uint32_t)GPDMA0_CH_CTLL_DST_SCATTER_EN_Msk;
 2125              	 .loc 2 567 0
 2126 0014 FB7A     	 ldrb r3,[r7,#11]
 2127 0016 FA7A     	 ldrb r2,[r7,#11]
 2128 0018 F968     	 ldr r1,[r7,#12]
 2129 001a 5820     	 movs r0,#88
 2130 001c 00FB02F2 	 mul r2,r0,r2
 2131 0020 0A44     	 add r2,r2,r1
 2132 0022 1832     	 adds r2,r2,#24
 2133 0024 1268     	 ldr r2,[r2]
 2134 0026 42F48022 	 orr r2,r2,#262144
 2135 002a F968     	 ldr r1,[r7,#12]
 2136 002c 5820     	 movs r0,#88
 2137 002e 00FB03F3 	 mul r3,r0,r3
 2138 0032 0B44     	 add r3,r3,r1
 2139 0034 1833     	 adds r3,r3,#24
 2140 0036 1A60     	 str r2,[r3]
 568:../Libraries/XMCLib/src/xmc_dma.c ****   dma->CH[channel].DSR = ((uint32_t)interval << GPDMA0_CH_DSR_DSI_Pos) | ((uint32_t)count << GPDMA0
 2141              	 .loc 2 568 0
 2142 0038 FB7A     	 ldrb r3,[r7,#11]
 2143 003a 3A89     	 ldrh r2,[r7,#8]
 2144 003c 1105     	 lsls r1,r2,#20
 2145 003e 7A68     	 ldr r2,[r7,#4]
 2146 0040 0A43     	 orrs r2,r2,r1
 2147 0042 F968     	 ldr r1,[r7,#12]
 2148 0044 5820     	 movs r0,#88
 2149 0046 00FB03F3 	 mul r3,r0,r3
 2150 004a 0B44     	 add r3,r3,r1
 2151 004c 5033     	 adds r3,r3,#80
 2152 004e 1A60     	 str r2,[r3]
 569:../Libraries/XMCLib/src/xmc_dma.c **** }
 2153              	 .loc 2 569 0
 2154 0050 1437     	 adds r7,r7,#20
 2155              	.LCFI160:
 2156              	 .cfi_def_cfa_offset 4
 2157 0052 BD46     	 mov sp,r7
 2158              	.LCFI161:
 2159              	 .cfi_def_cfa_register 13
 2160              	 
 2161 0054 5DF8047B 	 ldr r7,[sp],#4
 2162              	.LCFI162:
 2163              	 .cfi_restore 7
 2164              	 .cfi_def_cfa_offset 0
 2165 0058 7047     	 bx lr
 2166              	 .cfi_endproc
 2167              	.LFE205:
 2169 005a 00BF     	 .section .text.XMC_DMA_CH_DisableDestinationScatter,"ax",%progbits
 2170              	 .align 2
 2171              	 .global XMC_DMA_CH_DisableDestinationScatter
 2172              	 .thumb
 2173              	 .thumb_func
 2175              	XMC_DMA_CH_DisableDestinationScatter:
 2176              	.LFB206:
 570:../Libraries/XMCLib/src/xmc_dma.c **** 
 571:../Libraries/XMCLib/src/xmc_dma.c **** /* Disable destination scatter */
 572:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_DisableDestinationScatter(XMC_DMA_t *const dma, const uint8_t channel)
 573:../Libraries/XMCLib/src/xmc_dma.c **** {
 2177              	 .loc 2 573 0
 2178              	 .cfi_startproc
 2179              	 
 2180              	 
 2181              	 
 2182 0000 80B4     	 push {r7}
 2183              	.LCFI163:
 2184              	 .cfi_def_cfa_offset 4
 2185              	 .cfi_offset 7,-4
 2186 0002 83B0     	 sub sp,sp,#12
 2187              	.LCFI164:
 2188              	 .cfi_def_cfa_offset 16
 2189 0004 00AF     	 add r7,sp,#0
 2190              	.LCFI165:
 2191              	 .cfi_def_cfa_register 7
 2192 0006 7860     	 str r0,[r7,#4]
 2193 0008 0B46     	 mov r3,r1
 2194 000a FB70     	 strb r3,[r7,#3]
 574:../Libraries/XMCLib/src/xmc_dma.c ****   dma->CH[channel].CTLL &= (uint32_t)~GPDMA0_CH_CTLL_DST_SCATTER_EN_Msk;
 2195              	 .loc 2 574 0
 2196 000c FB78     	 ldrb r3,[r7,#3]
 2197 000e FA78     	 ldrb r2,[r7,#3]
 2198 0010 7968     	 ldr r1,[r7,#4]
 2199 0012 5820     	 movs r0,#88
 2200 0014 00FB02F2 	 mul r2,r0,r2
 2201 0018 0A44     	 add r2,r2,r1
 2202 001a 1832     	 adds r2,r2,#24
 2203 001c 1268     	 ldr r2,[r2]
 2204 001e 22F48022 	 bic r2,r2,#262144
 2205 0022 7968     	 ldr r1,[r7,#4]
 2206 0024 5820     	 movs r0,#88
 2207 0026 00FB03F3 	 mul r3,r0,r3
 2208 002a 0B44     	 add r3,r3,r1
 2209 002c 1833     	 adds r3,r3,#24
 2210 002e 1A60     	 str r2,[r3]
 575:../Libraries/XMCLib/src/xmc_dma.c **** }
 2211              	 .loc 2 575 0
 2212 0030 0C37     	 adds r7,r7,#12
 2213              	.LCFI166:
 2214              	 .cfi_def_cfa_offset 4
 2215 0032 BD46     	 mov sp,r7
 2216              	.LCFI167:
 2217              	 .cfi_def_cfa_register 13
 2218              	 
 2219 0034 5DF8047B 	 ldr r7,[sp],#4
 2220              	.LCFI168:
 2221              	 .cfi_restore 7
 2222              	 .cfi_def_cfa_offset 0
 2223 0038 7047     	 bx lr
 2224              	 .cfi_endproc
 2225              	.LFE206:
 2227 003a 00BF     	 .section .text.XMC_DMA_CH_TriggerSourceRequest,"ax",%progbits
 2228              	 .align 2
 2229              	 .global XMC_DMA_CH_TriggerSourceRequest
 2230              	 .thumb
 2231              	 .thumb_func
 2233              	XMC_DMA_CH_TriggerSourceRequest:
 2234              	.LFB207:
 576:../Libraries/XMCLib/src/xmc_dma.c **** 
 577:../Libraries/XMCLib/src/xmc_dma.c **** /* Trigger source request */
 578:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_TriggerSourceRequest(XMC_DMA_t *const dma, const uint8_t channel, const XMC_DMA_CH_
 579:../Libraries/XMCLib/src/xmc_dma.c **** {
 2235              	 .loc 2 579 0
 2236              	 .cfi_startproc
 2237              	 
 2238              	 
 2239              	 
 2240 0000 80B4     	 push {r7}
 2241              	.LCFI169:
 2242              	 .cfi_def_cfa_offset 4
 2243              	 .cfi_offset 7,-4
 2244 0002 83B0     	 sub sp,sp,#12
 2245              	.LCFI170:
 2246              	 .cfi_def_cfa_offset 16
 2247 0004 00AF     	 add r7,sp,#0
 2248              	.LCFI171:
 2249              	 .cfi_def_cfa_register 7
 2250 0006 7860     	 str r0,[r7,#4]
 2251 0008 0846     	 mov r0,r1
 2252 000a 1146     	 mov r1,r2
 2253 000c 1A46     	 mov r2,r3
 2254 000e 0346     	 mov r3,r0
 2255 0010 FB70     	 strb r3,[r7,#3]
 2256 0012 0B46     	 mov r3,r1
 2257 0014 BB70     	 strb r3,[r7,#2]
 2258 0016 1346     	 mov r3,r2
 2259 0018 7B70     	 strb r3,[r7,#1]
 580:../Libraries/XMCLib/src/xmc_dma.c ****   if ((uint32_t)type == (uint32_t)XMC_DMA_CH_TRANSACTION_TYPE_SINGLE)
 2260              	 .loc 2 580 0
 2261 001a BB78     	 ldrb r3,[r7,#2]
 2262 001c 002B     	 cmp r3,#0
 2263 001e 06D1     	 bne .L102
 581:../Libraries/XMCLib/src/xmc_dma.c ****   {
 582:../Libraries/XMCLib/src/xmc_dma.c ****     dma->SGLREQSRCREG = ((uint32_t)0x101UL << channel);
 2264              	 .loc 2 582 0
 2265 0020 FB78     	 ldrb r3,[r7,#3]
 2266 0022 40F20112 	 movw r2,#257
 2267 0026 9A40     	 lsls r2,r2,r3
 2268 0028 7B68     	 ldr r3,[r7,#4]
 2269 002a C3F87823 	 str r2,[r3,#888]
 2270              	.L102:
 583:../Libraries/XMCLib/src/xmc_dma.c ****   }
 584:../Libraries/XMCLib/src/xmc_dma.c **** 
 585:../Libraries/XMCLib/src/xmc_dma.c ****   if (last == true)
 2271              	 .loc 2 585 0
 2272 002e 7B78     	 ldrb r3,[r7,#1]
 2273 0030 002B     	 cmp r3,#0
 2274 0032 06D0     	 beq .L103
 586:../Libraries/XMCLib/src/xmc_dma.c ****   {
 587:../Libraries/XMCLib/src/xmc_dma.c ****     dma->LSTSRCREG = (uint32_t)0x101UL << channel;
 2275              	 .loc 2 587 0
 2276 0034 FB78     	 ldrb r3,[r7,#3]
 2277 0036 40F20112 	 movw r2,#257
 2278 003a 9A40     	 lsls r2,r2,r3
 2279 003c 7B68     	 ldr r3,[r7,#4]
 2280 003e C3F88823 	 str r2,[r3,#904]
 2281              	.L103:
 588:../Libraries/XMCLib/src/xmc_dma.c ****   }
 589:../Libraries/XMCLib/src/xmc_dma.c **** 
 590:../Libraries/XMCLib/src/xmc_dma.c ****   dma->REQSRCREG = (uint32_t)0x101UL << channel;
 2282              	 .loc 2 590 0
 2283 0042 FB78     	 ldrb r3,[r7,#3]
 2284 0044 40F20112 	 movw r2,#257
 2285 0048 9A40     	 lsls r2,r2,r3
 2286 004a 7B68     	 ldr r3,[r7,#4]
 2287 004c C3F86823 	 str r2,[r3,#872]
 591:../Libraries/XMCLib/src/xmc_dma.c **** }
 2288              	 .loc 2 591 0
 2289 0050 0C37     	 adds r7,r7,#12
 2290              	.LCFI172:
 2291              	 .cfi_def_cfa_offset 4
 2292 0052 BD46     	 mov sp,r7
 2293              	.LCFI173:
 2294              	 .cfi_def_cfa_register 13
 2295              	 
 2296 0054 5DF8047B 	 ldr r7,[sp],#4
 2297              	.LCFI174:
 2298              	 .cfi_restore 7
 2299              	 .cfi_def_cfa_offset 0
 2300 0058 7047     	 bx lr
 2301              	 .cfi_endproc
 2302              	.LFE207:
 2304 005a 00BF     	 .section .text.XMC_DMA_CH_TriggerDestinationRequest,"ax",%progbits
 2305              	 .align 2
 2306              	 .global XMC_DMA_CH_TriggerDestinationRequest
 2307              	 .thumb
 2308              	 .thumb_func
 2310              	XMC_DMA_CH_TriggerDestinationRequest:
 2311              	.LFB208:
 592:../Libraries/XMCLib/src/xmc_dma.c **** 
 593:../Libraries/XMCLib/src/xmc_dma.c **** /* Trigger destination request */
 594:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_TriggerDestinationRequest(XMC_DMA_t *const dma, const uint8_t channel, const XMC_DM
 595:../Libraries/XMCLib/src/xmc_dma.c **** {
 2312              	 .loc 2 595 0
 2313              	 .cfi_startproc
 2314              	 
 2315              	 
 2316              	 
 2317 0000 80B4     	 push {r7}
 2318              	.LCFI175:
 2319              	 .cfi_def_cfa_offset 4
 2320              	 .cfi_offset 7,-4
 2321 0002 83B0     	 sub sp,sp,#12
 2322              	.LCFI176:
 2323              	 .cfi_def_cfa_offset 16
 2324 0004 00AF     	 add r7,sp,#0
 2325              	.LCFI177:
 2326              	 .cfi_def_cfa_register 7
 2327 0006 7860     	 str r0,[r7,#4]
 2328 0008 0846     	 mov r0,r1
 2329 000a 1146     	 mov r1,r2
 2330 000c 1A46     	 mov r2,r3
 2331 000e 0346     	 mov r3,r0
 2332 0010 FB70     	 strb r3,[r7,#3]
 2333 0012 0B46     	 mov r3,r1
 2334 0014 BB70     	 strb r3,[r7,#2]
 2335 0016 1346     	 mov r3,r2
 2336 0018 7B70     	 strb r3,[r7,#1]
 596:../Libraries/XMCLib/src/xmc_dma.c ****   if (type == XMC_DMA_CH_TRANSACTION_TYPE_SINGLE)
 2337              	 .loc 2 596 0
 2338 001a BB78     	 ldrb r3,[r7,#2]
 2339 001c 002B     	 cmp r3,#0
 2340 001e 06D1     	 bne .L105
 597:../Libraries/XMCLib/src/xmc_dma.c ****   {
 598:../Libraries/XMCLib/src/xmc_dma.c ****     dma->SGLREQDSTREG = (uint32_t)0x101UL << channel;
 2341              	 .loc 2 598 0
 2342 0020 FB78     	 ldrb r3,[r7,#3]
 2343 0022 40F20112 	 movw r2,#257
 2344 0026 9A40     	 lsls r2,r2,r3
 2345 0028 7B68     	 ldr r3,[r7,#4]
 2346 002a C3F88023 	 str r2,[r3,#896]
 2347              	.L105:
 599:../Libraries/XMCLib/src/xmc_dma.c ****   }
 600:../Libraries/XMCLib/src/xmc_dma.c **** 
 601:../Libraries/XMCLib/src/xmc_dma.c ****   if (last == true)
 2348              	 .loc 2 601 0
 2349 002e 7B78     	 ldrb r3,[r7,#1]
 2350 0030 002B     	 cmp r3,#0
 2351 0032 06D0     	 beq .L106
 602:../Libraries/XMCLib/src/xmc_dma.c ****   {
 603:../Libraries/XMCLib/src/xmc_dma.c ****     dma->LSTDSTREG = (uint32_t)0x101UL << channel;
 2352              	 .loc 2 603 0
 2353 0034 FB78     	 ldrb r3,[r7,#3]
 2354 0036 40F20112 	 movw r2,#257
 2355 003a 9A40     	 lsls r2,r2,r3
 2356 003c 7B68     	 ldr r3,[r7,#4]
 2357 003e C3F89023 	 str r2,[r3,#912]
 2358              	.L106:
 604:../Libraries/XMCLib/src/xmc_dma.c ****   }
 605:../Libraries/XMCLib/src/xmc_dma.c **** 
 606:../Libraries/XMCLib/src/xmc_dma.c ****   dma->REQDSTREG = (uint32_t)0x101UL << channel;
 2359              	 .loc 2 606 0
 2360 0042 FB78     	 ldrb r3,[r7,#3]
 2361 0044 40F20112 	 movw r2,#257
 2362 0048 9A40     	 lsls r2,r2,r3
 2363 004a 7B68     	 ldr r3,[r7,#4]
 2364 004c C3F87023 	 str r2,[r3,#880]
 607:../Libraries/XMCLib/src/xmc_dma.c **** }
 2365              	 .loc 2 607 0
 2366 0050 0C37     	 adds r7,r7,#12
 2367              	.LCFI178:
 2368              	 .cfi_def_cfa_offset 4
 2369 0052 BD46     	 mov sp,r7
 2370              	.LCFI179:
 2371              	 .cfi_def_cfa_register 13
 2372              	 
 2373 0054 5DF8047B 	 ldr r7,[sp],#4
 2374              	.LCFI180:
 2375              	 .cfi_restore 7
 2376              	 .cfi_def_cfa_offset 0
 2377 0058 7047     	 bx lr
 2378              	 .cfi_endproc
 2379              	.LFE208:
 2381 005a 00BF     	 .section .text.XMC_DMA_CH_EnableSourceAddressReload,"ax",%progbits
 2382              	 .align 2
 2383              	 .global XMC_DMA_CH_EnableSourceAddressReload
 2384              	 .thumb
 2385              	 .thumb_func
 2387              	XMC_DMA_CH_EnableSourceAddressReload:
 2388              	.LFB209:
 608:../Libraries/XMCLib/src/xmc_dma.c **** 
 609:../Libraries/XMCLib/src/xmc_dma.c **** /* Enable source address reload */
 610:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_EnableSourceAddressReload(XMC_DMA_t *const dma, const uint8_t channel)
 611:../Libraries/XMCLib/src/xmc_dma.c **** {
 2389              	 .loc 2 611 0
 2390              	 .cfi_startproc
 2391              	 
 2392              	 
 2393              	 
 2394 0000 80B4     	 push {r7}
 2395              	.LCFI181:
 2396              	 .cfi_def_cfa_offset 4
 2397              	 .cfi_offset 7,-4
 2398 0002 83B0     	 sub sp,sp,#12
 2399              	.LCFI182:
 2400              	 .cfi_def_cfa_offset 16
 2401 0004 00AF     	 add r7,sp,#0
 2402              	.LCFI183:
 2403              	 .cfi_def_cfa_register 7
 2404 0006 7860     	 str r0,[r7,#4]
 2405 0008 0B46     	 mov r3,r1
 2406 000a FB70     	 strb r3,[r7,#3]
 612:../Libraries/XMCLib/src/xmc_dma.c ****   dma->CH[channel].CFGL |= (uint32_t)GPDMA0_CH_CFGL_RELOAD_SRC_Msk;
 2407              	 .loc 2 612 0
 2408 000c FB78     	 ldrb r3,[r7,#3]
 2409 000e FA78     	 ldrb r2,[r7,#3]
 2410 0010 7968     	 ldr r1,[r7,#4]
 2411 0012 5820     	 movs r0,#88
 2412 0014 00FB02F2 	 mul r2,r0,r2
 2413 0018 0A44     	 add r2,r2,r1
 2414 001a 4032     	 adds r2,r2,#64
 2415 001c 1268     	 ldr r2,[r2]
 2416 001e 42F08042 	 orr r2,r2,#1073741824
 2417 0022 7968     	 ldr r1,[r7,#4]
 2418 0024 5820     	 movs r0,#88
 2419 0026 00FB03F3 	 mul r3,r0,r3
 2420 002a 0B44     	 add r3,r3,r1
 2421 002c 4033     	 adds r3,r3,#64
 2422 002e 1A60     	 str r2,[r3]
 613:../Libraries/XMCLib/src/xmc_dma.c **** }
 2423              	 .loc 2 613 0
 2424 0030 0C37     	 adds r7,r7,#12
 2425              	.LCFI184:
 2426              	 .cfi_def_cfa_offset 4
 2427 0032 BD46     	 mov sp,r7
 2428              	.LCFI185:
 2429              	 .cfi_def_cfa_register 13
 2430              	 
 2431 0034 5DF8047B 	 ldr r7,[sp],#4
 2432              	.LCFI186:
 2433              	 .cfi_restore 7
 2434              	 .cfi_def_cfa_offset 0
 2435 0038 7047     	 bx lr
 2436              	 .cfi_endproc
 2437              	.LFE209:
 2439 003a 00BF     	 .section .text.XMC_DMA_CH_DisableSourceAddressReload,"ax",%progbits
 2440              	 .align 2
 2441              	 .global XMC_DMA_CH_DisableSourceAddressReload
 2442              	 .thumb
 2443              	 .thumb_func
 2445              	XMC_DMA_CH_DisableSourceAddressReload:
 2446              	.LFB210:
 614:../Libraries/XMCLib/src/xmc_dma.c **** 
 615:../Libraries/XMCLib/src/xmc_dma.c **** /* Disable source address reload */
 616:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_DisableSourceAddressReload(XMC_DMA_t *const dma, const uint8_t channel)
 617:../Libraries/XMCLib/src/xmc_dma.c **** {
 2447              	 .loc 2 617 0
 2448              	 .cfi_startproc
 2449              	 
 2450              	 
 2451              	 
 2452 0000 80B4     	 push {r7}
 2453              	.LCFI187:
 2454              	 .cfi_def_cfa_offset 4
 2455              	 .cfi_offset 7,-4
 2456 0002 83B0     	 sub sp,sp,#12
 2457              	.LCFI188:
 2458              	 .cfi_def_cfa_offset 16
 2459 0004 00AF     	 add r7,sp,#0
 2460              	.LCFI189:
 2461              	 .cfi_def_cfa_register 7
 2462 0006 7860     	 str r0,[r7,#4]
 2463 0008 0B46     	 mov r3,r1
 2464 000a FB70     	 strb r3,[r7,#3]
 618:../Libraries/XMCLib/src/xmc_dma.c ****   dma->CH[channel].CFGL &= (uint32_t)~GPDMA0_CH_CFGL_RELOAD_SRC_Msk;
 2465              	 .loc 2 618 0
 2466 000c FB78     	 ldrb r3,[r7,#3]
 2467 000e FA78     	 ldrb r2,[r7,#3]
 2468 0010 7968     	 ldr r1,[r7,#4]
 2469 0012 5820     	 movs r0,#88
 2470 0014 00FB02F2 	 mul r2,r0,r2
 2471 0018 0A44     	 add r2,r2,r1
 2472 001a 4032     	 adds r2,r2,#64
 2473 001c 1268     	 ldr r2,[r2]
 2474 001e 22F08042 	 bic r2,r2,#1073741824
 2475 0022 7968     	 ldr r1,[r7,#4]
 2476 0024 5820     	 movs r0,#88
 2477 0026 00FB03F3 	 mul r3,r0,r3
 2478 002a 0B44     	 add r3,r3,r1
 2479 002c 4033     	 adds r3,r3,#64
 2480 002e 1A60     	 str r2,[r3]
 619:../Libraries/XMCLib/src/xmc_dma.c **** }
 2481              	 .loc 2 619 0
 2482 0030 0C37     	 adds r7,r7,#12
 2483              	.LCFI190:
 2484              	 .cfi_def_cfa_offset 4
 2485 0032 BD46     	 mov sp,r7
 2486              	.LCFI191:
 2487              	 .cfi_def_cfa_register 13
 2488              	 
 2489 0034 5DF8047B 	 ldr r7,[sp],#4
 2490              	.LCFI192:
 2491              	 .cfi_restore 7
 2492              	 .cfi_def_cfa_offset 0
 2493 0038 7047     	 bx lr
 2494              	 .cfi_endproc
 2495              	.LFE210:
 2497 003a 00BF     	 .section .text.XMC_DMA_CH_EnableDestinationAddressReload,"ax",%progbits
 2498              	 .align 2
 2499              	 .global XMC_DMA_CH_EnableDestinationAddressReload
 2500              	 .thumb
 2501              	 .thumb_func
 2503              	XMC_DMA_CH_EnableDestinationAddressReload:
 2504              	.LFB211:
 620:../Libraries/XMCLib/src/xmc_dma.c **** 
 621:../Libraries/XMCLib/src/xmc_dma.c **** /* Enable destination address reload */
 622:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_EnableDestinationAddressReload(XMC_DMA_t *const dma, const uint8_t channel)
 623:../Libraries/XMCLib/src/xmc_dma.c **** {
 2505              	 .loc 2 623 0
 2506              	 .cfi_startproc
 2507              	 
 2508              	 
 2509              	 
 2510 0000 80B4     	 push {r7}
 2511              	.LCFI193:
 2512              	 .cfi_def_cfa_offset 4
 2513              	 .cfi_offset 7,-4
 2514 0002 83B0     	 sub sp,sp,#12
 2515              	.LCFI194:
 2516              	 .cfi_def_cfa_offset 16
 2517 0004 00AF     	 add r7,sp,#0
 2518              	.LCFI195:
 2519              	 .cfi_def_cfa_register 7
 2520 0006 7860     	 str r0,[r7,#4]
 2521 0008 0B46     	 mov r3,r1
 2522 000a FB70     	 strb r3,[r7,#3]
 624:../Libraries/XMCLib/src/xmc_dma.c ****   dma->CH[channel].CFGL |= (uint32_t)GPDMA0_CH_CFGL_RELOAD_DST_Msk;
 2523              	 .loc 2 624 0
 2524 000c FB78     	 ldrb r3,[r7,#3]
 2525 000e FA78     	 ldrb r2,[r7,#3]
 2526 0010 7968     	 ldr r1,[r7,#4]
 2527 0012 5820     	 movs r0,#88
 2528 0014 00FB02F2 	 mul r2,r0,r2
 2529 0018 0A44     	 add r2,r2,r1
 2530 001a 4032     	 adds r2,r2,#64
 2531 001c 1268     	 ldr r2,[r2]
 2532 001e 42F00042 	 orr r2,r2,#-2147483648
 2533 0022 7968     	 ldr r1,[r7,#4]
 2534 0024 5820     	 movs r0,#88
 2535 0026 00FB03F3 	 mul r3,r0,r3
 2536 002a 0B44     	 add r3,r3,r1
 2537 002c 4033     	 adds r3,r3,#64
 2538 002e 1A60     	 str r2,[r3]
 625:../Libraries/XMCLib/src/xmc_dma.c **** }
 2539              	 .loc 2 625 0
 2540 0030 0C37     	 adds r7,r7,#12
 2541              	.LCFI196:
 2542              	 .cfi_def_cfa_offset 4
 2543 0032 BD46     	 mov sp,r7
 2544              	.LCFI197:
 2545              	 .cfi_def_cfa_register 13
 2546              	 
 2547 0034 5DF8047B 	 ldr r7,[sp],#4
 2548              	.LCFI198:
 2549              	 .cfi_restore 7
 2550              	 .cfi_def_cfa_offset 0
 2551 0038 7047     	 bx lr
 2552              	 .cfi_endproc
 2553              	.LFE211:
 2555 003a 00BF     	 .section .text.XMC_DMA_CH_DisableDestinationAddressReload,"ax",%progbits
 2556              	 .align 2
 2557              	 .global XMC_DMA_CH_DisableDestinationAddressReload
 2558              	 .thumb
 2559              	 .thumb_func
 2561              	XMC_DMA_CH_DisableDestinationAddressReload:
 2562              	.LFB212:
 626:../Libraries/XMCLib/src/xmc_dma.c **** 
 627:../Libraries/XMCLib/src/xmc_dma.c **** /* Disable destination address reload */
 628:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_DisableDestinationAddressReload(XMC_DMA_t *const dma, const uint8_t channel)
 629:../Libraries/XMCLib/src/xmc_dma.c **** {
 2563              	 .loc 2 629 0
 2564              	 .cfi_startproc
 2565              	 
 2566              	 
 2567              	 
 2568 0000 80B4     	 push {r7}
 2569              	.LCFI199:
 2570              	 .cfi_def_cfa_offset 4
 2571              	 .cfi_offset 7,-4
 2572 0002 83B0     	 sub sp,sp,#12
 2573              	.LCFI200:
 2574              	 .cfi_def_cfa_offset 16
 2575 0004 00AF     	 add r7,sp,#0
 2576              	.LCFI201:
 2577              	 .cfi_def_cfa_register 7
 2578 0006 7860     	 str r0,[r7,#4]
 2579 0008 0B46     	 mov r3,r1
 2580 000a FB70     	 strb r3,[r7,#3]
 630:../Libraries/XMCLib/src/xmc_dma.c ****   dma->CH[channel].CFGL &= (uint32_t)~GPDMA0_CH_CFGL_RELOAD_DST_Msk;
 2581              	 .loc 2 630 0
 2582 000c FB78     	 ldrb r3,[r7,#3]
 2583 000e FA78     	 ldrb r2,[r7,#3]
 2584 0010 7968     	 ldr r1,[r7,#4]
 2585 0012 5820     	 movs r0,#88
 2586 0014 00FB02F2 	 mul r2,r0,r2
 2587 0018 0A44     	 add r2,r2,r1
 2588 001a 4032     	 adds r2,r2,#64
 2589 001c 1268     	 ldr r2,[r2]
 2590 001e 22F00042 	 bic r2,r2,#-2147483648
 2591 0022 7968     	 ldr r1,[r7,#4]
 2592 0024 5820     	 movs r0,#88
 2593 0026 00FB03F3 	 mul r3,r0,r3
 2594 002a 0B44     	 add r3,r3,r1
 2595 002c 4033     	 adds r3,r3,#64
 2596 002e 1A60     	 str r2,[r3]
 631:../Libraries/XMCLib/src/xmc_dma.c **** }
 2597              	 .loc 2 631 0
 2598 0030 0C37     	 adds r7,r7,#12
 2599              	.LCFI202:
 2600              	 .cfi_def_cfa_offset 4
 2601 0032 BD46     	 mov sp,r7
 2602              	.LCFI203:
 2603              	 .cfi_def_cfa_register 13
 2604              	 
 2605 0034 5DF8047B 	 ldr r7,[sp],#4
 2606              	.LCFI204:
 2607              	 .cfi_restore 7
 2608              	 .cfi_def_cfa_offset 0
 2609 0038 7047     	 bx lr
 2610              	 .cfi_endproc
 2611              	.LFE212:
 2613 003a 00BF     	 .section .text.XMC_DMA_CH_RequestLastMultiblockTransfer,"ax",%progbits
 2614              	 .align 2
 2615              	 .global XMC_DMA_CH_RequestLastMultiblockTransfer
 2616              	 .thumb
 2617              	 .thumb_func
 2619              	XMC_DMA_CH_RequestLastMultiblockTransfer:
 2620              	.LFB213:
 632:../Libraries/XMCLib/src/xmc_dma.c **** 
 633:../Libraries/XMCLib/src/xmc_dma.c **** /* Request last multi-block transfer */
 634:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_RequestLastMultiblockTransfer(XMC_DMA_t *const dma, const uint8_t channel)
 635:../Libraries/XMCLib/src/xmc_dma.c **** {
 2621              	 .loc 2 635 0
 2622              	 .cfi_startproc
 2623              	 
 2624              	 
 2625              	 
 2626 0000 80B4     	 push {r7}
 2627              	.LCFI205:
 2628              	 .cfi_def_cfa_offset 4
 2629              	 .cfi_offset 7,-4
 2630 0002 83B0     	 sub sp,sp,#12
 2631              	.LCFI206:
 2632              	 .cfi_def_cfa_offset 16
 2633 0004 00AF     	 add r7,sp,#0
 2634              	.LCFI207:
 2635              	 .cfi_def_cfa_register 7
 2636 0006 7860     	 str r0,[r7,#4]
 2637 0008 0B46     	 mov r3,r1
 2638 000a FB70     	 strb r3,[r7,#3]
 636:../Libraries/XMCLib/src/xmc_dma.c ****   dma->CH[channel].CFGL &= (uint32_t)~(GPDMA0_CH_CFGL_RELOAD_SRC_Msk | GPDMA0_CH_CFGL_RELOAD_DST_Ms
 2639              	 .loc 2 636 0
 2640 000c FB78     	 ldrb r3,[r7,#3]
 2641 000e FA78     	 ldrb r2,[r7,#3]
 2642 0010 7968     	 ldr r1,[r7,#4]
 2643 0012 5820     	 movs r0,#88
 2644 0014 00FB02F2 	 mul r2,r0,r2
 2645 0018 0A44     	 add r2,r2,r1
 2646 001a 4032     	 adds r2,r2,#64
 2647 001c 1268     	 ldr r2,[r2]
 2648 001e 22F04042 	 bic r2,r2,#-1073741824
 2649 0022 7968     	 ldr r1,[r7,#4]
 2650 0024 5820     	 movs r0,#88
 2651 0026 00FB03F3 	 mul r3,r0,r3
 2652 002a 0B44     	 add r3,r3,r1
 2653 002c 4033     	 adds r3,r3,#64
 2654 002e 1A60     	 str r2,[r3]
 637:../Libraries/XMCLib/src/xmc_dma.c ****   dma->CH[channel].CTLL &= (uint32_t)~(GPDMA0_CH_CTLL_LLP_SRC_EN_Msk | GPDMA0_CH_CTLL_LLP_DST_EN_Ms
 2655              	 .loc 2 637 0
 2656 0030 FB78     	 ldrb r3,[r7,#3]
 2657 0032 FA78     	 ldrb r2,[r7,#3]
 2658 0034 7968     	 ldr r1,[r7,#4]
 2659 0036 5820     	 movs r0,#88
 2660 0038 00FB02F2 	 mul r2,r0,r2
 2661 003c 0A44     	 add r2,r2,r1
 2662 003e 1832     	 adds r2,r2,#24
 2663 0040 1268     	 ldr r2,[r2]
 2664 0042 22F0C052 	 bic r2,r2,#402653184
 2665 0046 7968     	 ldr r1,[r7,#4]
 2666 0048 5820     	 movs r0,#88
 2667 004a 00FB03F3 	 mul r3,r0,r3
 2668 004e 0B44     	 add r3,r3,r1
 2669 0050 1833     	 adds r3,r3,#24
 2670 0052 1A60     	 str r2,[r3]
 638:../Libraries/XMCLib/src/xmc_dma.c **** }
 2671              	 .loc 2 638 0
 2672 0054 0C37     	 adds r7,r7,#12
 2673              	.LCFI208:
 2674              	 .cfi_def_cfa_offset 4
 2675 0056 BD46     	 mov sp,r7
 2676              	.LCFI209:
 2677              	 .cfi_def_cfa_register 13
 2678              	 
 2679 0058 5DF8047B 	 ldr r7,[sp],#4
 2680              	.LCFI210:
 2681              	 .cfi_restore 7
 2682              	 .cfi_def_cfa_offset 0
 2683 005c 7047     	 bx lr
 2684              	 .cfi_endproc
 2685              	.LFE213:
 2687 005e 00BF     	 .section .text.XMC_DMA_CH_SetEventHandler,"ax",%progbits
 2688              	 .align 2
 2689              	 .global XMC_DMA_CH_SetEventHandler
 2690              	 .thumb
 2691              	 .thumb_func
 2693              	XMC_DMA_CH_SetEventHandler:
 2694              	.LFB214:
 639:../Libraries/XMCLib/src/xmc_dma.c **** 
 640:../Libraries/XMCLib/src/xmc_dma.c **** /* Set event handler */
 641:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_SetEventHandler(XMC_DMA_t *const dma, const uint8_t channel, XMC_DMA_CH_EVENT_HANDL
 642:../Libraries/XMCLib/src/xmc_dma.c **** {
 2695              	 .loc 2 642 0
 2696              	 .cfi_startproc
 2697              	 
 2698              	 
 2699              	 
 2700 0000 80B4     	 push {r7}
 2701              	.LCFI211:
 2702              	 .cfi_def_cfa_offset 4
 2703              	 .cfi_offset 7,-4
 2704 0002 85B0     	 sub sp,sp,#20
 2705              	.LCFI212:
 2706              	 .cfi_def_cfa_offset 24
 2707 0004 00AF     	 add r7,sp,#0
 2708              	.LCFI213:
 2709              	 .cfi_def_cfa_register 7
 2710 0006 F860     	 str r0,[r7,#12]
 2711 0008 0B46     	 mov r3,r1
 2712 000a 7A60     	 str r2,[r7,#4]
 2713 000c FB72     	 strb r3,[r7,#11]
 643:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 644:../Libraries/XMCLib/src/xmc_dma.c ****   if (dma == XMC_DMA0)
 645:../Libraries/XMCLib/src/xmc_dma.c ****   {
 646:../Libraries/XMCLib/src/xmc_dma.c **** #else
 647:../Libraries/XMCLib/src/xmc_dma.c ****   XMC_UNUSED_ARG(dma);
 648:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 649:../Libraries/XMCLib/src/xmc_dma.c ****     dma0_event_handlers[channel] = event_handler;
 2714              	 .loc 2 649 0
 2715 000e FB7A     	 ldrb r3,[r7,#11]
 2716 0010 0449     	 ldr r1,.L113
 2717 0012 7A68     	 ldr r2,[r7,#4]
 2718 0014 41F82320 	 str r2,[r1,r3,lsl#2]
 650:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 651:../Libraries/XMCLib/src/xmc_dma.c ****   }
 652:../Libraries/XMCLib/src/xmc_dma.c ****   else
 653:../Libraries/XMCLib/src/xmc_dma.c ****   {
 654:../Libraries/XMCLib/src/xmc_dma.c ****     dma1_event_handlers[channel] = event_handler;
 655:../Libraries/XMCLib/src/xmc_dma.c ****   }
 656:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 657:../Libraries/XMCLib/src/xmc_dma.c **** }
 2719              	 .loc 2 657 0
 2720 0018 1437     	 adds r7,r7,#20
 2721              	.LCFI214:
 2722              	 .cfi_def_cfa_offset 4
 2723 001a BD46     	 mov sp,r7
 2724              	.LCFI215:
 2725              	 .cfi_def_cfa_register 13
 2726              	 
 2727 001c 5DF8047B 	 ldr r7,[sp],#4
 2728              	.LCFI216:
 2729              	 .cfi_restore 7
 2730              	 .cfi_def_cfa_offset 0
 2731 0020 7047     	 bx lr
 2732              	.L114:
 2733 0022 00BF     	 .align 2
 2734              	.L113:
 2735 0024 00000000 	 .word dma0_event_handlers
 2736              	 .cfi_endproc
 2737              	.LFE214:
 2739              	 .section .text.XMC_DMA_CH_ClearSourcePeripheralRequest,"ax",%progbits
 2740              	 .align 2
 2741              	 .global XMC_DMA_CH_ClearSourcePeripheralRequest
 2742              	 .thumb
 2743              	 .thumb_func
 2745              	XMC_DMA_CH_ClearSourcePeripheralRequest:
 2746              	.LFB215:
 658:../Libraries/XMCLib/src/xmc_dma.c **** 
 659:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_ClearSourcePeripheralRequest(XMC_DMA_t *const dma, uint8_t channel)
 660:../Libraries/XMCLib/src/xmc_dma.c **** {
 2747              	 .loc 2 660 0
 2748              	 .cfi_startproc
 2749              	 
 2750              	 
 2751 0000 80B5     	 push {r7,lr}
 2752              	.LCFI217:
 2753              	 .cfi_def_cfa_offset 8
 2754              	 .cfi_offset 7,-8
 2755              	 .cfi_offset 14,-4
 2756 0002 84B0     	 sub sp,sp,#16
 2757              	.LCFI218:
 2758              	 .cfi_def_cfa_offset 24
 2759 0004 00AF     	 add r7,sp,#0
 2760              	.LCFI219:
 2761              	 .cfi_def_cfa_register 7
 2762 0006 7860     	 str r0,[r7,#4]
 2763 0008 0B46     	 mov r3,r1
 2764 000a FB70     	 strb r3,[r7,#3]
 661:../Libraries/XMCLib/src/xmc_dma.c ****   uint32_t line;
 662:../Libraries/XMCLib/src/xmc_dma.c ****   line = (dma->CH[channel].CFGH & GPDMA0_CH_CFGH_SRC_PER_Msk) >> GPDMA0_CH_CFGH_SRC_PER_Pos;
 2765              	 .loc 2 662 0
 2766 000c FB78     	 ldrb r3,[r7,#3]
 2767 000e 7A68     	 ldr r2,[r7,#4]
 2768 0010 5821     	 movs r1,#88
 2769 0012 01FB03F3 	 mul r3,r1,r3
 2770 0016 1344     	 add r3,r3,r2
 2771 0018 4033     	 adds r3,r3,#64
 2772 001a 5B68     	 ldr r3,[r3,#4]
 2773 001c 03F4F063 	 and r3,r3,#1920
 2774 0020 DB09     	 lsrs r3,r3,#7
 2775 0022 FB60     	 str r3,[r7,#12]
 663:../Libraries/XMCLib/src/xmc_dma.c **** 
 664:../Libraries/XMCLib/src/xmc_dma.c ****   XMC_DMA_ClearRequestLine(dma, (uint8_t)line);
 2776              	 .loc 2 664 0
 2777 0024 FB68     	 ldr r3,[r7,#12]
 2778 0026 DBB2     	 uxtb r3,r3
 2779 0028 7868     	 ldr r0,[r7,#4]
 2780 002a 1946     	 mov r1,r3
 2781 002c FFF7FEFF 	 bl XMC_DMA_ClearRequestLine
 665:../Libraries/XMCLib/src/xmc_dma.c **** }
 2782              	 .loc 2 665 0
 2783 0030 1037     	 adds r7,r7,#16
 2784              	.LCFI220:
 2785              	 .cfi_def_cfa_offset 8
 2786 0032 BD46     	 mov sp,r7
 2787              	.LCFI221:
 2788              	 .cfi_def_cfa_register 13
 2789              	 
 2790 0034 80BD     	 pop {r7,pc}
 2791              	 .cfi_endproc
 2792              	.LFE215:
 2794 0036 00BF     	 .section .text.XMC_DMA_CH_ClearDestinationPeripheralRequest,"ax",%progbits
 2795              	 .align 2
 2796              	 .global XMC_DMA_CH_ClearDestinationPeripheralRequest
 2797              	 .thumb
 2798              	 .thumb_func
 2800              	XMC_DMA_CH_ClearDestinationPeripheralRequest:
 2801              	.LFB216:
 666:../Libraries/XMCLib/src/xmc_dma.c **** 
 667:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_ClearDestinationPeripheralRequest(XMC_DMA_t *const dma, uint8_t channel)
 668:../Libraries/XMCLib/src/xmc_dma.c **** {
 2802              	 .loc 2 668 0
 2803              	 .cfi_startproc
 2804              	 
 2805              	 
 2806 0000 80B5     	 push {r7,lr}
 2807              	.LCFI222:
 2808              	 .cfi_def_cfa_offset 8
 2809              	 .cfi_offset 7,-8
 2810              	 .cfi_offset 14,-4
 2811 0002 84B0     	 sub sp,sp,#16
 2812              	.LCFI223:
 2813              	 .cfi_def_cfa_offset 24
 2814 0004 00AF     	 add r7,sp,#0
 2815              	.LCFI224:
 2816              	 .cfi_def_cfa_register 7
 2817 0006 7860     	 str r0,[r7,#4]
 2818 0008 0B46     	 mov r3,r1
 2819 000a FB70     	 strb r3,[r7,#3]
 669:../Libraries/XMCLib/src/xmc_dma.c ****   uint32_t line;
 670:../Libraries/XMCLib/src/xmc_dma.c ****   line = (dma->CH[channel].CFGH & GPDMA0_CH_CFGH_DEST_PER_Msk) >> GPDMA0_CH_CFGH_DEST_PER_Pos;
 2820              	 .loc 2 670 0
 2821 000c FB78     	 ldrb r3,[r7,#3]
 2822 000e 7A68     	 ldr r2,[r7,#4]
 2823 0010 5821     	 movs r1,#88
 2824 0012 01FB03F3 	 mul r3,r1,r3
 2825 0016 1344     	 add r3,r3,r2
 2826 0018 4033     	 adds r3,r3,#64
 2827 001a 5B68     	 ldr r3,[r3,#4]
 2828 001c 03F4F043 	 and r3,r3,#30720
 2829 0020 DB0A     	 lsrs r3,r3,#11
 2830 0022 FB60     	 str r3,[r7,#12]
 671:../Libraries/XMCLib/src/xmc_dma.c **** 
 672:../Libraries/XMCLib/src/xmc_dma.c ****   XMC_DMA_ClearRequestLine(dma, (uint8_t)line);
 2831              	 .loc 2 672 0
 2832 0024 FB68     	 ldr r3,[r7,#12]
 2833 0026 DBB2     	 uxtb r3,r3
 2834 0028 7868     	 ldr r0,[r7,#4]
 2835 002a 1946     	 mov r1,r3
 2836 002c FFF7FEFF 	 bl XMC_DMA_ClearRequestLine
 673:../Libraries/XMCLib/src/xmc_dma.c **** }
 2837              	 .loc 2 673 0
 2838 0030 1037     	 adds r7,r7,#16
 2839              	.LCFI225:
 2840              	 .cfi_def_cfa_offset 8
 2841 0032 BD46     	 mov sp,r7
 2842              	.LCFI226:
 2843              	 .cfi_def_cfa_register 13
 2844              	 
 2845 0034 80BD     	 pop {r7,pc}
 2846              	 .cfi_endproc
 2847              	.LFE216:
 2849 0036 00BF     	 .section .text.XMC_DMA_IRQHandler,"ax",%progbits
 2850              	 .align 2
 2851              	 .global XMC_DMA_IRQHandler
 2852              	 .thumb
 2853              	 .thumb_func
 2855              	XMC_DMA_IRQHandler:
 2856              	.LFB217:
 674:../Libraries/XMCLib/src/xmc_dma.c **** 
 675:../Libraries/XMCLib/src/xmc_dma.c **** /* Default DMA IRQ handler */
 676:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_IRQHandler(XMC_DMA_t *const dma)
 677:../Libraries/XMCLib/src/xmc_dma.c **** {
 2857              	 .loc 2 677 0
 2858              	 .cfi_startproc
 2859              	 
 2860              	 
 2861 0000 80B5     	 push {r7,lr}
 2862              	.LCFI227:
 2863              	 .cfi_def_cfa_offset 8
 2864              	 .cfi_offset 7,-8
 2865              	 .cfi_offset 14,-4
 2866 0002 88B0     	 sub sp,sp,#32
 2867              	.LCFI228:
 2868              	 .cfi_def_cfa_offset 40
 2869 0004 00AF     	 add r7,sp,#0
 2870              	.LCFI229:
 2871              	 .cfi_def_cfa_register 7
 2872 0006 7860     	 str r0,[r7,#4]
 678:../Libraries/XMCLib/src/xmc_dma.c ****   uint32_t event;
 679:../Libraries/XMCLib/src/xmc_dma.c ****   int32_t channel;
 680:../Libraries/XMCLib/src/xmc_dma.c ****   uint32_t mask;
 681:../Libraries/XMCLib/src/xmc_dma.c ****   XMC_DMA_CH_EVENT_HANDLER_t *dma_event_handlers;
 682:../Libraries/XMCLib/src/xmc_dma.c ****   XMC_DMA_CH_EVENT_HANDLER_t event_handler;
 683:../Libraries/XMCLib/src/xmc_dma.c **** 
 684:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 685:../Libraries/XMCLib/src/xmc_dma.c ****   if (dma == XMC_DMA0)
 686:../Libraries/XMCLib/src/xmc_dma.c ****   {
 687:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 688:../Libraries/XMCLib/src/xmc_dma.c ****     dma_event_handlers = dma0_event_handlers;
 2873              	 .loc 2 688 0
 2874 0008 7F4B     	 ldr r3,.L148
 2875 000a BB61     	 str r3,[r7,#24]
 689:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 690:../Libraries/XMCLib/src/xmc_dma.c ****   }
 691:../Libraries/XMCLib/src/xmc_dma.c ****   else
 692:../Libraries/XMCLib/src/xmc_dma.c ****   {
 693:../Libraries/XMCLib/src/xmc_dma.c ****     dma_event_handlers = dma1_event_handlers;
 694:../Libraries/XMCLib/src/xmc_dma.c ****   }
 695:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 696:../Libraries/XMCLib/src/xmc_dma.c **** 
 697:../Libraries/XMCLib/src/xmc_dma.c ****   event = XMC_DMA_GetEventStatus(dma);
 2876              	 .loc 2 697 0
 2877 000c 7868     	 ldr r0,[r7,#4]
 2878 000e FFF7FEFF 	 bl XMC_DMA_GetEventStatus
 2879 0012 7861     	 str r0,[r7,#20]
 698:../Libraries/XMCLib/src/xmc_dma.c ****   channel = 0;
 2880              	 .loc 2 698 0
 2881 0014 0023     	 movs r3,#0
 2882 0016 FB61     	 str r3,[r7,#28]
 699:../Libraries/XMCLib/src/xmc_dma.c **** 
 700:../Libraries/XMCLib/src/xmc_dma.c ****   if ((event & (uint32_t)XMC_DMA_CH_EVENT_ERROR) != (uint32_t)0UL)
 2883              	 .loc 2 700 0
 2884 0018 7B69     	 ldr r3,[r7,#20]
 2885 001a 03F01003 	 and r3,r3,#16
 2886 001e 002B     	 cmp r3,#0
 2887 0020 2BD0     	 beq .L118
 701:../Libraries/XMCLib/src/xmc_dma.c ****   {
 702:../Libraries/XMCLib/src/xmc_dma.c ****     event = XMC_DMA_GetChannelsErrorStatus(dma);
 2888              	 .loc 2 702 0
 2889 0022 7868     	 ldr r0,[r7,#4]
 2890 0024 FFF7FEFF 	 bl XMC_DMA_GetChannelsErrorStatus
 2891 0028 7861     	 str r0,[r7,#20]
 703:../Libraries/XMCLib/src/xmc_dma.c ****     while (event != 0)
 2892              	 .loc 2 703 0
 2893 002a 21E0     	 b .L119
 2894              	.L123:
 704:../Libraries/XMCLib/src/xmc_dma.c ****     {
 705:../Libraries/XMCLib/src/xmc_dma.c ****       mask = (uint32_t)1U << channel;
 2895              	 .loc 2 705 0
 2896 002c 0122     	 movs r2,#1
 2897 002e FB69     	 ldr r3,[r7,#28]
 2898 0030 02FA03F3 	 lsl r3,r2,r3
 2899 0034 3B61     	 str r3,[r7,#16]
 706:../Libraries/XMCLib/src/xmc_dma.c ****       if ((event & mask) != 0)
 2900              	 .loc 2 706 0
 2901 0036 7A69     	 ldr r2,[r7,#20]
 2902 0038 3B69     	 ldr r3,[r7,#16]
 2903 003a 1340     	 ands r3,r3,r2
 2904 003c 002B     	 cmp r3,#0
 2905 003e 14D0     	 beq .L120
 707:../Libraries/XMCLib/src/xmc_dma.c ****       {
 708:../Libraries/XMCLib/src/xmc_dma.c ****         XMC_DMA_CH_ClearEventStatus(dma, (uint8_t)channel, (uint32_t)XMC_DMA_CH_EVENT_ERROR);
 2906              	 .loc 2 708 0
 2907 0040 FB69     	 ldr r3,[r7,#28]
 2908 0042 DBB2     	 uxtb r3,r3
 2909 0044 7868     	 ldr r0,[r7,#4]
 2910 0046 1946     	 mov r1,r3
 2911 0048 1022     	 movs r2,#16
 2912 004a FFF7FEFF 	 bl XMC_DMA_CH_ClearEventStatus
 709:../Libraries/XMCLib/src/xmc_dma.c **** 
 710:../Libraries/XMCLib/src/xmc_dma.c ****         /* Call user callback to handle event */
 711:../Libraries/XMCLib/src/xmc_dma.c ****         event_handler = dma_event_handlers[channel];
 2913              	 .loc 2 711 0
 2914 004e FB69     	 ldr r3,[r7,#28]
 2915 0050 9B00     	 lsls r3,r3,#2
 2916 0052 BA69     	 ldr r2,[r7,#24]
 2917 0054 1344     	 add r3,r3,r2
 2918 0056 1B68     	 ldr r3,[r3]
 2919 0058 FB60     	 str r3,[r7,#12]
 712:../Libraries/XMCLib/src/xmc_dma.c ****         if (event_handler != NULL)
 2920              	 .loc 2 712 0
 2921 005a FB68     	 ldr r3,[r7,#12]
 2922 005c 002B     	 cmp r3,#0
 2923 005e 03D0     	 beq .L121
 713:../Libraries/XMCLib/src/xmc_dma.c ****         {
 714:../Libraries/XMCLib/src/xmc_dma.c ****           event_handler(XMC_DMA_CH_EVENT_ERROR);
 2924              	 .loc 2 714 0
 2925 0060 FB68     	 ldr r3,[r7,#12]
 2926 0062 1020     	 movs r0,#16
 2927 0064 9847     	 blx r3
 715:../Libraries/XMCLib/src/xmc_dma.c ****         }
 716:../Libraries/XMCLib/src/xmc_dma.c **** 
 717:../Libraries/XMCLib/src/xmc_dma.c ****         break;
 2928              	 .loc 2 717 0
 2929 0066 07E0     	 b .L122
 2930              	.L121:
 2931 0068 06E0     	 b .L122
 2932              	.L120:
 718:../Libraries/XMCLib/src/xmc_dma.c ****       }
 719:../Libraries/XMCLib/src/xmc_dma.c ****       ++channel;
 2933              	 .loc 2 719 0
 2934 006a FB69     	 ldr r3,[r7,#28]
 2935 006c 0133     	 adds r3,r3,#1
 2936 006e FB61     	 str r3,[r7,#28]
 2937              	.L119:
 703:../Libraries/XMCLib/src/xmc_dma.c ****     {
 2938              	 .loc 2 703 0
 2939 0070 7B69     	 ldr r3,[r7,#20]
 2940 0072 002B     	 cmp r3,#0
 2941 0074 DAD1     	 bne .L123
 2942 0076 C3E0     	 b .L117
 2943              	.L122:
 2944 0078 C2E0     	 b .L117
 2945              	.L118:
 720:../Libraries/XMCLib/src/xmc_dma.c ****     }
 721:../Libraries/XMCLib/src/xmc_dma.c ****   }
 722:../Libraries/XMCLib/src/xmc_dma.c ****   else if ((event & (uint32_t)XMC_DMA_CH_EVENT_TRANSFER_COMPLETE) != (uint32_t)0UL)
 2946              	 .loc 2 722 0
 2947 007a 7B69     	 ldr r3,[r7,#20]
 2948 007c 03F00103 	 and r3,r3,#1
 2949 0080 002B     	 cmp r3,#0
 2950 0082 2BD0     	 beq .L125
 723:../Libraries/XMCLib/src/xmc_dma.c ****   {
 724:../Libraries/XMCLib/src/xmc_dma.c ****     event = XMC_DMA_GetChannelsTransferCompleteStatus(dma);
 2951              	 .loc 2 724 0
 2952 0084 7868     	 ldr r0,[r7,#4]
 2953 0086 FFF7FEFF 	 bl XMC_DMA_GetChannelsTransferCompleteStatus
 2954 008a 7861     	 str r0,[r7,#20]
 725:../Libraries/XMCLib/src/xmc_dma.c ****     while (event != 0)
 2955              	 .loc 2 725 0
 2956 008c 21E0     	 b .L126
 2957              	.L130:
 726:../Libraries/XMCLib/src/xmc_dma.c ****     {
 727:../Libraries/XMCLib/src/xmc_dma.c ****       mask = (uint32_t)1U << channel;
 2958              	 .loc 2 727 0
 2959 008e 0122     	 movs r2,#1
 2960 0090 FB69     	 ldr r3,[r7,#28]
 2961 0092 02FA03F3 	 lsl r3,r2,r3
 2962 0096 3B61     	 str r3,[r7,#16]
 728:../Libraries/XMCLib/src/xmc_dma.c ****       if (event & mask)
 2963              	 .loc 2 728 0
 2964 0098 7A69     	 ldr r2,[r7,#20]
 2965 009a 3B69     	 ldr r3,[r7,#16]
 2966 009c 1340     	 ands r3,r3,r2
 2967 009e 002B     	 cmp r3,#0
 2968 00a0 14D0     	 beq .L127
 729:../Libraries/XMCLib/src/xmc_dma.c ****       {
 730:../Libraries/XMCLib/src/xmc_dma.c ****         XMC_DMA_CH_ClearEventStatus(dma, (uint8_t)channel, (uint32_t)((uint32_t)XMC_DMA_CH_EVENT_TR
 2969              	 .loc 2 730 0
 2970 00a2 FB69     	 ldr r3,[r7,#28]
 2971 00a4 DBB2     	 uxtb r3,r3
 2972 00a6 7868     	 ldr r0,[r7,#4]
 2973 00a8 1946     	 mov r1,r3
 2974 00aa 0F22     	 movs r2,#15
 2975 00ac FFF7FEFF 	 bl XMC_DMA_CH_ClearEventStatus
 731:../Libraries/XMCLib/src/xmc_dma.c ****                                     (uint32_t)XMC_DMA_CH_EVENT_BLOCK_TRANSFER_COMPLETE |
 732:../Libraries/XMCLib/src/xmc_dma.c ****                                     (uint32_t)XMC_DMA_CH_EVENT_SRC_TRANSACTION_COMPLETE |
 733:../Libraries/XMCLib/src/xmc_dma.c ****                                     (uint32_t)XMC_DMA_CH_EVENT_DST_TRANSACTION_COMPLETE));
 734:../Libraries/XMCLib/src/xmc_dma.c **** 
 735:../Libraries/XMCLib/src/xmc_dma.c ****         /* Call user callback to handle event */
 736:../Libraries/XMCLib/src/xmc_dma.c ****         event_handler = dma_event_handlers[channel];
 2976              	 .loc 2 736 0
 2977 00b0 FB69     	 ldr r3,[r7,#28]
 2978 00b2 9B00     	 lsls r3,r3,#2
 2979 00b4 BA69     	 ldr r2,[r7,#24]
 2980 00b6 1344     	 add r3,r3,r2
 2981 00b8 1B68     	 ldr r3,[r3]
 2982 00ba FB60     	 str r3,[r7,#12]
 737:../Libraries/XMCLib/src/xmc_dma.c ****         if (event_handler != NULL)
 2983              	 .loc 2 737 0
 2984 00bc FB68     	 ldr r3,[r7,#12]
 2985 00be 002B     	 cmp r3,#0
 2986 00c0 03D0     	 beq .L128
 738:../Libraries/XMCLib/src/xmc_dma.c ****         {
 739:../Libraries/XMCLib/src/xmc_dma.c ****           event_handler(XMC_DMA_CH_EVENT_TRANSFER_COMPLETE);
 2987              	 .loc 2 739 0
 2988 00c2 FB68     	 ldr r3,[r7,#12]
 2989 00c4 0120     	 movs r0,#1
 2990 00c6 9847     	 blx r3
 740:../Libraries/XMCLib/src/xmc_dma.c ****         }
 741:../Libraries/XMCLib/src/xmc_dma.c **** 
 742:../Libraries/XMCLib/src/xmc_dma.c ****         break;
 2991              	 .loc 2 742 0
 2992 00c8 07E0     	 b .L129
 2993              	.L128:
 2994 00ca 06E0     	 b .L129
 2995              	.L127:
 743:../Libraries/XMCLib/src/xmc_dma.c ****       }
 744:../Libraries/XMCLib/src/xmc_dma.c ****       ++channel;
 2996              	 .loc 2 744 0
 2997 00cc FB69     	 ldr r3,[r7,#28]
 2998 00ce 0133     	 adds r3,r3,#1
 2999 00d0 FB61     	 str r3,[r7,#28]
 3000              	.L126:
 725:../Libraries/XMCLib/src/xmc_dma.c ****     {
 3001              	 .loc 2 725 0
 3002 00d2 7B69     	 ldr r3,[r7,#20]
 3003 00d4 002B     	 cmp r3,#0
 3004 00d6 DAD1     	 bne .L130
 3005 00d8 92E0     	 b .L117
 3006              	.L129:
 3007 00da 91E0     	 b .L117
 3008              	.L125:
 745:../Libraries/XMCLib/src/xmc_dma.c ****     }
 746:../Libraries/XMCLib/src/xmc_dma.c ****   }
 747:../Libraries/XMCLib/src/xmc_dma.c ****   else if ((event & (uint32_t)XMC_DMA_CH_EVENT_BLOCK_TRANSFER_COMPLETE) != (uint32_t)0UL)
 3009              	 .loc 2 747 0
 3010 00dc 7B69     	 ldr r3,[r7,#20]
 3011 00de 03F00203 	 and r3,r3,#2
 3012 00e2 002B     	 cmp r3,#0
 3013 00e4 2BD0     	 beq .L131
 748:../Libraries/XMCLib/src/xmc_dma.c ****   {
 749:../Libraries/XMCLib/src/xmc_dma.c ****     event = XMC_DMA_GetChannelsBlockCompleteStatus(dma);
 3014              	 .loc 2 749 0
 3015 00e6 7868     	 ldr r0,[r7,#4]
 3016 00e8 FFF7FEFF 	 bl XMC_DMA_GetChannelsBlockCompleteStatus
 3017 00ec 7861     	 str r0,[r7,#20]
 750:../Libraries/XMCLib/src/xmc_dma.c ****     while (event != 0)
 3018              	 .loc 2 750 0
 3019 00ee 21E0     	 b .L132
 3020              	.L136:
 751:../Libraries/XMCLib/src/xmc_dma.c ****     {
 752:../Libraries/XMCLib/src/xmc_dma.c ****       mask = (uint32_t)1U << channel;
 3021              	 .loc 2 752 0
 3022 00f0 0122     	 movs r2,#1
 3023 00f2 FB69     	 ldr r3,[r7,#28]
 3024 00f4 02FA03F3 	 lsl r3,r2,r3
 3025 00f8 3B61     	 str r3,[r7,#16]
 753:../Libraries/XMCLib/src/xmc_dma.c ****       if (event & mask)
 3026              	 .loc 2 753 0
 3027 00fa 7A69     	 ldr r2,[r7,#20]
 3028 00fc 3B69     	 ldr r3,[r7,#16]
 3029 00fe 1340     	 ands r3,r3,r2
 3030 0100 002B     	 cmp r3,#0
 3031 0102 14D0     	 beq .L133
 754:../Libraries/XMCLib/src/xmc_dma.c ****       {
 755:../Libraries/XMCLib/src/xmc_dma.c ****         XMC_DMA_CH_ClearEventStatus(dma, (uint8_t)channel, (uint32_t)((uint32_t)XMC_DMA_CH_EVENT_BL
 3032              	 .loc 2 755 0
 3033 0104 FB69     	 ldr r3,[r7,#28]
 3034 0106 DBB2     	 uxtb r3,r3
 3035 0108 7868     	 ldr r0,[r7,#4]
 3036 010a 1946     	 mov r1,r3
 3037 010c 0E22     	 movs r2,#14
 3038 010e FFF7FEFF 	 bl XMC_DMA_CH_ClearEventStatus
 756:../Libraries/XMCLib/src/xmc_dma.c ****                                     (uint32_t)XMC_DMA_CH_EVENT_SRC_TRANSACTION_COMPLETE |
 757:../Libraries/XMCLib/src/xmc_dma.c ****                                     (uint32_t)XMC_DMA_CH_EVENT_DST_TRANSACTION_COMPLETE));
 758:../Libraries/XMCLib/src/xmc_dma.c **** 
 759:../Libraries/XMCLib/src/xmc_dma.c ****         /* Call user callback to handle event */
 760:../Libraries/XMCLib/src/xmc_dma.c ****         event_handler = dma_event_handlers[channel];
 3039              	 .loc 2 760 0
 3040 0112 FB69     	 ldr r3,[r7,#28]
 3041 0114 9B00     	 lsls r3,r3,#2
 3042 0116 BA69     	 ldr r2,[r7,#24]
 3043 0118 1344     	 add r3,r3,r2
 3044 011a 1B68     	 ldr r3,[r3]
 3045 011c FB60     	 str r3,[r7,#12]
 761:../Libraries/XMCLib/src/xmc_dma.c ****         if (event_handler != NULL)
 3046              	 .loc 2 761 0
 3047 011e FB68     	 ldr r3,[r7,#12]
 3048 0120 002B     	 cmp r3,#0
 3049 0122 03D0     	 beq .L134
 762:../Libraries/XMCLib/src/xmc_dma.c ****         {
 763:../Libraries/XMCLib/src/xmc_dma.c ****           event_handler(XMC_DMA_CH_EVENT_BLOCK_TRANSFER_COMPLETE);
 3050              	 .loc 2 763 0
 3051 0124 FB68     	 ldr r3,[r7,#12]
 3052 0126 0220     	 movs r0,#2
 3053 0128 9847     	 blx r3
 764:../Libraries/XMCLib/src/xmc_dma.c ****         }
 765:../Libraries/XMCLib/src/xmc_dma.c **** 
 766:../Libraries/XMCLib/src/xmc_dma.c ****         break;
 3054              	 .loc 2 766 0
 3055 012a 07E0     	 b .L135
 3056              	.L134:
 3057 012c 06E0     	 b .L135
 3058              	.L133:
 767:../Libraries/XMCLib/src/xmc_dma.c ****       }
 768:../Libraries/XMCLib/src/xmc_dma.c ****       ++channel;
 3059              	 .loc 2 768 0
 3060 012e FB69     	 ldr r3,[r7,#28]
 3061 0130 0133     	 adds r3,r3,#1
 3062 0132 FB61     	 str r3,[r7,#28]
 3063              	.L132:
 750:../Libraries/XMCLib/src/xmc_dma.c ****     {
 3064              	 .loc 2 750 0
 3065 0134 7B69     	 ldr r3,[r7,#20]
 3066 0136 002B     	 cmp r3,#0
 3067 0138 DAD1     	 bne .L136
 3068 013a 61E0     	 b .L117
 3069              	.L135:
 3070 013c 60E0     	 b .L117
 3071              	.L131:
 769:../Libraries/XMCLib/src/xmc_dma.c ****     }
 770:../Libraries/XMCLib/src/xmc_dma.c ****   }
 771:../Libraries/XMCLib/src/xmc_dma.c ****   else if ((event & (uint32_t)XMC_DMA_CH_EVENT_SRC_TRANSACTION_COMPLETE) != (uint32_t)0UL)
 3072              	 .loc 2 771 0
 3073 013e 7B69     	 ldr r3,[r7,#20]
 3074 0140 03F00403 	 and r3,r3,#4
 3075 0144 002B     	 cmp r3,#0
 3076 0146 2BD0     	 beq .L137
 772:../Libraries/XMCLib/src/xmc_dma.c ****   {
 773:../Libraries/XMCLib/src/xmc_dma.c ****     event = XMC_DMA_GetChannelsSourceTransactionCompleteStatus(dma);
 3077              	 .loc 2 773 0
 3078 0148 7868     	 ldr r0,[r7,#4]
 3079 014a FFF7FEFF 	 bl XMC_DMA_GetChannelsSourceTransactionCompleteStatus
 3080 014e 7861     	 str r0,[r7,#20]
 774:../Libraries/XMCLib/src/xmc_dma.c ****     while (event != 0)
 3081              	 .loc 2 774 0
 3082 0150 21E0     	 b .L138
 3083              	.L142:
 775:../Libraries/XMCLib/src/xmc_dma.c ****     {
 776:../Libraries/XMCLib/src/xmc_dma.c ****       mask = (uint32_t)1U << channel;
 3084              	 .loc 2 776 0
 3085 0152 0122     	 movs r2,#1
 3086 0154 FB69     	 ldr r3,[r7,#28]
 3087 0156 02FA03F3 	 lsl r3,r2,r3
 3088 015a 3B61     	 str r3,[r7,#16]
 777:../Libraries/XMCLib/src/xmc_dma.c ****       if (event & mask)
 3089              	 .loc 2 777 0
 3090 015c 7A69     	 ldr r2,[r7,#20]
 3091 015e 3B69     	 ldr r3,[r7,#16]
 3092 0160 1340     	 ands r3,r3,r2
 3093 0162 002B     	 cmp r3,#0
 3094 0164 14D0     	 beq .L139
 778:../Libraries/XMCLib/src/xmc_dma.c ****       {
 779:../Libraries/XMCLib/src/xmc_dma.c ****         XMC_DMA_CH_ClearEventStatus(dma, (uint8_t)channel, (uint32_t)XMC_DMA_CH_EVENT_SRC_TRANSACTI
 3095              	 .loc 2 779 0
 3096 0166 FB69     	 ldr r3,[r7,#28]
 3097 0168 DBB2     	 uxtb r3,r3
 3098 016a 7868     	 ldr r0,[r7,#4]
 3099 016c 1946     	 mov r1,r3
 3100 016e 0422     	 movs r2,#4
 3101 0170 FFF7FEFF 	 bl XMC_DMA_CH_ClearEventStatus
 780:../Libraries/XMCLib/src/xmc_dma.c **** 
 781:../Libraries/XMCLib/src/xmc_dma.c ****         /* Call user callback to handle event */
 782:../Libraries/XMCLib/src/xmc_dma.c ****         event_handler = dma_event_handlers[channel];
 3102              	 .loc 2 782 0
 3103 0174 FB69     	 ldr r3,[r7,#28]
 3104 0176 9B00     	 lsls r3,r3,#2
 3105 0178 BA69     	 ldr r2,[r7,#24]
 3106 017a 1344     	 add r3,r3,r2
 3107 017c 1B68     	 ldr r3,[r3]
 3108 017e FB60     	 str r3,[r7,#12]
 783:../Libraries/XMCLib/src/xmc_dma.c ****         if (event_handler != NULL)
 3109              	 .loc 2 783 0
 3110 0180 FB68     	 ldr r3,[r7,#12]
 3111 0182 002B     	 cmp r3,#0
 3112 0184 03D0     	 beq .L140
 784:../Libraries/XMCLib/src/xmc_dma.c ****         {
 785:../Libraries/XMCLib/src/xmc_dma.c ****           event_handler(XMC_DMA_CH_EVENT_SRC_TRANSACTION_COMPLETE);
 3113              	 .loc 2 785 0
 3114 0186 FB68     	 ldr r3,[r7,#12]
 3115 0188 0420     	 movs r0,#4
 3116 018a 9847     	 blx r3
 786:../Libraries/XMCLib/src/xmc_dma.c ****         }
 787:../Libraries/XMCLib/src/xmc_dma.c **** 
 788:../Libraries/XMCLib/src/xmc_dma.c ****         break;
 3117              	 .loc 2 788 0
 3118 018c 07E0     	 b .L141
 3119              	.L140:
 3120 018e 06E0     	 b .L141
 3121              	.L139:
 789:../Libraries/XMCLib/src/xmc_dma.c ****       }
 790:../Libraries/XMCLib/src/xmc_dma.c ****       ++channel;
 3122              	 .loc 2 790 0
 3123 0190 FB69     	 ldr r3,[r7,#28]
 3124 0192 0133     	 adds r3,r3,#1
 3125 0194 FB61     	 str r3,[r7,#28]
 3126              	.L138:
 774:../Libraries/XMCLib/src/xmc_dma.c ****     {
 3127              	 .loc 2 774 0
 3128 0196 7B69     	 ldr r3,[r7,#20]
 3129 0198 002B     	 cmp r3,#0
 3130 019a DAD1     	 bne .L142
 3131 019c 30E0     	 b .L117
 3132              	.L141:
 3133 019e 2FE0     	 b .L117
 3134              	.L137:
 791:../Libraries/XMCLib/src/xmc_dma.c ****     }
 792:../Libraries/XMCLib/src/xmc_dma.c ****   }
 793:../Libraries/XMCLib/src/xmc_dma.c ****   else if ((event & (uint32_t)XMC_DMA_CH_EVENT_DST_TRANSACTION_COMPLETE) != (uint32_t)0UL)
 3135              	 .loc 2 793 0
 3136 01a0 7B69     	 ldr r3,[r7,#20]
 3137 01a2 03F00803 	 and r3,r3,#8
 3138 01a6 002B     	 cmp r3,#0
 3139 01a8 2AD0     	 beq .L117
 794:../Libraries/XMCLib/src/xmc_dma.c ****   {
 795:../Libraries/XMCLib/src/xmc_dma.c ****     event = XMC_DMA_GetChannelsDestinationTransactionCompleteStatus(dma);
 3140              	 .loc 2 795 0
 3141 01aa 7868     	 ldr r0,[r7,#4]
 3142 01ac FFF7FEFF 	 bl XMC_DMA_GetChannelsDestinationTransactionCompleteStatus
 3143 01b0 7861     	 str r0,[r7,#20]
 796:../Libraries/XMCLib/src/xmc_dma.c ****     while (event != 0)
 3144              	 .loc 2 796 0
 3145 01b2 21E0     	 b .L143
 3146              	.L147:
 797:../Libraries/XMCLib/src/xmc_dma.c ****     {
 798:../Libraries/XMCLib/src/xmc_dma.c ****       mask = (uint32_t)1U << channel;
 3147              	 .loc 2 798 0
 3148 01b4 0122     	 movs r2,#1
 3149 01b6 FB69     	 ldr r3,[r7,#28]
 3150 01b8 02FA03F3 	 lsl r3,r2,r3
 3151 01bc 3B61     	 str r3,[r7,#16]
 799:../Libraries/XMCLib/src/xmc_dma.c ****       if (event & mask)
 3152              	 .loc 2 799 0
 3153 01be 7A69     	 ldr r2,[r7,#20]
 3154 01c0 3B69     	 ldr r3,[r7,#16]
 3155 01c2 1340     	 ands r3,r3,r2
 3156 01c4 002B     	 cmp r3,#0
 3157 01c6 14D0     	 beq .L144
 800:../Libraries/XMCLib/src/xmc_dma.c ****       {
 801:../Libraries/XMCLib/src/xmc_dma.c ****         XMC_DMA_CH_ClearEventStatus(dma, (uint8_t)channel, (uint32_t)XMC_DMA_CH_EVENT_DST_TRANSACTI
 3158              	 .loc 2 801 0
 3159 01c8 FB69     	 ldr r3,[r7,#28]
 3160 01ca DBB2     	 uxtb r3,r3
 3161 01cc 7868     	 ldr r0,[r7,#4]
 3162 01ce 1946     	 mov r1,r3
 3163 01d0 0822     	 movs r2,#8
 3164 01d2 FFF7FEFF 	 bl XMC_DMA_CH_ClearEventStatus
 802:../Libraries/XMCLib/src/xmc_dma.c **** 
 803:../Libraries/XMCLib/src/xmc_dma.c ****         /* Call user callback to handle event */
 804:../Libraries/XMCLib/src/xmc_dma.c ****         event_handler = dma_event_handlers[channel];
 3165              	 .loc 2 804 0
 3166 01d6 FB69     	 ldr r3,[r7,#28]
 3167 01d8 9B00     	 lsls r3,r3,#2
 3168 01da BA69     	 ldr r2,[r7,#24]
 3169 01dc 1344     	 add r3,r3,r2
 3170 01de 1B68     	 ldr r3,[r3]
 3171 01e0 FB60     	 str r3,[r7,#12]
 805:../Libraries/XMCLib/src/xmc_dma.c ****         if (event_handler != NULL)
 3172              	 .loc 2 805 0
 3173 01e2 FB68     	 ldr r3,[r7,#12]
 3174 01e4 002B     	 cmp r3,#0
 3175 01e6 03D0     	 beq .L145
 806:../Libraries/XMCLib/src/xmc_dma.c ****         {
 807:../Libraries/XMCLib/src/xmc_dma.c ****           event_handler(XMC_DMA_CH_EVENT_DST_TRANSACTION_COMPLETE);
 3176              	 .loc 2 807 0
 3177 01e8 FB68     	 ldr r3,[r7,#12]
 3178 01ea 0820     	 movs r0,#8
 3179 01ec 9847     	 blx r3
 808:../Libraries/XMCLib/src/xmc_dma.c ****         }
 809:../Libraries/XMCLib/src/xmc_dma.c **** 
 810:../Libraries/XMCLib/src/xmc_dma.c ****         break;
 3180              	 .loc 2 810 0
 3181 01ee 07E0     	 b .L146
 3182              	.L145:
 3183 01f0 06E0     	 b .L146
 3184              	.L144:
 811:../Libraries/XMCLib/src/xmc_dma.c ****       }
 812:../Libraries/XMCLib/src/xmc_dma.c ****       ++channel;
 3185              	 .loc 2 812 0
 3186 01f2 FB69     	 ldr r3,[r7,#28]
 3187 01f4 0133     	 adds r3,r3,#1
 3188 01f6 FB61     	 str r3,[r7,#28]
 3189              	.L143:
 796:../Libraries/XMCLib/src/xmc_dma.c ****     {
 3190              	 .loc 2 796 0
 3191 01f8 7B69     	 ldr r3,[r7,#20]
 3192 01fa 002B     	 cmp r3,#0
 3193 01fc DAD1     	 bne .L147
 3194 01fe FFE7     	 b .L117
 3195              	.L146:
 3196              	.L117:
 813:../Libraries/XMCLib/src/xmc_dma.c ****     }
 814:../Libraries/XMCLib/src/xmc_dma.c ****   }
 815:../Libraries/XMCLib/src/xmc_dma.c ****   else
 816:../Libraries/XMCLib/src/xmc_dma.c ****   {
 817:../Libraries/XMCLib/src/xmc_dma.c ****     /* no active interrupt was found? */
 818:../Libraries/XMCLib/src/xmc_dma.c ****   }
 819:../Libraries/XMCLib/src/xmc_dma.c **** 
 820:../Libraries/XMCLib/src/xmc_dma.c **** }
 3197              	 .loc 2 820 0
 3198 0200 2037     	 adds r7,r7,#32
 3199              	.LCFI230:
 3200              	 .cfi_def_cfa_offset 8
 3201 0202 BD46     	 mov sp,r7
 3202              	.LCFI231:
 3203              	 .cfi_def_cfa_register 13
 3204              	 
 3205 0204 80BD     	 pop {r7,pc}
 3206              	.L149:
 3207 0206 00BF     	 .align 2
 3208              	.L148:
 3209 0208 00000000 	 .word dma0_event_handlers
 3210              	 .cfi_endproc
 3211              	.LFE217:
 3213              	 .text
 3214              	.Letext0:
 3215              	 .file 3 "c:\\dave_4-4-2_64bit_2018-02-23\\dave_4-4-2_64bit_2018-02-23\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 3216              	 .file 4 "c:\\dave_4-4-2_64bit_2018-02-23\\dave_4-4-2_64bit_2018-02-23\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 3217              	 .file 5 "C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/CMSIS/Infineon/XMC4200_series/Include/XMC4200.h"
 3218              	 .file 6 "C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/XMCLib/inc/xmc4_scu.h"
 3219              	 .file 7 "C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/CMSIS/Include/cmsis_gcc.h"
 3220              	 .file 8 "C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/CMSIS/Include/core_cm4.h"
 3221              	 .file 9 "C:/Users/RGoncalves/Documents/GitHub/uControllers/XMC_Relax_Kit_Projects/APPs_Implementation_Examples/xmc4200_platform2go/UART_example/Libraries/CMSIS/Infineon/XMC4200_series/Include/system_XMC4200.h"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc_dma.c
    {standard input}:20     .text.XMC_DMA_GetEventStatus:00000000 $t
    {standard input}:24     .text.XMC_DMA_GetEventStatus:00000000 XMC_DMA_GetEventStatus
    {standard input}:64     .text.XMC_DMA_GetChannelsTransferCompleteStatus:00000000 $t
    {standard input}:68     .text.XMC_DMA_GetChannelsTransferCompleteStatus:00000000 XMC_DMA_GetChannelsTransferCompleteStatus
    {standard input}:107    .text.XMC_DMA_GetChannelsBlockCompleteStatus:00000000 $t
    {standard input}:111    .text.XMC_DMA_GetChannelsBlockCompleteStatus:00000000 XMC_DMA_GetChannelsBlockCompleteStatus
    {standard input}:150    .text.XMC_DMA_GetChannelsSourceTransactionCompleteStatus:00000000 $t
    {standard input}:154    .text.XMC_DMA_GetChannelsSourceTransactionCompleteStatus:00000000 XMC_DMA_GetChannelsSourceTransactionCompleteStatus
    {standard input}:193    .text.XMC_DMA_GetChannelsDestinationTransactionCompleteStatus:00000000 $t
    {standard input}:197    .text.XMC_DMA_GetChannelsDestinationTransactionCompleteStatus:00000000 XMC_DMA_GetChannelsDestinationTransactionCompleteStatus
    {standard input}:236    .text.XMC_DMA_GetChannelsErrorStatus:00000000 $t
    {standard input}:240    .text.XMC_DMA_GetChannelsErrorStatus:00000000 XMC_DMA_GetChannelsErrorStatus
    {standard input}:279    .bss.dma0_event_handlers:00000000 $d
    {standard input}:282    .bss.dma0_event_handlers:00000000 dma0_event_handlers
    {standard input}:285    .text.XMC_DMA_Init:00000000 $t
    {standard input}:290    .text.XMC_DMA_Init:00000000 XMC_DMA_Init
    {standard input}:330    .text.XMC_DMA_Enable:00000000 XMC_DMA_Enable
    {standard input}:325    .text.XMC_DMA_Enable:00000000 $t
    {standard input}:370    .text.XMC_DMA_Enable:00000024 $d
    {standard input}:375    .text.XMC_DMA_Disable:00000000 $t
    {standard input}:380    .text.XMC_DMA_Disable:00000000 XMC_DMA_Disable
    {standard input}:420    .text.XMC_DMA_Disable:00000024 $d
    {standard input}:425    .text.XMC_DMA_IsEnabled:00000000 $t
    {standard input}:430    .text.XMC_DMA_IsEnabled:00000000 XMC_DMA_IsEnabled
    {standard input}:528    .text.XMC_DMA_IsEnabled:00000084 $d
    {standard input}:533    .text.XMC_DMA_EnableRequestLine:00000000 $t
    {standard input}:538    .text.XMC_DMA_EnableRequestLine:00000000 XMC_DMA_EnableRequestLine
    {standard input}:605    .text.XMC_DMA_EnableRequestLine:00000050 $d
    {standard input}:610    .text.XMC_DMA_DisableRequestLine:00000000 $t
    {standard input}:615    .text.XMC_DMA_DisableRequestLine:00000000 XMC_DMA_DisableRequestLine
    {standard input}:661    .text.XMC_DMA_DisableRequestLine:0000002c $d
    {standard input}:666    .text.XMC_DMA_ClearRequestLine:00000000 $t
    {standard input}:671    .text.XMC_DMA_ClearRequestLine:00000000 XMC_DMA_ClearRequestLine
    {standard input}:726    .text.XMC_DMA_ClearRequestLine:0000003c $d
    {standard input}:731    .text.XMC_DMA_GetOverrunStatus:00000000 $t
    {standard input}:736    .text.XMC_DMA_GetOverrunStatus:00000000 XMC_DMA_GetOverrunStatus
    {standard input}:786    .text.XMC_DMA_GetOverrunStatus:00000034 $d
    {standard input}:791    .text.XMC_DMA_ClearOverrunStatus:00000000 $t
    {standard input}:796    .text.XMC_DMA_ClearOverrunStatus:00000000 XMC_DMA_ClearOverrunStatus
    {standard input}:838    .text.XMC_DMA_ClearOverrunStatus:00000024 $d
    {standard input}:843    .text.XMC_DMA_CH_Disable:00000000 $t
    {standard input}:848    .text.XMC_DMA_CH_Disable:00000000 XMC_DMA_CH_Disable
    {standard input}:902    .text.XMC_DMA_CH_IsEnabled:00000000 $t
    {standard input}:907    .text.XMC_DMA_CH_IsEnabled:00000000 XMC_DMA_CH_IsEnabled
    {standard input}:956    .text.XMC_DMA_CH_Init:00000000 $t
    {standard input}:961    .text.XMC_DMA_CH_Init:00000000 XMC_DMA_CH_Init
    {standard input}:1809   .text.XMC_DMA_CH_ClearEventStatus:00000000 XMC_DMA_CH_ClearEventStatus
    {standard input}:1251   .text.XMC_DMA_CH_Init:00000224 $d
    {standard input}:1260   .text.XMC_DMA_CH_Init:00000248 $t
    {standard input}:1394   .text.XMC_DMA_CH_Init:00000350 $d
    {standard input}:1397   .text.XMC_DMA_CH_Init:00000354 $t
    {standard input}:1483   .text.XMC_DMA_CH_Suspend:00000000 $t
    {standard input}:1488   .text.XMC_DMA_CH_Suspend:00000000 XMC_DMA_CH_Suspend
    {standard input}:1541   .text.XMC_DMA_CH_Resume:00000000 $t
    {standard input}:1546   .text.XMC_DMA_CH_Resume:00000000 XMC_DMA_CH_Resume
    {standard input}:1599   .text.XMC_DMA_CH_IsSuspended:00000000 $t
    {standard input}:1604   .text.XMC_DMA_CH_IsSuspended:00000000 XMC_DMA_CH_IsSuspended
    {standard input}:1656   .text.XMC_DMA_CH_EnableEvent:00000000 $t
    {standard input}:1661   .text.XMC_DMA_CH_EnableEvent:00000000 XMC_DMA_CH_EnableEvent
    {standard input}:1730   .text.XMC_DMA_CH_DisableEvent:00000000 $t
    {standard input}:1735   .text.XMC_DMA_CH_DisableEvent:00000000 XMC_DMA_CH_DisableEvent
    {standard input}:1804   .text.XMC_DMA_CH_ClearEventStatus:00000000 $t
    {standard input}:1878   .text.XMC_DMA_CH_GetEventStatus:00000000 $t
    {standard input}:1883   .text.XMC_DMA_CH_GetEventStatus:00000000 XMC_DMA_CH_GetEventStatus
    {standard input}:1964   .text.XMC_DMA_CH_EnableSourceGather:00000000 $t
    {standard input}:1969   .text.XMC_DMA_CH_EnableSourceGather:00000000 XMC_DMA_CH_EnableSourceGather
    {standard input}:2038   .text.XMC_DMA_CH_DisableSourceGather:00000000 $t
    {standard input}:2043   .text.XMC_DMA_CH_DisableSourceGather:00000000 XMC_DMA_CH_DisableSourceGather
    {standard input}:2096   .text.XMC_DMA_CH_EnableDestinationScatter:00000000 $t
    {standard input}:2101   .text.XMC_DMA_CH_EnableDestinationScatter:00000000 XMC_DMA_CH_EnableDestinationScatter
    {standard input}:2170   .text.XMC_DMA_CH_DisableDestinationScatter:00000000 $t
    {standard input}:2175   .text.XMC_DMA_CH_DisableDestinationScatter:00000000 XMC_DMA_CH_DisableDestinationScatter
    {standard input}:2228   .text.XMC_DMA_CH_TriggerSourceRequest:00000000 $t
    {standard input}:2233   .text.XMC_DMA_CH_TriggerSourceRequest:00000000 XMC_DMA_CH_TriggerSourceRequest
    {standard input}:2305   .text.XMC_DMA_CH_TriggerDestinationRequest:00000000 $t
    {standard input}:2310   .text.XMC_DMA_CH_TriggerDestinationRequest:00000000 XMC_DMA_CH_TriggerDestinationRequest
    {standard input}:2382   .text.XMC_DMA_CH_EnableSourceAddressReload:00000000 $t
    {standard input}:2387   .text.XMC_DMA_CH_EnableSourceAddressReload:00000000 XMC_DMA_CH_EnableSourceAddressReload
    {standard input}:2440   .text.XMC_DMA_CH_DisableSourceAddressReload:00000000 $t
    {standard input}:2445   .text.XMC_DMA_CH_DisableSourceAddressReload:00000000 XMC_DMA_CH_DisableSourceAddressReload
    {standard input}:2498   .text.XMC_DMA_CH_EnableDestinationAddressReload:00000000 $t
    {standard input}:2503   .text.XMC_DMA_CH_EnableDestinationAddressReload:00000000 XMC_DMA_CH_EnableDestinationAddressReload
    {standard input}:2556   .text.XMC_DMA_CH_DisableDestinationAddressReload:00000000 $t
    {standard input}:2561   .text.XMC_DMA_CH_DisableDestinationAddressReload:00000000 XMC_DMA_CH_DisableDestinationAddressReload
    {standard input}:2614   .text.XMC_DMA_CH_RequestLastMultiblockTransfer:00000000 $t
    {standard input}:2619   .text.XMC_DMA_CH_RequestLastMultiblockTransfer:00000000 XMC_DMA_CH_RequestLastMultiblockTransfer
    {standard input}:2688   .text.XMC_DMA_CH_SetEventHandler:00000000 $t
    {standard input}:2693   .text.XMC_DMA_CH_SetEventHandler:00000000 XMC_DMA_CH_SetEventHandler
    {standard input}:2735   .text.XMC_DMA_CH_SetEventHandler:00000024 $d
    {standard input}:2740   .text.XMC_DMA_CH_ClearSourcePeripheralRequest:00000000 $t
    {standard input}:2745   .text.XMC_DMA_CH_ClearSourcePeripheralRequest:00000000 XMC_DMA_CH_ClearSourcePeripheralRequest
    {standard input}:2795   .text.XMC_DMA_CH_ClearDestinationPeripheralRequest:00000000 $t
    {standard input}:2800   .text.XMC_DMA_CH_ClearDestinationPeripheralRequest:00000000 XMC_DMA_CH_ClearDestinationPeripheralRequest
    {standard input}:2850   .text.XMC_DMA_IRQHandler:00000000 $t
    {standard input}:2855   .text.XMC_DMA_IRQHandler:00000000 XMC_DMA_IRQHandler
    {standard input}:3209   .text.XMC_DMA_IRQHandler:00000208 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
XMC_SCU_CLOCK_UngatePeripheralClock
XMC_SCU_RESET_DeassertPeripheralReset
XMC_SCU_RESET_AssertPeripheralReset
XMC_SCU_CLOCK_GatePeripheralClock
XMC_SCU_RESET_IsPeripheralResetAsserted
XMC_SCU_CLOCK_IsPeripheralClockGated
